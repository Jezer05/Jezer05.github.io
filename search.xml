<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>卡片添加Wowjs动画</title>
      <link href="/posts/6e7c9628/"/>
      <url>/posts/6e7c9628/</url>
      
        <content type="html"><![CDATA[<h2 id="卡片添加wowjs动画"><a class="markdownIt-Anchor" href="#卡片添加wowjs动画"></a> 卡片添加Wowjs动画</h2><details class="folding-tag" cyan open><summary> 点击查看卡片添加Wowjs动画教程 </summary>              <div class='content'>              <ol><li>安装插件,在博客根目录<code>[Blogroot]</code>下打开终端，运行以下指令： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-wowjs --save</span><br></pre></td></tr></table></figure></li><li>在<code>[Blogroot]\_config.butterfly.yml</code>中添加<code>Wowjs</code>配置项 <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">wowjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#控制动画开关。true是打开，false是关闭</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">10</span> <span class="comment">#过滤器优先级</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span> <span class="comment">#移动端是否启用，默认移动端禁用</span></span><br><span class="line">  <span class="attr">animateitem:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">class:</span> <span class="string">recent-post-item</span> <span class="comment">#必填项，需要添加动画的元素的class</span></span><br><span class="line">      <span class="attr">style:</span> <span class="string">animate__zoomIn</span> <span class="comment">#必填项，需要添加的动画</span></span><br><span class="line">      <span class="attr">duration:</span> <span class="string">2s</span> <span class="comment">#选填项，动画持续时间，单位可以是ms也可以是s。例如3s，700ms。</span></span><br><span class="line">      <span class="attr">delay:</span> <span class="string">1s</span> <span class="comment">#选填项，动画开始的延迟时间，单位可以是ms也可以是s。例如3s，700ms。</span></span><br><span class="line">      <span class="attr">offset:</span> <span class="number">100</span> <span class="comment">#选填项，开始动画的距离（相对浏览器底部）</span></span><br><span class="line">      <span class="attr">iteration:</span> <span class="number">2</span> <span class="comment">#选填项，动画重复的次数</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">class:</span> <span class="string">card-widget</span></span><br><span class="line">      <span class="attr">style:</span> <span class="string">animate__zoomIn</span></span><br><span class="line"><span class="attr">animate_css:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-wowjs/lib/animate.min.css</span></span><br><span class="line"><span class="attr">wow_js:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-wowjs/lib/wow.min.js</span></span><br><span class="line"><span class="attr">wow_init_js:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-wowjs/lib/wow_init.js</span></span><br></pre></td></tr></table></figure></li><li>参数释义</li></ol><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">备选值/类型</th><th style="text-align:left">释义</th></tr></thead><tbody><tr><td style="text-align:center">enable</td><td style="text-align:center">true/false</td><td style="text-align:left">【必选】控制开关</td></tr><tr><td style="text-align:center">priority</td><td style="text-align:center">number</td><td style="text-align:left">【可选】过滤器优先级，数值越小，执行越早，默认为10，选填</td></tr><tr><td style="text-align:center">mobile</td><td style="text-align:center">true/false</td><td style="text-align:left">控制移动端是否启用，默认移动端禁用</td></tr><tr><td style="text-align:center">animateitem.class</td><td style="text-align:center">class</td><td style="text-align:left">【可选】添加动画类名，只支持给class添加</td></tr><tr><td style="text-align:center">animateitem.style</td><td style="text-align:center">text</td><td style="text-align:left">【可选】动画样式，具体类型参考<a href="https://animate.style/">animate.css</a></td></tr><tr><td style="text-align:center">animateitem.duration</td><td style="text-align:center">time,单位为s或ms</td><td style="text-align:left">【可选】动画持续时间，单位可以是ms也可以是s。例如3s，700ms。</td></tr><tr><td style="text-align:center">animateitem.delay</td><td style="text-align:center">time,单位为s或ms</td><td style="text-align:left">【可选】动画开始的延迟时间，单位可以是ms也可以是s。例如3s，700ms。</td></tr><tr><td style="text-align:center">animateitem.offset</td><td style="text-align:center">number,单位为px</td><td style="text-align:left">【可选】开始动画的距离（相对浏览器底部）。</td></tr><tr><td style="text-align:center">animateitem.iteration</td><td style="text-align:center">number,单位为s或ms</td><td style="text-align:left">【可选】动画重复的次数</td></tr><tr><td style="text-align:center">animate_css</td><td style="text-align:center">URL</td><td style="text-align:left">【可选】animate.css的CDN链接,默认为<code>https://npm.elemecdn.com/hexo-butterfly-wowjs/lib/animate.min.css</code></td></tr><tr><td style="text-align:center">wow_js</td><td style="text-align:center">URL</td><td style="text-align:left">【可选】wow.min.js的CDN链接,默认为<code>https://npm.elemecdn.com/hexo-butterfly-wowjs/lib/wow.min.js</code></td></tr><tr><td style="text-align:center">wow_init_js</td><td style="text-align:center">URL</td><td style="text-align:left">【可选】wow_init.js的CDN链接,默认为<code>https://npm.elemecdn.com/hexo-butterfly-wowjs/lib/wow_init.js</code></td></tr></tbody></table><ol start="4"><li><p>新建<code>[Blogroot]\themes\butterfly\source\js\custom\wow_init.js</code>，配置特性动画的默认项</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 给首页文章卡片套上动画</span></span><br><span class="line"><span class="keyword">var</span> arr = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;recent-post-item&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;arr.<span class="property">length</span>;i++)&#123;</span><br><span class="line">    arr[i].<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;wow&quot;</span>); <span class="comment">//必要项，添加wow.js标记</span></span><br><span class="line">    arr[i].<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;animate__zoomIn&quot;</span>); <span class="comment">//必要项，添加样式动画</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">// 给侧栏卡片套上动画</span></span><br><span class="line"><span class="keyword">var</span> arr = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;card-widget&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;arr.<span class="property">length</span>;i++)&#123;</span><br><span class="line">    arr[i].<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;wow&quot;</span>);</span><br><span class="line">    arr[i].<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;animate__slideInRight&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">//初始化函数</span></span><br><span class="line">wow = <span class="keyword">new</span> <span class="title function_">WOW</span>(&#123;</span><br><span class="line">  <span class="attr">boxClass</span>: <span class="string">&#x27;wow&#x27;</span>,</span><br><span class="line">  <span class="comment">// 当用户滚动时显示隐藏框的类名称</span></span><br><span class="line">  <span class="attr">animateClass</span>: <span class="string">&#x27;animate__animated&#x27;</span>,</span><br><span class="line">  <span class="comment">// 触发 CSS 动画的类名称（动画库默认为&quot;animate.css&quot;库）</span></span><br><span class="line">  <span class="attr">offset</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="comment">// 定义浏览器视口底部与隐藏框顶部之间的距离。</span></span><br><span class="line">  <span class="comment">// 当用户滚动并到达此距离时，将显示隐藏的框。</span></span><br><span class="line">  <span class="attr">mobile</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="comment">// 在移动设备上打开/关闭wow.js。</span></span><br><span class="line">  <span class="attr">live</span>: <span class="literal">true</span></span><br><span class="line">  <span class="comment">// 在页面上检查新的 wow.js元素。</span></span><br><span class="line">&#125;)</span><br><span class="line">wow.<span class="title function_">init</span>();</span><br></pre></td></tr></table></figure></li><li><p>修改<code>[Blogroot]\_config.butterfly.yml</code>的<code>inject</code>配置项，添加样式资源</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css&quot;</span> <span class="string">media=&quot;defer&quot;</span> <span class="string">onload=&quot;this.media=&#x27;all&#x27;&quot;&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer</span> <span class="string">src=&quot;https://cdn.jsdelivr.net/gh/graingert/wow@1.3.0/dist/wow.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer</span> <span class="string">data-pjax</span> <span class="string">src=&quot;/js/custom/wow_init.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></li></ol>              </div>            </details>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly魔改合集</title>
      <link href="/posts/3dae3a99/"/>
      <url>/posts/3dae3a99/</url>
      
        <content type="html"><![CDATA[<details class="folding-tag" cyan><summary> 修改记录 </summary>              <div class='content'>              <div class="timeline  orange"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022-06-27</p></div></div><div class='timeline-item-content'><ol><li>升级butterfly至4.3.1，并重新进行内部结构调整</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022-06-28</p></div></div><div class='timeline-item-content'><ol><li>新增Gitcalendar</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022-07-31</p></div></div><div class='timeline-item-content'><ol><li>将Twikoo换成Waline评论插件</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022-08-02</p></div></div><div class='timeline-item-content'><ol><li>引入菜单栏、社交栏多色图标</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022-08-04</p></div></div><div class='timeline-item-content'><ol><li>首页文章卡片修改</li><li>使用<code>gulp</code>压缩博客静态资源</li><li>删除SAO-UI-PLAN–Card-Player</li><li>删除SAO-UI-PLAN-Card-Widget</li><li>停用随机背景或banner效果</li><li>启用渐变星空Sky粒子背景特效</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022-08-06</p></div></div><div class='timeline-item-content'><ol><li>优化本帖布局</li><li>重新启用Twikoo评论并关闭Waline</li><li>美化Twikoo评论卡片</li><li>停用首页卡片Wosjs动画</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022-08-06</p></div></div><div class='timeline-item-content'><ol><li>信笺样式留言板</li></ol></div></div></div>              </div>            </details><div class="tip home"><p>本站部分文章转载自<a href="https://akilar.top/">Akilarの糖果屋</a>，如有侵权，请联系作者，本站仅当学习使用!</p></div><h2 id="写在前面-css整合"><a class="markdownIt-Anchor" href="#写在前面-css整合"></a> 写在前面-CSS整合</h2><div class="tip cogs"><p>为了追求视觉体验，不要给<code>index.css</code>等涉及首页样式的CSS文件添加异步加载。然而事实上，相比于给<code>css</code>添加异步加载，不如将我们的魔改样式整合到<code>index.css</code>文件内，减少对服务器的请求次数，这样更能节省加载时间。本合集有关<code>css</code>的创建都是采用该方案</p></div><details class="folding-tag" cyan><summary> 点开查看CSS整合方案 </summary>              <div class='content'>              <ol><li>新建<code>[Blogroot]\themes\butterfly\source\css\_custom</code>文件夹，然后把自定义魔改样式的<code>css</code>文件拖动进去。文件目录层级可以表示为以下情况： <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">source</span><br><span class="line">  |__ css</span><br><span class="line">     |__ _custom</span><br><span class="line">        |__ custom1.css</span><br><span class="line">        |__ custom2.css</span><br><span class="line">        |__ custom3.css</span><br><span class="line">     |__ index.styl</span><br></pre></td></tr></table></figure></li><li>在<code>[[Blogroot]\themes\butterfly\source\css\index.styl</code>最底处中新增一行代码:<code>@import '_custom/*.css'</code>,表示引入<code>_custom</code>文件夹下的所有<code>css</code>文件。 <figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">    if hexo-config(&#x27;css_prefix&#x27;)</span><br><span class="line">      @import &#x27;nib&#x27;</span><br><span class="line"></span><br><span class="line">    @import &#x27;_third-party/normalize.min.css&#x27;</span><br><span class="line">    // project</span><br><span class="line">    @import &#x27;var&#x27;</span><br><span class="line">    @import &#x27;_global/*&#x27;</span><br><span class="line">    @import &#x27;_highlight/highlight&#x27;</span><br><span class="line">    @import &#x27;_page/*&#x27;</span><br><span class="line">    @import &#x27;_layout/*&#x27;</span><br><span class="line">    @import &#x27;_tags/*&#x27;</span><br><span class="line">    @import &#x27;_mode/*&#x27;</span><br><span class="line"><span class="addition">+   @import &#x27;_custom/*.css&#x27;</span></span><br></pre></td></tr></table></figure></li><li>如果是使用的外链css，也可以在这里引入。同样是修改<code>[Blogroot]\themes\butterfly\source\css\index.styl</code>代码,使用<code>@import</code>逐行引入（此处为了确保自定义样式不会被覆盖，放在最底下）： <figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">    if hexo-config(&#x27;css_prefix&#x27;)</span><br><span class="line">      @import &#x27;nib&#x27;</span><br><span class="line"></span><br><span class="line">    @import &#x27;_third-party/normalize.min.css&#x27;</span><br><span class="line">    // project</span><br><span class="line">    @import &#x27;var&#x27;</span><br><span class="line">    @import &#x27;_global/*&#x27;</span><br><span class="line">    @import &#x27;_highlight/highlight&#x27;</span><br><span class="line">    @import &#x27;_page/*&#x27;</span><br><span class="line">    @import &#x27;_layout/*&#x27;</span><br><span class="line">    @import &#x27;_tags/*&#x27;</span><br><span class="line">    @import &#x27;_mode/*&#x27;</span><br><span class="line"><span class="addition">+   @import &#x27;https://cdn.jsdelivr.net/gh/username/repo/css/example.css&#x27;</span></span><br></pre></td></tr></table></figure></li><li>这样一来，每个魔改方案的<code>css</code>依然可以在独立的<code>css</code>文件中找到并修改（如果是手动添加整合的话，只能用注释分割，显然很不利于后续查找修改），而在每次提交时，运行<code>hexo g</code>的过程中就会将所有<code>css</code>文件都整合到<code>index.css</code>,可以在主题配置文件的<code>CDN</code>配置项里给<code>index.css</code>加上<code>jsdelivr</code>进一步提升加载速度（注意刷新<code>jsdelivr</code>的缓存）。</li></ol>              </div>            </details><h2 id="字体样式修改"><a class="markdownIt-Anchor" href="#字体样式修改"></a> 字体样式修改</h2><div class="tabs" id="fonts"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#fonts-1">谷歌在线字体</button></li><li class="tab"><button type="button" data-href="#fonts-2">本地自定义字体</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="fonts-1"><p>字体样式的修改需要先引入相应的字体文件,此处推荐使用:</p><div class="tag link"><a class="link-card" title="Google在线字体库" href="https://fonts.google.com/"><div class="left"><img src="https://pic.imgdb.cn/item/62edc7cf8c61dc3b8e1509dd.jpg"/></div><div class="right"><p class="text">Google在线字体库</p><p class="url">https://fonts.google.com/</p></div></a></div><ol><li>打开谷歌字体库<br /><img src="https://pic.imgdb.cn/item/62edc9158c61dc3b8e18dc0b.png" alt="" /></li><li>输入预览字样，选择喜欢的字体。找到满意的字体后点击进入字体详情页，可以在右侧找到<code>Select this style</code>等字样的按钮，之后能在侧边栏看到引入内容，分别是字体的<code>API</code>引入链接和<code>font-family</code>写法<br /><img src="https://pic.imgdb.cn/item/62edd2388c61dc3b8e379ac6.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62edcb5d8c61dc3b8e201fe3.png" alt="" /></li><li>首先需要引入样式，在<code>[Blogroot]\themes\butterfly\source\css\_custom</code>新建<code>font.css</code>，写入字体样式<code>API</code> <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> url(<span class="string">&#x27;https://fonts.googleapis.com/css2?family=Roboto+Condensed:wght@300&amp;display=swap&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li>为了便于预览，我们可以试试直接在页面按<kbd>F12</kbd>，然后在控制台中进行调试。</li><li>在控制台添加的样式是暂时的，我们在预览觉得满意后，就可以把<code>font-family</code>写进来<code>custom.css</code>了 <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> url(<span class="string">&#x27;https://fonts.googleapis.com/css2?family=Roboto+Condensed:wght@300&amp;display=swap&#x27;</span>);</span><br><span class="line"><span class="selector-tag">h1</span><span class="selector-id">#site-title</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;Roboto+Condensed:wght@300&#x27;</span>, cursive;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>如果需要把某种字体设置为默认字体，可以在<code>[Blogroot]\_config.butterfly.yml</code>补充以下内容 <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Global font settings</span></span><br><span class="line"><span class="comment"># Don&#x27;t modify the following settings unless you know how they work (非必要不要修改)</span></span><br><span class="line"><span class="attr">font:</span></span><br><span class="line">  <span class="attr">global-font-size:</span> <span class="string">16px</span></span><br><span class="line">  <span class="attr">code-font-size:</span> <span class="string">16px</span></span><br><span class="line">  <span class="attr">font-family:</span> <span class="string">ZhuZiAYuan</span></span><br><span class="line">  <span class="attr">code-font-family:</span></span><br></pre></td></tr></table></figure></li><li>font-display属性介绍</li></ol><div class="note blue no-icon flat"><p><code>font-display</code>属性是一个新的<code>css</code>属性,可以让自定义字体的显示更加顺滑，取值有：</p><ol><li><code>auto</code>:默认值。使用自定义字体的文本会先被隐藏，直到字体加载结束才会显示。</li><li><code>swap</code>:后备文本立即显示直到自定义字体加载完成后再使用自定义字体渲染文本。</li><li><code>fallback</code>:需要使用自定义字体渲染的文本会在较短的时间（100ms according to Google ）不可见，如果自定义字体还没有加载结束，那么就先加载无样式的文本。一旦自定义字体加载结束，那么文本就会被正确赋予样式。</li><li><code>optional</code>:效果和<code>fallback</code>几乎一样，都是先在极短的时间内文本不可见，然后再加载无样式的文本。不过<code>optional</code>选项可以让浏览器自由决定是否使用自定义字体，而这个决定很大程度上取决于浏览器的连接速度。如果速度很慢，那你的自定义字体可能就不会被使用。<br />此处得益于谷歌字体API自动引入了该属性，我们无需再添加。</li></ol></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="fonts-2"><ol><li>首先需要下载心仪的字体。此处推荐一个免费的字体库网站，支持在线转换预览和免费字体包下载。</li></ol><div class="tag link"><a class="link-card" title="第一字体网" href="https://www.diyiziti.com/"><div class="left"><img src="https://pic.imgdb.cn/item/62edcf858c61dc3b8e2e027b.jpg"/></div><div class="right"><p class="text">第一字体网</p><p class="url">https://www.diyiziti.com/</p></div></a></div><ol start="2"><li>这里我选择的一款叫做甜甜圈海报字体，根据页面按钮找到字体下载。将下载好的字体放至<code>[Blogroot]\themes\butterfly\source\fonts\</code>下</li></ol><div class="tip key"><p>不一定是<code>ttf</code>后缀，其他后缀也是完全正常的，例如<code>eot</code>、<code>otf</code>、<code>fon</code>、<code>font</code>、<code>ttc</code>、<code>woff</code>、<code>woff2</code>等</p></div><ol start="3"><li>首先需要引入样式，在<code>[Blogroot]\themes\butterfly\source\css\_custom</code>新建<code>font.css</code>，写入字体样式<code>API</code> <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 甜甜圈海报字体 */</span></span><br><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;CandyFont&#x27;</span>; <span class="comment">/* 字体名自定义即可 */</span></span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;/fonts/CandyHome.ttf&#x27;</span>); <span class="comment">/* 字体文件路径 */</span></span><br><span class="line">  <span class="attribute">font-display</span>: swap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>为了便于预览，我们可以试试直接在页面按<kbd>F12</kbd>，然后在控制台中进行调试。</li><li>在控制台添加的样式是暂时的，我们在预览觉得满意后，就可以把<code>font-family</code>写进来<code>custom.css</code>了 <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 甜甜圈海报字体 */</span></span><br><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;CandyFont&#x27;</span>; <span class="comment">/* 字体名自定义即可 */</span></span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;/fonts/CandyHome.ttf&#x27;</span>); <span class="comment">/* 字体文件路径 */</span></span><br><span class="line">  <span class="attribute">font-display</span>: swap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#aside-content</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: CandyFont;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>如果需要把某种字体设置为默认字体，可以在<code>[Blogroot]\_config.butterfly.yml</code>补充以下内容 <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Global font settings</span></span><br><span class="line"><span class="comment"># Don&#x27;t modify the following settings unless you know how they work (非必要不要修改)</span></span><br><span class="line"><span class="attr">font:</span></span><br><span class="line">  <span class="attr">global-font-size:</span> <span class="string">16px</span></span><br><span class="line">  <span class="attr">code-font-size:</span> <span class="string">16px</span></span><br><span class="line">  <span class="attr">font-family:</span> <span class="string">ZhuZiAYuan</span></span><br><span class="line">  <span class="attr">code-font-family:</span></span><br></pre></td></tr></table></figure></li><li>font-display属性介绍</li></ol><div class="note blue no-icon flat"><p><code>font-display</code>属性是一个新的<code>css</code>属性,可以让自定义字体的显示更加顺滑，取值有：</p><ol><li><code>auto</code>:默认值。使用自定义字体的文本会先被隐藏，直到字体加载结束才会显示。</li><li><code>swap</code>:后备文本立即显示直到自定义字体加载完成后再使用自定义字体渲染文本。</li><li><code>fallback</code>:需要使用自定义字体渲染的文本会在较短的时间（100ms according to Google ）不可见，如果自定义字体还没有加载结束，那么就先加载无样式的文本。一旦自定义字体加载结束，那么文本就会被正确赋予样式。</li><li><code>optional</code>:效果和<code>fallback</code>几乎一样，都是先在极短的时间内文本不可见，然后再加载无样式的文本。不过<code>optional</code>选项可以让浏览器自由决定是否使用自定义字体，而这个决定很大程度上取决于浏览器的连接速度。如果速度很慢，那你的自定义字体可能就不会被使用。</li></ol></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="夜间模式或阅读模式修改"><a class="markdownIt-Anchor" href="#夜间模式或阅读模式修改"></a> 夜间模式或阅读模式修改</h2><details class="folding-tag" cyan><summary> 点击查看夜间模式或阅读模式修改教程 </summary>              <div class='content'>              <div class="tip info"><p>如果熟悉<code>stylus</code>,可以直接修改<code>[Blogroot]\themes\butterfly\source\css\_mode\darkmode.styl</code>来新增夜间模式样式，但此贴依旧是通过<code>css</code>的方式引入。</p></div><div class="tip warning"><p>有一点需要注意，使用<code>gulp</code>压缩<code>css</code>后，不能以<code>[data-theme=dark]</code>开头，不然会出现本地首个样式能生效但部署远端却无法生效的Bug。</p></div><ol><li>新建<code>[Blogroot]\themes\butterfly\source\css\_custom\dark-read.css</code> <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 阅读模式： */</span></span><br><span class="line"><span class="selector-class">.read-mode</span> <span class="selector-id">#aside-content</span> <span class="selector-class">.card-widget</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">158</span>, <span class="number">204</span>, <span class="number">171</span>, <span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.read-mode</span> <span class="selector-tag">div</span><span class="selector-id">#post</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">158</span>, <span class="number">204</span>, <span class="number">171</span>, <span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.read-mode</span> <span class="selector-tag">div</span><span class="selector-id">#page</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">158</span>, <span class="number">204</span>, <span class="number">171</span>, <span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.read-mode</span> <span class="selector-tag">div</span><span class="selector-id">#category</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">158</span>, <span class="number">204</span>, <span class="number">171</span>, <span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.read-mode</span> <span class="selector-tag">div</span><span class="selector-id">#tag</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">158</span>, <span class="number">204</span>, <span class="number">171</span>, <span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.read-mode</span> <span class="selector-tag">div</span><span class="selector-id">#archive</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">158</span>, <span class="number">204</span>, <span class="number">171</span>, <span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 夜间模式 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-tag">div</span><span class="selector-id">#post</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">35</span>,<span class="number">35</span>,<span class="number">35</span>,<span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-tag">div</span><span class="selector-id">#page</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">35</span>,<span class="number">35</span>,<span class="number">35</span>,<span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-tag">div</span><span class="selector-id">#category</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">35</span>,<span class="number">35</span>,<span class="number">35</span>,<span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-tag">div</span><span class="selector-id">#tag</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">35</span>,<span class="number">35</span>,<span class="number">35</span>,<span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-tag">div</span><span class="selector-id">#archive</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">35</span>,<span class="number">35</span>,<span class="number">35</span>,<span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-id">#recent-posts</span>&gt;<span class="selector-class">.recent-post-item</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">35</span>,<span class="number">35</span>,<span class="number">35</span>,<span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-id">#aside-content</span> <span class="selector-class">.card-widget</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">35</span>,<span class="number">35</span>,<span class="number">35</span>,<span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 夜间模式下的阅读模式： */</span></span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-class">.read-mode</span> <span class="selector-id">#aside-content</span> <span class="selector-class">.card-widget</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">35</span>,<span class="number">35</span>,<span class="number">35</span>,<span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-class">.read-mode</span> <span class="selector-tag">div</span><span class="selector-id">#post</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">35</span>,<span class="number">35</span>,<span class="number">35</span>,<span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-class">.read-mode</span> <span class="selector-tag">div</span><span class="selector-id">#page</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">35</span>,<span class="number">35</span>,<span class="number">35</span>,<span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-class">.read-mode</span> <span class="selector-tag">div</span><span class="selector-id">#category</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">35</span>,<span class="number">35</span>,<span class="number">35</span>,<span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-class">.read-mode</span> <span class="selector-tag">div</span><span class="selector-id">#tag</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">35</span>,<span class="number">35</span>,<span class="number">35</span>,<span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-class">.read-mode</span> <span class="selector-tag">div</span><span class="selector-id">#archive</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">35</span>,<span class="number">35</span>,<span class="number">35</span>,<span class="number">0.5</span>)<span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><h2 id="透明度修改"><a class="markdownIt-Anchor" href="#透明度修改"></a> 透明度修改</h2><details class="folding-tag" cyan><summary> 点击查看透明度修改教程 </summary>              <div class='content'>              <ol><li>新建<code>[Blogroot]\themes\butterfly\source\css\_custom\opacity.css</code>，并添加以下内容 <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 首页文章卡片 */</span></span><br><span class="line"><span class="selector-id">#recent-posts</span> &gt; <span class="selector-class">.recent-post-item</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>:<span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.9</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 首页侧栏卡片 */</span></span><br><span class="line"><span class="selector-class">.card-widget</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>:<span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.9</span>)<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 文章页面正文背景 */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#post</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.9</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 分页页面 */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#page</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.9</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 归档页面 */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#archive</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.9</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 标签页面 */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#tag</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.9</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 分类页面 */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#category</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.9</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* opacity定义的是全局的透明度，会影响添加该属性的页面元素及其下属元素 */</span></span><br><span class="line"><span class="selector-id">#footer</span>&#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.5</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>如果想定义头图或页脚全透明以实现一图流，继续添加如下内容</li></ol><div class="tip warning"><p>一图流方案生效的前提是必须先设置默认的全局背景，在主题配置文件<code>[Blogroot]\_config.butterfly.yml</code>中找到<code>background</code>配置项,改为自己心仪的背景图片链接。</p></div>    <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 页脚透明 */</span></span><br><span class="line"><span class="selector-id">#footer</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: transparent<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 页脚黑色透明玻璃效果移除 */</span></span><br><span class="line"><span class="selector-id">#footer</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: transparent<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 头图透明 */</span></span><br><span class="line"><span class="selector-id">#page-header</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: transparent<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*top-img黑色透明玻璃效果移除，不建议加，除非你执着于完全一图流或者背景图对比色明显 */</span></span><br><span class="line"><span class="selector-id">#page-header</span><span class="selector-class">.post-bg</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: transparent<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*夜间模式伪类遮罩层透明*/</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#footer</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: transparent<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#page-header</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: transparent<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><h2 id="评论卡片优化"><a class="markdownIt-Anchor" href="#评论卡片优化"></a> 评论卡片优化</h2><details class="folding-tag" cyan><summary> 点击查看评论卡片优化教程 </summary>              <div class='content'>              <div class="tip warning"><p>当前方案为内测尝鲜版，基本逻辑可以实现，但是js代码可读性较差，且不保证没有冗余步骤。</p></div><ol><li><p>新建<code>[Blogroot]\themes\butterfly\source\css\_custom\fixed_comment.css</code>，添加以下内容</p> <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-id">#post-comment</span><span class="selector-class">.fixedcomment</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">60%</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">25px</span> <span class="number">30px</span> <span class="number">20px</span> <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: scroll;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">90</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">222</span>, <span class="number">222</span>, <span class="number">222</span>, <span class="number">0.95</span>);</span><br><span class="line">  <span class="attribute">box-shadow</span>:<span class="number">3px</span> <span class="number">2px</span> <span class="number">14px</span> <span class="number">#464340</span>;</span><br><span class="line">  <span class="attribute">animation</span>: fixedright <span class="number">0.5s</span> linear;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#post-comment</span><span class="selector-class">.fixedcomment</span>::-webkit-scrollbar &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#quit-board</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#quit-board</span><span class="selector-class">.fixedcomment</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">display</span>:block<span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">40%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">89</span><span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">25</span>,<span class="number">25</span>,<span class="number">25</span>,<span class="number">0.3</span>);</span><br><span class="line">  <span class="attribute">filter</span>: <span class="built_in">blur</span>(<span class="number">4px</span>) <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">animation</span>: fixedleft <span class="number">0.5s</span> linear;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*手机端样式适配*/</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">768px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">div</span><span class="selector-id">#post-comment</span><span class="selector-class">.fixedcomment</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">90%</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">div</span><span class="selector-id">#quit-board</span><span class="selector-class">.fixedcomment</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">10%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*动画效果*/</span></span><br><span class="line"><span class="keyword">@keyframes</span> fixedright &#123;</span><br><span class="line">  <span class="selector-tag">from</span> &#123;<span class="attribute">right</span>:-<span class="number">50%</span>;&#125;</span><br><span class="line">  <span class="selector-tag">to</span> &#123;<span class="attribute">right</span>:<span class="number">0</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> fixedleft &#123;</span><br><span class="line">  <span class="selector-tag">from</span> &#123;<span class="attribute">left</span>:-<span class="number">50%</span>;&#125;</span><br><span class="line">  <span class="selector-tag">to</span> &#123;<span class="attribute">left</span>:<span class="number">0</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 夜间模式匹配 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-tag">div</span><span class="selector-id">#post-comment</span><span class="selector-class">.fixedcomment</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">35</span>, <span class="number">35</span>, <span class="number">35</span>, <span class="number">0.95</span>);</span><br><span class="line">  <span class="attribute">box-shadow</span>:<span class="number">3px</span> <span class="number">2px</span> <span class="number">12px</span> <span class="number">#90a1a4</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-tag">div</span><span class="selector-id">#quit-board</span><span class="selector-class">.fixedcomment</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">147</span>, <span class="number">146</span>, <span class="number">128</span>, <span class="number">0.3</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>新建<code>[Blogroot]\themes\butterfly\source\js\custom\fixed_comment.js</code>，添加以下内容</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//移除FixedComment类，保持原生样式，确保不与最新评论跳转冲突</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">RemoveFixedComment</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> activedItems = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.fixedcomment&#x27;</span>);</span><br><span class="line">  <span class="keyword">if</span> (activedItems) &#123;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; activedItems.<span class="property">length</span>; i++) &#123;</span><br><span class="line">      activedItems[i].<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;fixedcomment&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//给post-comment添加fixedcomment类</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">AddFixedComment</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> commentBoard = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;post-comment&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> quitBoard = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;quit-board&#x27;</span>);</span><br><span class="line">  commentBoard.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;fixedcomment&#x27;</span>);</span><br><span class="line">  quitBoard.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;fixedcomment&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建一个蒙版，作为退出键使用</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">CreateQuitBoard</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> quitBoard = <span class="string">`&lt;div id=&quot;quit-board&quot; onclick=&quot;RemoveFixedComment()&quot;&gt;&lt;/div&gt;`</span></span><br><span class="line">  <span class="keyword">var</span> commentBoard = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;post-comment&#x27;</span>);</span><br><span class="line">  commentBoard.<span class="title function_">insertAdjacentHTML</span>(<span class="string">&quot;beforebegin&quot;</span>,quitBoard)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">FixedCommentBtn</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="comment">//第一步，判断当前是否存在FixedComment类，存在则移除，不存在则添加</span></span><br><span class="line">  <span class="comment">// 获取评论区对象</span></span><br><span class="line">  <span class="keyword">var</span> commentBoard = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;post-comment&#x27;</span>);</span><br><span class="line">  <span class="comment">// 若评论区存在</span></span><br><span class="line">  <span class="keyword">if</span> (commentBoard) &#123;</span><br><span class="line">      <span class="comment">// 判断是否存在fixedcomment类</span></span><br><span class="line">      <span class="keyword">if</span> (commentBoard.<span class="property">className</span>.<span class="title function_">indexOf</span>(<span class="string">&#x27;fixedcomment&#x27;</span>) &gt; -<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="comment">// 存在则移除</span></span><br><span class="line">        <span class="title class_">RemoveFixedComment</span>();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">// 不存在则添加</span></span><br><span class="line">        <span class="title class_">CreateQuitBoard</span>();</span><br><span class="line">        <span class="title class_">AddFixedComment</span>();</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 若不存在评论区则跳转至留言板(留言板路径记得改为自己的)</span></span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">// 判断是否开启了pjax，尽量不破坏全局吸底音乐刷新</span></span><br><span class="line">      <span class="keyword">if</span> (pjax)&#123;</span><br><span class="line">        pjax.<span class="title function_">loadUrl</span>(<span class="string">&quot;/comments/#post-comment&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">&quot;/comments/#post-comment&quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//切换页面先初始化一遍，确保开始时是原生状态。所以要加pjax重载。</span></span><br><span class="line"><span class="title class_">RemoveFixedComment</span>();</span><br></pre></td></tr></table></figure></li><li><p>修改<code>[Blogroot]\_config.butterfly.yml</code>的<code>inject</code>配置项，引入<code>js</code>代码</p> <figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">    inject:</span><br><span class="line">      head:</span><br><span class="line"></span><br><span class="line">      bottom:</span><br><span class="line"><span class="addition">+       - &lt;script data-pjax defer src=&quot;/js/custom/fixed_comment.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>理论上给任意元素添加<code>onclick=&quot;FixedCommentBtn();&quot;</code>属性就可以实现评论区侧栏开闭。此处我是修改了原生<code>Butterfly</code>主题的直达评论按钮。修改<code>[Blogroot]\themes\butterfly\layout\includes\rightside.pug</code></p> <figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">      if commentsJsLoad</span><br><span class="line"><span class="deletion">-       a#to_comment(href=&quot;#post-comment&quot; title=_p(&quot;rightside.scroll_to_comment&quot;))</span></span><br><span class="line"><span class="addition">+       button#to_comment(type=&quot;button&quot; title=_p(&quot;rightside.scroll_to_comment&quot;) onclick=&quot;FixedCommentBtn();&quot;)</span></span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><h2 id="添加随机背景或banner"><a class="markdownIt-Anchor" href="#添加随机背景或banner"></a> 添加随机背景或banner</h2><details class="folding-tag" cyan><summary> 点击查看添加随机背景或banner教程 </summary>              <div class='content'>              <div class="tip info"><p><code>butterfly</code>主题使用<code>id</code>为<code>web_bg</code>的<code>div</code>来存放背景图片，使用<code>id</code>为<code>page-header</code>的<code>div</code>来存放<code>banner</code>图片。只需要通过重设这个<code>div</code>的背景图片属性就可以替换背景图片。</p></div><div class="tip warning"><p>此方案必须要先在主题配置文件<code>_config.butterfly.yml</code>中配置了默认背景才能生效。最终效果为切换页面或刷新页面时，随机替换当前背景。</p></div><ol><li>新建<code>[Blogroot]\themes\butterfly\source\js\custom\randombg.js</code>，添加以下内容 <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//随机背景图片数组,图片可以换成图床链接，注意最后一条后面不要有逗号</span></span><br><span class="line"><span class="keyword">var</span> backimg =[</span><br><span class="line">  <span class="string">&quot;url(/img/bg1.JPG)&quot;</span>,</span><br><span class="line">  <span class="string">&quot;url(/img/bg2.jpg)&quot;</span>,</span><br><span class="line">  <span class="string">&quot;url(/img/bg3.jpg)&quot;</span>,</span><br><span class="line">  <span class="string">&quot;url(/img/bg4.jpg)&quot;</span></span><br><span class="line">];</span><br><span class="line"><span class="comment">//获取背景图片总数，生成随机数</span></span><br><span class="line"><span class="keyword">var</span> bgindex =<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * backimg.<span class="property">length</span>);</span><br><span class="line"><span class="comment">//重设背景图片</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;web_bg&quot;</span>).<span class="property">style</span>.<span class="property">backgroundImage</span> = backimg[bgindex];</span><br><span class="line"><span class="comment">//随机banner数组,图片可以换成图床链接，注意最后一条后面不要有逗号</span></span><br><span class="line"><span class="keyword">var</span> bannerimg =[</span><br><span class="line">  <span class="string">&quot;url(/img/bg1.JPG)&quot;</span>,</span><br><span class="line">  <span class="string">&quot;url(/img/bg2.jpg)&quot;</span>,</span><br><span class="line">  <span class="string">&quot;url(/img/bg3.jpg)&quot;</span>,</span><br><span class="line">  <span class="string">&quot;url(/img/bg4.jpg)&quot;</span></span><br><span class="line">];</span><br><span class="line"><span class="comment">//获取banner图片总数，生成随机数</span></span><br><span class="line"><span class="keyword">var</span> bannerindex =<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * bannerimg.<span class="property">length</span>);</span><br><span class="line"><span class="comment">//重设banner图片</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;page-header&quot;</span>).<span class="property">style</span>.<span class="property">backgroundImage</span> = bannerimg[bannerindex];</span><br></pre></td></tr></table></figure></li><li>在<code>[Blogroot]\_config.butterfly.yml</code>引入<code>randombg.js</code> <figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">    inject:</span><br><span class="line">      head:</span><br><span class="line">      bottom:</span><br><span class="line"><span class="addition">+       - &lt;script async data-pjax src=&quot;/js/custom/randombg.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><h2 id="站点动态title"><a class="markdownIt-Anchor" href="#站点动态title"></a> 站点动态title</h2><div class="tip cogs"><p>站点动态title是通过js监测是否聚焦于当前页面，从而替换标签显示内容。</p></div><details class="folding-tag" cyan><summary> 点击查看添加站点动态title教程 </summary>              <div class='content'>              <ol><li>新建<code>[Blogroot]\themes\butterfly\source\js\custom\diytitle.js</code>，添加以下内容 <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//动态标题</span></span><br><span class="line"><span class="keyword">var</span> <span class="title class_">OriginTitile</span> = <span class="variable language_">document</span>.<span class="property">title</span>;</span><br><span class="line"><span class="keyword">var</span> titleTime;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;visibilitychange&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">hidden</span>) &#123;</span><br><span class="line">        <span class="comment">//离开当前页面时标签显示内容</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">title</span> = <span class="string">&#x27;w(ﾟДﾟ)w 不要走！再看看嘛！&#x27;</span>;</span><br><span class="line">        <span class="built_in">clearTimeout</span>(titleTime);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//返回当前页面时标签显示内容</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">title</span> = <span class="string">&#x27;♪(^∇^*)欢迎回来！&#x27;</span> + <span class="title class_">OriginTitile</span>;</span><br><span class="line">        <span class="comment">//两秒后变回正常标题</span></span><br><span class="line">        titleTime = <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="property">title</span> = <span class="title class_">OriginTitile</span>;</span><br><span class="line">        &#125;, <span class="number">2000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li>在<code>[Blogroot]\_config.butterfly.yml</code>引入<code>diytitle.js</code> <figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> inject:</span><br><span class="line">    head:</span><br><span class="line">      # - &lt;link rel=&quot;stylesheet&quot; href=&quot;/xxx.css&quot;&gt;</span><br><span class="line">    bottom:</span><br><span class="line">      # - &lt;script src=&quot;xxxx&quot;&gt;&lt;/script&gt;</span><br><span class="line"><span class="addition">+     - &lt;script async src=&quot;/js/costom/diytitle.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><h2 id="引入iconfont"><a class="markdownIt-Anchor" href="#引入iconfont"></a> 引入Iconfont</h2><details class="folding-tag" cyan><summary> 点击查看Iconfont引入教程 </summary>              <div class='content'>              <div class="tag link"><a class="link-card" title="糖果屋教程贴" href="https://akilar.top/posts/d2ebecef/"><div class="left"><img src="https://pic.imgdb.cn/item/62e5fdf7f54cd3f937edb22b.jpg"/></div><div class="right"><p class="text">糖果屋教程贴</p><p class="url">https://akilar.top/posts/d2ebecef/</p></div></a></div><ol><li>修改<code>[Blogroot]\_config.butterfly.yml</code>的<code>inject</code>配置项</li><li>新建<code>[Blogroot]\themes\butterfly\source\css\_custom\iconfont.css</code>样式</li><li>新建<code>[Blogroot]\themes\butterfly\scripts\tag\iconfont.js</code></li></ol>              </div>            </details><h2 id="菜单栏-社交栏多色图标引入"><a class="markdownIt-Anchor" href="#菜单栏-社交栏多色图标引入"></a> 菜单栏、社交栏多色图标引入</h2><details class="folding-tag" cyan><summary> 点击查看菜单栏、社交栏多色图标引入教程 </summary>              <div class='content'>              <div class="tag link"><a class="link-card" title="糖果屋微调合集" href="https://akilar.top/posts/23fdf850/"><div class="left"><img src="https://pic.imgdb.cn/item/62e5fdf7f54cd3f937edb22b.jpg"/></div><div class="right"><p class="text">糖果屋微调合集</p><p class="url">https://akilar.top/posts/23fdf850/</p></div></a></div><ol><li>完成<code>Inconfont</code>的<code>Symbol</code>方式导入</li><li>修改<code>[Blogroot]\themes\butterfly\layout\includes\header\menu_item.pug</code></li><li>修改<code>[Blogroot]\themes\butterfly\layout\includes\header\social.pug</code></li></ol>              </div>            </details><h2 id="sidebar-card-clock"><a class="markdownIt-Anchor" href="#sidebar-card-clock"></a> Sidebar Card Clock</h2><details class="folding-tag" cyan><summary> 点击查看Sidebar Card Clock引入教程 </summary>              <div class='content'>              <ol><li>安装插件,在博客根目录<code>[Blogroot]</code>下打开终端，运行以下指令： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-swiper --save</span><br></pre></td></tr></table></figure></li><li>在<code>[Blogroot]\_config.butterfly.yml</code>中添加<code>swiper</code>配置项 <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># electric_clock</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/4e39cf4a/</span></span><br><span class="line"><span class="attr">electric_clock:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开关</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span> <span class="comment">#过滤器优先权</span></span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">all</span> <span class="comment"># 应用页面</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="comment"># - /posts/</span></span><br><span class="line">    <span class="comment"># - /about/</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="comment"># 挂载容器类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">class</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">sticky_layout</span></span><br><span class="line">    <span class="attr">index:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">loading:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-clock/lib/loading.gif</span> <span class="comment">#加载动画自定义</span></span><br><span class="line">  <span class="attr">clock_css:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-clock/lib/clock.min.css</span></span><br><span class="line">  <span class="attr">clock_js:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-clock/lib/clock.min.js</span></span><br><span class="line">  <span class="attr">ip_api:</span> <span class="string">https://pv.sohu.com/cityjson?ie=utf-8</span></span><br></pre></td></tr></table></figure></li><li>参数释义</li></ol><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">备选值/类型</th><th style="text-align:left">释义</th></tr></thead><tbody><tr><td style="text-align:center">priority</td><td style="text-align:center">number</td><td style="text-align:left">【可选】过滤器优先级，数值越小，执行越早，默认为10</td></tr><tr><td style="text-align:center">enable</td><td style="text-align:center">true/false</td><td style="text-align:left">【必选】控制开关</td></tr><tr><td style="text-align:center">enable_page</td><td style="text-align:center">path/all</td><td style="text-align:left">【可选】填写想要应用的页面的相对路径（即路由地址）,如根目录就填’/’,分类页面就填’/categories/’。若要应用于所有页面，就填’all’，默认为all</td></tr><tr><td style="text-align:center">exclude</td><td style="text-align:center">path</td><td style="text-align:left">【可选】填写想要屏蔽的页面，可以多个。写法见示例。原理是将屏蔽项的内容逐个放到当前路径去匹配，若当前路径包含任一屏蔽项，则不会挂载。</td></tr><tr><td style="text-align:center">layout.type</td><td style="text-align:center">id/class</td><td style="text-align:left">【可选】挂载容器类型，填写id或class，不填则默认为id</td></tr><tr><td style="text-align:center"><a href="http://layout.name">layout.name</a></td><td style="text-align:center">text</td><td style="text-align:left">【必选】挂载容器名称</td></tr><tr><td style="text-align:center">layout.index</td><td style="text-align:center">0和正整数</td><td style="text-align:left">【可选】前提是layout.type为class，因为同一页面可能有多个class，此项用来确认究竟排在第几个顺位</td></tr><tr><td style="text-align:center">loading</td><td style="text-align:center">URL</td><td style="text-align:left">【可选】电子钟加载动画的图片</td></tr><tr><td style="text-align:center">clock_css</td><td style="text-align:center">URL</td><td style="text-align:left">【可选】电子钟样式CDN资源</td></tr><tr><td style="text-align:center">clock_js</td><td style="text-align:center">URL</td><td style="text-align:left">【可选】电子钟执行脚本CDN资源</td></tr><tr><td style="text-align:center">ip_api</td><td style="text-align:center">URL</td><td style="text-align:left">【可选】获取时钟IP的API</td></tr></tbody></table>              </div>            </details><h2 id="swiper-bar"><a class="markdownIt-Anchor" href="#swiper-bar"></a> Swiper Bar</h2><details class="folding-tag" cyan><summary> 点击查看Swiper Bar教程 </summary>              <div class='content'>              <ol><li>安装插件,在博客根目录<code>[Blogroot]</code>下打开终端，运行以下指令： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-swiper --save</span><br></pre></td></tr></table></figure></li><li>在<code>[Blogroot]\_config.butterfly.yml</code>中添加<code>swiper</code>配置项 <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo-butterfly-swiper</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/8e1264d1/</span></span><br><span class="line"><span class="attr">swiper:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开关</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span> <span class="comment">#过滤器优先权</span></span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">all</span> <span class="comment"># 应用页面</span></span><br><span class="line">  <span class="attr">timemode:</span> <span class="string">date</span> <span class="comment">#date/updated</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="comment"># 挂载容器类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">id</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">recent-posts</span></span><br><span class="line">    <span class="attr">index:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">default_descr:</span> <span class="string">再怎么看我也不知道怎么描述它的啦！</span></span><br><span class="line">  <span class="attr">swiper_css:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiper.min.css</span> <span class="comment">#swiper css依赖</span></span><br><span class="line">  <span class="attr">swiper_js:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiper.min.js</span> <span class="comment">#swiper js依赖</span></span><br><span class="line">  <span class="attr">custom_css:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiperstyle.css</span> <span class="comment"># 适配主题样式补丁</span></span><br><span class="line">  <span class="attr">custom_js:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiper_init.js</span> <span class="comment"># swiper初始化方法</span></span><br></pre></td></tr></table></figure></li><li>参数释义</li></ol><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">备选值/类型</th><th style="text-align:left">释义</th></tr></thead><tbody><tr><td style="text-align:center">priority</td><td style="text-align:center">number</td><td style="text-align:left">【可选】过滤器优先级，数值越小，执行越早，默认为10</td></tr><tr><td style="text-align:center">enable</td><td style="text-align:center">true/false</td><td style="text-align:left">【必选】控制开关</td></tr><tr><td style="text-align:center">enable_page</td><td style="text-align:center">path/all</td><td style="text-align:left">【可选】填写想要应用的页面的相对路径（即路由地址）,如根目录就填’/’,分类页面就填’/categories/’。若要应用于所有页面，就填’all’，默认为all</td></tr><tr><td style="text-align:center">timemode</td><td style="text-align:center">date/updated</td><td style="text-align:left">【可选】时间显示，date为显示创建日期，updated为显示更新日期,默认为date</td></tr><tr><td style="text-align:center">layout.type</td><td style="text-align:center">id/class</td><td style="text-align:left">【可选】挂载容器类型，填写id或class，不填则默认为id</td></tr><tr><td style="text-align:center"><a href="http://layout.name">layout.name</a></td><td style="text-align:center">text</td><td style="text-align:left">【必选】挂载容器名称</td></tr><tr><td style="text-align:center">layout.index</td><td style="text-align:center">0和正整数</td><td style="text-align:left">【可选】前提是layout.type为class，因为同一页面可能有多个class，此项用来确认究竟排在第几个顺位</td></tr><tr><td style="text-align:center">default_descr</td><td style="text-align:center">text</td><td style="text-align:left">默认文章描述</td></tr><tr><td style="text-align:center">swiper_css</td><td style="text-align:center">URL</td><td style="text-align:left">【可选】自定义的swiper依赖项css链接</td></tr><tr><td style="text-align:center">swiper_js</td><td style="text-align:center">URL</td><td style="text-align:left">【可选】自定义的swiper依赖项加js链接</td></tr><tr><td style="text-align:center">custom_css</td><td style="text-align:center">URL</td><td style="text-align:left">【可选】适配主题样式补丁</td></tr><tr><td style="text-align:center">custom_js</td><td style="text-align:center">URL</td><td style="text-align:left">【可选】swiper初始化方法</td></tr></tbody></table>              </div>            </details><h2 id="tag-plugins-plus"><a class="markdownIt-Anchor" href="#tag-plugins-plus"></a> Tag Plugins Plus</h2><details class="folding-tag" cyan><summary> 点击查看教程 </summary>              <div class='content'>              <div class="tag link"><a class="link-card" title="糖果屋教程贴" href="https://akilar.top/posts/615e2dec/"><div class="left"><img src="https://pic.imgdb.cn/item/62e5fdf7f54cd3f937edb22b.jpg"/></div><div class="right"><p class="text">糖果屋教程贴</p><p class="url">https://akilar.top/posts/615e2dec/</p></div></a></div><ol><li>安装插件,在博客根目录<code>[Blogroot]</code>下打开终端，运行以下指令： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-tag-plugins-plus --save</span><br><span class="line">npm uninstall hexo-renderer-marked --save</span><br><span class="line">npm install hexo-renderer-kramed --save</span><br></pre></td></tr></table></figure></li><li>在<code>[Blogroot]\_config.butterfly.yml</code>中添加<code>tag_plugins</code>配置项</li></ol>              </div>            </details><h2 id="相关推荐版块侧栏卡片化"><a class="markdownIt-Anchor" href="#相关推荐版块侧栏卡片化"></a> 相关推荐版块侧栏卡片化</h2><details class="folding-tag" cyan><summary> 点击查看相关推荐版块侧栏卡片化教程 </summary>              <div class='content'>              <ol><li>修改<code>[Blogroot]\themes\butterfly\scripts\helpers\related_post.js</code> <div class="tabs" id="card"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#card-1">diff代码块</button></li><li class="tab"><button type="button" data-href="#card-2">改动完成后的代码块</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="card-1"><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">  if (relatedPosts.length &gt; 0) &#123;</span><br><span class="line"><span class="deletion">-   result += &#x27;&lt;div class=&quot;relatedPosts&quot;&gt;&#x27;</span></span><br><span class="line"><span class="deletion">-   result += `&lt;div class=&quot;headline&quot;&gt;&lt;i class=&quot;fas fa-thumbs-up fa-fw&quot;&gt;&lt;/i&gt;&lt;span&gt;$&#123;headlineLang&#125;&lt;/span&gt;&lt;/div&gt;`</span></span><br><span class="line"><span class="deletion">-   result += &#x27;&lt;div class=&quot;relatedPosts-list&quot;&gt;&#x27;</span></span><br><span class="line"><span class="addition">+   result += &#x27;&lt;div class=&quot;card-widget card-recommend-post&quot;&gt;&#x27;</span></span><br><span class="line"><span class="addition">+   result += `&lt;div class=&quot;item-headline&quot;&gt;&lt;i class=&quot;fas fa-dharmachakra&quot;&gt;&lt;/i&gt;&lt;span&gt;$&#123;headlineLang&#125;&lt;/span&gt;&lt;/div&gt;`</span></span><br><span class="line"><span class="addition">+   result += &#x27;&lt;div class=&quot;aside-list&quot;&gt;&#x27;</span></span><br><span class="line">    for (let i = 0; i &lt; Math.min(relatedPosts.length, limitNum); i++) &#123;</span><br><span class="line">      const cover =</span><br><span class="line">        relatedPosts[i].cover <span class="comment">=== false</span></span><br><span class="line">          ? relatedPosts[i].randomcover</span><br><span class="line">          : relatedPosts[i].cover</span><br><span class="line"><span class="deletion">-     result += `&lt;div&gt;&lt;a href=&quot;$&#123;this.url_for(relatedPosts[i].path)&#125;&quot; title=&quot;$&#123;relatedPosts[i].title&#125;&quot;&gt;`</span></span><br><span class="line"><span class="deletion">-     result += `&lt;img class=&quot;cover&quot; src=&quot;$&#123;this.url_for(cover)&#125;&quot; alt=&quot;cover&quot;&gt;`</span></span><br><span class="line"><span class="addition">+     result += `&lt;div class=&quot;aside-list-item&quot;&gt;`</span></span><br><span class="line"><span class="addition">+     result += `&lt;a class=&quot;thumbnail&quot; href=&quot;$&#123;this.url_for(relatedPosts[i].path)&#125;&quot; title=&quot;$&#123;relatedPosts[i].title&#125;&quot;&gt;&lt;img src=&quot;$&#123;this.url_for(cover)&#125;&quot; alt=&quot;$&#123;relatedPosts[i].title&#125;&quot;&gt;&lt;/a&gt;`</span></span><br><span class="line"><span class="addition">+     result += `&lt;div class=&quot;content&quot;&gt;`</span></span><br><span class="line"><span class="addition">+     result += `&lt;a class=&quot;title&quot; href=&quot;$&#123;this.url_for(relatedPosts[i].path)&#125;&quot; title=&quot;$&#123;relatedPosts[i].title&#125;&quot;&gt;$&#123;relatedPosts[i].title&#125;&lt;/a&gt;`</span></span><br><span class="line">      if (dateType <span class="comment">=== &#x27;created&#x27;) &#123;</span></span><br><span class="line"><span class="deletion">-       result += `&lt;div class=&quot;content is-center&quot;&gt;&lt;div class=&quot;date&quot;&gt;&lt;i class=&quot;far fa-calendar-alt fa-fw&quot;&gt;&lt;/i&gt; $&#123;this.date(relatedPosts[i].created, hexoConfig.date_format)&#125;&lt;/div&gt;`</span></span><br><span class="line"><span class="addition">+       result += `&lt;time datetime=&quot;$&#123;this.date(relatedPosts[i].created, hexoConfig.date_format)&#125;&quot; title=&quot;发表于 $&#123;this.date(relatedPosts[i].created, hexoConfig.date_format)&#125;&quot;&gt;$&#123;this.date(relatedPosts[i].created, hexoConfig.date_format)&#125;&lt;/time&gt;`</span></span><br><span class="line">      &#125; else &#123;</span><br><span class="line"><span class="deletion">-       result += `&lt;div class=&quot;content is-center&quot;&gt;&lt;div class=&quot;date&quot;&gt;&lt;i class=&quot;fas fa-history fa-fw&quot;&gt;&lt;/i&gt; $&#123;this.date(relatedPosts[i].updated, hexoConfig.date_format)&#125;&lt;/div&gt;`</span></span><br><span class="line"><span class="addition">+       result += `&lt;time datetime=&quot;$&#123;this.date(relatedPosts[i].updated, hexoConfig.date_format)&#125;&quot; title=&quot;发表于 $&#123;this.date(relatedPosts[i].updated, hexoConfig.date_format)&#125;&quot;&gt;$&#123;this.date(relatedPosts[i].updated, hexoConfig.date_format)&#125;&lt;/time&gt;`</span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="deletion">-     result += `&lt;div class=&quot;title&quot;&gt;$&#123;relatedPosts[i].title&#125;&lt;/div&gt;`</span></span><br><span class="line"><span class="deletion">-     result += &#x27;&lt;/div&gt;&lt;/a&gt;&lt;/div&gt;&#x27;</span></span><br><span class="line"><span class="addition">+     result += `&lt;/div&gt;&lt;/div&gt;`</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    result += &#x27;&lt;/div&gt;&lt;/div&gt;&#x27;</span><br><span class="line">    return result</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="card-2"><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (relatedPosts.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    result += <span class="string">&#x27;&lt;div class=&quot;card-widget card-recommend-post&quot;&gt;&#x27;</span></span><br><span class="line">    result += <span class="string">`&lt;div class=&quot;item-headline&quot;&gt;&lt;i class=&quot;fas fa-dharmachakra&quot;&gt;&lt;/i&gt;&lt;span&gt;<span class="subst">$&#123;headlineLang&#125;</span>&lt;/span&gt;&lt;/div&gt;`</span></span><br><span class="line">    result += <span class="string">&#x27;&lt;div class=&quot;aside-list&quot;&gt;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="title class_">Math</span>.<span class="title function_">min</span>(relatedPosts.<span class="property">length</span>, limitNum); i++) &#123;</span><br><span class="line">      <span class="keyword">const</span> cover =</span><br><span class="line">        relatedPosts[i].<span class="property">cover</span> === <span class="literal">false</span></span><br><span class="line">          ? relatedPosts[i].<span class="property">randomcover</span></span><br><span class="line">          : relatedPosts[i].<span class="property">cover</span></span><br><span class="line">      result += <span class="string">`&lt;div class=&quot;aside-list-item&quot;&gt;`</span></span><br><span class="line">      result += <span class="string">`&lt;a class=&quot;thumbnail&quot; href=&quot;<span class="subst">$&#123;<span class="variable language_">this</span>.url_for(relatedPosts[i].path)&#125;</span>&quot; title=&quot;<span class="subst">$&#123;relatedPosts[i].title&#125;</span>&quot;&gt;&lt;img src=&quot;<span class="subst">$&#123;<span class="variable language_">this</span>.url_for(cover)&#125;</span>&quot; alt=&quot;<span class="subst">$&#123;relatedPosts[i].title&#125;</span>&quot;&gt;&lt;/a&gt;`</span></span><br><span class="line">      result += <span class="string">`&lt;div class=&quot;content&quot;&gt;`</span></span><br><span class="line">      result += <span class="string">`&lt;a class=&quot;title&quot; href=&quot;<span class="subst">$&#123;<span class="variable language_">this</span>.url_for(relatedPosts[i].path)&#125;</span>&quot; title=&quot;<span class="subst">$&#123;relatedPosts[i].title&#125;</span>&quot;&gt;<span class="subst">$&#123;relatedPosts[i].title&#125;</span>&lt;/a&gt;`</span></span><br><span class="line">      <span class="keyword">if</span> (dateType === <span class="string">&#x27;created&#x27;</span>) &#123;</span><br><span class="line">        result += <span class="string">`&lt;time datetime=&quot;<span class="subst">$&#123;<span class="variable language_">this</span>.date(relatedPosts[i].created, hexoConfig.date_format)&#125;</span>&quot; title=&quot;发表于 <span class="subst">$&#123;<span class="variable language_">this</span>.date(relatedPosts[i].created, hexoConfig.date_format)&#125;</span>&quot;&gt;<span class="subst">$&#123;<span class="variable language_">this</span>.date(relatedPosts[i].created, hexoConfig.date_format)&#125;</span>&lt;/time&gt;`</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        result += <span class="string">`&lt;time datetime=&quot;<span class="subst">$&#123;<span class="variable language_">this</span>.date(relatedPosts[i].updated, hexoConfig.date_format)&#125;</span>&quot; title=&quot;发表于 <span class="subst">$&#123;<span class="variable language_">this</span>.date(relatedPosts[i].updated, hexoConfig.date_format)&#125;</span>&quot;&gt;<span class="subst">$&#123;<span class="variable language_">this</span>.date(relatedPosts[i].updated, hexoConfig.date_format)&#125;</span>&lt;/time&gt;`</span></span><br><span class="line">      &#125;</span><br><span class="line">      result += <span class="string">`&lt;/div&gt;&lt;/div&gt;`</span></span><br><span class="line">    &#125;</span><br><span class="line">    result += <span class="string">&#x27;&lt;/div&gt;&lt;/div&gt;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></li><li>因为原本的版块是在文章下方，而现在我们需要把它改到侧栏，所以需要修改<code>[Blogroot]\themes\butterfly\layout\post.pug</code>，大约26行的位置先移除在文章底部的推荐版块。 <figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  if theme.post_pagination</span><br><span class="line">     include includes/pagination.pug</span><br><span class="line"><span class="deletion">- if theme.related_post &amp;&amp; theme.related_post.enable</span></span><br><span class="line"><span class="deletion">-   != related_posts(page,site.posts)</span></span><br><span class="line"></span><br><span class="line">  if page.comments !== false &amp;&amp; theme.comments &amp;&amp; theme.comments.use</span><br></pre></td></tr></table></figure></li><li>因为感觉文章也最新文章和推荐文章同时存在，最新文章就显得有点多余了，所以我把最新文章的侧栏卡片注释了，修改<code>[Blogroot]\themes\butterfly\layout\includes\widget\index.pug</code> <figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#aside-content.aside-content</span><br><span class="line">  //- post</span><br><span class="line">  if is_post()</span><br><span class="line">    if showToc &amp;&amp; theme.toc.style_simple</span><br><span class="line">      .sticky_layout</span><br><span class="line">        include ./card_post_toc.pug</span><br><span class="line">    else</span><br><span class="line">      !=partial(&#x27;includes/custom/SAO_card_player&#x27;, &#123;&#125;, &#123;cache:theme.fragment_cache&#125;)</span><br><span class="line">      !=partial(&#x27;includes/widget/card_announcement&#x27;, &#123;&#125;, &#123;cache:theme.fragment_cache&#125;)</span><br><span class="line">      !=partial(&#x27;includes/widget/card_top_self&#x27;, &#123;&#125;, &#123;cache:theme.fragment_cache&#125;)</span><br><span class="line">      .sticky_layout</span><br><span class="line">        if showToc</span><br><span class="line">          include ./card_post_toc.pug</span><br><span class="line"><span class="addition">+       if theme.related_post &amp;&amp; theme.related_post.enable</span></span><br><span class="line"><span class="addition">+         != related_posts(page,site.posts)</span></span><br><span class="line"><span class="deletion">-       - !=partial(&#x27;includes/widget/card_recent_post&#x27;, &#123;&#125;, &#123;cache:theme.fragment_cache&#125;)</span></span><br><span class="line"><span class="addition">+       //- !=partial(&#x27;includes/widget/card_recent_post&#x27;, &#123;&#125;, &#123;cache:theme.fragment_cache&#125;)</span></span><br><span class="line">        !=partial(&#x27;includes/widget/card_ad&#x27;, &#123;&#125;, &#123;cache:theme.fragment_cache&#125;)</span><br></pre></td></tr></table></figure></li></ol><div class="note blue no-icon flat"><p>改动以后，是将推荐版块放到了侧栏卡片，所以如果要想看到相关推荐侧栏卡片，至少需要满足以下几个条件：</p><ol><li>关闭了<code>style_simple</code>,这样才不至于在文章页只能看到一个目录卡片。</li><li>当前文章有相同tag的文章可推荐。如果没有相同tag的文章，自然不存在可以推荐的内容，也就不会生成相关推荐版块。</li><li>开启了<code>related_post</code>配置项，推荐都没开的话就别指望有相关推荐版块了吧。</li></ol></div>              </div>            </details><h2 id="gitcalendar"><a class="markdownIt-Anchor" href="#gitcalendar"></a> Gitcalendar</h2><details class="folding-tag" cyan><summary> 点击查看Gitcalendar引入教程 </summary>              <div class='content'>              <ol><li><p>安装插件,在博客根目录<code>[Blogroot]</code>下打开终端，运行以下指令：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-filter-gitcalendar --save</span><br></pre></td></tr></table></figure></li><li><p>在<code>[Blogroot]\_config.butterfly.yml</code>中添加<code>gitcalendar</code>配置项</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo-filter-gitcalendar</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/1f9c68c9/</span></span><br><span class="line"><span class="attr">gitcalendar:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开关</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span> <span class="comment">#过滤器优先权</span></span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">/</span> <span class="comment"># 应用页面</span></span><br><span class="line">  <span class="comment"># butterfly挂载容器</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="comment"># 挂载容器类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">id</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">recent-posts</span></span><br><span class="line">    <span class="attr">index:</span> <span class="number">0</span></span><br><span class="line">  <span class="comment"># volantis挂载容器</span></span><br><span class="line">  <span class="comment"># layout:</span></span><br><span class="line">  <span class="comment">#   type: class</span></span><br><span class="line">  <span class="comment">#   name: l_main</span></span><br><span class="line">  <span class="comment">#   index: 0</span></span><br><span class="line">  <span class="comment"># matery挂载容器</span></span><br><span class="line">  <span class="comment"># layout:</span></span><br><span class="line">  <span class="comment">#   type: id</span></span><br><span class="line">  <span class="comment">#   name: indexCard</span></span><br><span class="line">  <span class="comment">#   index: 0</span></span><br><span class="line">  <span class="comment"># mengd挂载容器</span></span><br><span class="line">  <span class="comment"># layout:</span></span><br><span class="line">  <span class="comment">#   type: class</span></span><br><span class="line">  <span class="comment">#   name: content</span></span><br><span class="line">  <span class="comment">#   index: 0</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">Akilarlxh</span> <span class="comment">#git用户名</span></span><br><span class="line">  <span class="attr">apiurl:</span> <span class="string">&#x27;https://gitcalendar.akilar.top&#x27;</span></span><br><span class="line">  <span class="attr">minheight:</span></span><br><span class="line">    <span class="attr">pc:</span> <span class="string">280px</span> <span class="comment">#桌面端最小高度</span></span><br><span class="line">    <span class="attr">mibile:</span> <span class="string">0px</span> <span class="comment">#移动端最小高度</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">&quot;[&#x27;#e4dfd7&#x27;, &#x27;#f9f4dc&#x27;, &#x27;#f7e8aa&#x27;, &#x27;#f7e8aa&#x27;, &#x27;#f8df72&#x27;, &#x27;#fcd217&#x27;, &#x27;#fcc515&#x27;, &#x27;#f28e16&#x27;, &#x27;#fb8b05&#x27;, &#x27;#d85916&#x27;, &#x27;#f43e06&#x27;]&quot;</span> <span class="comment">#橘黄色调</span></span><br><span class="line">  <span class="comment"># color: &quot;[&#x27;#ebedf0&#x27;, &#x27;#fdcdec&#x27;, &#x27;#fc9bd9&#x27;, &#x27;#fa6ac5&#x27;, &#x27;#f838b2&#x27;, &#x27;#f5089f&#x27;, &#x27;#c4067e&#x27;, &#x27;#92055e&#x27;, &#x27;#540336&#x27;, &#x27;#48022f&#x27;, &#x27;#30021f&#x27;]&quot; #浅紫色调</span></span><br><span class="line">  <span class="comment"># color: &quot;[&#x27;#ebedf0&#x27;, &#x27;#f0fff4&#x27;, &#x27;#dcffe4&#x27;, &#x27;#bef5cb&#x27;, &#x27;#85e89d&#x27;, &#x27;#34d058&#x27;, &#x27;#28a745&#x27;, &#x27;#22863a&#x27;, &#x27;#176f2c&#x27;, &#x27;#165c26&#x27;, &#x27;#144620&#x27;]&quot; #翠绿色调</span></span><br><span class="line">  <span class="comment"># color: &quot;[&#x27;#ebedf0&#x27;, &#x27;#f1f8ff&#x27;, &#x27;#dbedff&#x27;, &#x27;#c8e1ff&#x27;, &#x27;#79b8ff&#x27;, &#x27;#2188ff&#x27;, &#x27;#0366d6&#x27;, &#x27;#005cc5&#x27;, &#x27;#044289&#x27;, &#x27;#032f62&#x27;, &#x27;#05264c&#x27;]&quot; #天青色调</span></span><br><span class="line">  <span class="attr">container:</span> <span class="string">.recent-post-item(style=&#x27;width:100%;height:auto;padding:10px;&#x27;)</span> <span class="comment">#父元素容器，需要使用pug语法</span></span><br><span class="line">  <span class="attr">gitcalendar_css:</span> <span class="string">https://npm.elemecdn.com/hexo-filter-gitcalendar/lib/gitcalendar.css</span></span><br><span class="line">  <span class="attr">gitcalendar_js:</span> <span class="string">https://npm.elemecdn.com/hexo-filter-gitcalendar/lib/gitcalendar.js</span></span><br></pre></td></tr></table></figure></li><li><p>参数释义</p></li></ol><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">备选值/类型</th><th style="text-align:left">释义</th></tr></thead><tbody><tr><td style="text-align:center">priority</td><td style="text-align:center">number</td><td style="text-align:left">【可选】过滤器优先级，数值越小，执行越早，默认为10，选填</td></tr><tr><td style="text-align:center">enable</td><td style="text-align:center">true/false</td><td style="text-align:left">【必选】控制开关</td></tr><tr><td style="text-align:center">enable_page</td><td style="text-align:center">path/all</td><td style="text-align:left">【可选】填写想要应用的页面的相对路径（即路由地址）,如根目录就填’/‘,分类页面就填’/categories/‘。若要应用于所有页面，就填’all’，默认为’/‘</td></tr><tr><td style="text-align:center">layout.type</td><td style="text-align:center">id/class</td><td style="text-align:left">【可选】挂载容器类型，填写id或class，不填则默认为id</td></tr><tr><td style="text-align:center"><a href="http://layout.name">layout.name</a></td><td style="text-align:center">text</td><td style="text-align:left">【必选】挂载容器名称</td></tr><tr><td style="text-align:center">layout.index</td><td style="text-align:center">0和正整数</td><td style="text-align:left">【可选】前提是layout.type为class，因为同一页面可能有多个class，此项用来确认究竟排在第几个顺位</td></tr><tr><td style="text-align:center">user</td><td style="text-align:center">text</td><td style="text-align:left">【必选】git用户名</td></tr><tr><td style="text-align:center">apiurl</td><td style="text-align:center">url</td><td style="text-align:left">【可选】默认使用提供文档提供的api，但还是建议自建api，参考教程：<a href="https://akilar.top/posts/1f9c68c9/#%E8%87%AA%E5%BB%BAAPI%E9%83%A8%E7%BD%B2">自建API部署</a></td></tr><tr><td style="text-align:center">minheight.pc</td><td style="text-align:center">280px</td><td style="text-align:left">【可选】桌面端最小高度，默认为280px</td></tr><tr><td style="text-align:center">minheight.mobile</td><td style="text-align:center">0px</td><td style="text-align:left">【可选】移动端最小高度，默认为0px</td></tr><tr><td style="text-align:center">color</td><td style="text-align:center">list</td><td style="text-align:left">【可选】一个包含11个色值的数组，文档给出了四款预设值</td></tr><tr><td style="text-align:center">container</td><td style="text-align:center">pug</td><td style="text-align:left">【可选】预留的父元素容器，用以适配多主题，需要用pug语法填写，目前已适配<code>butterfly</code>，<code>volantis</code>，<code>matery</code>，<code>mengd</code>主题，这四个主题，插件会自自动识别<code>_config.yml</code>内填写的<code>theme</code>配置项。其余主题需要自己填写父元素容器。</td></tr><tr><td style="text-align:center">gitcalendar_css</td><td style="text-align:center">URL</td><td style="text-align:left">【可选】自定义CSS样式链接</td></tr><tr><td style="text-align:center">gitcalendar_js</td><td style="text-align:center">URL</td><td style="text-align:left">【可选】自定义js链接</td></tr></tbody></table>              </div>            </details><h2 id="引入waline评论"><a class="markdownIt-Anchor" href="#引入waline评论"></a> 引入Waline评论</h2><details class="folding-tag" cyan><summary> 点击查看Waline引入教程 </summary>              <div class='content'>              <div class="tag link"><a class="link-card" title="Waline教程" href="https://waline.js.org/guide/get-started.html"><div class="left"><img src="https://pic.imgdb.cn/item/62e5fc9cf54cd3f937eb99fe.jpg"/></div><div class="right"><p class="text">Waline教程</p><p class="url">https://waline.js.org/guide/get-started.html</p></div></a></div><div class="tag link"><a class="link-card" title="Waline + 去不图床" href="https://waline.js.org/guide/get-started.html"><div class="left"><img src="https://pic.imgdb.cn/item/62e8f47516f2c2beb10089f3.jpg"/></div><div class="right"><p class="text">Waline + 去不图床</p><p class="url">https://waline.js.org/guide/get-started.html</p></div></a></div><div class="tag link"><a class="link-card" title="Hexo教程" href="hhttps://butterfly.js.org/posts/ceeb73f/#%E8%A9%95%E8%AB%96"><div class="left"><img src="https://pic.imgdb.cn/item/62edf7448c61dc3b8ec6991d.jpg"/></div><div class="right"><p class="text">Hexo教程</p><p class="url">hhttps://butterfly.js.org/posts/ceeb73f/#%E8%A9%95%E8%AB%96</p></div></a></div><ol><li>在<a href="https://console.leancloud.app/">LeanCloud</a>中创建数据库</li><li>在<a href="https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fwalinejs%2Fwaline%2Ftree%2Fmain%2Fexample">Vercel</a>部署服务端</li><li>修改<code>[Blogroot]\themes\butterfly\layout\includes\third-praty\comments\waline.pug</code></li></ol>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">- const &#123; serverURL, option, pageview &#125; = theme.waline</span><br><span class="line">- const &#123; lazyload, count, use &#125; = theme.comments</span><br><span class="line"></span><br><span class="line">script.</span><br><span class="line">  function loadWaline () &#123;</span><br><span class="line">    function insertCSS () &#123;</span><br><span class="line">      const link = document.createElement(&quot;link&quot;)</span><br><span class="line">      link.rel = &quot;stylesheet&quot;</span><br><span class="line">      link.href = &quot;!&#123;url_for(theme.asset.waline_css)&#125;&quot;</span><br><span class="line">      document.head.appendChild(link)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function initWaline () &#123;</span><br><span class="line">      const waline = Waline.init(Object.assign(&#123;</span><br><span class="line">        el: &#x27;#waline-wrap&#x27;,</span><br><span class="line">        serverURL: &#x27;!&#123;serverURL&#125;&#x27;,</span><br><span class="line">        pageview: !&#123;lazyload ? false : pageview&#125;,</span><br><span class="line">        dark: &#x27;html[data-theme=&quot;dark&quot;]&#x27;,</span><br><span class="line">        path: window.location.pathname,</span><br><span class="line">        comment: !&#123;lazyload ? false : count&#125;,</span><br><span class="line">        imageUploader: function (file) &#123;</span><br><span class="line">          let formData = new FormData()</span><br><span class="line">          let headers = new Headers()</span><br><span class="line"></span><br><span class="line">          formData.append(&#x27;file&#x27;, file)</span><br><span class="line">          headers.append(&#x27;Authorization&#x27;, &#x27;Bearer 210|&lt;此处填你的token&gt;&#x27;)</span><br><span class="line">          headers.append(&#x27;Accept&#x27;, &#x27;application/json&#x27;)</span><br><span class="line"></span><br><span class="line">          return fetch(&#x27;https://7bu.top/api/v1/upload&#x27;, &#123;</span><br><span class="line">            method: &#x27;POST&#x27;,</span><br><span class="line">            headers: headers,</span><br><span class="line">            body: formData,</span><br><span class="line">          &#125;)</span><br><span class="line">            .then((resp) =&gt; resp.json())</span><br><span class="line">            .then((resp) =&gt; resp.data.links.url);</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;, !&#123;JSON.stringify(option)&#125;))</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (typeof Waline === &#x27;function&#x27;) initWaline()</span><br><span class="line">    else &#123;</span><br><span class="line">      insertCSS()</span><br><span class="line">      getScript(&#x27;!&#123;url_for(theme.asset.waline_js)&#125;&#x27;).then(initWaline)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  if (&#x27;!&#123;use[0]&#125;&#x27; === &#x27;Waline&#x27; || !!&#123;lazyload&#125;) &#123;</span><br><span class="line">    if (!&#123;lazyload&#125;) btf.loadComment(document.getElementById(&#x27;waline-wrap&#x27;),loadWaline)</span><br><span class="line">    else setTimeout(loadWaline, 0)</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    function loadOtherComment () &#123;</span><br><span class="line">      loadWaline()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>              </div>            </details><h2 id="引入twikoo评论"><a class="markdownIt-Anchor" href="#引入twikoo评论"></a> 引入Twikoo评论</h2><details class="folding-tag" cyan><summary> 点击查看Twikoo引入教程 </summary>              <div class='content'>              <div class="tag link"><a class="link-card" title="Twikoo官方教程" href="https://twikoo.js.org/quick-start.html#vercel-%E9%83%A8%E7%BD%B2"><div class="left"><img src="https://pic.imgdb.cn/item/62edf8728c61dc3b8ecbe8a1.png"/></div><div class="right"><p class="text">Twikoo官方教程</p><p class="url">https://twikoo.js.org/quick-start.html#vercel-%E9%83%A8%E7%BD%B2</p></div></a></div>              </div>            </details><h2 id="twikoo评论块气泡风格美化"><a class="markdownIt-Anchor" href="#twikoo评论块气泡风格美化"></a> twikoo评论块气泡风格美化</h2><details class="folding-tag" cyan><summary> 点击查看twikoo评论块气泡风格美化教程 </summary>              <div class='content'>              <ol><li>新建<code>[Blogroot]\themes\butterfly\source\css\_custom\twikoo_beautify.css</code>，添加以下内容<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 自定义twikoo评论输入框高度 */</span></span><br><span class="line"><span class="selector-class">.tk-input</span><span class="selector-attr">[data-v-619b4c52]</span> <span class="selector-class">.el-textarea__inner</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">130px</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 输入评论时自动隐藏输入框背景图片 */</span></span><br><span class="line"><span class="selector-class">.tk-input</span><span class="selector-attr">[data-v-619b4c52]</span> <span class="selector-class">.el-textarea__inner</span><span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line">  <span class="attribute">background-image</span>: none <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 调整楼中楼样式 ，整体左移，贴合气泡化效果 */</span></span><br><span class="line"><span class="selector-class">.tk-replies</span> &#123;</span><br><span class="line">  <span class="attribute">left</span>: -<span class="number">70px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">100%</span> + <span class="number">70px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 头像宽度调整 rem单位与全局字体大小挂钩，需配合自己情况调整大小以保证头像显示完整*/</span></span><br><span class="line"><span class="selector-class">.tk-replies</span> <span class="selector-class">.tk-avatar</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">2.5rem</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">2.5rem</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tk-replies</span> <span class="selector-class">.tk-avatar</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">2.5rem</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">2.5rem</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 回复框左移，避免窄屏时出框 */</span></span><br><span class="line"><span class="selector-class">.tk-comments-container</span> <span class="selector-class">.tk-submit</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">left</span>: -<span class="number">70px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 评论块气泡化修改 */</span></span><br><span class="line"><span class="selector-class">.tk-content</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>( <span class="number">135deg</span>, <span class="number">#ABDCFF</span> <span class="number">10%</span>, <span class="number">#0396FF</span> <span class="number">100%</span>); <span class="comment">/*默认模式访客气泡配色*/</span></span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>; <span class="comment">/*默认模式访客气泡字体配色*/</span></span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">16px</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">width</span>: fit-content;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: visible <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">max-height</span>: none <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 修复图片出框 */</span></span><br><span class="line"><span class="selector-class">.tk-content</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">100%</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 修复过长文本出框 */</span></span><br><span class="line"><span class="selector-class">.tk-content</span> pre &#123;</span><br><span class="line">  <span class="attribute">white-space</span>: pre-wrap;</span><br><span class="line">  <span class="attribute">word-wrap</span>: break-word;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tk-content</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#eeecaa</span>; <span class="comment">/*默认模式超链接配色*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tk-content</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">left</span>: -<span class="number">13px</span>;</span><br><span class="line">  <span class="attribute">border-top</span>: <span class="number">2px</span> solid transparent;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">20px</span> solid transparent;</span><br><span class="line">  <span class="attribute">border-right</span>: <span class="number">15px</span> solid <span class="number">#00a6ff</span>; <span class="comment">/*默认模式访客气泡小三角配色*/</span></span><br><span class="line">  <span class="attribute">border-left</span>: <span class="number">0px</span> solid transparent;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tk-master</span> <span class="selector-class">.tk-content</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>( <span class="number">135deg</span>, <span class="number">#FAD7A1</span> <span class="number">10%</span>, <span class="number">#E96D71</span> <span class="number">100%</span>);<span class="comment">/*默认模式博主气泡配色*/</span></span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>; <span class="comment">/*默认模式博主气泡字体配色*/</span></span><br><span class="line">  <span class="attribute">width</span>: fit-content;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tk-master</span> <span class="selector-class">.tk-content</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#eeecaa</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tk-master</span> <span class="selector-class">.tk-content</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">left</span>: -<span class="number">13px</span>;</span><br><span class="line">  <span class="attribute">border-top</span>: <span class="number">2px</span> solid transparent;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">20px</span> solid transparent;</span><br><span class="line">  <span class="attribute">border-right</span>: <span class="number">15px</span> solid <span class="number">#ff8080</span>; <span class="comment">/*默认模式博主气泡小三角配色*/</span></span><br><span class="line">  <span class="attribute">border-left</span>: <span class="number">0px</span> solid transparent;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tk-row</span><span class="selector-attr">[data-v-d82ce9a0]</span> &#123;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">width</span>: fit-content;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tk-avatar</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 夜间模式配色，具体比照上方默认模式class */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.tk-content</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>( <span class="number">135deg</span>, <span class="number">#6B73FF</span> <span class="number">10%</span>, <span class="number">#000DFF</span> <span class="number">100%</span>);</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.tk-content</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#dfa036</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.tk-content</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">border-right</span>: <span class="number">15px</span> solid <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.tk-master</span> <span class="selector-class">.tk-content</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>( <span class="number">135deg</span>, <span class="number">#FAB2FF</span> <span class="number">10%</span>, <span class="number">#1904E5</span> <span class="number">100%</span>);;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.tk-master</span> <span class="selector-class">.tk-content</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#dfa036</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.tk-master</span> <span class="selector-class">.tk-content</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">border-top</span>: <span class="number">2px</span> solid transparent;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">20px</span> solid transparent;</span><br><span class="line">  <span class="attribute">border-right</span>: <span class="number">15px</span> solid <span class="number">#000</span>;</span><br><span class="line">  <span class="attribute">border-left</span>: <span class="number">0px</span> solid transparent;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 自适应内容 */</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">1024px</span>) &#123;</span><br><span class="line">  <span class="comment">/* 设置宽度上限，避免挤压博主头像 */</span></span><br><span class="line">  <span class="selector-class">.tk-content</span> &#123;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">75%</span>;</span><br><span class="line">    <span class="attribute">width</span>: fit-content;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.tk-master</span> <span class="selector-class">.tk-content</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">75%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.tk-master</span> <span class="selector-class">.tk-content</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">15px</span> solid <span class="number">#ff8080</span>;</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">0px</span> solid transparent;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.tk-master</span> <span class="selector-class">.tk-avatar</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">left</span>: <span class="built_in">calc</span>(<span class="number">75%</span> + <span class="number">70px</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.tk-master</span> <span class="selector-class">.tk-row</span><span class="selector-attr">[data-v-d82ce9a0]</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="built_in">calc</span>(<span class="number">75%</span> - <span class="number">230px</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.tk-master</span> <span class="selector-class">.tk-content</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">15px</span> solid <span class="number">#000</span>;</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">0px</span> solid transparent;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设备名称常态隐藏，悬停评论时显示 */</span></span><br><span class="line"><span class="selector-class">.tk-extras</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  -ms-<span class="attribute">filter</span>: <span class="string">&quot;progid:DXImageTransform.Microsoft.Alpha(Opacity=0)&quot;</span>;</span><br><span class="line">  <span class="attribute">filter</span>: <span class="built_in">alpha</span>(opacity=<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tk-content</span><span class="selector-pseudo">:hover</span> + <span class="selector-class">.tk-extras</span> &#123;</span><br><span class="line">  -webkit-<span class="attribute">animation</span>: tk-extras-fadeIn <span class="number">0.5s</span> linear;</span><br><span class="line">  -moz-<span class="attribute">animation</span>: tk-extras-fadeIn <span class="number">0.5s</span> linear;</span><br><span class="line">  -o-<span class="attribute">animation</span>: tk-extras-fadeIn <span class="number">0.5s</span> linear;</span><br><span class="line">  -ms-<span class="attribute">animation</span>: tk-extras-fadeIn <span class="number">0.5s</span> linear;</span><br><span class="line">  <span class="attribute">animation</span>: tk-extras-fadeIn <span class="number">0.5s</span> linear;</span><br><span class="line">  -webkit-<span class="attribute">animation-fill-mode</span>: forwards;</span><br><span class="line">  -moz-<span class="attribute">animation-fill-mode</span>: forwards;</span><br><span class="line">  -o-<span class="attribute">animation-fill-mode</span>: forwards;</span><br><span class="line">  -ms-<span class="attribute">animation-fill-mode</span>: forwards;</span><br><span class="line">  <span class="attribute">animation-fill-mode</span>: forwards;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-moz-keyframes</span> tk-extras-fadeIn &#123;</span><br><span class="line">  <span class="selector-tag">from</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">    -ms-<span class="attribute">filter</span>: <span class="string">&quot;progid:DXImageTransform.Microsoft.Alpha(Opacity=0)&quot;</span>;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">alpha</span>(opacity=<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">to</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">    -ms-<span class="attribute">filter</span>: none;</span><br><span class="line">    <span class="attribute">filter</span>: none;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> tk-extras-fadeIn &#123;</span><br><span class="line">  <span class="selector-tag">from</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">    -ms-<span class="attribute">filter</span>: <span class="string">&quot;progid:DXImageTransform.Microsoft.Alpha(Opacity=0)&quot;</span>;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">alpha</span>(opacity=<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">to</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">    -ms-<span class="attribute">filter</span>: none;</span><br><span class="line">    <span class="attribute">filter</span>: none;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-o-keyframes</span> tk-extras-fadeIn &#123;</span><br><span class="line">  <span class="selector-tag">from</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">    -ms-<span class="attribute">filter</span>: <span class="string">&quot;progid:DXImageTransform.Microsoft.Alpha(Opacity=0)&quot;</span>;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">alpha</span>(opacity=<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">to</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">    -ms-<span class="attribute">filter</span>: none;</span><br><span class="line">    <span class="attribute">filter</span>: none;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> tk-extras-fadeIn &#123;</span><br><span class="line">  <span class="selector-tag">from</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">    -ms-<span class="attribute">filter</span>: <span class="string">&quot;progid:DXImageTransform.Microsoft.Alpha(Opacity=0)&quot;</span>;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">alpha</span>(opacity=<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">to</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">    -ms-<span class="attribute">filter</span>: none;</span><br><span class="line">    <span class="attribute">filter</span>: none;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><h2 id="首页卡片修改"><a class="markdownIt-Anchor" href="#首页卡片修改"></a> 首页卡片修改</h2><details class="folding-tag" cyan><summary> 点击查看首页卡片修改教程 </summary>              <div class='content'>              <div class="tip warning"><p>样式配色因为采用了大量伪类，所以如果底色采用了半透明配色，可能因为卡片叠加加深导致接合边界非常明显的暴露出来。所以在配色上，不建议加半透明的。因为部分伪类的偏移量是靠计算得出的，为了尽量满足自适应效果，部分位置保留了5%左右的容差。所以在一些极端屏宽比下，还是会出现一些样式不完美问题。</p></div><ol><li>修改<code>[Blogroot]\themes\butterfly\layout\includes\mixins\post-ui.pug</code>，将整个文件的内容替换为以下代码。 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line">mixin postUI(posts)</span><br><span class="line">  each article , index in page.posts.data</span><br><span class="line">    .recent-post-item</span><br><span class="line">      -</span><br><span class="line">        let link = article.link || article.path</span><br><span class="line">        let title = article.title || _p(&#x27;no_title&#x27;)</span><br><span class="line">        const position = theme.cover.position</span><br><span class="line">        let leftOrRight = position === &#x27;both&#x27;</span><br><span class="line">          ? index%2 == 0 ? &#x27;left&#x27; : &#x27;right&#x27;</span><br><span class="line">          : position === &#x27;left&#x27; ? &#x27;left&#x27; : &#x27;right&#x27;</span><br><span class="line">        let post_cover = article.cover</span><br><span class="line">        let no_cover = article.cover === false || !theme.cover.index_enable ? &#x27;no-cover&#x27; : &#x27;&#x27;</span><br><span class="line">      -</span><br><span class="line">      .recent-post-content(class=leftOrRight)</span><br><span class="line">        a.article-content(href=url_for(link) title=subtitle)</span><br><span class="line">          //- Display the article introduction on homepage</span><br><span class="line">          case theme.index_post_content.method</span><br><span class="line">            when false</span><br><span class="line">              - break</span><br><span class="line">            when 1</span><br><span class="line">              .article-content-text!= article.description</span><br><span class="line">            when 2</span><br><span class="line">              if article.description</span><br><span class="line">                .article-content-text!= article.description</span><br><span class="line">              else</span><br><span class="line">                - const content = strip_html(article.content)</span><br><span class="line">                - let expert = content.substring(0, theme.index_post_content.length)</span><br><span class="line">                - content.length &gt; theme.index_post_content.length ? expert += &#x27; ...&#x27; : &#x27;&#x27;</span><br><span class="line">                .article-content-text!= expert</span><br><span class="line">            default</span><br><span class="line">              - const content = strip_html(article.content)</span><br><span class="line">              - let expert = content.substring(0, theme.index_post_content.length)</span><br><span class="line">              - content.length &gt; theme.index_post_content.length ? expert += &#x27; ...&#x27; : &#x27;&#x27;</span><br><span class="line">              .article-content-text!= expert</span><br><span class="line">        .recent-post-info</span><br><span class="line">          a.article-title(href=url_for(link) title=subtitle)</span><br><span class="line">            .article-title-link= title</span><br><span class="line">          .recent-post-meta</span><br><span class="line">            .article-meta-wrap</span><br><span class="line">              if (is_home() &amp;&amp; (article.top || article.sticky &gt; 0))</span><br><span class="line">                span.article-meta</span><br><span class="line">                  i.fas.fa-thumbtack.sticky</span><br><span class="line">                  span.sticky= _p(&#x27;sticky&#x27;)</span><br><span class="line">                  span.article-meta-separator |</span><br><span class="line">              if (theme.post_meta.page.date_type)</span><br><span class="line">                span.post-meta-date</span><br><span class="line">                  if (theme.post_meta.page.date_type === &#x27;both&#x27;)</span><br><span class="line">                    i.far.fa-calendar-alt</span><br><span class="line">                    span.article-meta-label=_p(&#x27;post.created&#x27;)</span><br><span class="line">                    time.post-meta-date-created(datetime=date_xml(article.date) title=_p(&#x27;post.created&#x27;) + &#x27; &#x27; + full_date(article.date))=date(article.date, config.date_format)</span><br><span class="line">                    span.article-meta-separator |</span><br><span class="line">                    i.fas.fa-history</span><br><span class="line">                    span.article-meta-label=_p(&#x27;post.updated&#x27;)</span><br><span class="line">                    time.post-meta-date-updated(datetime=date_xml(article.updated) title=_p(&#x27;post.updated&#x27;) + &#x27; &#x27; + full_date(article.updated))=date(article.updated, config.date_format)</span><br><span class="line">                  else</span><br><span class="line">                    - let data_type_updated = theme.post_meta.page.date_type === &#x27;updated&#x27;</span><br><span class="line">                    - let date_type = data_type_updated ? &#x27;updated&#x27; : &#x27;date&#x27;</span><br><span class="line">                    - let date_icon = data_type_updated ? &#x27;fas fa-history&#x27; :&#x27;far fa-calendar-alt&#x27;</span><br><span class="line">                    - let date_title = data_type_updated ? _p(&#x27;post.updated&#x27;) : _p(&#x27;post.created&#x27;)</span><br><span class="line">                    i(class=date_icon)</span><br><span class="line">                    span.article-meta-label=date_title</span><br><span class="line">                    time(datetime=date_xml(article[date_type]) title=date_title + &#x27; &#x27; + full_date(article[date_type]))=date(article[date_type], config.date_format)</span><br><span class="line">              if (theme.post_meta.page.categories &amp;&amp; article.categories.data.length &gt; 0)</span><br><span class="line">                span.article-meta</span><br><span class="line">                  span.article-meta-separator |</span><br><span class="line">                  i.fas.fa-inbox</span><br><span class="line">                  each item, index in article.categories.data</span><br><span class="line">                    a(href=url_for(item.path)).article-meta__categories #[=item.name]</span><br><span class="line">                    if (index &lt; article.categories.data.length - 1)</span><br><span class="line">                      i.fas.fa-angle-right.article-meta-link</span><br><span class="line">              if (theme.post_meta.page.tags &amp;&amp; article.tags.data.length &gt; 0)</span><br><span class="line">                span.article-meta.tags</span><br><span class="line">                  span.article-meta-separator |</span><br><span class="line">                  i.fas.fa-tag</span><br><span class="line">                  each item, index in article.tags.data</span><br><span class="line">                    a(href=url_for(item.path)).article-meta__tags #[=item.name]</span><br><span class="line">                    if (index &lt; article.tags.data.length - 1)</span><br><span class="line">                      span.article-meta-link #[=&#x27;•&#x27;]</span><br><span class="line"></span><br><span class="line">              mixin countBlockInIndex</span><br><span class="line">                - needLoadCountJs = true</span><br><span class="line">                span.article-meta</span><br><span class="line">                  span.article-meta-separator |</span><br><span class="line">                  i.fas.fa-comments</span><br><span class="line">                  if block</span><br><span class="line">                    block</span><br><span class="line">                  span.article-meta-label= &#x27; &#x27; + _p(&#x27;card_post_count&#x27;)</span><br><span class="line"></span><br><span class="line">              if theme.comments.card_post_count</span><br><span class="line">                case theme.comments.use[0]</span><br><span class="line">                  when &#x27;Disqus&#x27;</span><br><span class="line">                  when &#x27;Disqusjs&#x27;</span><br><span class="line">                    +countBlockInIndex</span><br><span class="line">                      a(href=full_url_for(link) + &#x27;#disqus_thread&#x27;)</span><br><span class="line">                  when &#x27;Valine&#x27;</span><br><span class="line">                    +countBlockInIndex</span><br><span class="line">                      a(href=url_for(link) + &#x27;#post-comment&#x27; itemprop=&quot;discussionUrl&quot;)</span><br><span class="line">                        span.valine-comment-count(data-xid=url_for(link) itemprop=&quot;commentCount&quot;)</span><br><span class="line">                  when &#x27;Waline&#x27;</span><br><span class="line">                    +countBlockInIndex</span><br><span class="line">                      a(href=url_for(link) + &#x27;#post-comment&#x27;)</span><br><span class="line">                        span.waline-comment-count(id=url_for(link))</span><br><span class="line">                  when &#x27;Twikoo&#x27;</span><br><span class="line">                    +countBlockInIndex</span><br><span class="line">                      a.twikoo-count(href=url_for(link) + &#x27;#post-comment&#x27;)</span><br><span class="line">                  when &#x27;Facebook Comments&#x27;</span><br><span class="line">                    +countBlockInIndex</span><br><span class="line">                      a(href=url_for(link) + &#x27;#post-comment&#x27;)</span><br><span class="line">                        span.fb-comments-count(data-href=urlNoIndex(article.permalink))</span><br><span class="line">        .recent-post-cover</span><br><span class="line">          img.article-cover(src=url_for(post_cover) onerror=`this.onerror=null;this.src=&#x27;`+ url_for(theme.error_img.post_page) + `&#x27;` alt=subtitle)</span><br><span class="line"></span><br><span class="line">    if theme.ad &amp;&amp; theme.ad.index</span><br><span class="line">      if (index + 1) % 3 == 0</span><br><span class="line">        .recent-post-item.ads-wrap!=theme.ad.index</span><br></pre></td></tr></table></figure></li><li>修改<code>[Blogroot]\themes\butterfly\source\css\_page\homepage.styl</code>，将整个文件的内容替换为以下代码。 <figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//default color:</span></span><br><span class="line"><span class="selector-pseudo">:root</span></span><br><span class="line">  <span class="attr">--recent-post-bgcolor</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.9</span>)</span><br><span class="line">  <span class="attr">--article-content-bgcolor</span>: <span class="number">#49b1f5</span></span><br><span class="line">  <span class="attr">--recent-post-triangle</span>: <span class="number">#fff</span></span><br><span class="line">  <span class="attr">--recent-post-cover-shadow</span>: <span class="number">#ffffff</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="attr">--recent-post-bgcolor</span>: <span class="built_in">rgba</span>(<span class="number">35</span>,<span class="number">35</span>,<span class="number">35</span>,<span class="number">0.5</span>)</span><br><span class="line">  <span class="attr">--article-content-bgcolor</span>: <span class="number">#99999a</span></span><br><span class="line">  <span class="attr">--recent-post-triangle</span>: <span class="number">#37e2dd</span></span><br><span class="line">  <span class="attr">--recent-post-cover-shadow</span>: <span class="number">#232323</span></span><br><span class="line"><span class="selector-class">.recent-posts</span></span><br><span class="line">  <span class="attribute">padding</span> <span class="number">0</span> <span class="number">15px</span> <span class="number">0</span> <span class="number">15px</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.recent-post-item</span></span><br><span class="line">    <span class="attribute">margin-bottom</span> <span class="number">15px</span></span><br><span class="line">    <span class="attribute">width</span> <span class="number">100%</span></span><br><span class="line">    <span class="attribute">background</span> <span class="built_in">var</span>(--recent-post-bgcolor)</span><br><span class="line">    <span class="attribute">overflow</span> hidden</span><br><span class="line">    <span class="attribute">border-radius</span> <span class="number">15px</span></span><br><span class="line">    <span class="selector-class">.recent-post-info</span></span><br><span class="line">      <span class="selector-class">.article-title-link</span></span><br><span class="line">        <span class="attribute">display</span> -webkit-box</span><br><span class="line">        -webkit-box-orient vertical</span><br><span class="line">        -webkit-line-clamp <span class="number">2</span></span><br><span class="line">        <span class="attribute">overflow</span> hidden</span><br><span class="line">    <span class="selector-class">.article-content</span></span><br><span class="line">      <span class="attribute">background</span> <span class="built_in">var</span>(--article-content-bgcolor)</span><br><span class="line">      <span class="attribute">position</span> relative</span><br><span class="line">      <span class="attribute">display</span> flex</span><br><span class="line">      <span class="attribute">align-items</span>: center;</span><br><span class="line">      <span class="attribute">justify-content</span>: center;</span><br><span class="line">      <span class="selector-class">.article-content-text</span></span><br><span class="line">        <span class="attribute">transition</span>: all .<span class="number">8s</span> <span class="built_in">cubic-bezier</span>(<span class="number">0.59</span>, <span class="number">0.01</span>, <span class="number">0.48</span>, <span class="number">1.17</span>)</span><br><span class="line">        <span class="attribute">display</span> -webkit-box</span><br><span class="line">        -webkit-box-orient vertical</span><br><span class="line">        -webkit-line-clamp <span class="number">4</span></span><br><span class="line">        <span class="attribute">text-overflow</span>: ellipsis</span><br><span class="line">        <span class="attribute">overflow</span> hidden</span><br><span class="line">        <span class="attribute">color</span> <span class="number">#fff</span></span><br><span class="line">        <span class="attribute">text-shadow</span>: <span class="number">1px</span> <span class="number">2px</span> <span class="number">3px</span> <span class="number">#000</span>;</span><br><span class="line">    <span class="selector-class">.recent-post-cover</span></span><br><span class="line">      <span class="attribute">position</span> relative</span><br><span class="line">      <span class="attribute">background</span> transparent</span><br><span class="line">      <span class="selector-tag">img</span></span><br><span class="line">        &amp;<span class="selector-class">.article-cover</span></span><br><span class="line">          <span class="attribute">height</span> <span class="number">100%</span></span><br><span class="line">          <span class="attribute">width</span> <span class="number">100%</span></span><br><span class="line">          <span class="attribute">object-fit</span> cover</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.recent-post-info</span></span><br><span class="line">      <span class="attribute">align-items</span> center</span><br><span class="line">      <span class="attribute">flex-direction</span> column</span><br><span class="line">      <span class="attribute">position</span> relative</span><br><span class="line">      <span class="attribute">background</span> <span class="built_in">var</span>(--recent-post-bgcolor)</span><br><span class="line">      <span class="attribute">display</span> flex</span><br><span class="line">      <span class="attribute">color</span> <span class="number">#000000</span></span><br><span class="line">      <span class="selector-class">.article-title</span></span><br><span class="line">        <span class="attribute">height</span> <span class="number">50%</span></span><br><span class="line">        <span class="attribute">font-size</span> <span class="number">24px</span></span><br><span class="line">        <span class="attribute">display</span>: flex</span><br><span class="line">        <span class="attribute">align-items</span>: center</span><br><span class="line">        <span class="attribute">justify-content</span>: flex-end</span><br><span class="line">        <span class="attribute">flex-direction</span>: column</span><br><span class="line">        <span class="selector-class">.article-title-link</span></span><br><span class="line">          <span class="attribute">color</span>: <span class="built_in">var</span>(--text-highlight-color)</span><br><span class="line">          <span class="attribute">transition</span>: all .<span class="number">2s</span> ease-in-out</span><br><span class="line">          <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">            <span class="attribute">color</span>: <span class="variable">$text</span>-hover</span><br><span class="line">      <span class="selector-class">.recent-post-meta</span></span><br><span class="line">        <span class="attribute">height</span> <span class="number">50%</span></span><br><span class="line">        <span class="attribute">display</span>: flex</span><br><span class="line">        <span class="attribute">align-items</span>: center</span><br><span class="line">        <span class="attribute">justify-content</span>: flex-start</span><br><span class="line">        <span class="attribute">flex-direction</span>: column</span><br><span class="line">      <span class="selector-class">.article-meta-wrap</span></span><br><span class="line">        <span class="attribute">font-size</span> <span class="number">12px</span></span><br><span class="line">        <span class="attribute">color</span> <span class="number">#969797</span></span><br><span class="line">        <span class="attribute">display</span>: -webkit-box;</span><br><span class="line">        -webkit-box-orient: vertical;</span><br><span class="line">        -webkit-line-clamp: <span class="number">3</span>;</span><br><span class="line">        <span class="attribute">overflow</span>: hidden;</span><br><span class="line">        <span class="selector-tag">a</span></span><br><span class="line">          <span class="attribute">color</span>: <span class="built_in">var</span>(--text-highlight-color)</span><br><span class="line">          <span class="attribute">transition</span>: all .<span class="number">2s</span> ease-in-out</span><br><span class="line">          <span class="attribute">color</span> <span class="number">#969797</span></span><br><span class="line">          <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">            <span class="attribute">color</span>: <span class="variable">$text</span>-hover</span><br><span class="line">    &amp;<span class="selector-class">.ads-wrap</span></span><br><span class="line">      <span class="attribute">display</span>: block <span class="meta">!important</span></span><br><span class="line">      <span class="attribute">height</span>: auto <span class="meta">!important</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>:<span class="number">600px</span>)</span><br><span class="line">  .recent-post-item</span><br><span class="line">    &amp;:<span class="attribute">hover</span></span><br><span class="line">      .recent-post-content</span><br><span class="line">        &amp;.both,</span><br><span class="line">        &amp;.right</span><br><span class="line">          transform translateX(<span class="number">21%</span>)</span><br><span class="line">          transition: all .<span class="number">8s</span> cubic-bezier(<span class="number">0.59</span>, <span class="number">0.01</span>, <span class="number">0.48</span>, <span class="number">1.17</span>)</span><br><span class="line">          &amp;::before</span><br><span class="line">            transition: all .<span class="number">8s</span> cubic-bezier(<span class="number">0.59</span>, <span class="number">0.01</span>, <span class="number">0.48</span>, <span class="number">1.17</span>)</span><br><span class="line">            left: <span class="number">50px</span>;</span><br><span class="line">          <span class="selector-class">.article-content-text</span></span><br><span class="line">            <span class="attribute">margin</span> <span class="number">20px</span> <span class="number">20px</span> <span class="number">20px</span> <span class="number">60px</span></span><br><span class="line">        &amp;<span class="selector-class">.left</span></span><br><span class="line">          <span class="attribute">transform</span> <span class="built_in">translateX</span>(-<span class="number">21%</span>)</span><br><span class="line">          <span class="attribute">transition</span>: all .<span class="number">8s</span> <span class="built_in">cubic-bezier</span>(<span class="number">0.59</span>, <span class="number">0.01</span>, <span class="number">0.48</span>, <span class="number">1.17</span>)</span><br><span class="line">          <span class="selector-pseudo">&amp;::before</span></span><br><span class="line">            <span class="attribute">transition</span>: all .<span class="number">8s</span> <span class="built_in">cubic-bezier</span>(<span class="number">0.59</span>, <span class="number">0.01</span>, <span class="number">0.48</span>, <span class="number">1.17</span>)</span><br><span class="line">            <span class="attribute">right</span>: <span class="number">50px</span>;</span><br><span class="line">          <span class="selector-class">.article-content-text</span></span><br><span class="line">            <span class="attribute">margin</span> <span class="number">20px</span> <span class="number">60px</span> <span class="number">20px</span> <span class="number">20px</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.recent-post-content</span></span><br><span class="line">      <span class="attribute">background</span> <span class="built_in">var</span>(--recent-post-bgcolor)</span><br><span class="line">      <span class="attribute">position</span> relative</span><br><span class="line">      <span class="attribute">height</span> <span class="number">200px</span></span><br><span class="line">      <span class="attribute">width</span> <span class="number">130%</span></span><br><span class="line">      <span class="attribute">z-index</span> <span class="number">0</span></span><br><span class="line">      <span class="attribute">display</span> flex</span><br><span class="line">      <span class="attribute">overflow</span> hidden</span><br><span class="line">      <span class="attribute">border</span> <span class="number">0px</span> solid</span><br><span class="line">      <span class="selector-pseudo">&amp;::before</span></span><br><span class="line">        <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">background</span>: transparent;</span><br><span class="line">        <span class="attribute">position</span>: absolute;</span><br><span class="line">        <span class="attribute">z-index</span>: <span class="number">3</span>;</span><br><span class="line">        <span class="attribute">top</span>: <span class="built_in">calc</span>(<span class="number">50%</span> - <span class="number">10px</span>);</span><br><span class="line">        <span class="attribute">border-top</span>: <span class="number">10px</span> solid transparent;</span><br><span class="line">        <span class="attribute">border-bottom</span>: <span class="number">10px</span> solid transparent;</span><br><span class="line">        <span class="attribute">transition</span>: all .<span class="number">5s</span> <span class="built_in">cubic-bezier</span>(<span class="number">0.59</span>, <span class="number">0.01</span>, <span class="number">0.48</span>, <span class="number">1.17</span>)</span><br><span class="line">      &amp;<span class="selector-class">.both</span>,</span><br><span class="line">      &amp;<span class="selector-class">.right</span></span><br><span class="line">        <span class="attribute">flex-direction</span>: row;</span><br><span class="line">        <span class="attribute">left</span> <span class="built_in">calc</span>(-<span class="number">23.07%</span> - <span class="number">41px</span>)</span><br><span class="line">        <span class="attribute">transition</span>: all .<span class="number">5s</span> <span class="built_in">cubic-bezier</span>(<span class="number">0.59</span>, <span class="number">0.01</span>, <span class="number">0.48</span>, <span class="number">1.17</span>)</span><br><span class="line">        <span class="selector-pseudo">&amp;::before</span></span><br><span class="line">          <span class="attribute">left</span>: <span class="built_in">calc</span>(<span class="number">23.07%</span> + <span class="number">40px</span>);</span><br><span class="line">          <span class="attribute">border-left</span>: <span class="number">6px</span> solid <span class="built_in">var</span>(--recent-post-triangle);</span><br><span class="line">        <span class="selector-class">.recent-post-info</span></span><br><span class="line">          <span class="selector-pseudo">&amp;::before</span></span><br><span class="line">            <span class="attribute">background</span> <span class="built_in">linear-gradient</span>(to right, <span class="built_in">var</span>(--recent-post-cover-shadow), transparent)</span><br><span class="line">            <span class="attribute">left</span> <span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">1px</span>)</span><br><span class="line">        <span class="selector-class">.article-content</span></span><br><span class="line">          <span class="selector-pseudo">&amp;::before</span></span><br><span class="line">            <span class="attribute">right</span> -<span class="number">59px</span></span><br><span class="line">            <span class="attribute">border-left</span> <span class="number">60px</span> solid <span class="built_in">var</span>(--article-content-bgcolor)</span><br><span class="line">        <span class="selector-class">.article-content-text</span></span><br><span class="line">          <span class="attribute">margin</span> <span class="number">20px</span> <span class="number">20px</span> <span class="number">20px</span> <span class="number">0px</span></span><br><span class="line">        <span class="selector-class">.article-title</span></span><br><span class="line">          <span class="attribute">padding</span> <span class="number">0px</span> <span class="number">30px</span> <span class="number">0px</span> <span class="number">70px</span></span><br><span class="line">        <span class="selector-class">.recent-post-meta</span></span><br><span class="line">          <span class="attribute">padding</span> <span class="number">0px</span> <span class="number">20px</span> <span class="number">0px</span> <span class="number">70px</span></span><br><span class="line">      &amp;<span class="selector-class">.left</span></span><br><span class="line">        <span class="attribute">flex-direction</span>: row-reverse;</span><br><span class="line">        <span class="attribute">right</span> <span class="number">9px</span></span><br><span class="line">        <span class="attribute">transition</span>: all .<span class="number">5s</span> <span class="built_in">cubic-bezier</span>(<span class="number">0.59</span>, <span class="number">0.01</span>, <span class="number">0.48</span>, <span class="number">1.17</span>)</span><br><span class="line">        <span class="selector-pseudo">&amp;::before</span></span><br><span class="line">          <span class="attribute">right</span>: <span class="built_in">calc</span>(<span class="number">23.07%</span> + <span class="number">40px</span>);</span><br><span class="line">          <span class="attribute">border-right</span>: <span class="number">6px</span> solid <span class="built_in">var</span>(--recent-post-triangle);</span><br><span class="line">        <span class="selector-class">.recent-post-info</span></span><br><span class="line">          <span class="selector-pseudo">&amp;::before</span></span><br><span class="line">            <span class="attribute">background</span> <span class="built_in">linear-gradient</span>(to left, <span class="built_in">var</span>(--recent-post-cover-shadow), transparent)</span><br><span class="line">            <span class="attribute">right</span> <span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">1px</span>)</span><br><span class="line">        <span class="selector-class">.article-content</span></span><br><span class="line">          <span class="selector-pseudo">&amp;::before</span></span><br><span class="line">            <span class="attribute">left</span> -<span class="number">59px</span></span><br><span class="line">            <span class="attribute">border-right</span> <span class="number">60px</span> solid <span class="built_in">var</span>(--article-content-bgcolor)</span><br><span class="line">        <span class="selector-class">.article-content-text</span></span><br><span class="line">          <span class="attribute">margin</span> <span class="number">20px</span> <span class="number">0px</span> <span class="number">20px</span> <span class="number">20px</span></span><br><span class="line">        <span class="selector-class">.article-title</span></span><br><span class="line">          <span class="attribute">padding</span> <span class="number">0px</span> <span class="number">70px</span> <span class="number">0px</span> <span class="number">30px</span></span><br><span class="line">        <span class="selector-class">.recent-post-meta</span></span><br><span class="line">          <span class="attribute">padding</span> <span class="number">0px</span> <span class="number">70px</span> <span class="number">0px</span> <span class="number">20px</span></span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.article-content</span></span><br><span class="line">      <span class="attribute">width</span> <span class="number">30%</span></span><br><span class="line">      <span class="attribute">height</span> <span class="number">200px</span></span><br><span class="line">      <span class="attribute">left</span> <span class="number">0</span></span><br><span class="line">      <span class="attribute">align-items</span> center</span><br><span class="line">      <span class="selector-pseudo">&amp;::before</span></span><br><span class="line">        <span class="attribute">content</span> <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="attribute">width</span> <span class="number">0</span></span><br><span class="line">        <span class="attribute">height</span> <span class="number">0</span></span><br><span class="line">        <span class="attribute">background</span> transparent</span><br><span class="line">        <span class="attribute">position</span> absolute</span><br><span class="line">        <span class="attribute">z-index</span> <span class="number">2</span></span><br><span class="line">        <span class="attribute">top</span> <span class="number">0</span></span><br><span class="line">        <span class="attribute">border-top</span> <span class="number">100px</span> solid transparent</span><br><span class="line">        <span class="attribute">border-bottom</span> <span class="number">100px</span> solid transparent</span><br><span class="line">    <span class="selector-class">.recent-post-info</span></span><br><span class="line">      <span class="attribute">width</span> <span class="number">60%</span></span><br><span class="line">      <span class="attribute">height</span> <span class="number">200px</span></span><br><span class="line">      <span class="selector-pseudo">&amp;::before</span></span><br><span class="line">        <span class="attribute">content</span> <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="attribute">width</span> <span class="number">200px</span></span><br><span class="line">        <span class="attribute">height</span> <span class="number">200px</span></span><br><span class="line">        <span class="attribute">position</span> absolute</span><br><span class="line">        <span class="attribute">z-index</span> <span class="number">1</span></span><br><span class="line">        <span class="attribute">top</span> <span class="number">0</span></span><br><span class="line">      <span class="selector-class">.recent-post-meta</span></span><br><span class="line">        &amp; &gt; <span class="selector-class">.article-meta-wrap</span></span><br><span class="line">          <span class="attribute">margin</span>: <span class="number">6px</span> <span class="number">0</span></span><br><span class="line">          <span class="attribute">color</span>: <span class="variable">$theme</span>-meta-color</span><br><span class="line">          <span class="attribute">font-size</span>: <span class="number">90%</span></span><br><span class="line"></span><br><span class="line">          &amp; &gt; <span class="selector-class">.post-meta-date</span></span><br><span class="line">            <span class="attribute">cursor</span>: default</span><br><span class="line"></span><br><span class="line">          <span class="selector-class">.sticky</span></span><br><span class="line">            <span class="attribute">color</span>: <span class="variable">$sticky</span>-color</span><br><span class="line"></span><br><span class="line">          <span class="selector-tag">i</span></span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">4px</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">          <span class="selector-class">.article-meta-label</span></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">hexo-config</span>(<span class="string">&#x27;post_meta.page.label&#x27;</span>)</span><br><span class="line">              <span class="attribute">padding-right</span>: <span class="number">4px</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">              <span class="attribute">display</span>: none</span><br><span class="line"></span><br><span class="line">          <span class="selector-class">.article-meta-separator</span></span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">6px</span></span><br><span class="line"></span><br><span class="line">          <span class="selector-class">.article-meta-link</span></span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">4px</span></span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span> <span class="built_in">hexo-config</span>(<span class="string">&#x27;post_meta.page.date_format&#x27;</span>) == <span class="string">&#x27;relative&#x27;</span></span><br><span class="line">            <span class="selector-tag">time</span></span><br><span class="line">              <span class="attribute">display</span>: none</span><br><span class="line"></span><br><span class="line">          <span class="selector-tag">a</span></span><br><span class="line">            <span class="attribute">color</span>: <span class="variable">$theme</span>-meta-color</span><br><span class="line"></span><br><span class="line">            <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">              <span class="attribute">color</span>: <span class="variable">$text</span>-hover</span><br><span class="line">              <span class="attribute">text-decoration</span>: underline</span><br><span class="line">    <span class="selector-class">.recent-post-cover</span></span><br><span class="line">      <span class="attribute">width</span> <span class="number">40%</span></span><br><span class="line">      <span class="attribute">height</span> <span class="number">200px</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>:<span class="number">600px</span>)</span><br><span class="line">  .recent-post-item</span><br><span class="line">    <span class="attribute">height</span> <span class="number">400px</span></span><br><span class="line">    .recent-post-content</span><br><span class="line">      display flex</span><br><span class="line">      flex-direction: column</span><br><span class="line">      <span class="attribute">height</span> <span class="number">400px</span></span><br><span class="line">      .article-content</span><br><span class="line">        pointer-events none</span><br><span class="line">        order: <span class="number">1</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">position</span>: absolute;</span><br><span class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">40px</span>);</span><br><span class="line">        <span class="attribute">z-index</span>: <span class="number">3</span>;</span><br><span class="line">        <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">22</span>,<span class="number">22</span>,<span class="number">22</span>,<span class="number">0.5</span>);</span><br><span class="line">        <span class="attribute">border-top-left-radius</span>: <span class="number">15px</span>;</span><br><span class="line">        <span class="attribute">border-top-right-radius</span>: <span class="number">15px</span>;</span><br><span class="line">        <span class="attribute">display</span>: none</span><br><span class="line">        <span class="attribute">opacity</span>: <span class="number">0</span></span><br><span class="line">        <span class="selector-class">.article-content-text</span></span><br><span class="line">          <span class="attribute">height</span> <span class="number">120px</span></span><br><span class="line">          <span class="attribute">color</span>: white;</span><br><span class="line">          <span class="attribute">width</span>: <span class="number">80%</span></span><br><span class="line"></span><br><span class="line">      <span class="selector-class">.recent-post-cover</span></span><br><span class="line">        <span class="attribute">order</span>: <span class="number">2</span></span><br><span class="line">        <span class="attribute">height</span> <span class="number">200px</span></span><br><span class="line">        <span class="attribute">transition</span>: all .<span class="number">5s</span></span><br><span class="line">      <span class="selector-class">.recent-post-info</span></span><br><span class="line">        <span class="attribute">order</span>: <span class="number">3</span></span><br><span class="line">        <span class="attribute">height</span> <span class="number">200px</span></span><br><span class="line">        <span class="selector-pseudo">&amp;::before</span></span><br><span class="line">          <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">          <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">          <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">          <span class="attribute">position</span>: absolute;</span><br><span class="line">          <span class="attribute">z-index</span>: <span class="number">3</span>;</span><br><span class="line">          <span class="attribute">bottom</span>: <span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">4px</span>);</span><br><span class="line">          <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">          <span class="attribute">border-bottom</span>: <span class="number">50px</span> solid <span class="built_in">var</span>(--recent-post-bgcolor);</span><br><span class="line">          <span class="attribute">border-right</span>: <span class="number">300px</span> solid transparent;</span><br><span class="line">        <span class="selector-pseudo">&amp;::after</span></span><br><span class="line">          <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">          <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">          <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">          <span class="attribute">position</span>: absolute;</span><br><span class="line">          <span class="attribute">z-index</span>: <span class="number">3</span>;</span><br><span class="line">          <span class="attribute">bottom</span>: <span class="built_in">calc</span>(<span class="number">100%</span> + <span class="number">150px</span>);</span><br><span class="line">          <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">          <span class="attribute">border-top</span>: <span class="number">50px</span> solid <span class="built_in">var</span>(--recent-post-bgcolor);</span><br><span class="line">          <span class="attribute">border-left</span>: <span class="number">300px</span> solid transparent;</span><br><span class="line">        <span class="selector-class">.article-title</span></span><br><span class="line">          <span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">35px</span> <span class="number">0px</span> <span class="number">35px</span></span><br><span class="line">        <span class="selector-class">.recent-post-meta</span></span><br><span class="line">          <span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">30px</span> <span class="number">0px</span> <span class="number">30px</span></span><br><span class="line">    <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">      <span class="selector-class">.article-content</span></span><br><span class="line">        <span class="attribute">display</span>: flex <span class="meta">!important</span>;</span><br><span class="line">        <span class="attribute">animation</span>: shutter-effect-content <span class="number">0.5s</span> <span class="number">2</span> forwards linear</span><br><span class="line">      <span class="selector-class">.recent-post-info</span></span><br><span class="line">        <span class="selector-pseudo">&amp;::before</span></span><br><span class="line">          <span class="attribute">animation</span>: shutter-effect-left <span class="number">0.5s</span> <span class="number">1</span> ease-in-out</span><br><span class="line">        <span class="selector-pseudo">&amp;::after</span></span><br><span class="line">          <span class="attribute">animation</span>: shutter-effect-right <span class="number">0.5s</span> <span class="number">1</span> ease-in-out</span><br><span class="line">      <span class="selector-class">.recent-post-cover</span></span><br><span class="line">        <span class="attribute">filter</span> <span class="built_in">blur</span>(<span class="number">2px</span>)</span><br><span class="line"><span class="keyword">@keyframes</span> shutter-effect-<span class="attribute">right</span>  &#123;</span><br><span class="line">  <span class="number">0%</span>&#123;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="built_in">calc</span>(<span class="number">100%</span> + <span class="number">150px</span>);</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">50px</span> solid <span class="built_in">var</span>(--recent-post-bgcolor);</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">300px</span> solid transparent;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span>&#123;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">200px</span> solid <span class="built_in">var</span>(--recent-post-bgcolor);</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">600px</span> solid transparent;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span>&#123;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="built_in">calc</span>(<span class="number">100%</span> + <span class="number">150px</span>);</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">50px</span> solid <span class="built_in">var</span>(--recent-post-bgcolor);</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">300px</span> solid transparent;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> shutter-effect-<span class="attribute">left</span>  &#123;</span><br><span class="line">  <span class="number">0%</span>&#123;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">4px</span>);</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">50px</span> solid <span class="built_in">var</span>(--recent-post-bgcolor);</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">300px</span> solid transparent;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span>&#123;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">4px</span>);</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">200px</span> solid <span class="built_in">var</span>(--recent-post-bgcolor);</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">600px</span> solid transparent;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span>&#123;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">4px</span>);</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">50px</span> solid <span class="built_in">var</span>(--recent-post-bgcolor);</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">300px</span> solid transparent;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> shutter-effect-<span class="attribute">content</span> &#123;</span><br><span class="line">  from &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line">  to &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><h2 id="使用gulp压缩博客静态资源"><a class="markdownIt-Anchor" href="#使用gulp压缩博客静态资源"></a> 使用gulp压缩博客静态资源</h2><details class="folding-tag" cyan><summary> 点击查看gulp压缩博客静态资源教程 </summary>              <div class='content'>              <ol><li>安装<code>Gulp</code>插件：在博客根目录<code>[Blogroot]</code>打开终端，输入： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install --global gulp-cli <span class="comment">#全局安装gulp指令集</span></span><br><span class="line">npm install gulp --save <span class="comment">#安装gulp插件</span></span><br></pre></td></tr></table></figure></li><li>安装各个下属插件以实现对各类静态资源的压缩</li></ol><ul><li>压缩HTML：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp-htmlclean --save-dev</span><br><span class="line">npm install gulp-html-minifier-terser --save-dev</span><br><span class="line"><span class="comment"># 用gulp-html-minifier-terser可以压缩HTML中的ES6语法</span></span><br></pre></td></tr></table></figure></li><li>压缩CSS：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp-clean-css --save-dev</span><br></pre></td></tr></table></figure></li><li>压缩JS<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp-terser --save-dev</span><br></pre></td></tr></table></figure></li><li>压缩字体包<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp-fontmin --save-dev</span><br></pre></td></tr></table></figure></li></ul><ol start="3"><li><p>为<code>Gulp</code>创建<code>gulpfile.js</code>任务脚本。在博客根目录<code>[Blogroot]</code>下新建<code>gulpfile.js</code>,打开<code>[Blogroot]\gulpfile.js</code>,输入以下内容：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">//用到的各个插件</span><br><span class="line">var gulp = require(<span class="string">&#x27;gulp&#x27;</span>);</span><br><span class="line">var cleanCSS = require(<span class="string">&#x27;gulp-clean-css&#x27;</span>);</span><br><span class="line">var htmlmin = require(<span class="string">&#x27;gulp-html-minifier-terser&#x27;</span>);</span><br><span class="line">var htmlclean = require(<span class="string">&#x27;gulp-htmlclean&#x27;</span>);</span><br><span class="line">var fontmin = require(<span class="string">&#x27;gulp-fontmin&#x27;</span>);</span><br><span class="line">// gulp-tester</span><br><span class="line">var terser = require(<span class="string">&#x27;gulp-terser&#x27;</span>);</span><br><span class="line">// 压缩js</span><br><span class="line">gulp.task(<span class="string">&#x27;compress&#x27;</span>, () =&gt;</span><br><span class="line">  gulp.src([<span class="string">&#x27;./public/**/*.js&#x27;</span>, <span class="string">&#x27;!./public/**/*.min.js&#x27;</span>])</span><br><span class="line">    .pipe(terser())</span><br><span class="line">    .pipe(gulp.dest(<span class="string">&#x27;./public&#x27;</span>))</span><br><span class="line">)</span><br><span class="line">//压缩css</span><br><span class="line">gulp.task(<span class="string">&#x27;minify-css&#x27;</span>, () =&gt; &#123;</span><br><span class="line">    <span class="built_in">return</span> gulp.src([<span class="string">&#x27;./public/**/*.css&#x27;</span>])</span><br><span class="line">        .pipe(cleanCSS(&#123;</span><br><span class="line">            compatibility: <span class="string">&#x27;ie11&#x27;</span></span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">&#x27;./public&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line">//压缩html</span><br><span class="line">gulp.task(<span class="string">&#x27;minify-html&#x27;</span>, () =&gt; &#123;</span><br><span class="line">    <span class="built_in">return</span> gulp.src(<span class="string">&#x27;./public/**/*.html&#x27;</span>)</span><br><span class="line">        .pipe(htmlclean())</span><br><span class="line">        .pipe(htmlmin(&#123;</span><br><span class="line">            removeComments: <span class="literal">true</span>, //清除html注释</span><br><span class="line">            collapseWhitespace: <span class="literal">true</span>, //压缩html</span><br><span class="line">            collapseBooleanAttributes: <span class="literal">true</span>,</span><br><span class="line">            //省略布尔属性的值，例如：&lt;input checked=<span class="string">&quot;true&quot;</span>/&gt; ==&gt; &lt;input /&gt;</span><br><span class="line">            removeEmptyAttributes: <span class="literal">true</span>,</span><br><span class="line">            //删除所有空格作属性值，例如：&lt;input <span class="built_in">id</span>=<span class="string">&quot;&quot;</span> /&gt; ==&gt; &lt;input /&gt;</span><br><span class="line">            removeScriptTypeAttributes: <span class="literal">true</span>,</span><br><span class="line">            //删除&lt;script&gt;的<span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span></span><br><span class="line">            removeStyleLinkTypeAttributes: <span class="literal">true</span>,</span><br><span class="line">            //删除&lt;style&gt;和&lt;<span class="built_in">link</span>&gt;的 <span class="built_in">type</span>=<span class="string">&quot;text/css&quot;</span></span><br><span class="line">            minifyJS: <span class="literal">true</span>, //压缩页面 JS</span><br><span class="line">            minifyCSS: <span class="literal">true</span>, //压缩页面 CSS</span><br><span class="line">            minifyURLs: <span class="literal">true</span>  //压缩页面URL</span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">&#x27;./public&#x27;</span>))</span><br><span class="line">&#125;);</span><br><span class="line">//压缩字体</span><br><span class="line"><span class="keyword">function</span> minifyFont(text, cb) &#123;</span><br><span class="line">  gulp</span><br><span class="line">    .src(<span class="string">&#x27;./public/fonts/*.ttf&#x27;</span>) //原字体所在目录</span><br><span class="line">    .pipe(fontmin(&#123;</span><br><span class="line">      text: text</span><br><span class="line">    &#125;))</span><br><span class="line">    .pipe(gulp.dest(<span class="string">&#x27;./public/fontsdest/&#x27;</span>)) //压缩后的输出目录</span><br><span class="line">    .on(<span class="string">&#x27;end&#x27;</span>, cb);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">&#x27;mini-font&#x27;</span>, (cb) =&gt; &#123;</span><br><span class="line">  var buffers = [];</span><br><span class="line">  gulp</span><br><span class="line">    .src([<span class="string">&#x27;./public/**/*.html&#x27;</span>]) //HTML文件所在目录请根据自身情况修改</span><br><span class="line">    .on(<span class="string">&#x27;data&#x27;</span>, <span class="keyword">function</span>(file) &#123;</span><br><span class="line">      buffers.push(file.contents);</span><br><span class="line">    &#125;)</span><br><span class="line">    .on(<span class="string">&#x27;end&#x27;</span>, <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">      var text = Buffer.concat(buffers).toString(<span class="string">&#x27;utf-8&#x27;</span>);</span><br><span class="line">      minifyFont(text, cb);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">// 运行gulp命令时依次执行以下任务</span><br><span class="line">gulp.task(<span class="string">&#x27;default&#x27;</span>, gulp.parallel(</span><br><span class="line">  <span class="string">&#x27;compress&#x27;</span>, <span class="string">&#x27;minify-css&#x27;</span>, <span class="string">&#x27;minify-html&#x27;</span>,<span class="string">&#x27;mini-font&#x27;</span></span><br><span class="line">))</span><br></pre></td></tr></table></figure></li><li><p>在每次运行完<code>hexo</code> <code>generate</code>生成静态页面后，运行<code>gulp</code>对其进行压缩。</p></li><li><p>关于<code>font-min</code>的补充说明，在本文中，是通过读取所有编译好的html文件（<code>./public/**/*.html</code>）中的字符，然后匹配原有字体包内<code>./public/fonts/*.ttf</code>字体样式，输出压缩后的字体包到<code>./public/fontsdest/</code>目录。所以最终引用字体的相对路径应该是<code>/fontsdest/*.ttf</code>。而本地测试时，如果没有运行<code>gulp</code>，自然也就不会输出压缩字体包到<code>public</code>目录，也就看不到字体样式。</p></li></ol>              </div>            </details><h2 id="渐变星空sky粒子背景特效"><a class="markdownIt-Anchor" href="#渐变星空sky粒子背景特效"></a> 渐变星空Sky粒子背景特效</h2><details class="folding-tag" cyan><summary> 点击查看渐变星空Sky粒子背景特效教程 </summary>              <div class='content'>              <div class="tag link"><a class="link-card" title="渐变星空Sky粒子背景特效" href="https://blog.xmwpro.com/post/8c8593e1.html/"><div class="left"><img src="https://pic.imgdb.cn/item/62edfc9a8c61dc3b8edd7816.jpg"/></div><div class="right"><p class="text">渐变星空Sky粒子背景特效</p><p class="url">https://blog.xmwpro.com/post/8c8593e1.html/</p></div></a></div>              </div>            </details><h2 id="信笺样式留言板"><a class="markdownIt-Anchor" href="#信笺样式留言板"></a> 信笺样式留言板</h2><details class="folding-tag" cyan><summary> 点击查看信笺样式留言板教程 </summary>              <div class='content'>              <ol><li>在<code>[Blogroot]</code>运行指令</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-envelope --save</span><br></pre></td></tr></table></figure><ol start="2"><li>在站点配置文件或者主题配置文件添加配置项（对，两者任一均可。但不要都写）</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># envelope_comment</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/e2d3c450/</span></span><br><span class="line"><span class="attr">envelope_comment:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#控制开关</span></span><br><span class="line">  <span class="attr">custom_pic:</span></span><br><span class="line">    <span class="attr">cover:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-envelope/lib/violet.jpg</span> <span class="comment">#信笺头部图片</span></span><br><span class="line">    <span class="attr">line:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-envelope/lib/line.png</span> <span class="comment">#信笺底部图片</span></span><br><span class="line">    <span class="attr">beforeimg:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-envelope/lib/before.png</span> <span class="comment"># 信封前半部分</span></span><br><span class="line">    <span class="attr">afterimg:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-envelope/lib/after.png</span> <span class="comment"># 信封后半部分</span></span><br><span class="line">  <span class="attr">message:</span> <span class="comment">#信笺正文，多行文本，写法如下</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">有什么想问的？</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">有什么想说的？</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">有什么想吐槽的？</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">哪怕是有什么想吃的，都可以告诉我哦~</span></span><br><span class="line">  <span class="attr">bottom:</span> <span class="string">自动书记人偶竭诚为您服务！</span> <span class="comment">#仅支持单行文本</span></span><br><span class="line">  <span class="attr">height:</span> <span class="comment">#1050px，信封划出的高度</span></span><br><span class="line">  <span class="attr">path:</span> <span class="comment">#【可选】comments 的路径名称。默认为 comments，生成的页面为 comments/index.html</span></span><br><span class="line">  <span class="attr">front_matter:</span> <span class="comment">#【可选】comments页面的 front_matter 配置</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">留言板</span></span><br><span class="line">    <span class="attr">comments:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>              </div>            </details>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库系统概论复习</title>
      <link href="/posts/e48b5902/"/>
      <url>/posts/e48b5902/</url>
      
        <content type="html"><![CDATA[<div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-blue"  style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"><p>完成进度</p></div></div><details class="folding-tag" cyan open><summary> 时间线 </summary>              <div class='content'>              <div class="timeline  blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>完成过程</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022-06-26</p></div></div><div class='timeline-item-content'><ol><li>优化绪论部分内容</li><li>增加绪论例题模块</li><li>增加评论区扩展功能</li><li>关系数据库理论提供百度网盘习题以及增加推理规则内容</li><li>修改部分tip</li><li>新增时间线版块和完成进度</li><li>新增习题</li><li>修改错误：关系数据库中关系操作的特点：数据操作是集合操作，操作对象和操作结果都是集合（之前写了关系）</li><li>修改错误：绪论中两级映像和数据独立性括号内逻辑独立性与物理独立性写反了，现已修正</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022-06-25</p></div></div><div class='timeline-item-content'><ol><li>数据库恢复技术章节内容</li><li>并发控制与封锁</li><li>考试题型</li><li>新增tip</li><li>优化页面布局和字体</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022-06-24</p></div></div><div class='timeline-item-content'><ol><li>绪论</li><li>关系数据库</li><li>SQL与T-SQL</li><li>数据库安全性</li><li>数据库完整性</li><li>关系数据理论</li><li>数据库设计概述</li></ol></div></div></div>              </div>            </details><h2 id="考试题型"><a class="markdownIt-Anchor" href="#考试题型"></a> 考试题型</h2><div class="tip warning"><p>单选题可以参考我们平时做的练习。SQL语句部分可以直接看SQL与T-SQL的部分，也可以看老师平时布置的实验题，我这里的也是摘自习题并进行了挑选，并附上自己的答案。T-SQL建议稍微过一下PPT，老师说不会刻意考，在触发器和存储过程中需要使用，会声明变量等基本操作即可。如果文章中存在问题，还请指出。绪论部分内容有例题，摘自百度文库，供大家参考。祝考试顺利！！！</p></div><details class="folding-tag" cyan><summary> 题型与分值 </summary>              <div class='content'>              <ol><li>单选（30）</li><li>简答（30）</li><li>SQL语句填空（20）</li><li>写SQL语句（20）</li></ol>              </div>            </details><h2 id="绪论"><a class="markdownIt-Anchor" href="#绪论"></a> 绪论</h2><div class="tip warning"><p>新增了E-R图的概念和表示方法，考试中可能会让你画图或者解释这些概念（个人猜测，我在百度文库中看到类似题目）</p></div><div class="note blue no-icon flat"><ol><li><p>数据库定义</p> <details class="folding-tag" cyan><summary> answer P4 </summary>           <div class='content'>           <ol><li>数据库（Database，简称DB）是长期储存在计算机内、有组织的、可共享的大量数据的集合。</li><li>数据库中的数据按一定的数据模型组织、描述和储存，具有较小的冗余度、较高的数据独立性和易扩展性，并可为各种用户共享。</li><li>具有永久存储、有组织和可共享三个基本特点。</li></ol>           </div>         </details></li><li><p>数据库管理系统</p> <details class="folding-tag" cyan><summary> answer P5 </summary>           <div class='content'>           <ol><li>数据库管理系统位于用户与操作系统之间的一层数据管理软件</li><li>是基础软件，是一个大型复杂的软件系统</li><li>科学地组织和存储数据、高效地获取和维护数据</li><li>主要功能：数据库定义功能；数据库的操纵功能；数据库保护功能；数据库维护功能；数据字典</li><li>数据库保护（控制）功能：数据安全性控制；数据完整性控制；并发控制；恢复功能</li></ol><p><img src="https://pic.imgdb.cn/item/62b559d509475431295580f3.png" alt="" /></p>           </div>         </details></li><li><p>数据库的特点</p> <details class="folding-tag" cyan><summary> answer P11 </summary>           <div class='content'>           <ol><li>数据结构化</li><li>数据的共享性高，冗余度低且易扩充</li><li>数据独立性高<ol><li>物理独立性</li><li>逻辑独立性</li></ol></li><li>数据由数据库管理系统统一管理和控制<ol><li>数据安全性控制</li><li>数据完整性控制</li><li>并发控制</li><li>恢复功能</li></ol></li></ol><p><img src="https://pic.imgdb.cn/item/62b559f6094754312955bf6c.png" alt="" /></p>           </div>         </details></li><li><p>概念模型</p> <details class="folding-tag" cyan><summary> answer P17 </summary>           <div class='content'>           <ol><li>实体：客观存在并可相互区别的事物</li><li>属性：实体所具有的某一特性</li><li>码：唯一标识实体的属性集</li><li>实体型：用实体名及其属性名集合来抽象和刻画同类实体</li><li>实体集：同一类型实体的集合</li><li>域：一组具有相同数据类型的值的集合</li></ol><p><img src="https://pic.imgdb.cn/item/62b55959094754312954b124.png" alt="" /></p>           </div>         </details></li><li><p>E-R模型三要素、联系的种类</p> <details class="folding-tag" cyan><summary> answer P216 </summary>           <div class='content'>           <ol><li>E-R模型三要素<ol><li>实体</li><li>属性</li><li>实体间的联系</li></ol></li><li>联系<ol><li>实体内部联系：各属性间联系</li><li>实体外部联系：不同实体集之间的联系</li></ol></li><li>实体间的联系<ol><li>一对一1:1</li><li>一对多1:n</li><li>多对多n:m</li><li>三实体型之间</li><li>单实体型内一对多的联系</li></ol></li><li>E-R图：提供了表示实体型、属性和联系的方法<ul><li>实体型：用矩形表示，矩形框内写明实体名。</li><li>属性：用椭圆形表示，并用无向边将其与相应的实体连接起来。</li><li>联系：用菱形表示，菱形框内写明联系名，并用无向边分别与有关实体连接起来，同时在无向边旁标上联系的类型。</li></ul></li></ol><p><img src="https://pic.imgdb.cn/item/62b554c109475431294a85c4.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b554df09475431294af96b.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b55977094754312954dd2e.png" alt="" /></p>           </div>         </details></li><li><p>数据模型三要素</p> <details class="folding-tag" cyan><summary> answer P18 </summary>           <div class='content'>           <ol><li>数据结构：描述数据库的组成对象，以及对象之间的联系</li><li>数据操作：对数据库中各种对象（型）的实例（值）允许执行的操作的集合，包括操作及有关的操作规则</li><li>数据的完整性约束条件：一组完整性规则的集合</li></ol><p><img src="https://pic.imgdb.cn/item/62b55a410947543129564af8.png" alt="" /></p>           </div>         </details></li><li><p>数据库系统三模式结构</p> <details class="folding-tag" cyan><summary> answer P28 </summary>           <div class='content'>           <ol><li>外模式：也称子模式或用户模式，是数据库用户（包括应用程序员和最终用户）能够看见和使用的局部数据的逻辑结构和特征的描述，是数据库用户的数据视图，是与某一应用有关的数据的逻辑表示。外模式是保证数据库安全性的一个有力措施，每个用户只能看见和访问所对应的外模式中的数据</li><li>模式：也称逻辑模式，是数据库中全体数据的逻辑结构和特征的描述，是所有用户的公共数据视图，一个数据库只有一个模式，是数据库的中心与关键，独立于数据库的其他层次，设计数据库模式结构时应首先确定数据库的逻辑模式</li><li>内模式：也称存储模式，是数据物理结构和存储方式的描述，是数据在数据库内部的表示方式，一个数据库只有一个内模式</li></ol><p><img src="https://pic.imgdb.cn/item/62b5550c09475431294ba48c.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b55ac60947543129570f64.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b55aee09475431295758ce.png" alt="" /></p>           </div>         </details> <details class="folding-tag" cyan><summary> 例题 </summary>           <div class='content'>           <ol><li>试述数据库系统三级模式结构，这种结构的优点是什么。<br />数据库系统的三级模式结构是指数据库系统是由外模式、模式和内模式三级构成。数据库系统的三级模式是对数据的三个抽象级别，它把数据的具体组织留给DBMS管理，使用户能逻辑地抽象地处理数据，而不必关心数据在计算机中的具体表示方式与存储方式。为了能够在内部实现这三个抽象层次的联系和转换，数据库管理系统在这三级模式之间提供了两层映象：外模式／模式映象；模式／内模式映象。正是这两层映象保证了数据库系统中的数据能够具有较高的逻辑独立性和物理独立性。</li></ol>           </div>         </details></li><li><p>两级映像和数据独立性</p> <details class="folding-tag" cyan><summary> answer P30 </summary>           <div class='content'>           <ol><li>外模式／模式映像（逻辑独立性）<br />当模式改变时，数据库管理员对外模式／模式映象作相应改变，使外模式保持不变，应用程序是依据数据的外模式编写的，应用程序不必修改。保证了数据与程序的逻辑独立性，简称数据的逻辑独立性</li><li>模式／内模式映像（物理独立性）<br />当数据库的存储结构改变了（例如选用了另一种存储结构），数据库管理员修改模式／内模式映象，使模式保持不变，应用程序不受影响。保证了数据与程序的物理独立性，简称数据的物理独立性。</li><li>数据与程序的独立性概念：<br />特定的应用程序是在外模式描述的数据结构上编制的，它依赖于特定的外模式，与数据库的模式和存储结构独立。数据库的二级映像保证了数据库外模式的稳定性，从底层保证了应用程序的稳定性，除非应用需求本身发生变化，否则应用程序一般不需要修改</li><li>数据与程序之间的独立性，使得数据的定义和描述可以从应用程序中分离出去。数据的存取由数据库管理系统管理，简化了应用程序的编制，大大减少了应用程序的维护和修改<br /><img src="https://pic.imgdb.cn/item/62b55b06094754312957852d.png" alt="" /></li></ol>           </div>         </details></li><li><p>数据库系统的组成</p> <details class="folding-tag" cyan><summary> answer P31 </summary>           <div class='content'>           <ol><li>硬件平台及数据库<ol><li>足够大的内存</li><li>足够的大的磁盘或磁盘阵列等设备</li><li>较高的通道能力，提高数据传送率</li></ol></li><li>软件<ol><li>数据库管理系统</li><li>支持数据库管理系统运行的操作系统</li><li>与数据库接口的高级语言及其编译系统</li><li>以数据库管理系统为核心的应用开发工具</li><li>为特定应用环境开发的数据库应用系统</li></ol></li><li>人员<ol><li>数据库管理人员</li><li>系统分析员和数据库设计人员</li><li>应用程序员</li><li>最终用户</li></ol></li></ol><p><img src="https://pic.imgdb.cn/item/62b55bf0094754312958f9ca.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b55bc6094754312958b960.png" alt="" /></p>           </div>         </details> <details class="folding-tag" cyan><summary> 例题 </summary>           <div class='content'>           <ol><li>试述数据库系统的组成<br />数据库系统一般由数据库、数据库管理系统(及其开发工具)、应用系统、数据库管理员和用户构成</li><li>DBA的职责是什么<br />决定数据库中的信息内容和结构、决定数据库的存储结构和存取策略、定义数据的安全性要求和完整性约束条件、监控数据库的使用和运行、数据库的改进和重组重构。</li></ol>           </div>         </details></li></ol></div><h2 id="关系数据库"><a class="markdownIt-Anchor" href="#关系数据库"></a> 关系数据库</h2><div class="note orange no-icon flat"><ol><li><p>候选码、主属性等概念（理解掌握）</p> <details class="folding-tag" cyan><summary> answer P40 </summary>           <div class='content'>           <ol><li>码<ol><li>候选码：若关系中的某一属性组的值能唯一地标识一个元组，则称该属性组为候选码</li><li>全码：关系模式的所有属性组是这个关系模式的候选码，称为全码</li><li>主码：若一个关系有多个候选码，则选定其中一个为主码</li></ol></li><li>属性<ol><li>主属性：候选码的诸属性称为主属性</li><li>非主属性：不包含在任何侯选码中的属性称为非主属性</li></ol></li></ol>           </div>         </details></li><li><p>关系的六条性质（理解掌握）</p> <details class="folding-tag" cyan><summary> answer P41 </summary>           <div class='content'>           <ol><li>同质的列</li><li>不同列可出自同一个域，但要求不同的属性名</li><li>属性无序</li><li>元组候选码不重复</li><li>元组无序</li><li>分量是原子</li></ol>           </div>         </details></li><li><p>关系操作的特点</p> <details class="folding-tag" cyan><summary> answer P44 </summary>           <div class='content'>           <p>数据操作是集合操作，操作对象和操作结果都是集合</p>           </div>         </details></li><li><p>关系三类完整性</p> <details class="folding-tag" cyan><summary> answer P45 </summary>           <div class='content'>           <ol><li>实体完整性</li><li>参照完整性</li><li>用户定义的完整性</li></ol><p><img src="https://pic.imgdb.cn/item/62b55fcc09475431295ee860.png" alt="" /></p>           </div>         </details></li><li><p>关系代数（选择题）</p> <details class="folding-tag" cyan><summary> answer P49 </summary>           <div class='content'>           <p><img src="https://pic.imgdb.cn/item/62b5602809475431295f6bac.png" alt="" /></p><ol><li><p>预备知识</p> <details class="folding-tag" cyan><summary> 预备知识 </summary>       <div class='content'>       <p><img src="https://pic.imgdb.cn/item/62b561660947543129612982.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b5617d0947543129614a63.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b5618b0947543129615cb5.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b561980947543129617038.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b5620a0947543129621d57.png" alt="" /></p>       </div>     </details></li><li><p>集合运算符</p> <details class="folding-tag" cyan><summary> 集合运算符 </summary>       <div class='content'>       <p><img src="https://pic.imgdb.cn/item/62b5608f0947543129600885.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b560a90947543129602bc2.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b560b60947543129603bf4.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b560c60947543129605493.png" alt="" /></p>       </div>     </details></li><li><p>专门关系运算符</p> <details class="folding-tag" cyan><summary> 选择、投影 </summary>       <div class='content'>       <p><img src="https://pic.imgdb.cn/item/62b562b0094754312963351d.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b562c30947543129635692.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b562d90947543129638cd1.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b562eb094754312963b61b.png" alt="" /></p>       </div>     </details> <details class="folding-tag" cyan><summary> 连接 </summary>       <div class='content'>       <p><img src="https://pic.imgdb.cn/item/62b563b60947543129653e85.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b563c2094754312965511b.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b563de0947543129658cd9.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b563f2094754312965b146.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b563cf0947543129656c4f.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b56412094754312965e783.png" alt="" /></p>       </div>     </details></li></ol>           </div>         </details></li></ol></div><h2 id="sql与t-sql"><a class="markdownIt-Anchor" href="#sql与t-sql"></a> SQL与T-SQL</h2><div class="note red no-icon flat"><ol><li><p>基本表操作</p> <details class="folding-tag" cyan><summary> answer P82 </summary>           <div class='content'>           <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">USE sct;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 在学院表中，学院号为主键</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> coll</span><br><span class="line">(</span><br><span class="line"> collnum <span class="type">nchar</span>(<span class="number">8</span>) <span class="keyword">primary</span> key,</span><br><span class="line"> collname nvarchar(<span class="number">30</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"> tnum <span class="type">nchar</span>(<span class="number">8</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 在专业表中，专业号为主键，所在学院为外键</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> d</span><br><span class="line">(</span><br><span class="line"> dnum <span class="type">nchar</span>(<span class="number">8</span>) <span class="keyword">primary</span> key,</span><br><span class="line"> dname nvarchar(<span class="number">30</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"> collnum <span class="type">nchar</span>(<span class="number">8</span>),</span><br><span class="line"> <span class="keyword">FOREIGN</span> KEY(collnum) <span class="keyword">REFERENCES</span> coll(collnum)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 在学生表中，学号为主键，专业号为外键，性别为‘男’或’女’</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> s</span><br><span class="line">(</span><br><span class="line"> snum <span class="type">nchar</span>(<span class="number">8</span>) <span class="keyword">primary</span> key,</span><br><span class="line"> sname nvarchar(<span class="number">30</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"> ssex <span class="type">nchar</span>(<span class="number">1</span>) <span class="keyword">CHECK</span> (ssex <span class="operator">=</span> <span class="string">&#x27;男&#x27;</span> <span class="keyword">or</span> ssex <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span>),</span><br><span class="line"> sbirth <span class="type">date</span>,</span><br><span class="line"> spolity nvarchar(<span class="number">30</span>),</span><br><span class="line"> snation nvarchar(<span class="number">30</span>),</span><br><span class="line"> sorigin nvarchar(<span class="number">30</span>),</span><br><span class="line"> enterdata <span class="type">date</span>,</span><br><span class="line"> sphone nvarchar(<span class="number">30</span>),</span><br><span class="line"> dnum <span class="type">nchar</span>(<span class="number">8</span>),</span><br><span class="line"> <span class="keyword">FOREIGN</span> KEY(dnum) <span class="keyword">REFERENCES</span> d(dnum)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 在课程表中课程号为主键，学分带1位小数</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> c</span><br><span class="line">(</span><br><span class="line"> cnum <span class="type">nchar</span>(<span class="number">8</span>) <span class="keyword">primary</span> key,</span><br><span class="line"> cname nvarchar(<span class="number">30</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"> credit <span class="type">numeric</span>(<span class="number">4</span>,<span class="number">1</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 在选修表中，学号+课号为主键，学号和课号分别为外键,分数在[0,100]之间</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> sc</span><br><span class="line">(</span><br><span class="line"> snum <span class="type">nchar</span>(<span class="number">8</span>),</span><br><span class="line"> tnum <span class="type">nchar</span>(<span class="number">8</span>),</span><br><span class="line"> score <span class="type">int</span> <span class="keyword">CHECK</span> (score <span class="keyword">between</span> <span class="number">0</span> <span class="keyword">and</span> <span class="number">100</span>),</span><br><span class="line"> <span class="keyword">PRIMARY</span> KEY(snum, tnum),</span><br><span class="line"> <span class="keyword">FOREIGN</span> KEY(snum) <span class="keyword">REFERENCES</span> s(snum),</span><br><span class="line"> <span class="keyword">FOREIGN</span> KEY(tnum) <span class="keyword">REFERENCES</span> t(tnum)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 在已经存在的学生表中增加一个邮件地址“Semail”的新属性列，允许为空；</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> s</span><br><span class="line"><span class="keyword">add</span> semail nvarchar(<span class="number">30</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改教师表中tsalary的数据类型为money；</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> t</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">column</span> tsalary money;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 把学生表中的电话属性删掉；</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> s</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">column</span> sphone;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除学生性别是男或女的约束条件;</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> s</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">constraint</span> CK__s__ssex__571DF1D5;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 增加学生性别是男或女的约束条件。</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> s</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> CK__s__ssex__571DF1D5 <span class="keyword">CHECK</span>(ssex <span class="operator">=</span> <span class="string">&#x27;男&#x27;</span> <span class="keyword">or</span> ssex <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span>);</span><br></pre></td></tr></table></figure>           </div>         </details></li><li><p>数据查询</p> <details class="folding-tag" cyan><summary> answer P89 </summary>           <div class='content'>           <ol><li><p>简单查询</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询学院编号为‘22’的教师姓名和工资情况，工资增加1000后输出。</span></span><br><span class="line"><span class="keyword">SELECT</span> tname, tsalary <span class="operator">+</span> <span class="number">1000</span> <span class="keyword">as</span> tsalary</span><br><span class="line"><span class="keyword">FROM</span> t</span><br><span class="line"><span class="keyword">WHERE</span> collnum <span class="operator">=</span> <span class="string">&#x27;22&#x27;</span></span><br><span class="line"><span class="comment">-- 查询全体学生的系编号、学号、姓名、性别和年龄，</span></span><br><span class="line"><span class="comment">-- 查询结果按所在系的系编号升序排列，同一系中的学生按年龄降序排列。</span></span><br><span class="line"><span class="keyword">SELECT</span> dnum, snum, sname, ssex, <span class="keyword">YEAR</span>(GETDATE()) <span class="operator">-</span> <span class="keyword">YEAR</span>(sbirth) <span class="keyword">as</span> sage</span><br><span class="line"><span class="keyword">FROM</span> s</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> dnum, sage <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 从学生表中查出名字第2个字是</span></span><br><span class="line"><span class="comment">-- ’睿’   或  ‘晓’  或 ‘子’ 或’涵’ 的学生资料。</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> s</span><br><span class="line"><span class="keyword">WHERE</span> sname <span class="keyword">LIKE</span> <span class="string">&#x27;_[睿,晓,子,涵]%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--查询所有电话号码是空的学生信息。</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> s</span><br><span class="line"><span class="keyword">WHERE</span> sphone <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 列出职称是副教授或工程师或教授的教师信息。</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> t</span><br><span class="line"><span class="keyword">WHERE</span> ttitle <span class="keyword">IN</span> (<span class="string">&#x27;副教授&#x27;</span>, <span class="string">&#x27;工程师&#x27;</span>, <span class="string">&#x27;教授&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>聚合分组</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 统计选修了课程的学生人数。</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="keyword">distinct</span> snum)</span><br><span class="line"><span class="keyword">from</span> sc;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 按职称统计所有男教师的最高、最低和平均工资工资</span></span><br><span class="line"><span class="comment">-- 筛选出平均工资高于7000的记录，并按平均工资降序排列。</span></span><br><span class="line"><span class="keyword">select</span> ttitle,<span class="built_in">max</span>(tsalary) ,<span class="built_in">min</span>(tsalary),<span class="built_in">avg</span>(tsalary)</span><br><span class="line"><span class="keyword">from</span> t</span><br><span class="line"><span class="keyword">where</span> tsex<span class="operator">=</span><span class="string">&#x27;男&#x27;</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> ttitle</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">avg</span>(tsalary)<span class="operator">&gt;=</span><span class="number">7000</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="built_in">avg</span>(tsalary) <span class="keyword">desc</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 按平均工资从高到低的顺序分别列出男、女教师各种职称（非空）的</span></span><br><span class="line"><span class="comment">-- 人数（任职人数多于100）和平均工资。</span></span><br><span class="line"><span class="keyword">select</span> ttitle,tsex,<span class="built_in">avg</span>(tsalary),<span class="built_in">count</span>(tnum)</span><br><span class="line"><span class="keyword">from</span> t</span><br><span class="line"><span class="keyword">where</span> ttitle <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">and</span> ttitle <span class="operator">&lt;&gt;</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> ttitle, tsex</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(tnum)<span class="operator">&gt;</span><span class="number">100</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="built_in">avg</span>(tsalary) <span class="keyword">desc</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询有50门以上课程是90分以上的学生姓名、学号、课程数，</span></span><br><span class="line"><span class="comment">-- 查询结果按课程数从多到少的顺序排列。</span></span><br><span class="line"><span class="keyword">select</span> s.sname,sc.snum,<span class="built_in">count</span>(cnum)</span><br><span class="line"><span class="keyword">from</span> sc,s</span><br><span class="line"><span class="keyword">where</span> s.snum<span class="operator">=</span>sc.snum <span class="keyword">and</span> score<span class="operator">&gt;=</span><span class="number">90</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s.sname,sc.snum</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(cnum)<span class="operator">&gt;</span><span class="number">50</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="built_in">count</span>(cnum) <span class="keyword">desc</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 按职称统计信息工程学院平均工资高于6000的各种职称的人数和平均工资，</span></span><br><span class="line"><span class="comment">-- 查询结果按平均工资从大到小顺序排列。</span></span><br><span class="line"><span class="keyword">select</span> ttitle,<span class="built_in">avg</span>(tsalary),<span class="built_in">count</span>(t.tnum)</span><br><span class="line"><span class="keyword">from</span> t, coll</span><br><span class="line"><span class="keyword">where</span> t.collnum <span class="operator">=</span> coll.collnum <span class="keyword">and</span> collname <span class="operator">=</span> <span class="string">&#x27;信息工程学院&#x27;</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> ttitle</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">avg</span>(tsalary)<span class="operator">&gt;=</span><span class="number">6000</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="built_in">avg</span>(tsalary) <span class="keyword">desc</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询‘计算机科学与技术’专业选修课程的最低成绩大于等于90分的学生的姓名。</span></span><br><span class="line"><span class="keyword">select</span> sname,<span class="built_in">min</span>(score)</span><br><span class="line"><span class="keyword">from</span> d,s,sc</span><br><span class="line"><span class="keyword">where</span> d.dnum<span class="operator">=</span>s.dnum <span class="keyword">and</span> s.snum<span class="operator">=</span>sc.snum  <span class="keyword">and</span> dname <span class="operator">=</span>  <span class="string">&#x27;计算机科学与技术&#x27;</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sname,s.snum</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">min</span>(score)<span class="operator">&gt;=</span><span class="number">90</span>;</span><br></pre></td></tr></table></figure></li><li><p>连接查询</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询所有学生的学号、姓名、选修的课程号和成绩。</span></span><br><span class="line"><span class="keyword">select</span> s.snum,sname,sc.cnum,sc.score</span><br><span class="line"><span class="keyword">from</span> s,sc</span><br><span class="line"><span class="keyword">where</span> s.snum<span class="operator">=</span>sc.snum;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询所有学生的姓名、选修的课程名和相应的学分。</span></span><br><span class="line"><span class="keyword">select</span> sname,c.cname,c.credit</span><br><span class="line"><span class="keyword">from</span> s,sc,c</span><br><span class="line"><span class="keyword">where</span> s.snum<span class="operator">=</span>sc.snum <span class="keyword">and</span> sc.cnum<span class="operator">=</span>c.cnum;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询选修了数据库原理与技术并且成绩在90分以上的学生的姓名。</span></span><br><span class="line"><span class="keyword">select</span> s.sname</span><br><span class="line"><span class="keyword">from</span> sc,c,s</span><br><span class="line"><span class="keyword">where</span> s.snum<span class="operator">=</span>sc.snum <span class="keyword">and</span> sc.score<span class="operator">&gt;</span><span class="number">90</span> <span class="keyword">and</span> sc.cnum<span class="operator">=</span>c.cnum <span class="keyword">and</span> c.cname<span class="operator">=</span><span class="string">&#x27;数据库原理与技术&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询计算机科学与技术专业选修了数据库原理与技术</span></span><br><span class="line"><span class="comment">-- 并且成绩在90分以上的学生的姓名。</span></span><br><span class="line"><span class="keyword">select</span> s.sname</span><br><span class="line"><span class="keyword">from</span> sc,c,s,d</span><br><span class="line"><span class="keyword">where</span> s.snum<span class="operator">=</span>sc.snum <span class="keyword">and</span> sc.score<span class="operator">&gt;</span><span class="number">90</span> <span class="keyword">and</span> sc.cnum<span class="operator">=</span>c.cnum <span class="keyword">and</span> c.cname<span class="operator">=</span><span class="string">&#x27;数据库原理与技术&#x27;</span></span><br><span class="line">    <span class="keyword">and</span> s.dnum<span class="operator">=</span>d.dnum <span class="keyword">and</span> d.dname<span class="operator">=</span><span class="string">&#x27;计算机科学与技术专业&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询工资高于杨平的所有教师的姓名、职称和工资。</span></span><br><span class="line"><span class="keyword">select</span> t1.tname,t1.ttitle,t1.tsalary</span><br><span class="line"><span class="keyword">from</span> t t1,t t2</span><br><span class="line"><span class="keyword">where</span> t1.tsalary<span class="operator">&gt;</span>t2.tsalary <span class="keyword">and</span> t2.tname<span class="operator">=</span><span class="string">&#x27;杨平&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询与“沈羿”在同一个专业学习的学生姓名和性别。</span></span><br><span class="line"><span class="keyword">select</span> s1.sname,s1.ssex</span><br><span class="line"><span class="keyword">from</span> s s1, s s2</span><br><span class="line"><span class="keyword">where</span> s1.dnum<span class="operator">=</span>s2.dnum <span class="keyword">and</span> s2.sname<span class="operator">=</span><span class="string">&#x27;沈羿&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>嵌套查询</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--查询选修了‘B3503021 ’号课程的学生的学号和姓名</span></span><br><span class="line"><span class="keyword">SELECT</span> snum,sname</span><br><span class="line"><span class="keyword">FROM</span> s</span><br><span class="line"><span class="keyword">WHERE</span>  snum <span class="keyword">IN</span> (<span class="keyword">SELECT</span> snum <span class="keyword">FROM</span> sc  <span class="keyword">WHERE</span> cnum<span class="operator">=</span><span class="string">&#x27;B3503021&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> snum,sname</span><br><span class="line"><span class="keyword">FROM</span> s</span><br><span class="line"><span class="keyword">WHERE</span>  <span class="keyword">EXISTS</span> (<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> sc  <span class="keyword">WHERE</span> sc.snum<span class="operator">=</span>s.snum <span class="keyword">and</span> cnum<span class="operator">=</span><span class="string">&#x27;B3503021&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--查询没有选修‘B3503021’号课程的学生的学号和姓名</span></span><br><span class="line"><span class="keyword">SELECT</span> snum,sname</span><br><span class="line"><span class="keyword">FROM</span> s</span><br><span class="line"><span class="keyword">WHERE</span>  snum <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="keyword">SELECT</span> snum <span class="keyword">FROM</span> sc  <span class="keyword">WHERE</span> cnum<span class="operator">=</span><span class="string">&#x27;B3503021&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> snum,sname</span><br><span class="line"><span class="keyword">FROM</span> s</span><br><span class="line"><span class="keyword">WHERE</span>  <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> (<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> sc  <span class="keyword">WHERE</span> sc.snum<span class="operator">=</span>s.snum <span class="keyword">and</span> cnum<span class="operator">=</span><span class="string">&#x27;B3503021&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询选修了‘数据库原理与技术’的学生姓名</span></span><br><span class="line"><span class="keyword">SELECT</span> sname</span><br><span class="line"><span class="keyword">FROM</span> s</span><br><span class="line"><span class="keyword">WHERE</span>  snum <span class="keyword">IN</span> (<span class="keyword">SELECT</span> snum <span class="keyword">FROM</span> sc  <span class="keyword">WHERE</span> cnum <span class="keyword">IN</span> (</span><br><span class="line">                <span class="keyword">SELECT</span> cnum <span class="keyword">FROM</span>  c <span class="keyword">WHERE</span> cname<span class="operator">=</span><span class="string">&#x27;数据库原理与技术&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> sname</span><br><span class="line"><span class="keyword">FROM</span> s</span><br><span class="line"><span class="keyword">WHERE</span>   <span class="keyword">EXISTS</span> (<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> sc  <span class="keyword">WHERE</span> sc.snum<span class="operator">=</span>s.snum <span class="keyword">AND</span> <span class="keyword">EXISTS</span>(</span><br><span class="line">                <span class="keyword">SELECT</span> <span class="operator">*</span><span class="keyword">FROM</span> c  <span class="keyword">WHERE</span> c.cnum<span class="operator">=</span>sc.cnum <span class="keyword">and</span> cname<span class="operator">=</span><span class="string">&#x27;数据库原理与技术&#x27;</span> ));</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询工资高于杨平的所有教师的姓名、职称和工资</span></span><br><span class="line"><span class="keyword">SELECT</span> tname ,ttitle,tsalary</span><br><span class="line"><span class="keyword">FROM</span> t t1</span><br><span class="line"><span class="keyword">WHERE</span> tsalary<span class="operator">&gt;</span>(<span class="keyword">SELECT</span> tsalary  <span class="keyword">FROM</span> t t2 <span class="keyword">WHERE</span> t2.tname<span class="operator">=</span><span class="string">&#x27;杨平&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> tname, ttitle,tsalary</span><br><span class="line"><span class="keyword">FROM</span> t t1</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">EXISTS</span> (<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t t2  <span class="keyword">WHERE</span>  t1.tsalary<span class="operator">&gt;</span>t2.tsalary <span class="keyword">AND</span> t2.tname<span class="operator">=</span><span class="string">&#x27;杨平&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询比‘信息工程学院’最低工资高的其他学院教师信息</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> t t1</span><br><span class="line"><span class="keyword">WHERE</span> tsalary<span class="operator">&gt;</span><span class="keyword">ANY</span>(<span class="keyword">SELECT</span> tsalary <span class="keyword">FROM</span> t t2 <span class="keyword">WHERE</span> t2.collnum <span class="keyword">IN</span>(</span><br><span class="line">                    <span class="keyword">SELECT</span> collnum <span class="keyword">from</span> coll <span class="keyword">WHERE</span> collname <span class="operator">=</span> <span class="string">&#x27;信息工程学院&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 找出每个学生超过他自己选修课程平均成绩的学号、课程号和成绩</span></span><br><span class="line"><span class="keyword">SELECT</span> snum,cnum,score</span><br><span class="line"><span class="keyword">FROM</span> sc sc1</span><br><span class="line"><span class="keyword">WHERE</span> score<span class="operator">&gt;</span>(<span class="keyword">SELECT</span> <span class="built_in">AVG</span>(score) <span class="keyword">FROM</span> sc sc2 <span class="keyword">WHERE</span> sc1.snum<span class="operator">=</span>sc2.snum );</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 列出工资低于教师平均工资的教师的工号、姓名、职称和工资情况。</span></span><br><span class="line"><span class="keyword">SELECT</span> tnum,tname ,ttitle,tsalary</span><br><span class="line"><span class="keyword">FROM</span> t t1</span><br><span class="line"><span class="keyword">WHERE</span> tsalary<span class="operator">&lt;</span>(<span class="keyword">SELECT</span> <span class="built_in">AVG</span>(tsalary) <span class="keyword">FROM</span> t t2);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询与“沈羿”在同一个专业学习的学生姓名和性别。</span></span><br><span class="line"><span class="keyword">SELECT</span> sname ,ssex</span><br><span class="line"><span class="keyword">FROM</span> s s1</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">EXISTS</span> (<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> s s2 <span class="keyword">WHERE</span>  s2.sname<span class="operator">=</span><span class="string">&#x27;沈羿&#x27;</span> <span class="keyword">AND</span> s1.dnum<span class="operator">=</span>s2.dnum);</span><br></pre></td></tr></table></figure></li><li><p>查询综合</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">USE sct;</span><br><span class="line"><span class="comment">-- 查询既选修了课程c01又选修了课程c02的学生的学号和姓名。</span></span><br><span class="line"><span class="comment">--（四种方法：集合、自身连接、相关和不相关子查询）</span></span><br><span class="line"><span class="keyword">SELECT</span> s.snum, sname</span><br><span class="line"><span class="keyword">FROM</span> s, sc</span><br><span class="line"><span class="keyword">WHERE</span> s.snum <span class="operator">=</span> sc.snum <span class="keyword">AND</span> cnum <span class="operator">=</span> <span class="string">&#x27;c01&#x27;</span></span><br><span class="line"><span class="keyword">INTERSECT</span></span><br><span class="line"><span class="keyword">SELECT</span> s.snum, sname</span><br><span class="line"><span class="keyword">FROM</span> s, sc</span><br><span class="line"><span class="keyword">WHERE</span> s.snum <span class="operator">=</span> sc.snum <span class="keyword">AND</span> cnum <span class="operator">=</span> <span class="string">&#x27;c02&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> s.snum, sname</span><br><span class="line"><span class="keyword">FROM</span> s, sc sc1, sc sc2</span><br><span class="line"><span class="keyword">WHERE</span> s.snum <span class="operator">=</span> sc1.snum <span class="keyword">AND</span> sc1.snum <span class="operator">=</span> sc2.snum <span class="keyword">AND</span> sc1.cnum <span class="operator">=</span> <span class="string">&#x27;c01&#x27;</span> <span class="keyword">AND</span> sc2.cnum <span class="operator">=</span> <span class="string">&#x27;c02&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> snum, sname</span><br><span class="line"><span class="keyword">FROM</span> s</span><br><span class="line"><span class="keyword">WHERE</span> snum <span class="keyword">IN</span> (<span class="keyword">SELECT</span> snum <span class="keyword">FROM</span> sc sc1 <span class="keyword">WHERE</span> cnum <span class="operator">=</span><span class="string">&#x27;c01&#x27;</span> <span class="keyword">AND</span> <span class="keyword">EXISTS</span> (</span><br><span class="line">                <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> sc sc2 <span class="keyword">WHERE</span> sc1.snum <span class="operator">=</span> sc2.snum <span class="keyword">AND</span> sc2.cnum <span class="operator">=</span> <span class="string">&#x27;c02&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> snum, sname</span><br><span class="line"><span class="keyword">FROM</span> s</span><br><span class="line"><span class="keyword">WHERE</span> snum <span class="keyword">IN</span> (<span class="keyword">SELECT</span> snum <span class="keyword">FROM</span> sc <span class="keyword">WHERE</span> cnum <span class="operator">=</span> <span class="string">&#x27;c01&#x27;</span> <span class="keyword">AND</span> snum <span class="keyword">IN</span> (</span><br><span class="line">                <span class="keyword">SELECT</span> snum <span class="keyword">FROM</span> sc <span class="keyword">WHERE</span> cnum <span class="operator">=</span> <span class="string">&#x27;c02&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询选修了课程c01没有选修课程c02的学生的学号和姓名。</span></span><br><span class="line"><span class="keyword">SELECT</span> s.snum, sname</span><br><span class="line"><span class="keyword">FROM</span> s, sc</span><br><span class="line"><span class="keyword">WHERE</span> s.snum <span class="operator">=</span> sc.snum <span class="keyword">AND</span> cnum <span class="operator">=</span> <span class="string">&#x27;c01&#x27;</span></span><br><span class="line"><span class="keyword">EXCEPT</span></span><br><span class="line"><span class="keyword">SELECT</span> s.snum, sname</span><br><span class="line"><span class="keyword">FROM</span> s, sc</span><br><span class="line"><span class="keyword">WHERE</span> s.snum <span class="operator">=</span> sc.snum <span class="keyword">AND</span> cnum <span class="operator">=</span> <span class="string">&#x27;c02&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> snum, sname</span><br><span class="line"><span class="keyword">FROM</span> s</span><br><span class="line"><span class="keyword">WHERE</span> snum <span class="keyword">IN</span> (<span class="keyword">SELECT</span> snum <span class="keyword">FROM</span> sc <span class="keyword">WHERE</span> cnum <span class="operator">=</span> <span class="string">&#x27;c01&#x27;</span> <span class="keyword">AND</span> snum <span class="keyword">NOT</span> <span class="keyword">IN</span> (</span><br><span class="line">                <span class="keyword">SELECT</span> snum <span class="keyword">FROM</span> sc <span class="keyword">WHERE</span> cnum <span class="operator">=</span> <span class="string">&#x27;c02&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询学校中所有师生的姓名。</span></span><br><span class="line"><span class="keyword">SELECT</span> sname name</span><br><span class="line"><span class="keyword">FROM</span> s</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> tname</span><br><span class="line"><span class="keyword">FROM</span> t;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询学校中所有与教师同名的学生姓名。</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> sname</span><br><span class="line"><span class="keyword">FROM</span> s</span><br><span class="line"><span class="keyword">WHERE</span> sname <span class="keyword">IN</span> (<span class="keyword">SELECT</span> tname <span class="keyword">FROM</span> t <span class="keyword">WHERE</span> sname <span class="operator">=</span> tname);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询同名同姓的学生姓名和重名数量</span></span><br><span class="line"><span class="comment">-- 要求输出姓名和重名数，按数量从多到少排列。</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> s1.sname, <span class="built_in">COUNT</span>(s1.sname) count</span><br><span class="line"><span class="keyword">FROM</span> s s1, s s2</span><br><span class="line"><span class="keyword">WHERE</span> s1.sname <span class="operator">=</span> s2.sname</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> s1.sname</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(s1.sname) <span class="operator">&gt;</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="built_in">COUNT</span>(s1.sname) <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure></li></ol>           </div>         </details></li><li><p>数据更新</p> <details class="folding-tag" cyan><summary> answer P115 </summary>           <div class='content'>           <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.将新生（学号：202201010101；姓名：伍俊；性别：男；出生日期：2004-08-08；电话：88485561；系编号：0501）</span></span><br><span class="line"><span class="comment">--的记录插入学生表，并为其选：c01 、c02与c03三门课程。</span></span><br><span class="line"><span class="keyword">INSERT</span></span><br><span class="line"><span class="keyword">INTO</span> s(snum, sname, ssex, sbirth, sphone, dnum)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">&#x27;202201010101&#x27;</span>, <span class="string">&#x27;伍俊&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;2004-08-08&#x27;</span>, <span class="string">&#x27;88485561&#x27;</span>, <span class="string">&#x27;0501&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span></span><br><span class="line"><span class="keyword">INTO</span> sc(snum, cnum)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">&#x27;202201010101&#x27;</span>, <span class="string">&#x27;c01&#x27;</span>),  (<span class="string">&#x27;202201010101&#x27;</span>, <span class="string">&#x27;c02&#x27;</span>),  (<span class="string">&#x27;202201010101&#x27;</span>, <span class="string">&#x27;c03&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2.建立课程号、课程名、平均成绩与选课人数表。并将数据存入到该表中。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> class</span><br><span class="line">(</span><br><span class="line"> cnum <span class="type">nchar</span>(<span class="number">12</span>),</span><br><span class="line"> cname nvarchar(<span class="number">50</span>),</span><br><span class="line"> avg_score <span class="type">numeric</span>(<span class="number">5</span>,<span class="number">1</span>),</span><br><span class="line"> stu_num <span class="type">int</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span></span><br><span class="line"><span class="keyword">INTO</span> class(cnum, cname, avg_score, stu_num)</span><br><span class="line"><span class="keyword">SELECT</span> sc.cnum, c.cname, <span class="built_in">AVG</span>(sc.score), <span class="built_in">COUNT</span>(<span class="operator">*</span>)</span><br><span class="line"><span class="keyword">FROM</span> sc, c</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> sc.cnum, c.cnum, c.cname</span><br><span class="line"><span class="keyword">HAVING</span> sc.cnum <span class="operator">=</span> c.cnum;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3.事后发现‘雷吉平’考试作弊，将其所有成绩改为0分。</span></span><br><span class="line"><span class="keyword">UPDATE</span> sc</span><br><span class="line"><span class="keyword">SET</span> score <span class="operator">=</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">WHERE</span> snum <span class="keyword">IN</span> (<span class="keyword">SELECT</span> snum <span class="keyword">FROM</span> s <span class="keyword">WHERE</span> sname <span class="operator">=</span> <span class="string">&#x27;雷吉平&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4.将所有教师的工资增加1000元。</span></span><br><span class="line"><span class="keyword">UPDATE</span> t</span><br><span class="line"><span class="keyword">SET</span> tsalary <span class="operator">+</span><span class="operator">=</span> <span class="number">1000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 5.将‘计算机科学与技术’专业全体学生的成绩置零。</span></span><br><span class="line"><span class="keyword">UPDATE</span> sc</span><br><span class="line"><span class="keyword">SET</span> score <span class="operator">=</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">WHERE</span> snum <span class="keyword">IN</span> (<span class="keyword">SELECT</span> snum <span class="keyword">FROM</span> s <span class="keyword">WHERE</span> dnum <span class="keyword">IN</span> (</span><br><span class="line">                <span class="keyword">SELECT</span> dnum <span class="keyword">FROM</span> d <span class="keyword">WHERE</span> dname <span class="operator">=</span> <span class="string">&#x27;计算机科学与技术&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 6.将杨平任命为‘信息工程学院’院长。</span></span><br><span class="line"><span class="keyword">UPDATE</span> coll</span><br><span class="line"><span class="keyword">set</span> tnum <span class="operator">=</span> (<span class="keyword">SELECT</span> tnum <span class="keyword">FROM</span> t <span class="keyword">WHERE</span> tname <span class="operator">=</span> <span class="string">&#x27;杨平&#x27;</span>)</span><br><span class="line"><span class="keyword">WHERE</span> collname <span class="operator">=</span> <span class="string">&#x27;信息工程学院&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 7.将‘信息工程学院’院长的工资降为该学院的平均工资。</span></span><br><span class="line"><span class="keyword">UPDATE</span> t</span><br><span class="line"><span class="keyword">set</span> tsalary <span class="operator">=</span> (<span class="keyword">SELECT</span> <span class="built_in">AVG</span>(tsalary) <span class="keyword">FROM</span> t <span class="keyword">WHERE</span> collnum <span class="keyword">IN</span> (</span><br><span class="line">                <span class="keyword">SELECT</span> collnum <span class="keyword">FROM</span> coll <span class="keyword">WHERE</span> collname <span class="operator">=</span> <span class="string">&#x27;信息工程学院&#x27;</span>))</span><br><span class="line"><span class="keyword">WHERE</span> tnum <span class="operator">=</span> (<span class="keyword">SELECT</span> tnum <span class="keyword">FROM</span> coll <span class="keyword">WHERE</span> collname <span class="operator">=</span> <span class="string">&#x27;信息工程学院&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 8.在学生表中增加flag标志列，如果该同学选课，则flag置1,如果未选课，则flag置0。</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> s</span><br><span class="line"><span class="keyword">add</span> flag tinyint;</span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> s</span><br><span class="line"><span class="keyword">set</span> flag <span class="operator">=</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">WHERE</span> snum <span class="keyword">IN</span> (<span class="keyword">SELECT</span> snum <span class="keyword">FROM</span> sc)</span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> s</span><br><span class="line"><span class="keyword">set</span> flag <span class="operator">=</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">WHERE</span> snum <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="keyword">SELECT</span> snum <span class="keyword">FROM</span> sc)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 9.学号为‘S030404’的学生由于退学，删除该学生记录及其选课记录。</span></span><br><span class="line"><span class="keyword">DELETE</span></span><br><span class="line"><span class="keyword">FROM</span> sc</span><br><span class="line"><span class="keyword">WHERE</span> snum <span class="operator">=</span> <span class="string">&#x27;S030404&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DELETE</span></span><br><span class="line"><span class="keyword">FROM</span> s</span><br><span class="line"><span class="keyword">WHERE</span> snum <span class="operator">=</span> <span class="string">&#x27;S030404&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 10.删除低于平均工资的老师记录以及任课记录。</span></span><br><span class="line"><span class="keyword">DELETE</span></span><br><span class="line"><span class="keyword">FROM</span> t</span><br><span class="line"><span class="keyword">WHERE</span> tsalary <span class="operator">&lt;</span> (<span class="keyword">SELECT</span> <span class="built_in">AVG</span>(tsalary) <span class="keyword">FROM</span> t)</span><br><span class="line"></span><br><span class="line"><span class="keyword">DELETE</span></span><br><span class="line"><span class="keyword">FROM</span> tc</span><br><span class="line"><span class="keyword">WHERE</span> tnum <span class="keyword">IN</span> (<span class="keyword">SELECT</span> tnum <span class="keyword">FROM</span> t <span class="keyword">WHERE</span> tsalary <span class="operator">&lt;</span> (</span><br><span class="line">                <span class="keyword">SELECT</span> <span class="built_in">AVG</span>(tsalary) <span class="keyword">FROM</span> t));</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 11.删除‘计算机科学与技术’专业全体学生的选课记录。</span></span><br><span class="line"><span class="keyword">DELETE</span></span><br><span class="line"><span class="keyword">FROM</span> sc</span><br><span class="line"><span class="keyword">WHERE</span> snum <span class="keyword">IN</span> (<span class="keyword">SELECT</span> snum <span class="keyword">FROM</span> s <span class="keyword">WHERE</span> dnum <span class="keyword">IN</span> (</span><br><span class="line">                <span class="keyword">SELECT</span> dnum <span class="keyword">FROM</span> d <span class="keyword">WHERE</span> dname <span class="operator">=</span> <span class="string">&#x27;计算机科学与技术&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 12.删除没有选课的学生信息。</span></span><br><span class="line"><span class="keyword">DELETE</span></span><br><span class="line"><span class="keyword">FROM</span> s</span><br><span class="line"><span class="keyword">WHERE</span> snum <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="keyword">SELECT</span> snum <span class="keyword">FROM</span> sc);</span><br><span class="line"></span><br></pre></td></tr></table></figure>           </div>         </details></li><li><p>视图</p> <details class="folding-tag" cyan><summary> answer P121 </summary>           <div class='content'>           <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">USE sct;</span><br><span class="line"><span class="comment">--1.创建一个视图VIEW_S，显示成绩等于100分的学生的学号、姓名、课程名和成绩。</span></span><br><span class="line">IF object_id(<span class="string">&#x27;VIEW_S&#x27;</span>, <span class="string">&#x27;V&#x27;</span>) <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">    <span class="keyword">DROP</span> <span class="keyword">VIEW</span>  VIEW_S</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> VIEW_S</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> s.snum, sname, cname, score</span><br><span class="line"><span class="keyword">FROM</span> s, sc, c</span><br><span class="line"><span class="keyword">WHERE</span> s.snum <span class="operator">=</span> sc.snum <span class="keyword">AND</span> sc.cnum <span class="operator">=</span> c.cnum <span class="keyword">AND</span> score <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--2.建立‘计算机科学与技术’专业选修了‘数据库原理与技术’这门课程的学生视图VIEW_CS。（学号，姓名，成绩）</span></span><br><span class="line">IF object_id(<span class="string">&#x27;VIEW_CS&#x27;</span>, <span class="string">&#x27;V&#x27;</span>) <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">    <span class="keyword">DROP</span> <span class="keyword">VIEW</span>  VIEW_CS</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> VIEW_CS</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> s.snum, sname, score</span><br><span class="line"><span class="keyword">FROM</span> s, sc, d, c</span><br><span class="line"><span class="keyword">WHERE</span> s.snum <span class="operator">=</span> sc.snum <span class="keyword">AND</span> s.dnum <span class="operator">=</span> d.dnum <span class="keyword">AND</span> c.cnum <span class="operator">=</span> sc.cnum <span class="keyword">AND</span> d.dname <span class="operator">=</span> <span class="string">&#x27;计算机科学与技术&#x27;</span> <span class="keyword">AND</span> c.cname <span class="operator">=</span> <span class="string">&#x27;数据库原理与技术&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--3.建立‘计算机科学与技术’专业选修了‘数据库原理与技术’这门课程且成绩在90分以上的学生视图VIEW_CS90。（学号，姓名，成绩）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--要求创建基于视图的视图。</span></span><br><span class="line"></span><br><span class="line">IF object_id(<span class="string">&#x27;VIEW_CS90&#x27;</span>, <span class="string">&#x27;V&#x27;</span>) <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">    <span class="keyword">DROP</span> <span class="keyword">VIEW</span>  VIEW_CS90</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> VIEW_CS90</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> snum, sname, score</span><br><span class="line"><span class="keyword">FROM</span> VIEW_CS</span><br><span class="line"><span class="keyword">WHERE</span> score <span class="operator">&gt;</span> <span class="number">90</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--4.建立‘计算机科学与技术’专业的学生的学号，姓名和平均成绩的视图。</span></span><br><span class="line">IF object_id(<span class="string">&#x27;VIEW_D&#x27;</span>, <span class="string">&#x27;V&#x27;</span>) <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">    <span class="keyword">DROP</span> <span class="keyword">VIEW</span>  VIEW_D</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> VIEW_D</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> s.snum, sname, <span class="built_in">AVG</span>(score) <span class="keyword">as</span> avg_score</span><br><span class="line"><span class="keyword">FROM</span> s, sc, d</span><br><span class="line"><span class="keyword">WHERE</span> s.snum <span class="operator">=</span> sc.snum <span class="keyword">AND</span> s.dnum <span class="operator">=</span> d.dnum <span class="keyword">AND</span> dname <span class="operator">=</span> <span class="string">&#x27;计算机科学与技术&#x27;</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> s.snum, sname</span><br><span class="line"></span><br><span class="line"><span class="comment">--5.将学院名称及该学院教师的平均工资定义为一个视图。</span></span><br><span class="line"></span><br><span class="line">IF object_id(<span class="string">&#x27;VIEW_TS&#x27;</span>, <span class="string">&#x27;V&#x27;</span>) <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">    <span class="keyword">DROP</span> <span class="keyword">VIEW</span>  VIEW_TS</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> VIEW_TS</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> collname, <span class="built_in">AVG</span>(tsalary) <span class="keyword">as</span> avg_salary</span><br><span class="line"><span class="keyword">FROM</span> coll, t</span><br><span class="line"><span class="keyword">WHERE</span> t.collnum <span class="operator">=</span> coll.collnum</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> collname;</span><br><span class="line"></span><br><span class="line"><span class="comment">--6.建立一视图显示教师的工号，姓名和年龄。（可考虑用datediff()函数）</span></span><br><span class="line">IF object_id(<span class="string">&#x27;VIEW_T&#x27;</span>, <span class="string">&#x27;V&#x27;</span>) <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">    <span class="keyword">DROP</span> <span class="keyword">VIEW</span>  VIEW_T</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> VIEW_T</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> tnum, tname, datediff(<span class="keyword">YEAR</span>, tbirth, GETDATE()) <span class="keyword">as</span> tage</span><br><span class="line"><span class="keyword">FROM</span> t</span><br><span class="line"></span><br><span class="line"><span class="comment">--7.删除视图VIEW_CS并观察VIEW_CS90是否可用，显示删除VIEW_CS90</span></span><br><span class="line">IF object_id(<span class="string">&#x27;VIEW_CS&#x27;</span>, <span class="string">&#x27;V&#x27;</span>) <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">    <span class="keyword">DROP</span> <span class="keyword">VIEW</span>  VIEW_CS</span><br><span class="line">GO</span><br></pre></td></tr></table></figure>           </div>         </details></li><li><p>触发器</p> <details class="folding-tag" cyan><summary> answer PPT </summary>           <div class='content'>           <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 在选课表SC上创建触发器，当向该表中插入记录时，若学生选课门数超过5门时,</span></span><br><span class="line"><span class="comment">-- 则向客户端发出警告信息，同时将插入记录自动删除。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> tri_insc</span><br><span class="line"><span class="keyword">on</span> sc</span><br><span class="line">after <span class="keyword">insert</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line">if(<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> sc,inserted <span class="keyword">where</span> sc.snum<span class="operator">=</span>inserted.snum)<span class="operator">&gt;</span><span class="number">5</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">rollback</span></span><br><span class="line">    print<span class="string">&#x27;限选五门！&#x27;</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    print<span class="string">&#x27;选课成功！&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 在sc表上创建触发器，当删除学生的选课记录时，</span></span><br><span class="line"><span class="comment">-- 首先检查要删除的行数，如果是删除多行，则返回错误信息。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> tr_del</span><br><span class="line"><span class="keyword">on</span> sc</span><br><span class="line">after <span class="keyword">delete</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line">if(<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> deleted)<span class="operator">&gt;</span><span class="number">1</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">rollback</span></span><br><span class="line">    print<span class="string">&#x27;不能删除多行&#x27;</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    print<span class="string">&#x27;删除成功&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建一触发器tr_inc,在向C表插入或者修改课程记录时，</span></span><br><span class="line"><span class="comment">-- 先检查是否与该课程同名的课程已经存在，以避免课程的混淆。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> tr_inc</span><br><span class="line"><span class="keyword">on</span> c</span><br><span class="line">after <span class="keyword">insert</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line">if <span class="keyword">exists</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> c,inserted <span class="keyword">where</span> c.cname<span class="operator">=</span>inserted.cname)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">rollback</span></span><br><span class="line">    print<span class="string">&#x27;已存在该课程&#x27;</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    print<span class="string">&#x27;修改成功&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建一触发器,在对学生的姓名进行更新时，显示更新前后的学生姓名。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> tr_up</span><br><span class="line"><span class="keyword">on</span> s</span><br><span class="line">after <span class="keyword">update</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line">if <span class="keyword">update</span>(sname)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">select</span> sname<span class="string">&#x27;更名前&#x27;</span><span class="keyword">from</span> deleted</span><br><span class="line">    <span class="keyword">select</span> sname<span class="string">&#x27;更名后&#x27;</span><span class="keyword">from</span> inserted</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>           </div>         </details></li><li><p>存储过程</p> <details class="folding-tag" cyan><summary> answer PPT </summary>           <div class='content'>           <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.创建一个加密存储过程，从学生选课数据库中查询学号,姓名,课程名和成绩。</span></span><br><span class="line"><span class="comment">-- 执行该存储过程，并用sp_helptext查看该存储过程代码。</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> proc_sc_select</span><br><span class="line"><span class="keyword">WITH</span> ENCRYPTION</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> s.snum, sname, cname, score</span><br><span class="line"><span class="keyword">FROM</span> s, sc, c</span><br><span class="line"><span class="keyword">WHERE</span> s.snum <span class="operator">=</span> sc.snum <span class="keyword">AND</span> sc.cnum <span class="operator">=</span> c.cnum</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="keyword">EXEC</span> proc_sc_select;</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line">SP_HELPTEXT proc_sc_select;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> proc_sc_select;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--  2.创建一存储过程，完成向课程表（C）中插入一条记录</span></span><br><span class="line"><span class="comment">-- 记录值通过输入参数传递到存储过程中，并执行该存储过程。</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> proc_c_insert(<span class="variable">@cnum</span> <span class="keyword">AS</span> <span class="type">nchar</span>(<span class="number">12</span>), <span class="variable">@cname</span> <span class="keyword">AS</span> nvarchar(<span class="number">50</span>), <span class="variable">@credit</span> <span class="keyword">AS</span> <span class="type">numeric</span>(<span class="number">5</span>, <span class="number">1</span>))</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> c</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="variable">@cnum</span>, <span class="variable">@cname</span>, <span class="variable">@credit</span>);</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="keyword">EXEC</span> proc_c_insert <span class="string">&#x27;00001005&#x27;</span>, VUE3, <span class="number">12.0</span>;</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3.创建一存储过程，在删除学生(s)表时,同时删除该学生的选课记录，</span></span><br><span class="line"><span class="comment">-- 输入参数为学号。并执行该存储过程。</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> proc_delete_s_sc(<span class="variable">@snum</span> <span class="keyword">AS</span> <span class="type">nchar</span>(<span class="number">14</span>))</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> sc</span><br><span class="line"><span class="keyword">WHERE</span> snum <span class="operator">=</span> <span class="variable">@snum</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> s</span><br><span class="line"><span class="keyword">WHERE</span> snum <span class="operator">=</span> <span class="variable">@snum</span>;</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="keyword">EXEC</span> proc_delete_s_sc <span class="string">&#x27;10103060209&#x27;</span></span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4.创建一存储过程proc2,显示其指定课程的成绩在指定范围内的学生学号、姓名、课程名和成绩，</span></span><br><span class="line"><span class="comment">-- 并执行该存储过程。</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> proc2(<span class="variable">@cname</span> <span class="keyword">AS</span> nvarchar(<span class="number">50</span>), <span class="variable">@min</span> <span class="keyword">AS</span> tinyint, <span class="variable">@max</span> <span class="keyword">AS</span> tinyint)</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> s.snum, s.sname, cname, score</span><br><span class="line"><span class="keyword">FROM</span> s, sc, c</span><br><span class="line"><span class="keyword">WHERE</span> s.snum <span class="operator">=</span> sc.snum <span class="keyword">AND</span> sc.cnum <span class="operator">=</span> c.cnum <span class="keyword">AND</span> score <span class="operator">&gt;=</span> <span class="variable">@min</span> <span class="keyword">AND</span> score <span class="operator">&lt;=</span> <span class="variable">@max</span> <span class="keyword">AND</span> c.cname <span class="operator">=</span> <span class="variable">@cname</span>;</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="keyword">EXEC</span> proc2 <span class="string">&#x27;中药学&#x27;</span>, <span class="number">40</span>, <span class="number">50</span></span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 5. 创建一存储过程，显示某一同学的平均成绩，</span></span><br><span class="line"><span class="comment">-- 学号通过输入参数传递到存储过程中，并执行该存储过程。</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> proc_avg(<span class="variable">@snum</span> <span class="keyword">AS</span> <span class="type">nchar</span>(<span class="number">14</span>))</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> s.snum, sname, <span class="built_in">AVG</span>(score) <span class="keyword">AS</span> <span class="string">&#x27;avg_score&#x27;</span></span><br><span class="line"><span class="keyword">FROM</span> s, sc</span><br><span class="line"><span class="keyword">WHERE</span> s.snum <span class="operator">=</span> sc.snum <span class="keyword">AND</span> s.snum <span class="operator">=</span> <span class="variable">@snum</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> sname, s.snum;</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="keyword">EXEC</span> proc_avg <span class="string">&#x27;10103060229&#x27;</span></span><br><span class="line">GO</span><br></pre></td></tr></table></figure>           </div>         </details></li></ol></div><h2 id="数据库安全性"><a class="markdownIt-Anchor" href="#数据库安全性"></a> 数据库安全性</h2><div class="note green no-icon flat"><ol><li><p>数据库安全性控制</p> <details class="folding-tag" cyan><summary> answer P137 </summary>           <div class='content'>           <p>数据库安全性控制的常用方法：用户标识和鉴定；存取控制；视图；审计；数据加密</p>           </div>         </details></li><li><p>权限授予和收回</p> <details class="folding-tag" cyan><summary> answer P141 </summary>           <div class='content'>           <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 把查询S表权限授给用户U1</span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span></span><br><span class="line"><span class="keyword">ON</span> S</span><br><span class="line"><span class="keyword">TO</span> U1;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 把C表的增、删、改权限授予用户U2和U3</span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">INSERT</span>,<span class="keyword">DELETE</span>,<span class="keyword">UPDATE</span></span><br><span class="line"><span class="keyword">ON</span> C</span><br><span class="line"><span class="keyword">TO</span> U2,U3;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 把对表SC的查询权限授予所有用户</span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span></span><br><span class="line"><span class="keyword">ON</span> SC</span><br><span class="line"><span class="keyword">TO</span> PUBLIC;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 把查询Student表和修改学生学号的权限授给用户U4</span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">UPDATE</span>(Snum), <span class="keyword">SELECT</span></span><br><span class="line"><span class="keyword">ON</span> S</span><br><span class="line"><span class="keyword">TO</span> U4;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 把对表SC的INSERT权限授予U5用户，并允许他再将此权限授予其他用户</span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">INSERT</span></span><br><span class="line"><span class="keyword">ON</span> SC</span><br><span class="line"><span class="keyword">TO</span> U5</span><br><span class="line"><span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 收回所有用户对表SC的查询权限</span></span><br><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">SELECT</span></span><br><span class="line"><span class="keyword">ON</span> SC</span><br><span class="line"><span class="keyword">FROM</span> PUBLIC;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 把用户U5对SC表的INSERT权限收回</span></span><br><span class="line"><span class="comment">-- 将用户U5的INSERT权限收回的时候应该使用CASCADE，否则拒绝执行该语句</span></span><br><span class="line"><span class="comment">-- 如果U6或U7还从其他用户处获得对SC表的INSERT权限，则他们仍具有此权限，</span></span><br><span class="line"><span class="comment">-- 系统只收回直接或间接从U5处获得的权限</span></span><br><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">INSERT</span></span><br><span class="line"><span class="keyword">ON</span> SC</span><br><span class="line"><span class="keyword">FROM</span> U5 CASCADE ;</span><br></pre></td></tr></table></figure>           </div>         </details></li></ol></div><h2 id="数据库完整性"><a class="markdownIt-Anchor" href="#数据库完整性"></a> 数据库完整性</h2><div class="note blue no-icon flat"><ol><li><p>数据库完整性定义</p> <details class="folding-tag" cyan><summary> answer P157 </summary>           <div class='content'>           <p>数据库完整性是指数据的正确性和相容性(P13 还有一个有效性)</p>           </div>         </details></li></ol></div><h2 id="关系数据理论"><a class="markdownIt-Anchor" href="#关系数据理论"></a> 关系数据理论</h2><div class="tip warning"><p>建议直接看书本与PPT中的函数依赖、码、1NF、2NF、3NF、BCNF、P189图、Armstrong公理系统、推理规则、算法。这章内容会出现在简答题，要求会计算和判断。同时这里提供了对应的习题供大家练习，只需要看考试内容，做题步骤还建议参考老师的PPT<a href="https://pan.baidu.com/s/1fjs7WsZIIBuPQNtXyzONoA">百度网盘</a>的下载地址<span class="hide-inline"><button type="button" class="hide-button" style="background-color: #FF7242;color: #fff">提取码<br /></button><span class="hide-content">6hei</span></span></p></div><div class="note orange no-icon flat"><ol><li>候选码</li><li>属性集闭包</li><li>范式判断</li></ol><details class="folding-tag" cyan><summary> 推理规则 </summary>          <div class='content'>          <ol><li>自反律(reflexivity)： 若Y ⊆ X， 则X → Y</li><li>增广律(augmentation)： 若X → Y ，则XZ → YZ</li><li>传递律(transitivity)： 若X → Y，Y → Z，则X → Z</li><li>合并律(union rule)：若X → Y，X → Z，则X → YZ</li><li>分解律(decomposition rule)： 若X → YZ ，则X → Y，X → Z</li><li>伪传递律(pseudotransitivity rule)：若X → Y，WY → Z，则WX → Z</li></ol>          </div>        </details></div><h2 id="数据库设计概述"><a class="markdownIt-Anchor" href="#数据库设计概述"></a> 数据库设计概述</h2><div class="note red no-icon flat"><ol><li>数据库设计六大阶段 <details class="folding-tag" cyan><summary> answer P209 </summary>           <div class='content'>           <ol><li>需求分析阶段</li><li>概念结构设计阶段</li><li>逻辑结构设计阶段</li><li>物理结构设计阶段</li><li>数据库实施阶段</li><li>数据库运行和维护阶段</li></ol>           </div>         </details></li></ol></div><h2 id="数据库恢复技术"><a class="markdownIt-Anchor" href="#数据库恢复技术"></a> 数据库恢复技术</h2><div class="tip warning"><p>注意理解把握P303图10.4中每个阶段系统所做的事情，看懂原理非常重要，考试中很可能出现类似的图然后进行分析</p></div><div class="note green no-icon flat"><ol><li><p>事务定义</p> <details class="folding-tag" cyan><summary> answer P293 </summary>           <div class='content'>           <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">BEGIN</span> TRANSACTION;</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line"><span class="keyword">ROLLBACK</span>;</span><br></pre></td></tr></table></figure>           </div>         </details></li><li><p>事务四大特性</p> <details class="folding-tag" cyan><summary> answer P293 </summary>           <div class='content'>           <p>ACID原则：原子性（Atomicity）、一致性（Consistency）、隔离性（Isolation）、持续性（Durability）</p>           </div>         </details></li><li><p>故障的种类</p> <details class="folding-tag" cyan><summary> answer P295 </summary>           <div class='content'>           <ol><li>事物内部故障 <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--例如，银行转账事务，这个事务把一笔金额从一个账户甲转给另一个账户乙。</span></span><br><span class="line"><span class="keyword">BEGIN</span> TRANSACTION</span><br><span class="line">读账户甲的余额BALANCE;</span><br><span class="line">BALANCE<span class="operator">=</span>BALANCE<span class="operator">-</span>AMOUNT; <span class="comment">/*AMOUNT 为转账金额*/</span></span><br><span class="line">IF(BALANCE <span class="operator">&lt;</span> <span class="number">0</span> ) <span class="keyword">THEN</span></span><br><span class="line">&#123;</span><br><span class="line">    打印‘金额不足，不能转账’；<span class="comment">/*事务内部可能造成事务被回滚的情况*/</span></span><br><span class="line">    <span class="keyword">ROLLBACK</span>; <span class="comment">/*撤销刚才的修改，恢复事务*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">ELSE</span></span><br><span class="line">&#123;</span><br><span class="line">    读账户乙的余额BALANCE1;</span><br><span class="line">    BALANCE1<span class="operator">=</span>BALANCE1<span class="operator">+</span>AMOUNT;</span><br><span class="line">    写回BALANCE1;</span><br><span class="line">    <span class="keyword">COMMIT</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>事务内部更多的故障是非预期的，是不能由应用程序处理的。</li><li>事物内部故障的常见原因：<ul><li>运算溢出</li><li>并发事务发生死锁而被选中撤销该事务</li><li>违反了某些完整性限制而被终止</li></ul></li><li>恢复操作：事务撤销（UNDO）</li></ol></li><li>系统故障<ol><li>称为软故障，是指造成系统停止运转的任何事件，使得系统要重新启动。整个系统的正常运行突然被破坏，所有正在运行的事务都非正常终止，不破坏数据库，内存中数据库缓冲区的信息全部丢失。发生系统故障时，一些尚未完成的事务的结果可能已送入物理数据库，造成数据库可能处于不正确状态。</li><li>系统故障的常见原因：<ul><li>特定类型的硬件错误（如CPU故障）</li><li>操作系统故障</li><li>数据库管理系统代码错误</li><li>系统断电</li></ul></li><li>恢复操作：系统重新启动时，恢复程序让所有非正常终止的事务回滚，强行撤消（UNDO）所有未完成事务，重作（REDO）所有已提交的事务</li></ol></li><li>介质故障<ol><li>称为硬故障，指外存故障。介质故障破坏数据库或部分数据库，并影响正在存取这部分数据的所有事务介质故障比前两类故障的可能性小得多，但破坏性大得多</li><li>介质故障的常见原因：<ul><li>磁盘损坏</li><li>磁头碰撞</li><li>瞬时强磁场干扰</li></ul></li></ol></li><li>计算机病毒（知道即可，不属于典型故障）</li></ol>           </div>         </details></li><li><p>建立冗余数据常用技术</p> <details class="folding-tag" cyan><summary> answer P297 </summary>           <div class='content'>           <ol><li>恢复操作的基本原理：冗余</li><li>建立冗余数据最常用的技术是数据转储和登记日志文件</li><li>数据转储的四种方法：<ul><li>动态海量转储</li><li>动态增量转储</li><li>静态海量转储</li><li>静态增量转储</li></ul></li></ol>           </div>         </details></li><li><p>登记日志文件</p> <details class="folding-tag" cyan><summary> answer P298 </summary>           <div class='content'>           <ol><li>日志文件定义：是用来记录事务对数据库的更新操作的文件</li></ol>           </div>         </details></li><li><p>恢复的策略</p> <details class="folding-tag" cyan><summary> answer P300 </summary>           <div class='content'>           <ol><li>事务故障的恢复：DBMS自动完成，不需要用户操作，UNDO操作。<ul><li>反向扫描文件日志，查找该事物的更新操作</li><li>对该事务的更新操作执行逆操作</li></ul></li><li>系统故障的恢复：DBMS自动完成，不需要用户操作，Undo故障发生时未完成的事务，Redo已完成的事务<ul><li>正向扫描日志文件</li><li>对撤销(UNDO)队列事务进行撤销(UNDO)处理</li><li>对重做(REDO)队列事务进行重做(REDO)处理</li></ul></li><li>介质故障的恢复：介质故障的恢复需要DBA介入<ul><li>装入最新的后备数据库副本,使数据库恢复到最近一次转储时的一致性状态。注意：对于动态转储的数据库副本，还须同时装入转储时刻的日志文件副本，利用恢复系统故障的方法（即REDO+UNDO），才能将数据库恢复到一致性状态</li><li>装入有关的日志文件副本，重做已完成的事务。</li></ul></li></ol>           </div>         </details></li><li><p>具有检查点的恢复技术</p> <details class="folding-tag" cyan><summary> answer P303 </summary>           <div class='content'>           <ol><li>问题指出<ul><li>搜索整个日志将耗费大量的时间</li><li>重做处理：重新执行，浪费了大量时间</li></ul></li><li>检查点技术<ol><li>暂时终止现有事务的执行</li><li>把主存中被修改的数据缓冲区强制写入磁盘</li><li>在日志中写入检查点记录，并把日志强制写入磁盘</li><li>重新开始执行事务</li></ol></li><li>检查点恢复步骤<ol><li>从重新开始文件中找到最后一个检查点记录</li><li>由该检查点得到检查点建立时刻正在执行的事务清单ACTIVE-LIST<ul><li>建立事务队列：UNDO-LIST和REDO-LIST</li><li>将ACTIVE-LIST暂时放入UNDO-LIST，REDO-LIST为空</li></ul></li><li>从检查点正向扫描事务<ul><li>新开始的事务放入UNDO-LIST</li><li>提交的事务放入REDO-LIST</li></ul></li><li>处理每个队列中的事务</li></ol></li></ol>           </div>         </details></li></ol></div><h2 id="并发控制与封锁"><a class="markdownIt-Anchor" href="#并发控制与封锁"></a> 并发控制与封锁</h2><div class="tip warning"><p>可以通过阅读P311的图理解掌握丢失修改、不可重复读、读“脏”数据的相关概念</p></div><div class="note blue no-icon flat"><ol><li>并发操作与数据的不一致性 <details class="folding-tag" cyan><summary> answer P310 </summary>           <div class='content'>           <ol><li>丢失修改：两个事务T1和T2读入同一数据并修改，T2的提交结果破坏了T1提交的结果，导致T1的修改被丢失</li><li>不可重复读：事务T1读取数据后，事 务T2执行更新操作，使T1无法再现前一次读取结果。</li><li>读“脏”数据：事务T1修改某一数据，并将其写回磁盘。事务T2读取同一数据后，T1由于某种原因被撤销。这时T1已修改过的数据恢复原值，T2读到的数据就与数据库中的数据不一致</li></ol>           </div>         </details></li><li>封锁 <details class="folding-tag" cyan><summary> answer P310 </summary>           <div class='content'>           <ol><li>封锁就是事务T在对某个数据对象（例如表、记录等）操作之前，先向系统发出请求，对其加锁</li><li>加锁后事务T就对该数据对象有了一定的控制，在事务T释放它的锁之前，其它的事务不能更新此数据对象。</li><li>封锁是实现并发控制的一个非常重要的技术</li><li>一个事务对某个数据对象加锁后究竟拥有什么样的控制由封锁的类型决定。</li><li>基本封锁类型：排他锁（写锁，Exclusive Locks，简记为X锁）；共享锁（共享锁，Share Locks，简记为S锁）</li><li>排他锁：<ul><li>若事务T对数据对象A加上X锁，则只允许T读取和修改A，其它任何事务都不能再对A加任何类型的锁，直到T释放A上的锁。</li><li>保证其他事务在T释放A上的锁之前不能再读取和修改A</li></ul></li><li>共享锁：<ul><li>若事务T对数据对象A加上S锁，则事务T可以读A但不能修改A，其它事务只能再对A加S锁，而不能加X锁，直到T释放A上的S锁</li><li>保证其他事务可以读A，但在T释放A上的S锁之前不能对A做任何修改<br /><img src="https://pic.imgdb.cn/item/62b71d870947543129c6780f.png" alt="" /></li></ul></li></ol>           </div>         </details></li></ol></div><h2 id="经典习题"><a class="markdownIt-Anchor" href="#经典习题"></a> 经典习题</h2><div class="tip warning"><p>主要选取不在罗列内容但可能考的习题</p></div><div class="note orange no-icon flat"><details class="folding-tag" cyan><summary> 选择题 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/62b8120e2f25919088effcd3.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b8112a2f25919088eedab9.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b811412f25919088eefa70.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b811632f25919088ef248c.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b812602f25919088f0657c.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b812b02f25919088f0d680.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b812f92f25919088f12fda.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b8137d2f25919088f1de24.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b813c22f25919088f2345d.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b815b32f25919088f4bc9c.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b816042f25919088f52738.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b816212f25919088f54c39.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b816912f25919088f5d351.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b816b02f25919088f5fb7c.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b816ee2f25919088f64bab.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b8174c2f25919088f6c5d9.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b8188a2f25919088f85ef6.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b818ec2f25919088f8ecd4.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b8195a2f25919088f9a814.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b819772f25919088f9de1e.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b819a02f25919088fa2603.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b819ec2f25919088faa557.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b81a762f25919088fb9569.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b81b942f25919088fd9d56.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b81c182f25919088fe6271.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b81c832f25919088ff0602.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b81ced2f25919088ffa32a.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b81d0e2f25919088ffd2cd.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b81d222f25919088ffed83.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b81d502f259190880034a1.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b81d6d2f25919088006a37.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b81da62f2591908800c17a.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b81dc42f2591908800efab.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b81e042f25919088014916.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b835872f259190881fe7ee.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b835ee2f25919088206728.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b8363c2f2591908820cbcd.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b838a62f2591908823f1c0.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b839392f2591908824b634.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b839512f2591908824d9af.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b8397f2f25919088251923.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b839c62f2591908825799b.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b83a8e2f25919088268276.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b83aa02f25919088269c6e.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b83ac52f2591908826c808.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b83af42f25919088270381.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b83b042f25919088271ce1.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b83b3a2f25919088276795.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/62b83c2b2f2591908828a918.png" alt="" /></p>              </div>            </details></div>]]></content>
      
      
      <categories>
          
          <category> 复习整理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DB </tag>
            
            <tag> 期末复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker镜像</title>
      <link href="/posts/890cc775/"/>
      <url>/posts/890cc775/</url>
      
        <content type="html"><![CDATA[<div class="tag link"><a class="link-card" title="docker基础用法" href="/posts/4ac0a166/#docker"><div class="left"><img src="https://pic.imgdb.cn/item/61c545a52ab3f51d91edbff3.jpg"/></div><div class="right"><p class="text">docker基础用法</p><p class="url">/posts/4ac0a166/#docker</p></div></a></div><div class="tip warning faa-horizontal animated faa-fast"><p>站长使用docker命令时已不需要加<code>sudo</code>,具体请查看<a href="/posts/4ac0a166/#docker">docker基础用法</a></p></div><h2 id="安装mysql-docker镜像"><a class="markdownIt-Anchor" href="#安装mysql-docker镜像"></a> 安装MySQL docker镜像</h2><div class="note blue no-icon flat"><ol><li>访问<a href="https://hub.docker.com/_/mysql?tab=tags">MySQL镜像库地址</a></li><li>在宿主服务器输入<code>docker pull mysql:latest</code> 或者 <code>docker pull mysql:8.0.28</code><br /><img src="https://pic.imgdb.cn/item/621e0af32ab3f51d91a31a79.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/621e0b232ab3f51d91a36b46.png" alt="" /></li><li>使用<code>docker images</code>查看是否安装成功<br /><img src="https://pic.imgdb.cn/item/621e0b7b2ab3f51d91a46562.png" alt="" /></li><li>运行容器 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql为自定义容器名字</span></span><br><span class="line">docker run -p 3306:3306 --name mysql -e MYSQL_ROOT_PASSWORD=12345678 -itd mysql:8.0.28</span><br></pre></td></tr></table></figure></li><li>通过 <code>docker ps</code> 命令查看是否安装成功<br /><img src="https://pic.imgdb.cn/item/621e0bf52ab3f51d91a54467.png" alt="" /></li><li><code>docker exec -it mysql bash</code>进入<code>mysql</code>容器</li><li>登录mysql<code>mysql -u root -p</code></li><li>创建远程访问用户 <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建用户</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;jezer&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;12345678&#x27;</span>;</span><br><span class="line"><span class="comment">-- 赋予所有权限</span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;jezer&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line"><span class="comment">-- 刷新权限</span></span><br><span class="line">FLUSH PRIVILEGES</span><br></pre></td></tr></table></figure></li><li>先按<code>Ctrl+p</code>，再按<code>Ctrl+q</code>挂起容器</li><li>去本地<code>Navicat</code>绑定<code>mysql</code></li></ol></div><h2 id="安装tomcat-docker镜像"><a class="markdownIt-Anchor" href="#安装tomcat-docker镜像"></a> 安装Tomcat docker镜像</h2><div class="note orange no-icon flat"><ol><li>访问<a href="https://hub.docker.com/_/tomcat?tab=tags">Tomcat镜像库地址</a></li><li>在宿主服务器输入<code>docker pull tomcat:9.0.53</code>(建议和本地Tomcat版本号一致，不然会有很多问题)</li><li>使用<code>docker images</code>查看是否安装成功</li><li>运行容器 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tomcat为自定义容器名字</span></span><br><span class="line"><span class="comment"># -v $PWD/test:/usr/local/tomcat/webapps/test：将主机中当前目录下的 test 挂载到容器的 /test。也可以不加，后面有办法导入war包</span></span><br><span class="line"><span class="comment"># webapps文件夹下为运行的网站war包</span></span><br><span class="line">docker run -p 8888:8080 -v <span class="variable">$PWD</span>/test:/usr/local/tomcat/webapps/test --name tomcat -itd tomcat:9.0.53</span><br></pre></td></tr></table></figure></li><li>通过 <code>docker ps</code> 命令查看是否安装成功</li><li><code>docker exec -it tomcat /bin/bash</code>进入<code>tomcat</code>容器</li><li>先按<code>Ctrl+p</code>，再按<code>Ctrl+q</code>可以挂起容器，也可以通过输入<code>exit</code>退出(目的在于交互)</li><li>在宿主服务器复制war包到Tomcat的webapps目录下 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">cp</span> /home/qrcode.war tomcat:/usr/local/tomcat/webapps</span><br></pre></td></tr></table></figure></li><li>重启tomcat容器<code>docker restart tomcat</code>，访问url即可</li></ol><details class="folding-tag" cyan><summary> 问题解决 </summary>              <div class='content'>              <p>通过<code>ip:8080</code>的方式出现404错误<br /><img src="https://pic.imgdb.cn/item/621e25c92ab3f51d91ce26ff.png" alt="" /><br />通过<code>docker exec -it tomcat /bin/bash</code>进入Tomcat发现<code>webapps</code>为空，但<code>webapps.dist</code>下生成了对应的包<br /><img src="https://pic.imgdb.cn/item/621e262a2ab3f51d91cedef3.png" alt="" /><br />可以通过<code>cp -r webapps.dist/* ./webapps</code>复制到<code>webapps</code>下，然后重启<code>tomcat</code>容器</p>              </div>            </details></div><h2 id="安装nginx-docker镜像"><a class="markdownIt-Anchor" href="#安装nginx-docker镜像"></a> 安装Nginx docker镜像</h2><div class="note purple no-icon flat"><ol><li>访问<a href="https://hub.docker.com/_/nginx?tab=tags">Nginx镜像库地址</a></li><li>在宿主服务器输入<code>docker pull nginx:latest</code></li><li>使用<code>docker images</code>查看是否安装成功</li><li>运行容器 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># nginx为自定义容器名字</span></span><br><span class="line">docker run -p 80:80 -p 443:443 --name nginx -itd nginx:latest</span><br></pre></td></tr></table></figure></li><li>通过 <code>docker ps</code> 命令查看是否安装成功</li><li><code>docker exec -it nginx /bin/bash</code>进入<code>nginx</code>容器</li><li>在自己云服务器管理平台下载SSL证书（nginx版本），并上传到云服务器</li><li>进入’nginx’容器，在<code>/etc/nginx</code>下创建<code>cert</code>文件夹</li><li>输入<code>exit</code>退出容器，将下载的SSL证书放到<code>nginx</code>容器中 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 记得将7388929_www.jezer05.cn.key 7388929_www.jezer05.cn.pem换成自己SSL所在位置</span></span><br><span class="line">docker <span class="built_in">cp</span> 7388929_www.jezer05.cn.key nginx:/etc/nginx/cert</span><br><span class="line">docker <span class="built_in">cp</span> 7388929_www.jezer05.cn.pem nginx:/etc/nginx/cert</span><br></pre></td></tr></table></figure></li><li>在本地创建nginx.conf文件，并编辑内容<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">user  nginx;</span><br><span class="line">worker_processes  auto;</span><br><span class="line"></span><br><span class="line">error_log  /var/log/nginx/error.log notice;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class="line">                      &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class="line">                      &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line">    #gzip  on;</span><br><span class="line"></span><br><span class="line">    upstream tomcat &#123;</span><br><span class="line">        # 这里是反向代理到云服务器的Tomcat容器</span><br><span class="line">        # 这里要换成云服务器的内网IP，不可使用127.0.0.1等</span><br><span class="line">        # 8888改自己Tomcat开放的端口号</span><br><span class="line">        server xx.xx.xx.xx:8888;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name jezer05.cn www.jezer05.cn; #需要将jezer05.cn www.jezer05.cn替换成证书绑定的域名。</span><br><span class="line">        rewrite ^(.*)$ https://$host$1; #将所有HTTP请求通过rewrite指令重定向到HTTPS。</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #以下属性中，以ssl开头的属性表示与证书配置有关。</span><br><span class="line">    server &#123;</span><br><span class="line">        listen 443 ssl;</span><br><span class="line">        #配置HTTPS的默认访问端口为443。</span><br><span class="line">        #如果未在此处配置HTTPS的默认访问端口，可能会造成Nginx无法启动。</span><br><span class="line">        #如果您使用Nginx 1.15.0及以上版本，请使用listen 443 ssl代替listen 443和ssl on。</span><br><span class="line">        server_name jezer05.cn www.jezer05.cn; #需要将jezer05.cn www.jezer05.cn替换成证书绑定的域名。</span><br><span class="line">        #root html;</span><br><span class="line">        #index index.html index.htm;</span><br><span class="line">        ssl_certificate cert/7388929_www.jezer05.cn.pem;  #需要将7388929_www.jezer05.cn.pem替换成已上传的证书文件的名称。</span><br><span class="line">        ssl_certificate_key cert/7388929_www.jezer05.cn.key; #需要将7388929_www.jezer05.cn.key替换成已上传的证书私钥文件的名称。</span><br><span class="line">        ssl_session_timeout 5m;</span><br><span class="line">        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span><br><span class="line">        #表示使用的加密套件的类型。</span><br><span class="line">        ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3; #表示使用的TLS协议的类型。</span><br><span class="line">        ssl_prefer_server_ciphers on;</span><br><span class="line">        location / &#123;</span><br><span class="line">            #proxy_set_header HOST $host;</span><br><span class="line">            #proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">            #proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">            #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">            proxy_pass http://tomcat;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>将<code>nginx.conf</code>复制到<code>nginx</code>容器中<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">cp</span> nginx.conf nginx:/etc/nginx</span><br></pre></td></tr></table></figure></li><li>重启nginx容器<code>docker restart nginx</code>，访问url即可</li></ol></div>]]></content>
      
      
      <categories>
          
          <category> 云服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 帮助文档 </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSM项目开发流程</title>
      <link href="/posts/40a36fe6/"/>
      <url>/posts/40a36fe6/</url>
      
        <content type="html"><![CDATA[<div class="tag link"><a class="link-card" title="Mybatis" href="/posts/da3e1361/"><div class="left"><img src="https://pic.imgdb.cn/item/61c545a52ab3f51d91edbff3.jpg"/></div><div class="right"><p class="text">Mybatis</p><p class="url">/posts/da3e1361/</p></div></a></div><div class="tag link"><a class="link-card" title="Spring" href="/posts/6c92115f/"><div class="left"><img src="https://pic.imgdb.cn/item/61c545a52ab3f51d91edbff3.jpg"/></div><div class="right"><p class="text">Spring</p><p class="url">/posts/6c92115f/</p></div></a></div><h2 id="帮助文档"><a class="markdownIt-Anchor" href="#帮助文档"></a> 帮助文档</h2><div class="site-card-group"><a class="site-card" href="https://docs.spring.io/spring-framework/docs/current/reference/html/index.html"><div class="img"><img src="https://pic.imgdb.cn/item/621ce5432ab3f51d91126e01.png"/></div><div class="info"><img src="https://pic.imgdb.cn/item/621ce70b2ab3f51d9115dd13.jpg"/><span class="title">Spring Framework Documentation</span><span class="desc">Spring Framework官方文档</span></div></a><a class="site-card" href="https://www.docs4dev.com/docs/zh/spring-framework/5.1.3.RELEASE/reference/"><div class="img"><img src="https://pic.imgdb.cn/item/621ce8232ab3f51d9117ef8e.png"/></div><div class="info"><img src="https://pic.imgdb.cn/item/621ce70b2ab3f51d9115dd13.jpg"/><span class="title">Spring Framework 中文文档</span><span class="desc">Spring Framework中文文档，建议看官方文档，这个不更新</span></div></a><a class="site-card" href="https://mybatis.org/mybatis-3/zh/index.html"><div class="img"><img src="https://pic.imgdb.cn/item/621ce8cf2ab3f51d9119366f.png"/></div><div class="info"><img src="https://pic.imgdb.cn/item/621ce8952ab3f51d9118c956.png"/><span class="title">Mybatis官方文档</span><span class="desc">Mybatis官方文档</span></div></a><a class="site-card" href="https://mvnrepository.com"><div class="img"><img src="https://pic.imgdb.cn/item/621ce9172ab3f51d9119ba0d.png"/></div><div class="info"><img src="https://pic.imgdb.cn/item/621cea1e2ab3f51d911b9511.png"/><span class="title">Maven Repository</span><span class="desc">Maven仓库网址</span></div></a></div><h2 id="基本项目结构"><a class="markdownIt-Anchor" href="#基本项目结构"></a> 基本项目结构</h2><div class="note blue no-icon flat"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">├─pom.xml</span><br><span class="line">|</span><br><span class="line">├─src</span><br><span class="line">│  ├─main</span><br><span class="line">│  │  ├─java</span><br><span class="line">│  │  │  └─top</span><br><span class="line">│  │  │      └─jezer</span><br><span class="line">│  │  │          ├─controller      //控制器包</span><br><span class="line">│  │  │          ├─entity          //POJO包</span><br><span class="line">│  │  │          ├─interceptor     //拦截器包</span><br><span class="line">│  │  │          ├─mapper          //Mapper接口包</span><br><span class="line">│  │  │          ├─service         //Service接口包</span><br><span class="line">│  │  │          ├─serviceImpl     //service实现类包</span><br><span class="line">│  │  │          └─util            //工具包</span><br><span class="line">│  │  └─resources                  //资源文件夹（配置文件）</span><br><span class="line">│  │      ├─mapper                                  //mapper.xml文件夹</span><br><span class="line">│  │      │   └─BooksMapper.xml</span><br><span class="line">|  |      ├─applicationContext.xml                 //Spring配置文件</span><br><span class="line">|  |      ├─dbconfig.properties                    //数据库配置文件</span><br><span class="line">|  |      ├─log4j.properties                       //log4j配置文件</span><br><span class="line">|  |      ├─mybatis-config.xml                     //mybatis配置文件</span><br><span class="line">|  |      ├─spring-mvc.xml                         //springMvc配置文件</span><br><span class="line">|  |      ├─spring-mapper.xml                      //spring-mapper配置文件</span><br><span class="line">|  |      └─spring-service.xml                     //spring-service配置文件</span><br><span class="line">│  └─test</span><br><span class="line">│      └─java</span><br><span class="line">|</span><br><span class="line">└─web</span><br><span class="line">    ├─static</span><br><span class="line">    │  ├─css</span><br><span class="line">    │  ├─img</span><br><span class="line">    │  └─js</span><br><span class="line">    └─WEB-INF</span><br><span class="line">    │  └─pages</span><br><span class="line">    │  │   └─books</span><br><span class="line">    │  │      └─allBooks.jsp</span><br><span class="line">    │  └─web.xml</span><br><span class="line">    └─index.jsp</span><br><span class="line">    └─login.jsp</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><h2 id="基本环境搭建"><a class="markdownIt-Anchor" href="#基本环境搭建"></a> 基本环境搭建</h2><div class="note orange no-icon flat"><ol><li><p>创建数据库表</p> <details class="folding-tag" orange open><summary> init.sql </summary>           <div class='content'>           <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE `ssmbuild`;</span><br><span class="line"></span><br><span class="line">USE `ssmbuild`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `books`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `books` (</span><br><span class="line">`bookID` <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;书id&#x27;</span>,</span><br><span class="line">`bookName` <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;书名&#x27;</span>,</span><br><span class="line">`bookCounts` <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;数量&#x27;</span>,</span><br><span class="line">`detail` <span class="type">VARCHAR</span>(<span class="number">200</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;描述&#x27;</span>,</span><br><span class="line">KEY `bookID` (`bookID`)</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span>  <span class="keyword">INTO</span> `books`(`bookID`,`bookName`,`bookCounts`,`detail`)<span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>,<span class="string">&#x27;Java&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;从入门到放弃&#x27;</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="string">&#x27;MySQL&#x27;</span>,<span class="number">10</span>,<span class="string">&#x27;从删库到跑路&#x27;</span>),</span><br><span class="line">(<span class="number">3</span>,<span class="string">&#x27;Linux&#x27;</span>,<span class="number">5</span>,<span class="string">&#x27;从进门到进牢&#x27;</span>);</span><br></pre></td></tr></table></figure>           </div>         </details></li><li><p>新建一个空的Maven项目</p></li><li><p>在<code>pom.xml</code>中导入相关的pom依赖！</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Junit测试工具--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--https://mvnrepository.com/artifact/junit/junit--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--mysql数据库驱动--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--https://mvnrepository.com/artifact/mysql/mysql-connector-java--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.28<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 数据库连接池：c3p0 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--https://mvnrepository.com/artifact/com.mchange/c3p0--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mchange<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.5.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 实体类插件：lombok--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.projectlombok/lombok --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.22<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--Servlet - JSP--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/javax.servlet/servlet-api --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--https://mvnrepository.com/artifact/javax.servlet.jsp/jsp-api--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--https://mvnrepository.com/artifact/javax.servlet/jstl--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--Mybatis--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--https://mvnrepository.com/artifact/org.mybatis/mybatis--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--https://mvnrepository.com/artifact/org.mybatis/mybatis-spring--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--Spring--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--https://mvnrepository.com/artifact/org.springframework/spring-webmvc--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--https://mvnrepository.com/artifact/org.springframework/spring-jdbc--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--log4j日志工厂--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在<code>pom.xml</code>中设置Maven静态资源过滤</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--Maven静态资源过滤问题--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>连接数据库</p></li><li><p>创建基本项目结构<br /><img src="https://pic.imgdb.cn/item/6222c6c25baa1a80ab0e6990.png" alt="" /></p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">interceptor ---&gt; 拦截器包</span><br><span class="line">controller ----&gt; 控制器包</span><br><span class="line">entity ----&gt; POJO包</span><br><span class="line">mapper ----&gt; Mapper接口包</span><br><span class="line">service ----&gt; Service接口包</span><br><span class="line">serviceImpl ----&gt; service实现类包</span><br><span class="line">util ----&gt; 工具包</span><br><span class="line">mapping ---&gt; mapper.xml文件夹</span><br><span class="line">mybatis-config.xml ----&gt; mybatis配置文件</span><br><span class="line">applicationContext.xml ----&gt; Spring配置文件</span><br></pre></td></tr></table></figure> <details class="folding-tag" cyan open><summary> mybatis-config.xml </summary>           <div class='content'>           <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>           </div>         </details> <details class="folding-tag" orange open><summary> applicationContext.xml </summary>           <div class='content'>           <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        https://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>           </div>         </details></li></ol></div><h2 id="mybatis层编写"><a class="markdownIt-Anchor" href="#mybatis层编写"></a> Mybatis层编写</h2><div class="note blue no-icon flat"><ol><li><p>log4j日志配置文件<code>log4j.properties</code></p> <details class="folding-tag" cyan><summary> log4j.properties </summary>           <div class='content'>           <figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将等级为DEBUG的日志信息输出到console和file这两个目的地，console和file的定义在下面的代码</span></span><br><span class="line"><span class="attr">log4j.rootLogger</span>=<span class="string">DEBUG,console,file</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#控制台输出的相关设置</span></span><br><span class="line"><span class="attr">log4j.appender.console</span> = <span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="attr">log4j.appender.console.Target</span> = <span class="string">System.out</span></span><br><span class="line"><span class="attr">log4j.appender.console.Threshold</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="attr">log4j.appender.console.layout</span> = <span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="attr">log4j.appender.console.layout.ConversionPattern</span>=<span class="string">[%c]-%m%n</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#文件输出的相关设置</span></span><br><span class="line"><span class="attr">log4j.appender.file</span> = <span class="string">org.apache.log4j.RollingFileAppender</span></span><br><span class="line"><span class="attr">log4j.appender.file.File</span>=<span class="string">./log/kuang.log</span></span><br><span class="line"><span class="attr">log4j.appender.file.MaxFileSize</span>=<span class="string">10mb</span></span><br><span class="line"><span class="attr">log4j.appender.file.Threshold</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="attr">log4j.appender.file.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="attr">log4j.appender.file.layout.ConversionPattern</span>=<span class="string">[%p][%d&#123;yy-MM-dd&#125;][%c]%m%n</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#日志输出级别</span></span><br><span class="line"><span class="attr">log4j.logger.org.mybatis</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="attr">log4j.logger.java.sql</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="attr">log4j.logger.java.sql.Statement</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="attr">log4j.logger.java.sql.ResultSet</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="attr">log4j.logger.java.sql.PreparedStatement</span>=<span class="string">DEBUG</span></span><br></pre></td></tr></table></figure>           </div>         </details></li><li><p>使用<code>lombok</code>编写数据库对应实体类<code>Books</code></p> <details class="folding-tag" cyan><summary> Books.java </summary>           <div class='content'>           <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> top.jezer.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Books</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> bookID;</span><br><span class="line">    <span class="keyword">private</span> String bookName;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> bookCounts;</span><br><span class="line">    <span class="keyword">private</span> String detail;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>           </div>         </details></li><li><p>编写<code>Books</code>实体类的<code>BooksMapper</code>接口</p> <details class="folding-tag" cyan><summary> BooksMapper.java </summary>           <div class='content'>           <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> top.jezer.mapper;</span><br><span class="line"><span class="keyword">import</span> top.jezer.entity.Books;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BooksMapper</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="title function_">addBook</span><span class="params">(Books book)</span>;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">deleteBookById</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">updateBook</span><span class="params">(Books books)</span>;</span><br><span class="line">    Books <span class="title function_">queryBookById</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line">    List&lt;Books&gt; <span class="title function_">queryAllBook</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>           </div>         </details></li><li><p>编写<code>BooksMapper.java</code>对应的<code>BooksMapper.xml</code>文件</p> <details class="folding-tag" cyan><summary> BooksMapper.xml </summary>           <div class='content'>           <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;top.jezer.mapper.BooksMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--增加一个Book--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addBook&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Books&quot;</span>&gt;</span></span><br><span class="line">        insert into ssmbuild.books(bookName,bookCounts,detail)</span><br><span class="line">        values (#&#123;bookName&#125;, #&#123;bookCounts&#125;, #&#123;detail&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--根据id删除一个Book--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteBookById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span>&gt;</span></span><br><span class="line">        delete from ssmbuild.books where bookID=#&#123;bookID&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--更新Book--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateBook&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Books&quot;</span>&gt;</span></span><br><span class="line">        update ssmbuild.books</span><br><span class="line">        set bookName = #&#123;bookName&#125;,bookCounts = #&#123;bookCounts&#125;,detail = #&#123;detail&#125;</span><br><span class="line">        where bookID = #&#123;bookID&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--根据id查询,返回一个Book--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryBookById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Books&quot;</span>&gt;</span></span><br><span class="line">        select * from ssmbuild.books</span><br><span class="line">        where bookID = #&#123;bookID&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--查询全部Book--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryAllBook&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Books&quot;</span>&gt;</span></span><br><span class="line">        SELECT * from ssmbuild.books</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>           </div>         </details></li><li><p>更新配置文件<code>mybatis-config.xml</code>配置文件</p> <details class="folding-tag" cyan><summary> mybatis-config.xml </summary>           <div class='content'>           <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--log4j日志功能--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;logImpl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;LOG4J&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置数据源的任务已转接给Spring完成--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--实体类实现自动取别名--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;top.jezer.entity&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;mapping/BooksMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>           </div>         </details></li><li><p>编写Service层的接口和实现类</p> <details class="folding-tag" cyan><summary> BooksService.java </summary>           <div class='content'>           <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> top.jezer.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> top.jezer.entity.Books;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BooksService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="title function_">addBook</span><span class="params">(Books book)</span>;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">deleteBookById</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">updateBook</span><span class="params">(Books books)</span>;</span><br><span class="line">    Books <span class="title function_">queryBookById</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line">    List&lt;Books&gt; <span class="title function_">queryAllBook</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>           </div>         </details> <details class="folding-tag" cyan><summary> BooksServiceImpl.java </summary>           <div class='content'>           <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> top.jezer.serviceImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> top.jezer.entity.Books;</span><br><span class="line"><span class="keyword">import</span> top.jezer.mapper.BooksMapper;</span><br><span class="line"><span class="keyword">import</span> top.jezer.service.BooksService;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BooksServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">BooksService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//调用mapper层的操作，设置一个set接口，方便Spring管理</span></span><br><span class="line">    <span class="keyword">private</span> BooksMapper booksMapper;</span><br><span class="line">    <span class="comment">//在control层通过注解实现自动装配@autowire</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBooksMapper</span><span class="params">(BooksMapper booksMapper)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.booksMapper = booksMapper;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">addBook</span><span class="params">(Books book)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> booksMapper.addBook(book);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">deleteBookById</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> booksMapper.deleteBookById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">updateBook</span><span class="params">(Books books)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> booksMapper.updateBook(books);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Books <span class="title function_">queryBookById</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> booksMapper.queryBookById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Books&gt; <span class="title function_">queryAllBook</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> booksMapper.queryAllBook();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>           </div>         </details><p><img src="https://pic.imgdb.cn/item/622310c45baa1a80ab4b0566.png" alt="" /></p></li></ol></div><h2 id="spring层"><a class="markdownIt-Anchor" href="#spring层"></a> Spring层</h2><div class="note purple no-icon flat"><ol><li><p>数据库配置文件<code>dbconfig.properties</code></p> <details class="folding-tag" cyan><summary> dbconfig.properties </summary>           <div class='content'>           <figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jdbc.driver</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">jdbc.url</span>=<span class="string">jdbc:mysql://localhost:3306/ssmbuild?useSSL=true&amp;useUnicode=true&amp;characterEncoding=utf8&amp;&amp;serverTimezone=Asia/Shanghai</span></span><br><span class="line"><span class="attr">jdbc.username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">jdbc.password</span>=<span class="string">12345678</span></span><br></pre></td></tr></table></figure>           </div>         </details></li><li><p>编写<code>spring-mapper.xml</code>文件</p> <details class="folding-tag" cyan><summary> spring-mappers.xml </summary>           <div class='content'>           <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置整合mybatis --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1.关联数据库文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:dbconfig.properties&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 2.数据库连接池 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--数据库连接池</span></span><br><span class="line"><span class="comment">        dbcp 半自动化操作 不能自动连接</span></span><br><span class="line"><span class="comment">        c3p0 自动化操作（自动的加载配置文件 并且设置到对象里面）</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.mchange.v2.c3p0.ComboPooledDataSource&quot;</span> &gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 配置连接池属性 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- c3p0连接池的私有属性 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxPoolSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;30&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minPoolSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;10&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 关闭连接后不自动commit --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;autoCommitOnClose&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 获取连接超时时间 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;checkoutTimeout&quot;</span> <span class="attr">value</span>=<span class="string">&quot;10000&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 当获取连接失败重试次数 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;acquireRetryAttempts&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 3.配置SqlSessionFactory对象 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 注入数据库连接池 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 配置MyBatis全局配置文件:mybatis-config.xml --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configLocation&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mybatis-config.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 4.配置扫描Mapper接口包，动态实现Mapper接口注入到spring容器中 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--解释 ：https://www.cnblogs.com/jpfss/p/7799806.html--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 注入sqlSessionFactory --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sqlSessionFactoryBeanName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;sqlSessionFactory&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 给出需要扫描Mapper接口包 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;basePackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;top.jezer.mapper&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>           </div>         </details></li><li><p>编写<code>spring-service.xml</code></p> <details class="folding-tag" cyan><summary> spring-service.xml </summary>           <div class='content'>           <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 扫描service相关的bean --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;top.jezer.service&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--BooksServiceImpl注入到IOC容器中--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;BooksServiceImpl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;top.jezer.serviceImpl.BooksServiceImpl&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;booksMapper&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;booksMapper&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置事务管理器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 注入数据库连接池 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>           </div>         </details><p><img src="https://pic.imgdb.cn/item/6223107e5baa1a80ab4acd87.png" alt="" /></p></li></ol></div><h2 id="springmvc层"><a class="markdownIt-Anchor" href="#springmvc层"></a> springMVC层</h2><div class="note pink no-icon flat"><ol><li><p>添加<code>web</code>框架支持<br /><img src="https://pic.imgdb.cn/item/6223090d5baa1a80ab43994e.png" alt="" /></p></li><li><p>编辑<code>web.xml</code></p> <details class="folding-tag" ><summary> web.xml </summary>           <div class='content'>           <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--DispatcherServlet--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--一定要注意:我们这里加载的是总的配置文件，之前被这里坑了！--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:applicationContext.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--encodingFilter--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span></span><br><span class="line">            org.springframework.web.filter.CharacterEncodingFilter</span><br><span class="line">        <span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--Session过期时间--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">session-config</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">session-timeout</span>&gt;</span>15<span class="tag">&lt;/<span class="name">session-timeout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">session-config</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 设置默认欢迎界面 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>login.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>           </div>         </details></li><li><p>编写<code>spring-mvc.xml</code></p> <details class="folding-tag" green><summary> spring-mvc.xml </summary>           <div class='content'>           <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置SpringMVC --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1.开启SpringMVC注解驱动 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 2.静态资源默认servlet配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 3.配置jsp 显示ViewResolver视图解析器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;viewClass&quot;</span> <span class="attr">value</span>=<span class="string">&quot;org.springframework.web.servlet.view.JstlView&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 4.扫描web相关的bean --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;top.jezer.controller&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>           </div>         </details><p><img src="https://pic.imgdb.cn/item/622311085baa1a80ab4b40e7.png" alt="" /></p></li></ol></div><h2 id="controller-和-view层"><a class="markdownIt-Anchor" href="#controller-和-view层"></a> Controller 和 View层</h2><div class="note green no-icon flat"><ol><li><p>编写<code>login.jsp</code>(放到web目录下，不要放到<code>WEB_INF</code>下)</p> <figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;http://at.alicdn.com/t/font_1786038_m62pqneyrzf.css&quot;</span>&gt;</span><br><span class="line">    &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;static/css/login.css&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div class=<span class="string">&quot;form-wrapper&quot;</span>&gt;</span><br><span class="line">    &lt;div class=<span class="string">&quot;header&quot;</span>&gt;</span><br><span class="line">        login</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=<span class="string">&quot;input-wrapper&quot;</span>&gt;</span><br><span class="line">        &lt;div class=<span class="string">&quot;border-wrapper&quot;</span>&gt;</span><br><span class="line">            &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span> placeholder=<span class="string">&quot;username&quot;</span> class=<span class="string">&quot;border-item&quot;</span> autocomplete=<span class="string">&quot;off&quot;</span>&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=<span class="string">&quot;border-wrapper&quot;</span>&gt;</span><br><span class="line">            &lt;input type=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;password&quot;</span> placeholder=<span class="string">&quot;password&quot;</span> class=<span class="string">&quot;border-item&quot;</span> autocomplete=<span class="string">&quot;off&quot;</span>&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=<span class="string">&quot;action&quot;</span>&gt;</span><br><span class="line">        &lt;div class=<span class="string">&quot;btn&quot;</span>&gt;login&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=<span class="string">&quot;icon-wrapper&quot;</span>&gt;</span><br><span class="line">        &lt;i class=<span class="string">&quot;iconfont icon-weixin&quot;</span>&gt;&lt;/i&gt;</span><br><span class="line">        &lt;i class=<span class="string">&quot;iconfont icon-qq&quot;</span>&gt;&lt;/i&gt;</span><br><span class="line">        &lt;i class=<span class="string">&quot;iconfont icon-git&quot;</span>&gt;&lt;/i&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li><li><p>编写对应的<code>login.css</code></p> <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">font-family</span>: JetBrains Mono Medium;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="comment">/* background-color: #0e92b3; */</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">https://pic.imgdb.cn/item/61cc7a302ab3f51d9119b16a.png</span>) no-repeat;</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">100%</span> <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.form-wrapper</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">41</span>, <span class="number">45</span>, <span class="number">62</span>, .<span class="number">8</span>);</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">2px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.form-wrapper</span> <span class="selector-class">.header</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">35px</span>;</span><br><span class="line">    <span class="attribute">text-transform</span>: uppercase;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.form-wrapper</span> <span class="selector-class">.input-wrapper</span> <span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">41</span>, <span class="number">45</span>, <span class="number">62</span>);</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">outline</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.form-wrapper</span> <span class="selector-class">.input-wrapper</span> <span class="selector-tag">input</span><span class="selector-pseudo">::placeholder</span> &#123;</span><br><span class="line">    <span class="attribute">text-transform</span>: uppercase;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.form-wrapper</span> <span class="selector-class">.input-wrapper</span> <span class="selector-class">.border-wrapper</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to right, <span class="number">#e8198b</span>, <span class="number">#0eb4dd</span>);</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.form-wrapper</span> <span class="selector-class">.input-wrapper</span> <span class="selector-class">.border-wrapper</span> <span class="selector-class">.border-item</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">4px</span>);</span><br><span class="line">    <span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">4px</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.form-wrapper</span> <span class="selector-class">.action</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.form-wrapper</span> <span class="selector-class">.action</span> <span class="selector-class">.btn</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">60%</span>;</span><br><span class="line">    <span class="attribute">text-transform</span>: uppercase;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#0e92b3</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.form-wrapper</span> <span class="selector-class">.action</span> <span class="selector-class">.btn</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(<span class="number">120deg</span>, <span class="number">#84fab0</span> <span class="number">0%</span>, <span class="number">#8fd3f4</span> <span class="number">100%</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.form-wrapper</span> <span class="selector-class">.icon-wrapper</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">60%</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">1px</span> dashed <span class="built_in">rgb</span>(<span class="number">146</span>, <span class="number">146</span>, <span class="number">146</span>);</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.form-wrapper</span> <span class="selector-class">.icon-wrapper</span> <span class="selector-tag">i</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">187</span>, <span class="number">187</span>, <span class="number">187</span>);</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.form-wrapper</span> <span class="selector-class">.icon-wrapper</span> <span class="selector-tag">i</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#0e92b3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写<code>index.jsp</code></p> <figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;title&gt;$Title$&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">  &lt;h3&gt;</span><br><span class="line">    &lt;a href=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/book/allBooks&quot;</span>&gt;点击进入列表页&lt;/a&gt;</span><br><span class="line">  &lt;/h3&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li><li><p>编写<code>BooksController.java</code></p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> top.jezer.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> top.jezer.entity.Books;</span><br><span class="line"><span class="keyword">import</span> top.jezer.service.BooksService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jezer</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/book&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BooksController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="meta">@Qualifier(&quot;BooksServiceImpl&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> BooksService booksService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/allBooks&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">list</span><span class="params">(Model model)</span> &#123;</span><br><span class="line">        List&lt;Books&gt; list = booksService.queryAllBook();</span><br><span class="line">        model.addAttribute(<span class="string">&quot;list&quot;</span>, list);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;pages/books/allBooks&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写<code>allBooks.jsp</code></p> <figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Jezer</span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">3</span>/<span class="number">4</span></span><br><span class="line">  Time: <span class="number">23</span>:<span class="number">07</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">hello</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/6223130f5baa1a80ab4cc554.png" alt="" /></p></li></ol></div>]]></content>
      
      
      <categories>
          
          <category> 项目开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSM框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django游戏开发</title>
      <link href="/posts/edb0696a/"/>
      <url>/posts/edb0696a/</url>
      
        <content type="html"><![CDATA[<p><a href="http://120.27.145.66:8000/">访问地址</a><br /><a href="https://git.acwing.com/Jezer/acapp">项目地址</a></p><h2 id="创建django项目和app"><a class="markdownIt-Anchor" href="#创建django项目和app"></a> 创建Django项目和APP</h2><div class="note blue no-icon flat"><ol><li><p>创建Django项目</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">django-admin startproject acapp <span class="comment"># acapp为你的项目名称</span></span><br></pre></td></tr></table></figure></li><li><p>通过git维护项目</p> <div class="tag link"><a class="link-card" title="git帮助文档" href="/posts/4ac0a166/#git"><div class="left"><img src="https://pic.imgdb.cn/item/61c545a52ab3f51d91edbff3.jpg"/></div><div class="right"><p class="text">git帮助文档</p><p class="url">/posts/4ac0a166/#git</p></div></a></div></li><li><p>在git项目下创建<code>.gitignore</code>文件，用来过滤不必上传的文件</p></li><li><p>创建APP</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 manage.py startapp game <span class="comment"># game为你的应用名称</span></span><br></pre></td></tr></table></figure></li><li><p>运行项目</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 manage.py runserver 0.0.0.0:8000</span><br></pre></td></tr></table></figure></li><li><p>更新数据</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 manage.py migrate</span><br></pre></td></tr></table></figure></li><li><p>创建管理员账号</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 manage.py createsuperuser</span><br></pre></td></tr></table></figure></li></ol></div><h2 id="创建项目基本结构"><a class="markdownIt-Anchor" href="#创建项目基本结构"></a> 创建项目基本结构</h2><div class="note pink no-icon flat"><ol><li><p>进入<code>acapp</code>中的<code>acapp</code>文件夹，修改<code>setting.py</code>配置</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在开头导入os</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="comment"># (app.py的GameConfig函数加入到setting.py中)</span></span><br><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">&#x27;game.apps.GameConfig&#x27;</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定静态文件最终的存储路径(一般static存储开发者，media存储用户)</span></span><br><span class="line">STATIC_ROOT = os.path.join(BASE_DIR, <span class="string">&#x27;static&#x27;</span>)</span><br><span class="line">STATIC_URL = <span class="string">&#x27;/static/&#x27;</span></span><br><span class="line"></span><br><span class="line">MEDIA_ROOT = os.path.join(BASE_DIR, <span class="string">&#x27;media&#x27;</span>)</span><br><span class="line">MEDIA_URL = <span class="string">&#x27;/media/&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>进入<code>game</code>文件夹，创建项目基本文件夹</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> urls.py views.py models.py <span class="comment"># 删除文件，以便创建文件夹</span></span><br><span class="line"><span class="built_in">mkdir</span> tempaltes <span class="comment"># 管理html文件</span></span><br><span class="line"><span class="built_in">mkdir</span> urls <span class="comment"># 管理路由，即链接与函数的对应关系</span></span><br><span class="line"><span class="built_in">mkdir</span> views <span class="comment"># 管理http函数,实现页面切换</span></span><br><span class="line"><span class="built_in">mkdir</span> models <span class="comment"># 管理数据库数据</span></span><br><span class="line"><span class="built_in">mkdir</span> static <span class="comment"># 管理静态文件</span></span><br></pre></td></tr></table></figure></li><li><p>由于<code>urls</code>和<code>views</code>文件夹用来存放<code>python</code>代码，需要在该目录下创建<code>__init__.py</code>方便导入</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以urls文件为例</span></span><br><span class="line"><span class="built_in">cd</span> urls</span><br><span class="line"><span class="built_in">touch</span> __init__.py</span><br></pre></td></tr></table></figure></li><li><p>在<code>static</code>等文件夹下，继续创建<code>css</code>、<code>js</code>、<code>image</code>、<code>audio</code>文件夹</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> static</span><br><span class="line"><span class="built_in">mkdir</span> css js image audio</span><br></pre></td></tr></table></figure></li><li><p>在<code>image</code>文件下，根据app模块再新建文件夹，<code>audio</code>文件夹类似</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> image</span><br><span class="line"><span class="built_in">mkdir</span> menu playground settings <span class="comment"># 菜单 背景 设置(在大部分文件夹都按照这样的分类创建)</span></span><br></pre></td></tr></table></figure></li><li><p>接着进入<code>image</code>文件夹中的<code>menu</code>，下载图片</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> menu</span><br><span class="line"><span class="comment"># wget --output-document=自定义图片名称 图片地址</span></span><br><span class="line">wget --output-document=background.png https://pic.imgdb.cn/item/61c682cf2ab3f51d9173e049.png</span><br></pre></td></tr></table></figure></li><li><p>返回<code>static</code>文件夹，进入<code>css</code>文件夹</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> css</span><br><span class="line"><span class="comment"># 这里一般只需要一个css文件，一个app应用使用一个css文件，当然也可以创建多文件夹</span></span><br><span class="line"><span class="built_in">touch</span> game.css</span><br></pre></td></tr></table></figure></li><li><p>返回<code>static</code>文件夹，进入<code>js</code>文件夹</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> js</span><br><span class="line"><span class="built_in">mkdir</span> dist src  <span class="comment"># 最终生成(使用)的js文件 js原文件(开发者操作的js文件)</span></span><br></pre></td></tr></table></figure></li><li><p>返回<code>acapp</code>起始目录，新建<code>scripts</code>文件夹，并在其中编写整合<code>/js/src</code>文件的脚本</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> scripts <span class="comment"># 创建一个存放脚本文件的文件夹</span></span><br><span class="line">vim compress_game_js.sh</span><br><span class="line"><span class="built_in">chmod</span> +x compress_game_js.sh <span class="comment"># 增加执行权限</span></span><br></pre></td></tr></table></figure> <details class="folding-tag" green open><summary> compress_game_js.sh </summary>           <div class='content'>           <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line">JS_PATH=/home/jezer/acapp/game/static/js/</span><br><span class="line">JS_PATH_DIST=<span class="variable">$&#123;JS_PATH&#125;</span>dist/</span><br><span class="line">JS_PATH_SRC=<span class="variable">$&#123;JS_PATH&#125;</span>src/</span><br><span class="line"></span><br><span class="line">find <span class="variable">$JS_PATH_SRC</span> -<span class="built_in">type</span> f -name <span class="string">&#x27;*.js&#x27;</span> | <span class="built_in">sort</span> | xargs <span class="built_in">cat</span> &gt; <span class="variable">$&#123;JS_PATH_DIST&#125;</span>game.js</span><br></pre></td></tr></table></figure>           </div>         </details> <div class="tag link"><a class="link-card" title="shell帮助文档" href="/posts/4ac0a166/#shell"><div class="left"><img src="https://pic.imgdb.cn/item/61c545a52ab3f51d91edbff3.jpg"/></div><div class="right"><p class="text">shell帮助文档</p><p class="url">/posts/4ac0a166/#shell</p></div></a></div></li><li><p>退出<code>static</code>文件，进入<code>tempaltes</code>文件夹</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> menu playground settings</span><br><span class="line"><span class="built_in">mkdir</span> multiends <span class="comment"># 用来在各种前端显示（web，app等）</span></span><br></pre></td></tr></table></figure></li></ol></div><h2 id="创建菜单界面"><a class="markdownIt-Anchor" href="#创建菜单界面"></a> 创建菜单界面</h2><div class="note purple no-icon flat"><ol><li><p>进入<code>tempaltes</code>下的<code>multiends</code>文件夹</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> multiends</span><br><span class="line">vim web.html</span><br></pre></td></tr></table></figure> <details class="folding-tag" green open><summary> web.html </summary>           <div class='content'>           <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;% load static %&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.acwing.com/static/jquery-ui-dist/jquery-ui.min.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.acwing.com/static/jquery/js/jquery-3.3.1.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&#123;% static &#x27;css/game.css&#x27; %&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;&#123;% static &#x27;js/dist/game.js&#x27; %&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">&quot;margin: 0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;ac_game_12345678&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> ac_game = <span class="keyword">new</span> <span class="title class_">AcGame</span>(<span class="string">&quot;ac_game_12345678&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>           </div>         </details> <div class="tag link"><a class="link-card" title="html帮助文档" href="/posts/98f3a6d9"><div class="left"><img src="https://pic.imgdb.cn/item/61c545a52ab3f51d91edbff3.jpg"/></div><div class="right"><p class="text">html帮助文档</p><p class="url">/posts/98f3a6d9</p></div></a></div></li><li><p>配置<code>views</code>文件夹</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> menu playground settings</span><br><span class="line"><span class="built_in">touch</span> __int__.py <span class="comment"># 三个文件夹都进行创建</span></span><br><span class="line">vim index.py <span class="comment"># view目录下</span></span><br></pre></td></tr></table></figure> <details class="folding-tag" cyan open><summary> index.py </summary>           <div class='content'>           <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&quot;multiends/web.html&quot;</span>)</span><br></pre></td></tr></table></figure>           </div>         </details></li><li><p>配置<code>urls</code></p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /game/urls</span><br><span class="line"><span class="built_in">mkdir</span> menu playground settings</span><br><span class="line"><span class="built_in">touch</span> __int__.py <span class="comment"># 三个文件夹都进行创建</span></span><br><span class="line"><span class="built_in">touch</span> index.py <span class="comment"># 三个文件夹及urls下均创建</span></span><br></pre></td></tr></table></figure> <details class="folding-tag" cyan open><summary> (root)index.py </summary>           <div class='content'>           <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path, include</span><br><span class="line"><span class="keyword">from</span> game.views.index <span class="keyword">import</span> index</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&quot;&quot;</span>, index, name=<span class="string">&quot;index&quot;</span>),</span><br><span class="line">    path(<span class="string">&quot;menu/&quot;</span>, include(<span class="string">&quot;game.urls.menu.index&quot;</span>)),</span><br><span class="line">    path(<span class="string">&quot;playground/&quot;</span>, include(<span class="string">&quot;game.urls.playground.index&quot;</span>)),</span><br><span class="line">    path(<span class="string">&quot;settings/&quot;</span>, include(<span class="string">&quot;game.urls.settings.index&quot;</span>)),</span><br><span class="line">]</span><br></pre></td></tr></table></figure>           </div>         </details> <details class="folding-tag" cyan open><summary> (menu、playground、settings)index.py </summary>           <div class='content'>           <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line"></span><br><span class="line">]</span><br></pre></td></tr></table></figure>           </div>         </details> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改全局urls</span></span><br><span class="line"><span class="built_in">cd</span> ~/acapp/acapp</span><br><span class="line">vim urls.py</span><br></pre></td></tr></table></figure><p>添加<code>path('', include('game.urls.index')),</code></p></li><li><p>进入<code>/js/src</code>文件下，创建代码（一般在每个js源文件夹下会新建<code>zbase.js</code>)</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /game/static/js/src</span><br><span class="line"><span class="comment"># 根据模块新建文件夹</span></span><br><span class="line"><span class="built_in">mkdir</span> menu playground settings</span><br><span class="line"><span class="comment"># 在/js/src目录下，新建zbase.js</span></span><br><span class="line">vim zbase.js</span><br></pre></td></tr></table></figure> <details class="folding-tag" green open><summary> (root)zbase.js </summary>           <div class='content'>           <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">AcGame</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">id</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">id</span> = id;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$ac_game</span> = $(<span class="string">&#x27;#&#x27;</span> + id);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">menu</span> = <span class="keyword">new</span> <span class="title class_">AcGameMenu</span>(<span class="variable language_">this</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">playground</span> = <span class="keyword">new</span> <span class="title class_">AcGamePlayground</span>(<span class="variable language_">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">start</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">start</span>(<span class="params"></span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>           </div>         </details></li><li><p>分别进入<code>/js/src</code>下的<code>menu</code>和<code>playground</code>文件夹，编写<code>zbase.js</code>代码</p><details class="folding-tag" cyan open><summary> (menu)zbase.js </summary>          <div class='content'>          <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">AcGameMenu</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">root</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">root</span> = root;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$menu</span> = $(<span class="string">`</span></span><br><span class="line"><span class="string">&lt;div class=&quot;ac-game-menu&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;ac-game-menu-field&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-menu-field-item ac-game-menu-field-item-single-mode&quot;&gt;</span></span><br><span class="line"><span class="string">            单人模式</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;br&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-menu-field-item ac-game-menu-field-item-multi-mode&quot;&gt;</span></span><br><span class="line"><span class="string">            多人模式</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;br&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-menu-field-item ac-game-menu-field-item-settings&quot;&gt;</span></span><br><span class="line"><span class="string">            设置</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">`</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">root</span>.<span class="property">$ac_game</span>.<span class="title function_">append</span>(<span class="variable language_">this</span>.<span class="property">$menu</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$single_mode</span> = <span class="variable language_">this</span>.<span class="property">$menu</span>.<span class="title function_">find</span>(<span class="string">&#x27;.ac-game-menu-field-item-single-mode&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$multi_mode</span> = <span class="variable language_">this</span>.<span class="property">$menu</span>.<span class="title function_">find</span>(<span class="string">&#x27;.ac-game-menu-field-item-multi-mode&#x27;</span>)</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$settings</span> = <span class="variable language_">this</span>.<span class="property">$menu</span>.<span class="title function_">find</span>(<span class="string">&#x27;.ac-game-menu-field-item-settings&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">start</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">start</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">add_listening_events</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">add_listening_events</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> outer = <span class="variable language_">this</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$single_mode</span>.<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            outer.<span class="title function_">hide</span>();</span><br><span class="line">            outer.<span class="property">root</span>.<span class="property">playground</span>.<span class="title function_">show</span>();</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$multi_mode</span>.<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;click multi mode&quot;</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$settings</span>.<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;click settings&quot;</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">show</span>(<span class="params"></span>) &#123;  <span class="comment">// 显示menu界面</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$menu</span>.<span class="title function_">show</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">hide</span>(<span class="params"></span>) &#123;  <span class="comment">// 关闭menu界面</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$menu</span>.<span class="title function_">hide</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>          </div>        </details><details class="folding-tag" green open><summary> (playground)zbase.js </summary>          <div class='content'>          <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">AcGamePlayground</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">root</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">root</span> = root;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$playground</span> = $(<span class="string">`&lt;div&gt;游戏界面&lt;/div&gt;`</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">hide</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">root</span>.<span class="property">$ac_game</span>.<span class="title function_">append</span>(<span class="variable language_">this</span>.<span class="property">$playground</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">start</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">start</span>(<span class="params"></span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">show</span>(<span class="params"></span>) &#123;  <span class="comment">// 打开playground界面</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$playground</span>.<span class="title function_">show</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">hide</span>(<span class="params"></span>) &#123;  <span class="comment">// 关闭playground界面</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$playground</span>.<span class="title function_">hide</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>          </div>        </details></li><li><p>进入<code>/static/css</code>文件下，编写<code>game.css</code></p> <details class="folding-tag" cyan open><summary> game.css </summary>           <div class='content'>           <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.ac-game-menu</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;/static/image/menu/background.png&quot;</span>);</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">100%</span> <span class="number">100%</span>;</span><br><span class="line">    user-select: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ac-game-menu-field</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20vw</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">40vh</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">19vw</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ac-game-menu-field-item</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">7vh</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">18vw</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">6vh</span>;</span><br><span class="line">    <span class="attribute">font-style</span>: italic;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">2vh</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">39</span>,<span class="number">21</span>,<span class="number">28</span>, <span class="number">0.6</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">letter-spacing</span>: <span class="number">0.5vw</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ac-game-menu-field-item</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.2</span>);</span><br><span class="line">    <span class="attribute">transition</span>: <span class="number">100ms</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>           </div>         </details> <div class="tag link"><a class="link-card" title="css帮助文档" href="/posts/95f6ae7f"><div class="left"><img src="https://pic.imgdb.cn/item/61c545a52ab3f51d91edbff3.jpg"/></div><div class="right"><p class="text">css帮助文档</p><p class="url">/posts/95f6ae7f</p></div></a></div></li><li><p>返回<code>acapp</code>目录下的<code>scripts</code>，执行js整合脚本</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/acapp/scripts</span><br><span class="line">./compress_game_js.sh</span><br></pre></td></tr></table></figure></li></ol></div>]]></content>
      
      
      <categories>
          
          <category> 项目开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebApp </tag>
            
            <tag> Django框架 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux基础命令</title>
      <link href="/posts/4ac0a166/"/>
      <url>/posts/4ac0a166/</url>
      
        <content type="html"><![CDATA[<h2 id="常用终端命令"><a class="markdownIt-Anchor" href="#常用终端命令"></a> 常用终端命令</h2><h3 id="快捷键"><a class="markdownIt-Anchor" href="#快捷键"></a> 快捷键</h3><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><ol><li>取消命令，并且换行：<kbd>Ctrl</kbd> + <kbd> c </kbd></li><li>清空本行命令：<kbd>Ctrl</kbd> + <kbd> u </kbd></li><li><kbd> Tab </kbd>可以补全命令和文件名，如果补全不了快速按两下<kbd> Tab </kbd>键，可以显示备选选项</li><li>复制文本<kbd>Ctrl</kbd> + <kbd>Ins</kbd></li><li>粘贴文本<kbd>Shift</kbd> + <kbd>Ins</kbd></li><li>退出服务：<kbd>Ctrl</kbd> + <kbd> d </kbd></li></ol></div><h3 id="文件处理"><a class="markdownIt-Anchor" href="#文件处理"></a> 文件处理</h3><div class="note orange icon-padding flat"><i class="note-icon fas fa-check-circle"></i><ol><li>列出当前目录下所有文件，蓝色的是文件夹，白色的是普通文件，绿色的是可执行文件 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span></span><br></pre></td></tr></table></figure> <details class="folding-tag" cyan open><summary> 常用参数 </summary>           <div class='content'>           <p>-l：列出长数据串，包含文件的属性与权限数据等<br />-a：列出全部的文件，连同隐藏文件（开头为.的文件）一起列出来（常用）<br />-d：仅列出目录本身，而不是列出目录的文件数据</p>           </div>         </details></li><li>显示当前路径 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pwd</span></span><br></pre></td></tr></table></figure></li><li>进入XXX目录下 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> XXX</span><br><span class="line"><span class="comment">#返回上层目录</span></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"><span class="comment">#返回上一次目录</span></span><br><span class="line"><span class="built_in">cd</span> -</span><br></pre></td></tr></table></figure></li><li>将XXX文件复制成YYY，XXX和YYY可以是一个路径，比如…/dir_c/a.txt，表示上层目录下的dir_c文件夹下的文件a.txt <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> XXX YYY</span><br></pre></td></tr></table></figure> <details class="folding-tag" cyan open><summary> 常用参数 </summary>           <div class='content'>           <p>-i：覆盖前询问（使前面的 -n 选项失效）<br />-n：不要覆盖已存在的文件（使前面的 -i 选项失效）</p>           </div>         </details></li><li>创建目录XXX <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> XXX</span><br></pre></td></tr></table></figure> <details class="folding-tag" cyan open><summary> 常用参数 </summary>           <div class='content'>           <p>-p：此时若路径中的某些目录尚不存在,加上此选项后,系统将自动建立好那些尚不存在的目录,即一次可以建立多个目录<br />-v：每次创建新目录都显示信息</p>           </div>         </details></li><li>删除文件，支持简单的正则表达式*通配符 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#删除普通文件</span></span><br><span class="line"><span class="built_in">rm</span> XXX</span><br><span class="line"><span class="comment">#删除文件夹</span></span><br><span class="line"><span class="built_in">rm</span> XXX -r</span><br></pre></td></tr></table></figure> <details class="folding-tag" cyan open><summary> 常用参数 </summary>           <div class='content'>           <p>-f：忽略不存在的文件，从不给出提示<br />-r：指示rm将参数中列出的全部目录和子目录均递归地删除<br />-v：详细显示进行的步骤</p>           </div>         </details></li><li>将XXX文件移动到YYY，和cp命令一样，XXX和YYY可以是一个路径；重命名也是用这个命令 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> XXX YYY</span><br></pre></td></tr></table></figure> <details class="folding-tag" cyan open><summary> 常用参数 </summary>           <div class='content'>           <p>-b：若需覆盖文件，则覆盖前先行备份<br />-f：force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖<br />-i：若目标文件 (destination) 已经存在时，就会询问是否覆盖</p>           </div>         </details></li><li>创建一个文件 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> XXX</span><br></pre></td></tr></table></figure></li><li>展示文件XXX中的内容 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> XXX</span><br></pre></td></tr></table></figure></li><li>查看&quot;当前工作目录&quot;的完整路径。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pwd</span></span><br></pre></td></tr></table></figure></li></ol></div><h3 id="文件检索"><a class="markdownIt-Anchor" href="#文件检索"></a> 文件检索</h3><div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><ol><li><code>which 可执行文件名称</code>：搜索某个系统命令的位置，并且返回第一个搜索结果。</li><li><code>find /path/to/directory/ -name '*.py'</code>：搜索某个文件路径下的所有*.py文件</li><li><code>grep xxx</code>：从stdin中读入若干行数据，如果某行中包含xxx，则输出该行；否则忽略该行。</li><li><code>wc</code>：统计行数、单词数、字节数 <details class="folding-tag" cyan open><summary> 常用参数 </summary>           <div class='content'>           <p>-l：统计行数<br />-w：统计单词数<br />-c：统计字节数</p>           </div>         </details></li><li><code>tree</code>：展示当前目录的文件结构 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tree /path/to/directory/ <span class="comment"># 展示某个目录的文件结构</span></span><br><span class="line">tree -a <span class="comment"># 展示隐藏文件</span></span><br></pre></td></tr></table></figure></li><li><code>ag xxx</code>：搜索当前目录下的所有文件，检索xxx字符串</li><li><code>cut</code>：分割一行内容 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$PATH</span> | <span class="built_in">cut</span> -d <span class="string">&#x27;:&#x27;</span> -f 3,5 <span class="comment"># 输出PATH用:分割后第3、5列数据</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$PATH</span> | <span class="built_in">cut</span> -d <span class="string">&#x27;:&#x27;</span> -f 3-5 <span class="comment"># 输出PATH用:分割后第3-5列数据</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$PATH</span> | <span class="built_in">cut</span> -c 3,5 <span class="comment"># 输出PATH的第3、5个字符</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$PATH</span> | <span class="built_in">cut</span> -c 3-5 <span class="comment"># 输出PATH的第3-5个字符</span></span><br></pre></td></tr></table></figure></li><li><code>sort</code>：将每行内容按字典序从小到大排序</li><li><code>xargs</code>：将stdin中的数据用空格或回车分割成命令行参数 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 管道</span></span><br><span class="line">find . -name <span class="string">&#x27;*.py&#x27;</span> | xargs <span class="built_in">cat</span> | <span class="built_in">wc</span> -l <span class="comment"># 统计当前目录下所有python文件的总行数</span></span><br></pre></td></tr></table></figure></li></ol></div><h3 id="文件权限设置"><a class="markdownIt-Anchor" href="#文件权限设置"></a> 文件权限设置</h3><div class="note green icon-padding flat"><i class="note-icon fab fa-internet-explorer"></i><ol><li>改变linux系统文件或目录的访问权限 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#增加文件所有用户组可执行权限</span></span><br><span class="line"><span class="built_in">chmod</span> a+x test.log</span><br><span class="line"><span class="comment">#删除所有用户的可执行权限</span></span><br><span class="line"><span class="built_in">chmod</span> a-x test.log</span><br></pre></td></tr></table></figure> <details class="folding-tag" cyan open><summary> 常用参数 </summary>           <div class='content'>           <p>&lt;权限范围&gt;+&lt;权限设置&gt; 使权限范围内的目录或者文件具有指定的权限<br />&lt;权限范围&gt;-&lt;权限设置&gt; 删除权限范围的目录或者文件的指定权限<br />&lt;权限范围&gt;=&lt;权限设置&gt; 设置权限范围内的目录或者文件的权限为指定的值</p><ol><li>权限范围：<ul><li>u ：目录或者文件的当前的用户</li><li>g ：目录或者文件的当前的群组</li><li>o ：除了目录或者文件的当前用户或群组之外的用户或者群组</li><li>a ：所有的用户及群组</li></ul></li><li>权限代号：<ul><li>r：读权限，用数字4表示</li><li>w：写权限，用数字2表示</li><li>x：执行权限，用数字1表示</li><li>-：删除权限，用数字0表示</li></ul></li></ol>           </div>         </details></li></ol></div><h3 id="系统状况"><a class="markdownIt-Anchor" href="#系统状况"></a> 系统状况</h3><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><ol><li><code>top</code>：查看所有进程的信息（Linux的任务管理器）<ul><li>打开后，输入<code>M</code>：按使用内存排序</li><li>打开后，输入<code>P</code>：按使用CPU排序</li><li>打开后，输入<code>q</code>：退出</li></ul></li><li><code>df -h</code>：查看硬盘使用情况</li><li><code>free -h</code>：查看内存使用情况</li><li><code>du -sh</code>：查看当前目录占用的硬盘空间</li><li><code>ps aux</code>：查看所有进程</li><li><code>kill -9 pid</code>：杀死编号为pid的进程<ul><li>传递某个具体的信号：<code>kill -s SIGTERM pid</code></li></ul></li><li><code>netstat -nt</code>：查看所有网络连接</li><li><code>w</code>：列出当前登陆的用户</li><li><code>ping www.baidu.com</code>：检查是否连网</li></ol></div><h3 id="查看文件内容"><a class="markdownIt-Anchor" href="#查看文件内容"></a> 查看文件内容</h3><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><ol><li><code>more</code>：浏览文件内容<ul><li><kbd>Enter</kbd>：下一行</li><li><kbd>Space</kbd>：下一页</li><li><kbd>b</kbd>：上一页</li><li><kbd>q</kbd>：退出</li></ul></li><li><code>less</code>：与more类似，功能更全<ul><li><kbd>Enter</kbd>：下一行</li><li><kbd>y</kbd>：上一行</li><li><kbd>Page Down</kbd>：下一页</li><li><kbd>Page Up</kbd>：上一页</li><li><kbd>q</kbd>：退出</li></ul></li><li><code>head -3 xxx</code>：展示xxx的前3行内容</li><li><code>tail -3 xxx</code>：展示xxx末尾3行内容</li></ol></div><h3 id="apt命令"><a class="markdownIt-Anchor" href="#apt命令"></a> apt命令</h3><div class="note red no-icon flat"><ol><li><code>sudo apt update</code>：列出所有可更新的软件清单命令</li><li><code>sudo apt upgrade</code>：升级软件包<ul><li><code>apt list --upgradeable</code>：列出可更新的软件包及版本信息</li><li><code>sudo apt full-upgrade</code>：升级软件包，升级前先删除需要更新软件包</li></ul></li><li><code>sudo apt install &lt;package_name&gt;</code>：安装指定的软件命令<ul><li><code>sudo apt install &lt;package_1&gt; &lt;package_2&gt; &lt;package_3&gt;</code>：安装多个软件包</li></ul></li><li><code>sudo apt update &lt;package_name&gt;</code>：更新指定的软件命令</li><li><code>sudo apt show &lt;package_name&gt;</code>：显示软件包具体信息,例如：版本号，安装大小，依赖关系等等</li><li><code>sudo apt remove &lt;package_name&gt;</code>：删除软件包命令</li><li><code>sudo apt autoremove</code>：清理不再使用的依赖和库文件</li><li><code>sudo apt purge &lt;package_name&gt;</code>：移除软件包及配置文件</li><li><code>sudo apt search &lt;keyword&gt;</code>：查找软件包命令</li><li><code>apt list --installed</code>：列出所有已安装的包</li><li><code>apt list --all-versions</code>：列出所有已安装的包的版本信息</li></ol></div><h3 id="其他操作"><a class="markdownIt-Anchor" href="#其他操作"></a> 其他操作</h3><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><ol><li>压缩和打包文件。 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar [必要参数] [选择参数] [文件]</span><br><span class="line">tar -cvf test.tar test.log    <span class="comment"># 仅打包，不压缩！</span></span><br><span class="line">tar -zcvf test.tar.gz test.log  <span class="comment"># 打包后，以 gzip 压缩</span></span><br><span class="line">tar -zcvf test.tar.bz2 test.log <span class="comment"># 打包后，以 bzip2 压缩</span></span><br></pre></td></tr></table></figure></li><li>解压文件 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf test.tar.gz</span><br></pre></td></tr></table></figure></li><li><code>md5sum</code>：计算md5哈希值</li><li><code>time command</code>：统计command命令的执行时间</li><li><code>ipython3</code>：交互式python3环境。可以当做计算器，或者批量管理文件。</li><li><code>watch -n 0.1 command</code>：每0.1秒执行一次command命令</li><li><code>adduser jezer</code>：创建用户jezer</li><li><code>usermod -aG sudo jezer</code>：给用户jezer分配sudo权限</li><li><code>passwd</code>：修改密码</li></ol></div><h2 id="tumx"><a class="markdownIt-Anchor" href="#tumx"></a> tumx</h2><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><ol><li><code>tmux</code>：新建一个session，其中包含一个window，window中包含一个pane，pane里打开了一个shell对话框。</li><li>按下<kbd>Ctrl</kbd> + <kbd>B</kbd>后手指松开：进入tmux命令模式</li><li>按下<kbd>Ctrl</kbd> + <kbd>B</kbd>后手指松开，然后按<kbd>%</kbd>：将当前pane左右平分成两个pane。</li><li>按下<kbd>Ctrl</kbd> + <kbd>B</kbd>后手指松开，然后按<kbd>&quot;</kbd>（注意是双引号&quot;）：将当前pane上下平分成两个pane。</li><li><kbd>Ctrl</kbd> + <kbd>D</kbd>：关闭当前pane；如果当前window的所有pane均已关闭，则自动关闭window；如果当前session的所有window均已关闭，则自动关闭session。</li><li>按下<kbd>Ctrl</kbd> + <kbd>B</kbd>后手指<span class='p red'>松开</span>，然后按<span class='p cyan'>方向键</span>：选择相邻的pane。</li><li>按住<kbd>Ctrl</kbd> + <kbd>B</kbd>的<span class='p red'>同时</span>按<span class='p cyan'>方向键</span>，可以调整pane之间分割线的位置。</li><li>按下<kbd>Ctrl</kbd> + <kbd>B</kbd>后手指松开，然后按<kbd>z</kbd>：将当前pane全屏/取消全屏。</li><li>按下<kbd>Ctrl</kbd> + <kbd>B</kbd>后手指松开，然后按<kbd>d</kbd>：挂起当前session。</li><li><code>tmux a</code>：打开之前挂起的session。</li><li>按下<kbd>Ctrl</kbd> + <kbd>B</kbd>后手指松开，然后按<kbd>s</kbd>：选择其它session。<br /><kbd>↑</kbd>：选择上一项 session/window/pane<br /><kbd>↓</kbd>：选择下一项 session/window/pane<br /><kbd>→</kbd>：展开当前项 session/window<br /><kbd>←</kbd>：闭合当前项 session/window<br /><kbd>ESC</kbd>：退出选择</li><li>按下<kbd>Ctrl</kbd> + <kbd>B</kbd>后手指松开，然后按<kbd>c</kbd>：在当前session中创建一个新的window。</li><li>按下<kbd>Ctrl</kbd> + <kbd>B</kbd>后手指松开，然后按<kbd>w</kbd>：选择其他window。</li><li>按下<kbd>Ctrl</kbd> + <kbd>B</kbd>后手指松开，然后按<kbd>PageUp</kbd>：翻阅当前pane内的内容。</li><li>在tmux中选中文本时，需要按住<kbd>shift</kbd>键。（仅支持Windows和Linux，不支持Mac，不过该操作并不是必须的，因此影响不大）</li><li>tmux中复制/粘贴文本的通用方式：<br />(1) 按下<kbd>Ctrl</kbd> + <kbd>B</kbd>后松开手指，然后按<kbd>[</kbd><br />(2) 用鼠标选中文本，被选中的文本会被自动复制到tmux的剪贴板<br />(3) 按下<kbd>Ctrl</kbd> + <kbd>B</kbd>后松开手指，然后按<kbd>]</kbd>，会将剪贴板中的内容粘贴到光标处</li></ol></div><h2 id="vim"><a class="markdownIt-Anchor" href="#vim"></a> vim</h2><h3 id="模式"><a class="markdownIt-Anchor" href="#模式"></a> 模式</h3><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><ol><li>一般命令模式（默认模式）：类似于打游戏放技能，按不同字符，即可进行不同操作。可以复制、粘贴、删除文本等。</li><li>编辑模式： 在一般命令模式里按下i，会进入编辑模式。按下<kbd>ESC</kbd>会退出编辑模式，返回到一般命令模式。</li><li>命令行模式：在一般命令模式里按下:/?三个字母中的任意一个，会进入命令行模式。命令行在最下面。可以查找、替换、保存、退出、配置编辑器等。</li></ol></div><h3 id="操作"><a class="markdownIt-Anchor" href="#操作"></a> 操作</h3><div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>以下操作均在一般命令模式（默认模式）进行</p><ol><li><code>i</code>：进入编辑模式</li><li><code>ESC</code>：进入一般命令模式</li><li><code>h</code> 或 <code>左箭头键</code>：光标向左移动一个字符</li><li><code>j</code> 或 <code>向下箭头</code>：光标向下移动一个字符</li><li><code>k</code> 或 <code>向上箭头</code>：光标向上移动一个字符</li><li><code>l</code> 或 <code>向右箭头</code>：光标向右移动一个字符</li><li><code>n&lt;Space&gt;</code>：n表示数字，按下数字后再按空格，光标会向右移动这一行的n个字符</li><li><code>0</code> 或 <code>功能键[Home]</code>：光标移动到本行开头</li><li><code>$</code> 或 <code>功能键[End]</code>：光标移动到本行末尾</li><li><code>G</code>：光标移动到最后一行</li><li><code>:n</code> 或 <code>nG</code>：n为数字，光标移动到第n行</li><li><code>gg</code>：光标移动到第一行，相当于1G</li><li><code>n&lt;Enter&gt;</code>：n为数字，光标向下移动n行</li><li><code>/word</code>：向光标之下寻找第一个值为word的字符串。</li><li><code>?word</code>：向光标之上寻找第一个值为word的字符串。</li><li><code>n</code>：重复前一个查找操作</li><li><code>N</code>：反向重复前一个查找操作</li><li><code>:n1,n2s/word1/word2/g</code>：n1与n2为数字，在第n1行与n2行之间寻找word1这个字符串，并将该字符串替换为word2</li><li><code>:1,$s/word1/word2/g</code>：将全文的word1替换为word2</li><li><code>:1,$s/word1/word2/gc</code>：将全文的word1替换为word2，且在替换前要求用户确认。</li><li><code>v</code>：选中文本</li><li><code>d</code>：删除选中的文本</li><li><code>dd</code>: 删除当前行</li><li><code>y</code>：复制选中的文本</li><li><code>yy</code>: 复制当前行</li><li><code>p</code>: 将复制的数据在光标的下一行/下一个位置粘贴</li><li><code>u</code>：撤销</li><li><code>Ctrl + r</code>：取消撤销</li><li><code>大于号 &gt;</code>：将选中的文本整体向右缩进一次</li><li><code>小于号 &lt;</code>：将选中的文本整体向左缩进一次</li><li><code>:w</code> 保存</li><li><code>:w!</code> 强制保存</li><li><code>:q</code> 退出</li><li><code>:q!</code> 强制退出</li><li><code>:wq</code> 保存并退出</li><li><code>:set paste</code> 设置成粘贴模式，取消代码自动缩进</li><li><code>:set nopaste</code> 取消粘贴模式，开启代码自动缩进</li><li><code>:set nu</code> 显示行号</li><li><code>:set nonu</code> 隐藏行号</li><li><code>gg=G：</code>将全文代码格式化</li><li><code>:noh</code> 关闭查找关键词高亮</li><li><code>Ctrl + q</code>：当vim卡死时，可以取消当前正在执行的命令</li><li><code>Ctrl + s</code>：禁用编辑</li></ol></div><h3 id="异常处理"><a class="markdownIt-Anchor" href="#异常处理"></a> 异常处理</h3><div class="note orange icon-padding flat"><i class="note-icon fas fa-check-circle"></i><p>每次用vim编辑文件时，会自动创建一个.filename.swp的临时文件。<br />如果打开某个文件时，该文件的swp文件已存在，则会报错。此时解决办法有两种：</p><ol><li>找到正在打开该文件的程序，并退出</li><li>直接删掉该swp文件即可</li></ol></div><h2 id="shell"><a class="markdownIt-Anchor" href="#shell"></a> shell</h2><h3 id="概论"><a class="markdownIt-Anchor" href="#概论"></a> 概论</h3><div class="note icon-padding flat"><i class="note-icon fab fa-cc-visa"></i><ol><li>Linux系统中一般默认使用bash，文件开头需要写<code>#! /bin/bash</code>，指明<code>bash</code>为脚本解释器。</li><li>运行方式<ul><li>作为可执行文件  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">chmod</span> +x test.sh  <span class="comment"># 使脚本具有可执行权限</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ ./test.sh  <span class="comment"># 当前路径下执行</span></span><br><span class="line">Hello World!  <span class="comment"># 脚本输出</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ /home/acs/test.sh  <span class="comment"># 绝对路径下执行</span></span><br><span class="line">Hello World!  <span class="comment"># 脚本输出</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ ~/test.sh  <span class="comment"># 家目录路径下执行</span></span><br><span class="line">Hello World!  <span class="comment"># 脚本输出</span></span><br></pre></td></tr></table></figure></li><li>用解释器执行  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">acs@9e0ebfcd82d7:~$ bash test.sh</span><br><span class="line">Hello World!  <span class="comment"># 脚本输出</span></span><br></pre></td></tr></table></figure></li></ul></li></ol></div><h3 id="注释"><a class="markdownIt-Anchor" href="#注释"></a> 注释</h3><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><ol><li>单行注释 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这是一行注释</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;Hello World&#x27;</span>  <span class="comment">#  这也是注释</span></span><br></pre></td></tr></table></figure></li><li>多行注释(其中EOF可以换成其它任意字符串)，不建议使用</li></ol></div><h3 id="变量"><a class="markdownIt-Anchor" href="#变量"></a> 变量</h3><div class="note pink icon-padding flat"><i class="note-icon fas fa-car-crash"></i><ol><li>定义变量，不需要加 <code>$</code>符号，例如： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name1=<span class="string">&#x27;jezer&#x27;</span>  <span class="comment"># 单引号定义字符串</span></span><br><span class="line">name2=<span class="string">&quot;jezer&quot;</span>  <span class="comment"># 双引号定义字符串</span></span><br><span class="line">name3=jezer    <span class="comment"># 也可以不加引号，同样表示字符串</span></span><br></pre></td></tr></table></figure>注意<code>=</code>两侧不能有空格<br />定义变量的时候变量都是字符串，但当变量需要是整数时，会自动把变量转换成整数</li><li>使用变量，需要加上<code>$</code>符号，或者<code>${}</code>符号。花括号是可选的，主要为了帮助解释器识别变量边界。 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name=jezer</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$name</span>  <span class="comment"># 输出jezer</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;name&#125;</span>  <span class="comment"># 输出jezer</span></span><br><span class="line"><span class="built_in">echo</span> Hello, <span class="variable">$&#123;name&#125;</span>  <span class="comment"># 输出Hello, jezer</span></span><br></pre></td></tr></table></figure></li><li>使用<code>readonly</code>或者<code>declare</code>可以将变量变为只读。 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name=jezer</span><br><span class="line"><span class="built_in">readonly</span> name</span><br><span class="line"><span class="built_in">declare</span> -r name  <span class="comment"># 两种写法均可</span></span><br><span class="line">name=abc  <span class="comment"># 会报错，因为此时name只读</span></span><br></pre></td></tr></table></figure> <details class="folding-tag" cyan open><summary> declare </summary>           <div class='content'>           <p>declare [+/-][rxi][变量名称＝设置值] 或 declare -f<br />参数说明：</p><ul><li>+/- 　&quot;-“可用来指定变量的属性，”+&quot;则是取消变量所设的属性。</li><li>-f 　仅显示函数。</li><li>r 　将变量设置为只读。</li><li>x 　指定的变量会成为环境变量，可供shell以外的程序来使用。</li><li>i 　[设置值]可以是数值，字符串或运算式。</li></ul>           </div>         </details></li><li><code>unset</code>可以删除变量。 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name=jezer</span><br><span class="line"><span class="built_in">unset</span> name</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$name</span>  <span class="comment"># 输出空行</span></span><br></pre></td></tr></table></figure>被声明为只读的变量无法被<code>unset</code>删除</li><li>自定义变量(局部变量)改成环境变量(全局变量)： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">acs@9e0ebfcd82d7:~$ name=jezer  <span class="comment"># 定义变量</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">export</span> name  <span class="comment"># 第一种方法</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">declare</span> -x name  <span class="comment"># 第二种方法</span></span><br></pre></td></tr></table></figure></li><li>环境变量改为自定义变量： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">export</span> name=jezer  <span class="comment"># 定义环境变量</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">declare</span> +x name  <span class="comment"># 改为自定义变量</span></span><br></pre></td></tr></table></figure></li></ol></div><h3 id="字符串"><a class="markdownIt-Anchor" href="#字符串"></a> 字符串</h3><div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><ol><li>字符串可以用单引号，也可以用双引号，也可以不用引号。字符串中，不加引号和双引号效果相同</li><li>单引号与双引号的区别：<ul><li>单引号中的内容会原样输出，不会执行、不会取变量；</li><li>双引号中的内容可以执行、可以取变量；</li></ul> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name=jezer  <span class="comment"># 不用引号</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;hello, $name \&quot;hh\&quot;&#x27;</span>  <span class="comment"># 单引号字符串，输出 hello, $name \&quot;hh\&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hello, <span class="variable">$name</span> \&quot;hh\&quot;&quot;</span>  <span class="comment"># 双引号字符串，输出 hello, jezer &quot;hh&quot;</span></span><br></pre></td></tr></table></figure></li><li>获取字符串长度 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">&quot;jezer&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#name&#125;</span>  <span class="comment"># 输出3</span></span><br></pre></td></tr></table></figure></li><li>提取子串 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">&quot;hello, jezer&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;name:0:5&#125;</span>  <span class="comment"># 提取从0开始的5个字符</span></span><br></pre></td></tr></table></figure></li></ol></div><h3 id="默认变量"><a class="markdownIt-Anchor" href="#默认变量"></a> 默认变量</h3><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><ol><li>文件参数变量<br />在执行shell脚本时，可以向脚本传递参数。<code>$1</code>是第一个参数，<code>$2</code>是第二个参数，以此类推。特殊的，<code>$0</code>是文件名（包含路径）。例如：<br />创建文件<code>test.sh</code>： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;文件名：&quot;</span><span class="variable">$0</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第一个参数：&quot;</span><span class="variable">$1</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第二个参数：&quot;</span><span class="variable">$2</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第三个参数：&quot;</span><span class="variable">$3</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第四个参数：&quot;</span><span class="variable">$4</span></span><br></pre></td></tr></table></figure>然后执行该脚本： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">chmod</span> +x test.sh</span><br><span class="line">acs@9e0ebfcd82d7:~$ ./test.sh 1 2 3 4</span><br><span class="line">文件名：./test.sh</span><br><span class="line">第一个参数：1</span><br><span class="line">第二个参数：2</span><br><span class="line">第三个参数：3</span><br><span class="line">第四个参数：4</span><br></pre></td></tr></table></figure>向脚本传递参数时，参数个数超过一位需要用大括号括起来。</li><li>其它参数相关变量</li></ol><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">$#</td><td style="text-align:center">代表文件传入的参数个数，如上例中值为4</td></tr><tr><td style="text-align:center">$*</td><td style="text-align:center">由所有参数构成的用空格隔开的字符串，如上例中值为&quot;$1 $2 $3 $4&quot;</td></tr><tr><td style="text-align:center">$@</td><td style="text-align:center">每个参数分别用双引号括起来的字符串，如上例中值为&quot;$1&quot; “$2” “$3” “$4”</td></tr><tr><td style="text-align:center">$$</td><td style="text-align:center">脚本当前运行的进程ID</td></tr><tr><td style="text-align:center">$?</td><td style="text-align:center">上一条命令的退出状态（注意不是stdout，而是exit code）。0表示正常退出，其他值表示错误</td></tr><tr><td style="text-align:center">$(command)</td><td style="text-align:center">返回command这条命令的stdout（可嵌套）</td></tr><tr><td style="text-align:center">`command`</td><td style="text-align:center">返回command这条命令的stdout（不可嵌套）</td></tr></tbody></table></div><h3 id="数组"><a class="markdownIt-Anchor" href="#数组"></a> 数组</h3><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><ol><li>数组中可以存放多个不同类型的值，只支持一维数组，初始化时不需要指明数组大小。</li><li>数组下标从0开始。</li><li>数组用小括号表示，元素之间用空格隔开。例如： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array=(1 abc <span class="string">&quot;def&quot;</span> jezer)</span><br></pre></td></tr></table></figure>也可以直接定义数组中某个元素的值： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">array[0]=1</span><br><span class="line">array[1]=abc</span><br><span class="line">array[2]=<span class="string">&quot;def&quot;</span></span><br><span class="line">array[3]=jezer</span><br></pre></td></tr></table></figure></li><li>读取数组中某个元素的值 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">array=(1 abc <span class="string">&quot;def&quot;</span> jezer)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;array[0]&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;array[1]&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;array[2]&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;array[3]&#125;</span></span><br></pre></td></tr></table></figure></li><li>读取整个数组 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">array=(1 abc <span class="string">&quot;def&quot;</span> jezer)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;array[@]&#125;</span>  <span class="comment"># 第一种写法</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;array[*]&#125;</span>  <span class="comment"># 第二种写法</span></span><br></pre></td></tr></table></figure></li><li>数组长度，类似于字符串 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">array=(1 abc <span class="string">&quot;def&quot;</span> jezer)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#array[@]&#125;</span>  <span class="comment"># 第一种写法</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#array[*]&#125;</span>  <span class="comment"># 第二种写法</span></span><br></pre></td></tr></table></figure></li><li>在读取整个数组时，未定义的部分就不会显示。比如定义了array[0]array[1]array[2]array[1000],利用echo ${array[@]}输出时，只会显示我们定义的数组那4个元素的值，其长度结果是4，而不是1000</li></ol></div><h3 id="expr命令"><a class="markdownIt-Anchor" href="#expr命令"></a> expr命令</h3><div class="note green icon-padding flat"><i class="note-icon fab fa-internet-explorer"></i><ol><li>expr命令用于求表达式的值，格式为：<code>expr 表达式</code></li><li>表达式说明：<ul><li>用空格隔开每一项</li><li>用反斜杠放在shell特定的字符前面（发现表达式运行错误时，可以试试转义）</li><li>对包含空格和其他特殊字符的字符串要用引号括起来</li><li>expr会在stdout中输出结果。如果为逻辑关系表达式，则结果为真，stdout为1，否则为0。</li><li>expr的exit code：如果为逻辑关系表达式，则结果为真，exit code为0，否则为1。</li></ul></li><li>字符串表达式<ul><li><code>length STRING</code>：返回STRING的长度</li><li><code>index STRING CHARSET</code>：CHARSET中任意单个字符在STRING中最前面的字符位置，下标从1开始。如果在STRING中完全不存在CHARSET中的字符，则返回0。</li><li><code>substr STRING POSITION LENGTH</code>：返回STRING字符串中从POSITION开始，长度最大为LENGTH的子串。如果POSITION或LENGTH为负数，0或非数值，则返回空字符串。</li></ul> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">str=<span class="string">&quot;Hello World!&quot;</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> length <span class="string">&quot;<span class="variable">$str</span>&quot;</span>`  <span class="comment"># ``不是单引号，表示执行该命令，输出12</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> index <span class="string">&quot;<span class="variable">$str</span>&quot;</span> aWd`  <span class="comment"># 输出7，下标从1开始</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> substr <span class="string">&quot;<span class="variable">$str</span>&quot;</span> 2 3`  <span class="comment"># 输出 ell</span></span><br></pre></td></tr></table></figure></li><li>整数表达式<ul><li><code>expr</code>支持普通的算术操作，算术表达式优先级低于字符串表达式，高于逻辑关系表达式。</li><li><code>+ -</code>加减运算。两端参数会转换为整数，如果转换失败则报错。</li><li><code>* / %</code>乘，除，取模运算。两端参数会转换为整数，如果转换失败则报错。</li><li><code>()</code> 可以该表优先级，但需要用反斜杠转义</li></ul> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a=3</span><br><span class="line">b=4</span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> + <span class="variable">$b</span>`  <span class="comment"># 输出7</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> - <span class="variable">$b</span>`  <span class="comment"># 输出-1</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> \* <span class="variable">$b</span>`  <span class="comment"># 输出12，*需要转义</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> / <span class="variable">$b</span>`  <span class="comment"># 输出0，整除</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> % <span class="variable">$b</span>` <span class="comment"># 输出3</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> \( <span class="variable">$a</span> + 1 \) \* \( <span class="variable">$b</span> + 1 \)`  <span class="comment"># 输出20，值为(a + 1) * (b + 1)</span></span><br></pre></td></tr></table></figure></li><li>逻辑关系表达式<ul><li><code>|</code>、<code>&amp;</code>、<code>&lt;</code>、<code>&lt;=</code>、<code>=</code>、<code>==</code>、<code>!=</code>、<code>&gt;=</code>、<code>&gt;</code></li></ul> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">a=3</span><br><span class="line">b=4</span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> \&gt; <span class="variable">$b</span>`  <span class="comment"># 输出0，&gt;需要转义</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> <span class="string">&#x27;&lt;&#x27;</span> <span class="variable">$b</span>`  <span class="comment"># 输出1，也可以将特殊字符用引号引起来</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> <span class="string">&#x27;&gt;=&#x27;</span> <span class="variable">$b</span>`  <span class="comment"># 输出0</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> \&lt;\= <span class="variable">$b</span>`  <span class="comment"># 输出1</span></span><br><span class="line">c=0</span><br><span class="line">d=5</span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$c</span> \&amp; <span class="variable">$d</span>`  <span class="comment"># 输出0</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> \&amp; <span class="variable">$b</span>`  <span class="comment"># 输出3</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$c</span> \| <span class="variable">$d</span>`  <span class="comment"># 输出5</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> \| <span class="variable">$b</span>`  <span class="comment"># 输出3</span></span><br></pre></td></tr></table></figure></li></ol></div><h3 id="read命令"><a class="markdownIt-Anchor" href="#read命令"></a> read命令</h3><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><ol><li><code>read</code>命令用于从标准输入中读取单行数据。当读到文件结束符时，exit code为1，否则为0。</li><li>参数说明<ul><li>-p: 后面可以接提示信息</li><li>-t：后面跟秒数，定义输入字符的等待时间，超过等待时间后会自动忽略此命令</li></ul></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">read</span> name  <span class="comment"># 读入name的值</span></span><br><span class="line">hello jezer  <span class="comment"># 标准输入</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">echo</span> <span class="variable">$name</span>  <span class="comment"># 输出name的值</span></span><br><span class="line">hello jezer  <span class="comment">#标准输出</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">read</span> -p <span class="string">&quot;Please input your name: &quot;</span> -t 30 name  <span class="comment"># 读入name的值，等待时间30秒</span></span><br><span class="line">Please input your name: hello jezer  <span class="comment"># 标准输入</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">echo</span> <span class="variable">$name</span>  <span class="comment"># 输出name的值</span></span><br><span class="line">hello jezer  <span class="comment"># 标准输出</span></span><br></pre></td></tr></table></figure></div><h3 id="echo命令"><a class="markdownIt-Anchor" href="#echo命令"></a> echo命令</h3><div class="note pink icon-padding flat"><i class="note-icon fas fa-car-crash"></i><ol><li><p>显示普通字符串</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Hello AC Terminal&quot;</span></span><br><span class="line"><span class="built_in">echo</span> Hello AC Terminal  <span class="comment"># 引号可以省略</span></span><br></pre></td></tr></table></figure></li><li><p>显示转义字符</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\&quot;Hello AC Terminal\&quot;&quot;</span>  <span class="comment"># 注意只能使用双引号，如果使用单引号，则不转义</span></span><br><span class="line"><span class="built_in">echo</span> \&quot;Hello AC Terminal\&quot;  <span class="comment"># 也可以省略双引号</span></span><br></pre></td></tr></table></figure></li><li><p>显示变量</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name=jezer</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;My name is <span class="variable">$name</span>&quot;</span>  <span class="comment"># 输出 My name is jezer</span></span><br></pre></td></tr></table></figure></li><li><p>显示换行</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;Hi\n&quot;</span>  <span class="comment"># -e 开启转义</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;jezer&quot;</span></span><br></pre></td></tr></table></figure><p>输出结果：</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Hi</span><br><span class="line"></span><br><span class="line">jezer</span><br></pre></td></tr></table></figure><p><code>\\ \a \b \c \d \e \f \n \r \t \v</code> 这些是要在有 - e 的时候才能起作用, 其他时候的转义是不用- e也能转义的。</p></li><li><p>显示不换行</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;Hi \c&quot;</span> <span class="comment"># -e 开启转义 \c 不换行</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;jezer&quot;</span></span><br></pre></td></tr></table></figure><p>输出结果：</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi jezer</span><br></pre></td></tr></table></figure></li><li><p>显示结果定向至文件</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Hello World&quot;</span> &gt; output.txt  <span class="comment"># 将内容以覆盖的方式输出到output.txt中</span></span><br></pre></td></tr></table></figure></li><li><p>原样输出字符串，不进行转义或取变量(用单引号)</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name=jezer</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;$name\&quot;&#x27;</span></span><br></pre></td></tr></table></figure><p>输出结果</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$name\&quot;</span><br></pre></td></tr></table></figure></li><li><p>显示命令的执行结果</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> `<span class="built_in">date</span>`</span><br></pre></td></tr></table></figure><p>输出结果：</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Wed Sep 1 11:45:33 CST 2021</span><br></pre></td></tr></table></figure></li></ol></div><h3 id="printf命令"><a class="markdownIt-Anchor" href="#printf命令"></a> printf命令</h3><div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><ol><li><code>printf</code>命令用于格式化输出，类似于C/C++中的printf函数。默认不会在字符串末尾添加换行符。</li><li>命令格式：<code>printf format-string [arguments...]</code></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%10d.\n&quot;</span> 123  <span class="comment"># 占10位，右对齐</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%-10.2f.\n&quot;</span> 123.123321  <span class="comment"># 占10位，保留2位小数，左对齐</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;My name is %s\n&quot;</span> <span class="string">&quot;jezer&quot;</span>  <span class="comment"># 格式化输出字符串</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%d * %d = %d\n&quot;</span>  2 3 `<span class="built_in">expr</span> 2 \* 3` <span class="comment"># 表达式的值作为参数</span></span><br></pre></td></tr></table></figure><p>输出结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">      123.</span><br><span class="line">123.12    .</span><br><span class="line">My name is jezer</span><br><span class="line">2 * 3 = 6</span><br></pre></td></tr></table></figure></div><h3 id="判断命令"><a class="markdownIt-Anchor" href="#判断命令"></a> 判断命令</h3><h4 id="test语句"><a class="markdownIt-Anchor" href="#test语句"></a> test语句</h4><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><ol><li><p>逻辑运算符&amp;&amp;和||具有短路原则：</p><ul><li>expr1 &amp;&amp; expr2：当expr1为假时，直接忽略expr2</li><li>expr1 || expr2：当expr1为真时，直接忽略expr2</li><li>表达式的exit code为0，表示真；为非零，表示假。（与C/C++中的定义相反）</li></ul></li><li><p>test命令</p><ul><li>在命令行中输入man test，可以查看test命令的用法。</li><li>test命令用于判断文件类型，以及对变量做比较。</li><li>test命令用exit code返回结果，而不是使用stdout。0表示真，非0表示假。</li></ul> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span> 2 -lt 3  <span class="comment"># 为真，返回值为0</span></span><br><span class="line"><span class="built_in">echo</span> $?  <span class="comment"># 输出上个命令的返回值，输出0</span></span><br></pre></td></tr></table></figure> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">ls</span>  <span class="comment"># 列出当前目录下的所有文件</span></span><br><span class="line">homework  output.txt  test.sh  tmp</span><br><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">test</span> -e test.sh &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;exist&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;Not exist&quot;</span></span><br><span class="line">exist  <span class="comment"># test.sh 文件存在</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">test</span> -e test2.sh &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;exist&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;Not exist&quot;</span></span><br><span class="line">Not exist  <span class="comment"># testh2.sh 文件不存在</span></span><br></pre></td></tr></table></figure></li><li><p>文件类型判断</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span> -e filename  <span class="comment"># 判断文件是否存在</span></span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">测试参数</th><th style="text-align:center">代表意义</th></tr></thead><tbody><tr><td style="text-align:center">-e</td><td style="text-align:center">文件是否存在</td></tr><tr><td style="text-align:center">-f</td><td style="text-align:center">是否为文件</td></tr><tr><td style="text-align:center">-d</td><td style="text-align:center">是否为目录</td></tr></tbody></table></li><li><p>文件权限判断</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span> -r filename  <span class="comment"># 判断文件是否可读</span></span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">测试参数</th><th style="text-align:center">代表意义</th></tr></thead><tbody><tr><td style="text-align:center">-r</td><td style="text-align:center">文件是否可读</td></tr><tr><td style="text-align:center">-w</td><td style="text-align:center">文件是否可写</td></tr><tr><td style="text-align:center">-x</td><td style="text-align:center">文件是否可执行</td></tr><tr><td style="text-align:center">-s</td><td style="text-align:center">是否为非空文件</td></tr></tbody></table></li><li><p>整数间的比较</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span> <span class="variable">$a</span> -eq <span class="variable">$b</span>  <span class="comment"># a是否等于b</span></span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">测试参数</th><th style="text-align:center">代表意义</th></tr></thead><tbody><tr><td style="text-align:center">-eq</td><td style="text-align:center">a是否等于b</td></tr><tr><td style="text-align:center">-ne</td><td style="text-align:center">a是否不等于b</td></tr><tr><td style="text-align:center">-gt</td><td style="text-align:center">a是大于b</td></tr><tr><td style="text-align:center">-lt</td><td style="text-align:center">a是小于b</td></tr><tr><td style="text-align:center">-ge</td><td style="text-align:center">a是大于等于b</td></tr><tr><td style="text-align:center">-le</td><td style="text-align:center">a是小于等于b</td></tr></tbody></table></li><li><p>字符串比较</p><table><thead><tr><th style="text-align:center">测试参数</th><th style="text-align:center">代表意义</th></tr></thead><tbody><tr><td style="text-align:center">test -z STRING</td><td style="text-align:center">判断STRING是否为空，如果为空，返回true</td></tr><tr><td style="text-align:center">test -n STRING</td><td style="text-align:center">判断STRING是否为非空空，如果非空，返回true</td></tr><tr><td style="text-align:center">test str1 == str2</td><td style="text-align:center">判断str1是否等于str2</td></tr><tr><td style="text-align:center">test str1 != str2</td><td style="text-align:center">判断str1是否不等于str2</td></tr></tbody></table></li><li><p>多重条件判定</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span> -r filename -a -x filename</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">测试参数</th><th style="text-align:center">代表意义</th></tr></thead><tbody><tr><td style="text-align:center">-a</td><td style="text-align:center">两条件是否同时成立</td></tr><tr><td style="text-align:center">-o</td><td style="text-align:center">两条件是否至少一个成立</td></tr><tr><td style="text-align:center">!</td><td style="text-align:center">取反。如 test ! -x file，当file不可执行时，返回true</td></tr></tbody></table></li><li><p>判断符号[]</p><ol><li>[]与test用法几乎一模一样，更常用于if语句中。另外[[]]是[]的加强版，支持的特性更多。</li><li>[]内的每一项都要用空格隔开</li><li>中括号内的变量，最好用双引号括起来</li><li>中括号内的常数，最好用单或双引号括起来</li></ol> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[ 2 -lt 3 ]  <span class="comment"># 为真，返回值为0</span></span><br><span class="line"><span class="built_in">echo</span> $?  <span class="comment"># 输出上个命令的返回值，输出0</span></span><br></pre></td></tr></table></figure> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">&quot;hello jezer&quot;</span></span><br><span class="line">[ <span class="variable">$name</span> == <span class="string">&quot;hello jezer&quot;</span> ]  <span class="comment"># 错误，等价于 [ hello jezer == &quot;hello jezer&quot; ]，参数太多</span></span><br><span class="line">[ <span class="string">&quot;<span class="variable">$name</span>&quot;</span> == <span class="string">&quot;hello jezer&quot;</span> ]  <span class="comment"># 正确</span></span><br></pre></td></tr></table></figure></li></ol></div><h4 id="if语句"><a class="markdownIt-Anchor" href="#if语句"></a> if语句</h4><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><ol><li><p>单层if</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> condition</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a=3</span><br><span class="line">b=4</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$a</span>&quot;</span> -lt <span class="string">&quot;<span class="variable">$b</span>&quot;</span> ] &amp;&amp; [ <span class="string">&quot;<span class="variable">$a</span>&quot;</span> -gt 2 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;a&#125;</span>在范围内</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></li><li><p>单层if-else</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> condition</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a=3</span><br><span class="line">b=4</span><br><span class="line"><span class="keyword">if</span> ! [ <span class="string">&quot;<span class="variable">$a</span>&quot;</span> -lt <span class="string">&quot;<span class="variable">$b</span>&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;a&#125;</span>不小于<span class="variable">$&#123;b&#125;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;a&#125;</span>小于<span class="variable">$&#123;b&#125;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>多层if-elif-elif-else</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> condition</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">elif</span> condition</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">elif</span> condition</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">a=4</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$a</span> -eq 1 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;a&#125;</span>等于1</span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$a</span> -eq 2 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;a&#125;</span>等于2</span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$a</span> -eq 3 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;a&#125;</span>等于3</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> 其他</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></li><li><p>case…esac形式</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> $变量名称 <span class="keyword">in</span></span><br><span class="line">    值1)</span><br><span class="line">        语句1</span><br><span class="line">        语句2</span><br><span class="line">        ...</span><br><span class="line">        ;;  <span class="comment"># 类似于C/C++中的break</span></span><br><span class="line">    值2)</span><br><span class="line">        语句1</span><br><span class="line">        语句2</span><br><span class="line">        ...</span><br><span class="line">        ;;</span><br><span class="line">    *)  <span class="comment"># 类似于C/C++中的default</span></span><br><span class="line">        语句1</span><br><span class="line">        语句2</span><br><span class="line">        ...</span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">a=4</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$a</span> <span class="keyword">in</span></span><br><span class="line">    1)</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$&#123;a&#125;</span>等于1</span><br><span class="line">        ;;</span><br><span class="line">    2)</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$&#123;a&#125;</span>等于2</span><br><span class="line">        ;;</span><br><span class="line">    3)</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$&#123;a&#125;</span>等于3</span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        <span class="built_in">echo</span> 其他</span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure></li></ol></div><h3 id="循环语句"><a class="markdownIt-Anchor" href="#循环语句"></a> 循环语句</h3><div class="note green icon-padding flat"><i class="note-icon fab fa-internet-explorer"></i><ol><li><p>for…in…do…done</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> var <span class="keyword">in</span> val1 val2 val3</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><ul><li><p>输出a 2 cc，每个元素一行：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a 2 cc</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></li><li><p>输出当前路径下的所有文件名，每个文件名一行：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> `<span class="built_in">ls</span>`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$file</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></li><li><p>输出1-10</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(<span class="built_in">seq</span> 1 10)</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></li><li><p>{1…10} 或者 {a…z}</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;a..z&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>for ((…;…;…)) do…done</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ((expression; condition; expression))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 输出1-10，每个数占一行：</span></span><br><span class="line"><span class="keyword">for</span> ((i=1; i&lt;=10; i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></li><li><p>while…do…done循环</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> condition</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文件结束符为Ctrl+d，输入文件结束符后read指令返回false。</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> name</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$name</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></li><li><p>until…do…done循环</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">until condition</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 当用户输入yes或者YES时结束，否则一直等待读入。</span></span><br><span class="line">until [ <span class="string">&quot;<span class="variable">$&#123;word&#125;</span>&quot;</span> == <span class="string">&quot;yes&quot;</span> ] || [ <span class="string">&quot;<span class="variable">$&#123;word&#125;</span>&quot;</span> == <span class="string">&quot;YES&quot;</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">read</span> -p <span class="string">&quot;Please input yes/YES to stop this program: &quot;</span> word</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></li><li><p>break命令</p><ul><li>跳出当前一层循环，注意与C/C++不同的是：break不能跳出case语句。</li></ul> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> name</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="keyword">for</span> ((i=1;i&lt;=10;i++))</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">case</span> <span class="variable">$i</span> <span class="keyword">in</span></span><br><span class="line">            8)</span><br><span class="line">                <span class="built_in">break</span></span><br><span class="line">                ;;</span><br><span class="line">            *)</span><br><span class="line">                <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">                ;;</span><br><span class="line">        <span class="keyword">esac</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><ul><li>该示例每读入非EOF的字符串，会输出一遍1-7。</li></ul></li><li><p>continue命令</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ((i=1;i&lt;=10;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [ `<span class="built_in">expr</span> <span class="variable">$i</span> % 2` -eq 0 ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">continue</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>该程序输出1-10中的所有奇数。</p></li><li><p>死循环的处理方式</p><ul><li>如果Terminal可以打开该程序，则输入<code>Ctrl+c</code>即可。</li><li>否则可以直接关闭进程：<ol><li>使用<code>top</code>命令找到进程的PID</li><li>输入<code>kill -9 PID</code>即可关掉此进程</li></ol></li></ul></li></ol></div><h3 id="函数"><a class="markdownIt-Anchor" href="#函数"></a> 函数</h3><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><ol><li><code>bash</code>中的函数类似于<code>C/C++</code>中的函数，但return的返回值与C/C++不同，返回的是exit code，取值为0-255，0表示正常结束。</li><li>如果想获取函数的输出结果，可以通过<code>echo</code>输出到stdout中，然后通过$(function_name)来获取stdout中的结果。</li><li>函数的<code>return</code>值可以通过$?来获取。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[<span class="keyword">function</span>] <span class="function"><span class="title">func_name</span></span>() &#123;  <span class="comment"># function关键字可以省略</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 不获取 return值和stdout值</span></span><br><span class="line"><span class="function"><span class="title">func</span></span>() &#123;</span><br><span class="line">    name=jezer</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Hello <span class="variable">$name</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello jezer</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取 return值和stdout值</span></span><br><span class="line"><span class="comment"># 不写return时，默认return 0</span></span><br><span class="line"><span class="function"><span class="title">func</span></span>() &#123;</span><br><span class="line">    name=jezer</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Hello <span class="variable">$name</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> 123</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output=$(func)</span><br><span class="line">ret=$?</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;output = <span class="variable">$output</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;return = <span class="variable">$ret</span>&quot;</span></span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">output = Hello jezer</span><br><span class="line">return = 123</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 函数的输入参数</span></span><br><span class="line"><span class="comment"># 在函数内，$1表示第一个输入参数，$2表示第二个输入参数，依此类推</span></span><br><span class="line"><span class="comment"># 注意：函数内的$0仍然是文件名，而不是函数名</span></span><br><span class="line"><span class="function"><span class="title">func</span></span>() &#123;  <span class="comment"># 递归计算 $1 + ($1 - 1) + ($1 - 2) + ... + 0</span></span><br><span class="line">    word=<span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">while</span> [ <span class="string">&quot;<span class="variable">$&#123;word&#125;</span>&quot;</span> != <span class="string">&#x27;y&#x27;</span> ] &amp;&amp; [ <span class="string">&quot;<span class="variable">$&#123;word&#125;</span>&quot;</span> != <span class="string">&#x27;n&#x27;</span> ]</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">read</span> -p <span class="string">&quot;要进入func(<span class="variable">$1</span>)函数吗？请输入y/n：&quot;</span> word</span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$word</span>&quot;</span> == <span class="string">&#x27;n&#x27;</span> ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> 0</span><br><span class="line">        <span class="built_in">return</span> 0</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$1</span> -le 0 ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> 0</span><br><span class="line">        <span class="built_in">return</span> 0</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">sum</span>=$(func $(<span class="built_in">expr</span> <span class="variable">$1</span> - 1))</span><br><span class="line">    <span class="built_in">echo</span> $(<span class="built_in">expr</span> <span class="variable">$sum</span> + <span class="variable">$1</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> $(func 10)</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">55</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 函数内的局部变量</span></span><br><span class="line"><span class="comment"># local 变量名=变量值</span></span><br><span class="line"><span class="comment"># 第一行为函数内的name变量，第二行为函数外调用name变量，会发现此时该变量不存在。</span></span><br><span class="line"><span class="function"><span class="title">func</span></span>() &#123;</span><br><span class="line">    <span class="built_in">local</span> name=jezer</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$name</span></span><br><span class="line">&#125;</span><br><span class="line">func</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$name</span></span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jezer</span><br></pre></td></tr></table></figure></div><h3 id="exit命令"><a class="markdownIt-Anchor" href="#exit命令"></a> exit命令</h3><div class="note pink icon-padding flat"><i class="note-icon fas fa-car-crash"></i><ol><li>exit命令用来退出当前shell进程，并返回一个退出状态；使用$?可以接收这个退出状态。</li><li>exit命令可以接受一个整数值作为参数，代表退出状态。如果不指定，默认状态值是 0。</li><li>exit退出状态只能是一个介于 0~255 之间的整数，其中只有 0 表示成功，其它值都表示失败。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -ne 1 ]  <span class="comment"># 如果传入参数个数等于1，则正常退出；否则非正常退出。</span></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;arguments not valid&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;arguments valid&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">acs@9e0ebfcd82d7:~$ chmod +x test.sh</span><br><span class="line">acs@9e0ebfcd82d7:~$ ./test.sh jezer</span><br><span class="line">arguments valid</span><br><span class="line">acs@9e0ebfcd82d7:~$ echo $?  # 传入一个参数，则正常退出，exit code为0</span><br><span class="line">0</span><br><span class="line">acs@9e0ebfcd82d7:~$ ./test.sh</span><br><span class="line">arguments not valid</span><br><span class="line">acs@9e0ebfcd82d7:~$ echo $?  # 传入参数个数不是1，则非正常退出，exit code为1</span><br><span class="line">1</span><br></pre></td></tr></table></figure></div><h3 id="文件重定向"><a class="markdownIt-Anchor" href="#文件重定向"></a> 文件重定向</h3><div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><ol><li><p>重定向命令列表</p><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">command &gt; file</td><td style="text-align:center">将stdout重定向到file中</td></tr><tr><td style="text-align:center">command &lt; file</td><td style="text-align:center">将stdin重定向到file中</td></tr><tr><td style="text-align:center">command &gt;&gt; file</td><td style="text-align:center">将stdout以追加方式重定向到file中</td></tr><tr><td style="text-align:center">command n&gt; file</td><td style="text-align:center">将文件描述符n重定向到file中</td></tr><tr><td style="text-align:center">command n&gt;&gt; file</td><td style="text-align:center">将文件描述符n以追加方式重定向到file中</td></tr></tbody></table></li><li><p>输入和输出重定向</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">echo -e &quot;Hello \c&quot; &gt; output.txt  # 将stdout重定向到output.txt中</span><br><span class="line">echo &quot;World&quot; &gt;&gt; output.txt  # 将字符串追加到output.txt中</span><br><span class="line"></span><br><span class="line">read str &lt; output.txt  # 从output.txt中读取字符串</span><br><span class="line"></span><br><span class="line">echo $str  # 输出结果：Hello World</span><br></pre></td></tr></table></figure></li><li><p>同时重定向stdin和stdout</p><ul><li>创建bash脚本</li></ul> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">read</span> a</span><br><span class="line"><span class="built_in">read</span> b</span><br><span class="line"><span class="built_in">echo</span> $(<span class="built_in">expr</span> <span class="string">&quot;<span class="variable">$a</span>&quot;</span> + <span class="string">&quot;<span class="variable">$b</span>&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>创建input.txt，里面的内容为</li></ul> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">4</span><br></pre></td></tr></table></figure><ul><li>执行命令</li></ul> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">acs@9e0ebfcd82d7:~$ chmod +x test.sh  # 添加可执行权限</span><br><span class="line">acs@9e0ebfcd82d7:~$ ./test.sh &lt; input.txt &gt; output.txt  # 从input.txt中读取内容，将输出写入output.txt中</span><br><span class="line">acs@9e0ebfcd82d7:~$ cat output.txt  # 查看output.txt中的内容</span><br><span class="line">7</span><br></pre></td></tr></table></figure></li></ol></div><h3 id="引入外部脚本"><a class="markdownIt-Anchor" href="#引入外部脚本"></a> 引入外部脚本</h3><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">. filename  # 注意点和文件名之间有一个空格</span><br><span class="line"></span><br><span class="line">或</span><br><span class="line"></span><br><span class="line">source filename</span><br></pre></td></tr></table></figure></div><h2 id="ssh"><a class="markdownIt-Anchor" href="#ssh"></a> ssh</h2><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><ol><li><p>远程登录服务器</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 远程登录服务器</span></span><br><span class="line">ssh user@hostname</span><br><span class="line"><span class="comment"># 默认登录端口号为22。如果想登录某一特定端口：</span></span><br><span class="line">ssh user@hostname -p 22</span><br></pre></td></tr></table></figure></li><li><p>配置文件，创建文件<code>~/.ssh/config</code>，然后在文件中输入：</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Host myserver1</span><br><span class="line">HostName IP地址或域名</span><br><span class="line">User 用户名</span><br><span class="line">Port 20002</span><br><span class="line"></span><br><span class="line">Host myserver2</span><br><span class="line">HostName IP地址或域名</span><br><span class="line">User 用户名</span><br></pre></td></tr></table></figure><p>之后再使用服务器时，可以直接使用别名myserver1、myserver2。</p></li><li><p>创建密钥：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure><p>然后一直回车即可。<br />执行结束后，<code>~/.ssh/</code>目录下会多两个文件：</p><ul><li>id_rsa：私钥</li><li>id_rsa.pub：公钥</li></ul></li><li><p>复制密钥：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id myserver</span><br></pre></td></tr></table></figure></li><li><p>执行命令：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh user@hostname <span class="built_in">command</span></span><br></pre></td></tr></table></figure> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 单引号中的$i可以求值</span></span><br><span class="line">ssh myserver <span class="string">&#x27;for ((i = 0; i &lt; 10; i ++ )) do echo $i; done&#x27;</span></span><br></pre></td></tr></table></figure> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 双引号中的$i不可以求值</span></span><br><span class="line">ssh myserver <span class="string">&quot;for ((i = 0; i &lt; 10; i ++ )) do echo <span class="variable">$i</span>; done&quot;</span></span><br></pre></td></tr></table></figure><p>双引号是在本地服务器进行转义了，所以传过去命令不是echo $a，而是echo 1，单引号传过去的是echo $a</p></li><li><p>scp传文件</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将source路径下的文件复制到destination中</span></span><br><span class="line">scp <span class="built_in">source</span> destination</span><br><span class="line"><span class="comment"># 一次复制多个文件</span></span><br><span class="line">scp source1 source2 destination</span><br><span class="line"><span class="comment"># 复制文件夹</span></span><br><span class="line">scp -r ~/tmp myserver:/home/acs/</span><br><span class="line"><span class="comment"># 指定服务器的端口号</span></span><br><span class="line">scp -P 22 source1 source2 destination</span><br><span class="line"><span class="comment"># 使用scp配置其他服务器的vim和tmux</span></span><br><span class="line">scp ~/.vimrc ~/.tmux.conf myserver:</span><br></pre></td></tr></table></figure><p><code>scp的-r -P等参数尽量加在source和destination之前</code></p></li><li><p>配置新服务器的工作环境<br />将<a href="https://www.acwing.com/file_system/file/content/whole/index/content/2543025/">AC Terminal</a>的配置传到新服务器上：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp .bashrc .vimrc .tmux.conf server_name:  <span class="comment"># server_name需要换成自己配置的别名</span></span><br></pre></td></tr></table></figure></li></ol></div><h2 id="git"><a class="markdownIt-Anchor" href="#git"></a> git</h2><div class="note green icon-padding flat"><i class="note-icon fab fa-internet-explorer"></i><ol><li>全局设置<ul><li><code>git config --global user.name xxx</code>：设置全局用户名，信息记录在~/.gitconfig文件中</li><li><code>git config --global user.email xxx@xxx.com</code>：设置全局邮箱地址，信息记录在~/.gitconfig文件中</li><li><code>git init</code>：将当前目录配置成git仓库，信息记录在隐藏的.git文件夹中</li></ul></li><li>常用命令<ul><li><code>git add XX</code> ：将XX文件添加到暂存区</li><li><code>git commit -m &quot;给自己看的备注信息&quot;</code>：将暂存区的内容提交到当前分支</li><li><code>git status</code>：查看仓库状态</li><li><code>git log</code>：查看当前分支的所有版本</li><li><code>git push -u (第一次需要-u以后不需要)</code>：将当前分支推送到远程仓库</li><li><code>git clone git@git.acwing.com:xxx/XXX.git</code>：将远程仓库XXX下载到当前目录下</li><li><code>git branch</code>：查看所有分支和当前所处分支</li></ul></li><li>查看命令<ul><li><code>git diff XX</code>：查看XX文件相对于暂存区修改了哪些内容</li><li><code>git status</code>：查看仓库状态</li><li><code>git log</code>：查看当前分支的所有版本</li><li><code>git log --pretty=oneline</code>：用一行来显示</li><li><code>git reflog</code>：查看HEAD指针的移动历史（包括被回滚的版本）</li><li><code>git branch</code>：查看所有分支和当前所处分支</li><li><code>git pull</code>：将远程仓库的当前分支与本地仓库的当前分支合并</li></ul></li><li>删除命令<ul><li><code>git rm --cached XX</code>：将文件从仓库索引目录中删掉，不希望管理这个文件</li><li><code>git restore --staged xx</code>：将xx从暂存区里移除</li><li><code>git checkout — XX</code>或<code>git restore XX</code>：将XX文件尚未加入暂存区的修改全部撤销</li></ul></li><li>代码回滚<ul><li><code>git reset --hard HEAD^</code>或<code>git reset --hard HEAD~</code>：将代码库回滚到上一个版本</li><li><code>git reset --hard HEAD^^</code>：往上回滚两次，以此类推</li><li><code>git reset --hard HEAD~100</code>：往上回滚100个版本</li><li><code>git reset --hard 版本号</code>：回滚到某一特定版本(7位)</li></ul></li><li>远程仓库<ul><li><code>git remote add origin git@git.acwing.com:xxx/XXX.git</code>：将本地仓库关联到远程仓库</li><li><code>git push -u (第一次需要-u以后不需要)</code>：将当前分支推送到远程仓库</li><li><code>git push origin branch_name</code>：将本地的某个分支推送到远程仓库</li><li><code>git clone git@git.acwing.com:xxx/XXX.git</code>：将远程仓库XXX下载到当前目录下</li><li><code>git push --set-upstream origin branch_name</code>：设置本地的branch_name分支对应远程仓库的branch_name分支</li><li><code>git push -d origin branch_name</code>：删除远程仓库的branch_name分支</li><li><code>git checkout -t origin/branch_name</code>： 将远程的branch_name分支拉取到本地</li><li><code>git pull</code>：将远程仓库的当前分支与本地仓库的当前分支合并</li><li><code>git pull origin branch_name</code>：将远程仓库的branch_name分支与本地仓库的当前分支合并</li><li><code>git branch --set-upstream-to=origin/branch_name1 branch_name2</code>：将远程的branch_name1分支与本地的branch_name2分支对应</li></ul></li><li>分支命令<ul><li><code>git branch branch_name</code>：创建新分支</li><li><code>git branch</code>：查看所有分支和当前所处分支</li><li><code>git checkout -b branch_name</code>：创建并切换到branch_name这个分支</li><li><code>git checkout branch_name</code>：切换到branch_name这个分支</li><li><code>git merge branch_name</code>：将分支branch_name合并到当前分支上</li><li><code>git branch -d branch_name</code>：删除本地仓库的branch_name分支</li><li><code>git push --set-upstream origin branch_name</code>：设置本地的branch_name分支对应远程仓库的branch_name分支</li><li><code>git push -d origin branch_name</code>：删除远程仓库的branch_name分支</li><li><code>git checkout -t origin/branch_name</code>： 将远程的branch_name分支拉取到本地</li><li><code>git pull</code>：将远程仓库的当前分支与本地仓库的当前分支合并</li><li><code>git pull origin branch_name</code>：将远程仓库的branch_name分支与本地仓库的当前分支合并</li><li><code>git branch --set-upstream-to=origin/branch_name1 branch_name2</code>：将远程的branch_name1分支与本地的branch_name2分支对应</li></ul></li><li>stash暂存<ul><li><code>git stash</code>：将工作区和暂存区中尚未提交的修改存入栈中</li><li><code>git stash apply</code>：将栈顶存储的修改恢复到当前分支，但不删除栈顶元素</li><li><code>git stash drop</code>：删除栈顶存储的修改</li><li><code>git stash pop</code>：将栈顶存储的修改恢复到当前分支，同时删除栈顶元素</li><li><code>git stash list</code>：查看栈中所有元素</li></ul></li></ol></div><h2 id="docker"><a class="markdownIt-Anchor" href="#docker"></a> docker</h2><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><ol><li>为了避免每次使用docker命令都需要加上sudo权限，可以将当前用户加入安装中自动创建的docker用户组(可以参考<a href="https://docs.docker.com/engine/install/linux-postinstall/">官方文档</a>)： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo usermod -aG docker <span class="variable">$USER</span></span><br></pre></td></tr></table></figure></li><li>镜像（images）<ol><li><code>docker pull ubuntu:20.04</code>：拉取一个镜像</li><li><code>docker images</code>：列出本地所有镜像</li><li><code>docker image rm ubuntu:20.04</code> 或 <code>docker rmi ubuntu:20.04</code>：删除镜像ubuntu:20.04</li><li><code>docker [container] commit CONTAINER IMAGE_NAME:TAG</code>：创建某个container的镜像</li><li><code>docker save -o ubuntu_20_04.tar ubuntu:20.04</code>：将镜像ubuntu:20.04导出到本地文件ubuntu_20_04.tar中</li><li><code>docker load -i ubuntu_20_04.tar</code>：将镜像ubuntu:20.04从本地文件ubuntu_20_04.tar中加载出来</li></ol></li><li>容器(container)<ol><li><code>docker [container] create -it ubuntu:20.04</code>：利用镜像ubuntu:20.04创建一个容器。</li><li><code>docker ps -a</code>：查看本地的所有容器</li><li><code>docker [container] start CONTAINER</code>：启动容器</li><li><code>docker [container] stop CONTAINER</code>：停止容器</li><li><code>docker [container] restart CONTAINER</code>：重启容器</li><li><code>docker [contaienr] run -itd ubuntu:20.04</code>：创建并启动一个容器</li><li><code>docker run -p 20000:22 --name my_docker_server -itd docker_lesson:1.0</code>：创建并运行docker_lesson:1.0镜像，端口转发</li><li><code>docker [container] attach CONTAINER</code>：进入容器</li><li>先按<code>Ctrl+p</code>，再按<code>Ctrl+q</code>可以挂起容器</li><li><code>docker [container] exec CONTAINER COMMAND</code>：在容器中执行命令</li><li><code>docker [container] rm CONTAINER</code>：删除容器</li><li><code>docker container prune</code>：删除所有已停止的容器</li><li><code>docker export -o xxx.tar CONTAINER</code>：将容器CONTAINER导出到本地文件xxx.tar中</li><li><code>docker import xxx.tar image_name:tag</code>：将本地文件xxx.tar导入成镜像，并将镜像命名为image_name:tag</li><li><code>docker export/import</code>与<code>docker save/load</code>的区别：export/import会丢弃历史记录和元数据信息，仅保存容器当时的快照状态；save/load会保存完整记录，体积更大</li><li><code>docker top CONTAINER</code>：查看某个容器内的所有进程</li><li><code>docker stats</code>：查看所有容器的统计信息，包括CPU、内存、存储、网络等信息</li><li><code>docker cp xxx CONTAINER:xxx</code>或 <code>docker cp CONTAINER:xxx xxx</code>：在本地和容器间复制文件</li><li><code>docker rename CONTAINER1 CONTAINER2</code>：重命名容器</li><li><code>docker update CONTAINER --memory 500MB</code>：修改容器限制docker</li></ol></li><li>增加容器的映射端口：80与443<ol><li>登录容器，关闭所有运行中的任务</li><li>登录运行容器的服务器，然后执行： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker commit CONTAINER_NAME IMAGE_NAME:TAG  <span class="comment"># 将容器保存成镜像，将CONTAINER_NAME替换成容器名称,IMAGE_NAME:TAG为保存后的镜像名称</span></span><br><span class="line">docker stop CONTAINER_NAME  <span class="comment"># 关闭容器</span></span><br><span class="line">docker <span class="built_in">rm</span> CONTAINER_NAME <span class="comment"># 删除容器</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用保存的镜像重新创建容器</span></span><br><span class="line">docker run -p 20000:22 -p 8000:8000 -p 80:80 -p 443:443 --name CONTAINER_NAME -itd IMAGE_NAME:TAG</span><br></pre></td></tr></table></figure></li><li>去云服务器控制台，在安全组配置中开放80和443端口。</li></ol></li></ol></div><h2 id="扩展"><a class="markdownIt-Anchor" href="#扩展"></a> 扩展</h2><h3 id="linux-docker容器实现ssh开机自启"><a class="markdownIt-Anchor" href="#linux-docker容器实现ssh开机自启"></a> Linux docker容器实现ssh开机自启</h3><div class="note red no-icon flat"><ol><li>进入容器，安装openssh-server <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install openssh-server</span><br><span class="line"><span class="comment"># 启动之前需手动创建/var/run/sshd，不然启动sshd的时候会报错</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /var/run/sshd</span><br><span class="line"><span class="comment"># sshd以守护进程运行</span></span><br><span class="line">/usr/sbin/sshd -D &amp;</span><br><span class="line"><span class="comment"># 安装netstat，查看sshd是否监听22端口</span></span><br><span class="line">apt-get install net-tools</span><br><span class="line">netstat -apn | grep ssh</span><br></pre></td></tr></table></figure></li><li>在 <code>/root</code> 目录下新建一个 <code>start_ssh.sh</code>文件，并给予该文件可执行权限 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> /root/start_ssh.sh</span><br><span class="line"><span class="built_in">chmod</span> +x /root/start_ssh.sh</span><br></pre></td></tr></table></figure></li><li>编辑<code>start_ssh.sh</code>，输入以下内容 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">LOGTIME=$(date &quot;+%Y-%m-%d %H:%M:%S&quot;)</span><br><span class="line">echo &quot;[$LOGTIME] startup run...&quot; &gt;&gt;/root/start_ssh.log</span><br><span class="line">service ssh start &gt;&gt;/root/start_ssh.log</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">service mysql start &gt;&gt;/root/star_mysql.log   //其他服务也可这么实现</span></span><br></pre></td></tr></table></figure></li><li>将<code>start_ssh.sh</code>脚本添加到启动文件中，即在 <code>/root/.bashrc</code> 文件末尾加入如下内容 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># startup run</span></span><br><span class="line"><span class="keyword">if</span> [ -f /root/start_ssh.sh ]; <span class="keyword">then</span></span><br><span class="line">      ./root/start_ssh.sh</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></li><li>保存后，等下次重启容器的时候，添加的服务也就跟着重启了</li></ol></div>]]></content>
      
      
      <categories>
          
          <category> 云服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 帮助文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vmware安装和配置Ubantu20.04</title>
      <link href="/posts/f304faa5/"/>
      <url>/posts/f304faa5/</url>
      
        <content type="html"><![CDATA[<div class="tip home"><p>该文整合网上各种资源，将安装Ubantu20.04的步骤进行梳理，同时还进行了初步的美化和配置，本人进行过实际操作（亲测有效）。本文内容可能会和实际操作出现偏差，一切以实际操作为主，仅供参考！</p></div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>VMware Workstation Pro安装</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>Ubantu20.04镜像下载</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>创建Ubantu20.04虚拟机</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>实现中文界面</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>更新Ubantu镜像源</p>            </div><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>安装谷歌输入法</p>            </div><div class='checkbox plus blue checked'><input type="checkbox" checked="checked"/>            <p>Clash For Window 安装</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>界面美化</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>SpaceVim初步安装</p>            </div><h2 id="安装vmware-workstation-pro"><a class="markdownIt-Anchor" href="#安装vmware-workstation-pro"></a> 安装VMware Workstation Pro</h2><div class="tip warning faa-horizontal animated"><p>记得VMware Workstation Pro和VMware Workstation Player的区别，我当初一开始下了Player，网上找了一堆激活码发现没法激活，诸多功能也没开放</p></div><div class="site-card-group"><a class="site-card" href="https://customerconnect.vmware.com/en/downloads/search?query=vmware%20workstation%20pro"><div class="img"><img src="https://pic.imgdb.cn/item/61e627322ab3f51d91be18d2.png"/></div><div class="info"><span class="title">VMware下载地址</span><span class="desc">官网下载地址</span></div></a></div><p><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>考虑到官网下载可能需要梯子和注册，这里也提供了VMware Workstation Pro 16<a href="https://pan.baidu.com/s/1xffL8LL_zWA0K-JwRZLH6g">百度网盘</a>的下载地址<span class="hide-inline"><button type="button" class="hide-button" style="background-color: #FF7242;color: #fff">提取码<br /></button><span class="hide-content">ware</span></span><br />这里由于我已经安装完成，不进行演示，傻瓜式安装。</p><div class="hide-block"><button type="button" class="hide-button" style="background-color:  #00BFFF;color: #fff">激活码    </button><div class="hide-content"><p>ZF3R0-FHED2-M80TY-8QYGC-NPKYF<br />YF390-0HF8P-M81RQ-2DXQE-M2UT6<br />ZF71R-DMX85-08DQY-8YMNC-PPHV8</p></div></div></div><h2 id="ubantu2004镜像下载"><a class="markdownIt-Anchor" href="#ubantu2004镜像下载"></a> Ubantu20.04镜像下载</h2><div class="site-card-group"><a class="site-card" href="https://cn.ubuntu.com/download/desktop"><div class="img"><img src="https://pic.imgdb.cn/item/61e62d802ab3f51d91c36ecc.png"/></div><div class="info"><span class="title">Ubantu镜像下载</span><span class="desc">官网下载地址</span></div></a></div><p><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>考虑到官网下载可能需要梯子和注册，这里也提供了Ubuntu 20.04.3 LTS<a href="https://pan.baidu.com/s/11sbgbbqVGdvGi8t2ZUgn2w">百度网盘</a>的下载地址<span class="hide-inline"><button type="button" class="hide-button" style="background-color: #FF7242;color: #fff">提取码<br /></button><span class="hide-content">ware</span></span></p></div><h2 id="创建ubantu2004虚拟机"><a class="markdownIt-Anchor" href="#创建ubantu2004虚拟机"></a> 创建Ubantu20.04虚拟机</h2><details class="folding-tag" cyan><summary> 具体步骤 </summary>              <div class='content'>              <div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><ol><li>打开VMware Workstation Pro，点击创建虚拟机<br /><img src="https://pic.imgdb.cn/item/61e636342ab3f51d91ca6ee6.png" alt="" /></li><li>点击典型，如果想要更多设置可以选择自定义，一般典型就好，有些参数之后也可以修改。<br /><img src="https://pic.imgdb.cn/item/61e636932ab3f51d91caaf70.png" alt="" /></li><li>选择之前下载的Ubantu20.04镜像<br /><img src="https://pic.imgdb.cn/item/61e636ac2ab3f51d91cabf62.png" alt="" /></li><li>填写用户名密码等信息，用于登录Linux系统。<br /><img src="https://pic.imgdb.cn/item/61e637402ab3f51d91cb2fbd.png" alt="" /></li><li>为虚拟机取名字，并选择存放位置<br /><img src="https://pic.imgdb.cn/item/61e637872ab3f51d91cb76b7.png" alt="" /></li><li>为虚拟机开辟空间，这里建议选择存储为单个文件，这样性能比较好，磁盘大小之后也可以进行调整<br /><img src="https://pic.imgdb.cn/item/61e6379f2ab3f51d91cb8cd3.png" alt="" /></li><li>通过自定义硬件调整内核数和内存等信息，当然之后也可以调整<br /><img src="https://pic.imgdb.cn/item/61e637f62ab3f51d91cbce96.png" alt="" /></li><li>调整好后点击完成，Vmware会自动打开并安装，等待结束就可以登录Linux系统了</li><li>后续调整方法<br /><img src="https://pic.imgdb.cn/item/61e6387d2ab3f51d91cc31cc.png" alt="" /></li></ol></div>              </div>            </details><h2 id="实现中文界面"><a class="markdownIt-Anchor" href="#实现中文界面"></a> 实现中文界面</h2><details class="folding-tag" cyan><summary> 具体步骤 </summary>              <div class='content'>              <div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>我这里的界面会和大家的不同，因为我已经美化结束啦，但操作是类似的</p><ol><li>登录Linux系统，点击开始菜单<br /><img src="https://pic.imgdb.cn/item/61e63c302ab3f51d91cf06ad.png" alt="" /></li><li>选择设置（setting）<br /><img src="https://pic.imgdb.cn/item/61e63b1b2ab3f51d91ce2c71.png" alt="" /></li><li>选择区域与语言，点击管理已安装的语言（第一次点击会让你下载一些插件，按照操作来即可）<br /><img src="https://pic.imgdb.cn/item/61e63b6d2ab3f51d91ce84df.png" alt="" /></li><li>点击添加或者删除语言<br /><img src="https://pic.imgdb.cn/item/61e63c772ab3f51d91cf3d6e.png" alt="" /></li><li>选择中文简体（Chinese Simplified），点击应用<br /><img src="https://pic.imgdb.cn/item/61e63cb12ab3f51d91cf6990.png" alt="" /></li><li>鼠标左键长按将汉语拖至首位<br /><img src="https://pic.imgdb.cn/item/61e63d252ab3f51d91cfbc68.png" alt="" /></li><li>最后点击应用到整个系统（这里应该会让你输一遍密码），重启系统可以看到结果（关机）<br /><img src="https://pic.imgdb.cn/item/61e63d532ab3f51d91cfe1eb.png" alt="" /></li><li>之后打开系统会提醒你是否要将Download等替换成下载，个人建议不要替换，不然终端命令会很难受</li></ol></div>              </div>            </details><h2 id="更新ubantu镜像源"><a class="markdownIt-Anchor" href="#更新ubantu镜像源"></a> 更新Ubantu镜像源</h2><div class="site-card-group"><a class="site-card" href="https://mirror.tuna.tsinghua.edu.cn/help/ubuntu/"><div class="img"><img src="https://pic.imgdb.cn/item/61e6403e2ab3f51d91d1f706.png"/></div><div class="info"><span class="title">清华镜像源</span><span class="desc">官网地址</span></div></a><a class="site-card" href="https://developer.aliyun.com/mirror/ubuntu?spm=a2c6h.13651102.0.0.369e1b11nrrFqH"><div class="img"><img src="https://pic.imgdb.cn/item/61e6423d2ab3f51d91d366c8.png"/></div><div class="info"><span class="title">阿里云镜像源</span><span class="desc">官网地址</span></div></a></div><details class="folding-tag" cyan><summary> 具体步骤 </summary>              <div class='content'>              <div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>更新镜像源可以加快下载速度，这里以清华源为例进行演示</p><ol><li><kbd>Ctrl</kbd> + <kbd>Alt</kbd> + <kbd>T</kbd>打开终端</li><li>在终端输入下面命令，备份原来的更新源 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -s cp /etc/apt/sources.list /etc/apt/sources.list.backup</span><br></pre></td></tr></table></figure></li><li>在终端输入下面命令，修改更新源(sources.list) <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/apt/sources.list</span><br></pre></td></tr></table></figure></li><li>在文件最前面添加以下条目 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line"># 预发布软件源，不建议启用</span><br><span class="line"># deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse</span><br></pre></td></tr></table></figure></li><li>然后在终端分别输入以下命令（y加Enter继续） <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure></li></ol></div>              </div>            </details><h2 id="安装谷歌输入法"><a class="markdownIt-Anchor" href="#安装谷歌输入法"></a> 安装谷歌输入法</h2><details class="folding-tag" cyan><summary> 具体步骤 </summary>              <div class='content'>              <div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>谷歌输入法采用的是fcitx输入法框架</p><ol><li>在终端输入以下命令，同时会自动安装谷歌输入法以及依赖的框架 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install fcitx-googlepinyin</span><br></pre></td></tr></table></figure></li><li>选择设置（setting）<br /><img src="https://pic.imgdb.cn/item/61e63b1b2ab3f51d91ce2c71.png" alt="" /></li><li>选择区域与语言，点击管理已安装的语言（第一次点击会让你下载一些插件，按照操作来即可）<br /><img src="https://pic.imgdb.cn/item/61e63b6d2ab3f51d91ce84df.png" alt="" /></li><li>键盘输入法系统选择fcitx，然后点击应用到整个系统<br /><img src="https://pic.imgdb.cn/item/61e643842ab3f51d91d4571f.png" alt="" /></li><li>一定要重启Linux系统，不然不显示效果</li><li>进行输入法配置<br /><img src="https://pic.imgdb.cn/item/61e644402ab3f51d91d4e162.png" alt="" /></li><li>此时一般会直接将Google输入法添加进去，如果没显示，可以点击左下角的+号<br /><img src="https://pic.imgdb.cn/item/61e6449c2ab3f51d91d527ab.png" alt="" /></li><li>设置快捷键，默认通过<kbd>Ctrl</kbd> + <kbd>Space</kbd>或者<kbd>Shift</kbd>切换输入法，出于个人喜好，我将<kbd>Shift</kbd>关闭了<br /><img src="https://pic.imgdb.cn/item/61e6451f2ab3f51d91d58528.png" alt="" /></li></ol></div>              </div>            </details><h2 id="安装clash-for-window"><a class="markdownIt-Anchor" href="#安装clash-for-window"></a> 安装Clash For Window</h2><details class="folding-tag" cyan><summary> 具体步骤 </summary>              <div class='content'>              <div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>如果你没有购买梯子订阅，那么可以跳过这步，通过梯子可以加快外网访问速度，在美化环节会需要。<br />我使用的是<a href="https://ca.bitznet.app/#/login">BitNet</a>，以下均以此为例，操作类似。<br />如果大家开心的话，在注册Bitnet时记得绑定我的邀请码。</p><div class="hide-block"><button type="button" class="hide-button" style="background-color:  #00BFFF;color: #fff">邀请码    </button><div class="hide-content"><p><a href="https://ca.bitznet.app/#/register?code=VPefdSt9">链接</a>或者直接填码：VPefdSt9</p></div></div><ol><li><p>从<a href="https://github.com/Fndroid/clash_for_windows_pkg/releases">官网</a>下载软件<code>Clash.for.Windows-0.19.5-x64-linux.tar.gz</code>，考虑到官网下载可能需要梯子和注册，<br />这里也提供了Clash.for.Windows-0.19.5-x64-linux.tar.gz<a href="https://pan.baidu.com/s/12SvP4nMCudT_evUnO2oR3w">百度网盘</a>的下载地址<span class="hide-inline"><button type="button" class="hide-button" style="background-color: #FF7242;color: #fff">提取码<br /></button><span class="hide-content">ware</span></span>。<br />可以通过先在Windows上下载，然后拖至虚拟机。（推荐采用这种方法）<br /><img src="https://pic.imgdb.cn/item/61e6486e2ab3f51d91d7bbe4.png" alt="" /></p></li><li><p>在虚拟机中解压到自己想要的位置，然后通过终端运行其中的cfw文件，以下为示例</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/src/Clash\ for\ Windows-0.19.0-x64-linux/cfw</span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/61e64b232ab3f51d91d9e513.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61e64b812ab3f51d91da246d.png" alt="" /></p></li><li><p>到<a href="https://ca.bitznet.app/#/login">BitNet</a>官网中获取订阅并复制<br /><img src="https://pic.imgdb.cn/item/61e64bfe2ab3f51d91da8553.png" alt="" /></p></li><li><p>输入复制的订阅地址并下载<br /><img src="https://pic.imgdb.cn/item/61e64c3b2ab3f51d91daaef7.png" alt="" /></p></li><li><p>选择规则模式（默认），并开启<br /><img src="https://pic.imgdb.cn/item/61e64c792ab3f51d91dad87f.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61e64c962ab3f51d91daf1b7.png" alt="" /></p></li><li><p>去浏览器开启代理（火狐浏览器为例）<br /><img src="https://pic.imgdb.cn/item/61e64cf32ab3f51d91db3fbd.png" alt="" /><br />拉到底，有网络设置<br /><img src="https://pic.imgdb.cn/item/61e64d4c2ab3f51d91db861f.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61e64d652ab3f51d91db9841.png" alt="" /></p></li><li><p>这一步绝对不能忘，一定要设置Linux网络配置，默认端口号为7890<br /><img src="https://pic.imgdb.cn/item/61e64dcf2ab3f51d91dbf670.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61e64df92ab3f51d91dc1917.png" alt="" /></p></li><li><p>实现开机自启，这步默认是自动配置，如果发现没发开机自启，再来操作</p><ol><li>在终端输入以下命令 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gnome-session-properties</span><br></pre></td></tr></table></figure></li><li>在跳出的弹窗中操作<br /><img src="https://pic.imgdb.cn/item/61e687912ab3f51d911679c1.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61e687bf2ab3f51d9116a224.png" alt="" /><br /><code>&quot;/usr/local/src/Clash for Windows-0.19.0-x64-linux/cfw&quot;</code></li></ol></li></ol></div>              </div>            </details><h2 id="界面美化"><a class="markdownIt-Anchor" href="#界面美化"></a> 界面美化</h2><details class="folding-tag" cyan><summary> 具体步骤 </summary>              <div class='content'>              <div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>以下操作均在Ubantu中进行，这里有梯子访问速度较快。</p><ol><li><p>安装必要插件，在终端输入以下命令</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install gnome-tweaks chrome-gnome-shell</span><br><span class="line">sudo apt install gtk2-engines-murrine gtk2-engines-pixbuf</span><br><span class="line">sudo apt install sassc optipng inkscape libcanberra-gtk-module libglib2.0-dev libxml2-utils</span><br></pre></td></tr></table></figure></li><li><p>Ubuntu 20.04 默认使用的是 gnome 的桌面环境，到<a href="https://extensions.gnome.org/">gnome插件</a>中下载需要的插件，这里以<code>User Themes</code>为例，其他推荐下载<code>dash to dock</code>、<code>netspeed</code>、<code>Clipboard Indicator</code>。<br /><img src="https://pic.imgdb.cn/item/61e681402ab3f51d910ee2cd.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61e682b42ab3f51d9110e915.png" alt="" /></p></li><li><p>到<a href="https://www.gnome-look.org/browse?cat=135&amp;ord=latest">gnome网站</a>下载主题、图标、光标样式。如果windows中下载较快，可以先下载好再拖到ubantu<a href="https://www.pling.com/p/1253385">主题推荐</a>、<a href="https://www.pling.com/p/1305251">图标推荐</a>、<br /><a href="https://www.pling.com/p/1295073">光标推荐</a>。<br /><img src="https://pic.imgdb.cn/item/61e684432ab3f51d9112e6f3.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61e6847b2ab3f51d91131397.png" alt="" /></p></li><li><p>解压下载好的压缩包，通过终端命令（sudo），将解压后的文件移动到指定位置。</p> <p class='p center small'>Themes --> /usr/share/themes</p> <p class='p center small'>icons --> /usr/share/icons</p> <p class='p center small'>cursors --> /usr/share/icons</p></li><li><p>打开<code>gnome-tweaks</code>（第一步进行下载的）, 进行配置。如果成功将美化包放到指定位置，这步操作应该没啥问题。之前下载的美化包在<code>外观</code>面板进行设置，gnome插件在<code>扩展</code>界面设置<br /><img src="https://pic.imgdb.cn/item/61e686302ab3f51d911536dd.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61e686892ab3f51d9115a30f.png" alt="" /></p></li></ol></div>              </div>            </details><h2 id="spacevim初步安装"><a class="markdownIt-Anchor" href="#spacevim初步安装"></a> SpaceVim初步安装</h2><details class="folding-tag" cyan><summary> 具体步骤 </summary>              <div class='content'>              <div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>附上<a href="https://spacevim.org/cn/documentation/">SpcaeVim官方帮助文档</a></p><ol><li>在终端输入以下命令，安装<code>Git</code>、<code>cURL</code>、<code>Vim</code> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install git</span><br><span class="line">sudo apt install cURL</span><br><span class="line">sudo apt install vim</span><br></pre></td></tr></table></figure></li><li>在终端输入以下命令，安装<code>SpaceVim</code> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sLf https://spacevim.org/cn/install.sh | bash</span><br></pre></td></tr></table></figure></li><li>等待安装结束，这时在任意地方，通过vim编辑某文档，会自动下载必要插件，之后根据<a href="https://spacevim.org/cn/documentation/">SpcaeVim官方帮助文档</a>进行自定义配置</li></ol></div>              </div>            </details>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 帮助文档 </tag>
            
            <tag> WMware </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GUI编程入门到游戏实践</title>
      <link href="/posts/97626c0a/"/>
      <url>/posts/97626c0a/</url>
      
        <content type="html"><![CDATA[<p><code>建议不要直接在container或者frame中直接添加文本框等组件，先add面板，再进行操作</code></p><h2 id="1-简介"><a class="markdownIt-Anchor" href="#1-简介"></a> 1. 简介</h2><p><code>GUI的核心技术：Swing ， AWT</code></p><pre><code>* 即将淘汰* 界面不美观* 需要jre 环境* 需要学习* 可以写出自己心中想要的一些小工具* 工作时候，也可能需要维护到Swing界面，概率极小* 了解MVC机构，了解监听！</code></pre><p><a href="https://www.bilibili.com/video/BV1DJ411B75F?share_source=copy_web">视频链接</a></p><h2 id="2-awt"><a class="markdownIt-Anchor" href="#2-awt"></a> 2.  AWT</h2><h3 id="21-awt介绍"><a class="markdownIt-Anchor" href="#21-awt介绍"></a> 2.1 Awt介绍</h3><pre><code>* 包含了很多类和接口* 元素：窗口、按钮、文本框* java.awt* 包含了很多类和接口* 元素：窗口、按钮、文本框* java.awt</code></pre><p><img src="https://i.loli.net/2021/09/29/nlBAkSPjd8bUp7i.png" alt="image-20210929082301349" /><br /><a href="https://www.bilibili.com/video/BV1DJ411B75F?p=2&amp;share_source=copy_web">视频链接</a></p><h3 id="22-组件和容器"><a class="markdownIt-Anchor" href="#22-组件和容器"></a> 2.2  组件和容器</h3><p><code>想偷个懒就用到了Swing包下的JFrame</code></p><h4 id="221-frame窗体"><a class="markdownIt-Anchor" href="#221-frame窗体"></a> 2.2.1 Frame：窗体</h4><pre><code>* setVisible* setResizable* setBackground* setLoaction* setSize* setBBounds</code></pre><h4 id="222-panel面板"><a class="markdownIt-Anchor" href="#222-panel面板"></a> 2.2.2 Panel：面板</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">不能单独存在，需要放到Frame中</span><br><span class="line">frame.add(panel);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//监听器：适配者模式</span></span><br><span class="line">frame.addWindowListener(<span class="keyword">new</span> <span class="title class_">WindowAdapter</span>() &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">windowClosing</span><span class="params">(WindowEvent e)</span> &#123;</span><br><span class="line">System.exit(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/Liangjian_w/article/details/76186296">Java JFrame窗口关闭方法总结</a><code>需要继承JFrame类</code></p><h3 id="23-布局管理器"><a class="markdownIt-Anchor" href="#23-布局管理器"></a> 2.3 布局管理器</h3><pre><code>* 流式布局* 东西南北中* 表格式布局</code></pre><p><a href="https://blog.csdn.net/weixin_37913277/article/details/77528470">Java GUI编程的几种常用布局管理器</a><br /><img src="https://i.loli.net/2021/09/29/3VF21MtiCD6gqRj.png" alt="image-20210929082324346" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> lesson01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestLayout02</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//窗体初始化</span></span><br><span class="line">        <span class="type">Frame</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Frame</span>();</span><br><span class="line">        frame.setLayout(<span class="keyword">new</span> <span class="title class_">GridLayout</span>(<span class="number">2</span>,<span class="number">1</span>));</span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">        frame.setBounds(<span class="number">300</span>,<span class="number">400</span>,<span class="number">300</span>,<span class="number">400</span>);</span><br><span class="line">        frame.setBackground(Color.CYAN);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//四个面板</span></span><br><span class="line">        <span class="type">Panel</span> <span class="variable">p1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Panel</span>(<span class="keyword">new</span> <span class="title class_">BorderLayout</span>());</span><br><span class="line">        <span class="type">Panel</span> <span class="variable">p2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Panel</span>(<span class="keyword">new</span> <span class="title class_">GridLayout</span>(<span class="number">2</span>,<span class="number">1</span>));</span><br><span class="line">        <span class="type">Panel</span> <span class="variable">p3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Panel</span>(<span class="keyword">new</span> <span class="title class_">BorderLayout</span>());</span><br><span class="line">        <span class="type">Panel</span> <span class="variable">p4</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Panel</span>(<span class="keyword">new</span> <span class="title class_">GridLayout</span>(<span class="number">2</span>,<span class="number">2</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//基本框架确立</span></span><br><span class="line">        p1.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;West-1&quot;</span>), BorderLayout.WEST);</span><br><span class="line">        p1.add(p2, BorderLayout.CENTER);</span><br><span class="line">        p1.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;East-1&quot;</span>), BorderLayout.EAST);</span><br><span class="line">        p3.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;West-2&quot;</span>),BorderLayout.WEST);</span><br><span class="line">        p3.add(p4,BorderLayout.CENTER);</span><br><span class="line">        p3.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;East-2&quot;</span>),BorderLayout.EAST);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//添加按钮和面板</span></span><br><span class="line">        p2.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;p2-btn-1&quot;</span>));</span><br><span class="line">        p2.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;p2-btn-2&quot;</span>));</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; <span class="number">5</span>; i++)&#123;</span><br><span class="line">            p4.add(<span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;p4-btn-&quot;</span> + i));</span><br><span class="line">        &#125;</span><br><span class="line">        frame.add(p1);</span><br><span class="line">        frame.add(p3);</span><br><span class="line">        <span class="comment">//监听器，关闭动作</span></span><br><span class="line">        frame.addWindowListener(<span class="keyword">new</span> <span class="title class_">WindowAdapter</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">windowClosing</span><span class="params">(WindowEvent e)</span> &#123;</span><br><span class="line">                System.exit(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="24-事件监听"><a class="markdownIt-Anchor" href="#24-事件监听"></a> 2.4 事件监听</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> lesson01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//初始化窗体</span></span><br><span class="line">        <span class="type">JFrame</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JFrame</span>();</span><br><span class="line">        frame.setBounds(<span class="number">400</span>,<span class="number">400</span>,<span class="number">400</span>,<span class="number">400</span>);</span><br><span class="line">        frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//创建按钮</span></span><br><span class="line">        <span class="type">Button</span> <span class="variable">button1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;start&quot;</span>);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">button2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;stop&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//为按钮添加事件反馈信息，默认为按钮label信息</span></span><br><span class="line">        button1.setActionCommand(<span class="string">&quot;开始&quot;</span>);</span><br><span class="line">        <span class="type">MyMonitor</span> <span class="variable">myMonitor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyMonitor</span>();</span><br><span class="line">        button1.addActionListener(myMonitor);</span><br><span class="line">        button2.addActionListener(myMonitor);</span><br><span class="line">        frame.add(button1, BorderLayout.EAST);</span><br><span class="line">        frame.add(button2, BorderLayout.WEST);</span><br><span class="line">        <span class="comment">//窗口关闭事件</span></span><br><span class="line">        frame.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyMonitor</span> <span class="keyword">implements</span> <span class="title class_">ActionListener</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;按钮被点击了---&gt;&quot;</span> + e.getActionCommand());</span><br><span class="line">        <span class="comment">//可以实现精确定位，避免重复建立监听器</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;开始&quot;</span>.equals(e.getActionCommand()))&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;恭喜&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="25-输入框-textfield-监听"><a class="markdownIt-Anchor" href="#25-输入框-textfield-监听"></a> 2.5 输入框 TextField 监听</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">MyFrame</span>().setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);</span><br><span class="line">        <span class="comment">//仅用来启动</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyFrame</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyFrame</span><span class="params">()</span> <span class="keyword">throws</span> HeadlessException &#123;</span><br><span class="line">        <span class="type">TextField</span> <span class="variable">textField</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TextField</span>();</span><br><span class="line">        add(textField);</span><br><span class="line">        <span class="comment">//监听这个文本框的文字,按下回车启动</span></span><br><span class="line">        <span class="type">MyActionListener</span> <span class="variable">myActionListener</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyActionListener</span>();</span><br><span class="line">        textField.addActionListener(myActionListener);</span><br><span class="line">        setVisible(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//自适应</span></span><br><span class="line">        pack();</span><br><span class="line">        <span class="comment">//设置替换编码</span></span><br><span class="line">        textField.setEchoChar(<span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyActionListener</span> <span class="keyword">implements</span> <span class="title class_">ActionListener</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line">        <span class="type">TextField</span> <span class="variable">field</span> <span class="operator">=</span> (TextField) e.getSource();</span><br><span class="line">        System.out.println(field.getText());</span><br><span class="line">        <span class="comment">//清空文本框</span></span><br><span class="line">        field.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="26-简易计算器组合内部类"><a class="markdownIt-Anchor" href="#26-简易计算器组合内部类"></a> 2.6 简易计算器，组合+内部类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Calculator</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//计算机类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Calculator</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Calculator</span><span class="params">()</span> <span class="keyword">throws</span> HeadlessException &#123;</span><br><span class="line">        <span class="comment">//3个文本框</span></span><br><span class="line">        <span class="type">TextField</span> <span class="variable">textField1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TextField</span>(<span class="number">10</span>);</span><br><span class="line">        <span class="type">TextField</span> <span class="variable">textField2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TextField</span>(<span class="number">10</span>);</span><br><span class="line">        <span class="type">TextField</span> <span class="variable">textField3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TextField</span>(<span class="number">10</span>);</span><br><span class="line">        <span class="comment">//1个按钮</span></span><br><span class="line">        <span class="type">Button</span> <span class="variable">button</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;=&quot;</span>);</span><br><span class="line">        <span class="comment">//1个标签</span></span><br><span class="line">        <span class="type">Label</span> <span class="variable">label</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Label</span>(<span class="string">&quot;+&quot;</span>);</span><br><span class="line">        <span class="comment">//布局</span></span><br><span class="line">        setLayout(<span class="keyword">new</span> <span class="title class_">FlowLayout</span>());</span><br><span class="line">        add(textField1);</span><br><span class="line">        add(label);</span><br><span class="line">        add(textField2);</span><br><span class="line">        add(button);</span><br><span class="line">        add(textField3);</span><br><span class="line">        setVisible(<span class="literal">true</span>);</span><br><span class="line">        pack();</span><br><span class="line">        <span class="comment">//关闭窗体</span></span><br><span class="line">        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);</span><br><span class="line">        <span class="comment">//监听事件</span></span><br><span class="line">        <span class="type">CalculatorListener</span> <span class="variable">calculatorListener</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CalculatorListener</span>(textField1, textField2, textField3);</span><br><span class="line">        button.addActionListener(calculatorListener);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//监听器类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CalculatorListener</span> <span class="keyword">implements</span> <span class="title class_">ActionListener</span>&#123;</span><br><span class="line">    <span class="comment">//获取三个变量</span></span><br><span class="line">    <span class="keyword">private</span> TextField textField1, textField2, textField3;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CalculatorListener</span><span class="params">(TextField textField1, TextField textField2, TextField textField3)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.textField1 = textField1;</span><br><span class="line">        <span class="built_in">this</span>.textField2 = textField2;</span><br><span class="line">        <span class="built_in">this</span>.textField3 = textField3;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line">        <span class="comment">//1.获得加数和被加数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">num1</span> <span class="operator">=</span> Integer.parseInt(textField1.getText());</span><br><span class="line">        <span class="type">int</span> <span class="variable">num2</span> <span class="operator">=</span> Integer.parseInt(textField2.getText());</span><br><span class="line">        <span class="comment">//2.将结果放到第三个文本框</span></span><br><span class="line">        textField3.setText(<span class="string">&quot;&quot;</span> + (num1 + num2));</span><br><span class="line">        <span class="comment">//3.清楚前两个框</span></span><br><span class="line">        textField1.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        textField2.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>代码优化1（完全面向对象）:</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Calculator</span>().start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//计算机类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Calculator</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span>&#123;</span><br><span class="line">    <span class="type">TextField</span> <span class="variable">textField1</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">TextField</span> <span class="variable">textField2</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">TextField</span> <span class="variable">textField3</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span>&#123;</span><br><span class="line">        textField1 = <span class="keyword">new</span> <span class="title class_">TextField</span>(<span class="number">10</span>);</span><br><span class="line">        textField2 = <span class="keyword">new</span> <span class="title class_">TextField</span>(<span class="number">10</span>);</span><br><span class="line">        textField3 = <span class="keyword">new</span> <span class="title class_">TextField</span>(<span class="number">10</span>);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">button</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;=&quot;</span>);</span><br><span class="line">        <span class="type">Label</span> <span class="variable">label</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Label</span>(<span class="string">&quot;+&quot;</span>);</span><br><span class="line"></span><br><span class="line">        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);</span><br><span class="line">        button.addActionListener(<span class="keyword">new</span> <span class="title class_">CalculatorListener</span>(<span class="built_in">this</span>));</span><br><span class="line"></span><br><span class="line">        setLayout(<span class="keyword">new</span> <span class="title class_">FlowLayout</span>());</span><br><span class="line">        add(textField1);</span><br><span class="line">        add(label);</span><br><span class="line">        add(textField2);</span><br><span class="line">        add(button);</span><br><span class="line">        add(textField3);</span><br><span class="line">        setVisible(<span class="literal">true</span>);</span><br><span class="line">        pack();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//监听器类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CalculatorListener</span> <span class="keyword">implements</span> <span class="title class_">ActionListener</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Calculator calculator;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CalculatorListener</span><span class="params">(Calculator calculator)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.calculator = calculator;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">num1</span> <span class="operator">=</span> Integer.parseInt(<span class="built_in">this</span>.calculator.textField1.getText());</span><br><span class="line">        <span class="type">int</span> <span class="variable">num2</span> <span class="operator">=</span> Integer.parseInt(<span class="built_in">this</span>.calculator.textField2.getText());</span><br><span class="line">        calculator.textField3.setText(<span class="string">&quot;&quot;</span> + (num1 + num2));</span><br><span class="line">        calculator.textField1.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        calculator.textField2.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>代码优化2（内部类，更好的包装）：</code><br /><code>原本外部类的内容可以直接访问，大大降低代码成本</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Calculator</span>().start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//计算机类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Calculator</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span>&#123;</span><br><span class="line">    <span class="type">TextField</span> <span class="variable">textField1</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">TextField</span> <span class="variable">textField2</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">TextField</span> <span class="variable">textField3</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span>&#123;</span><br><span class="line">        textField1 = <span class="keyword">new</span> <span class="title class_">TextField</span>(<span class="number">10</span>);</span><br><span class="line">        textField2 = <span class="keyword">new</span> <span class="title class_">TextField</span>(<span class="number">10</span>);</span><br><span class="line">        textField3 = <span class="keyword">new</span> <span class="title class_">TextField</span>(<span class="number">10</span>);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">button</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;=&quot;</span>);</span><br><span class="line">        <span class="type">Label</span> <span class="variable">label</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Label</span>(<span class="string">&quot;+&quot;</span>);</span><br><span class="line"></span><br><span class="line">        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);</span><br><span class="line">        button.addActionListener(<span class="keyword">new</span> <span class="title class_">CalculatorListener</span>());</span><br><span class="line"></span><br><span class="line">        setLayout(<span class="keyword">new</span> <span class="title class_">FlowLayout</span>());</span><br><span class="line">        add(textField1);</span><br><span class="line">        add(label);</span><br><span class="line">        add(textField2);</span><br><span class="line">        add(button);</span><br><span class="line">        add(textField3);</span><br><span class="line">        setVisible(<span class="literal">true</span>);</span><br><span class="line">        pack();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span>  <span class="keyword">class</span> <span class="title class_">CalculatorListener</span> <span class="keyword">implements</span> <span class="title class_">ActionListener</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">num1</span> <span class="operator">=</span> Integer.parseInt(textField1.getText());</span><br><span class="line">            <span class="type">int</span> <span class="variable">num2</span> <span class="operator">=</span> Integer.parseInt(textField2.getText());</span><br><span class="line">            textField3.setText(<span class="string">&quot;&quot;</span> + (num1 + num2));</span><br><span class="line">            textField1.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            textField2.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="27-画笔paint"><a class="markdownIt-Anchor" href="#27-画笔paint"></a> 2.7 画笔paint</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> paint;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//组件中自动调用print方法，且只调用一次</span></span><br><span class="line">        <span class="type">MyPaint</span> <span class="variable">myPaint</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyPaint</span>();</span><br><span class="line">        myPaint.start();</span><br><span class="line">        myPaint.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyPaint</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span>&#123;</span><br><span class="line">        setBounds(<span class="number">200</span>,<span class="number">200</span>,<span class="number">600</span>,<span class="number">500</span>);</span><br><span class="line">        setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//画笔</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">paint</span><span class="params">(Graphics g)</span> &#123;</span><br><span class="line">        g.setColor(Color.BLUE);</span><br><span class="line">        g.drawOval(<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>);</span><br><span class="line">        g.setColor(Color.CYAN);</span><br><span class="line">        g.fillOval(<span class="number">200</span>,<span class="number">200</span>,<span class="number">100</span>,<span class="number">100</span>);</span><br><span class="line">        g.fillRect(<span class="number">300</span>,<span class="number">300</span>,<span class="number">100</span>,<span class="number">100</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">close</span><span class="params">()</span>&#123;</span><br><span class="line">        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="271-鼠标监听"><a class="markdownIt-Anchor" href="#271-鼠标监听"></a> 2.7.1 鼠标监听</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> lesson02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseEvent;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestMouseListener</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">MyFrame</span> <span class="variable">myFrame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyFrame</span>(<span class="string">&quot;画板&quot;</span>);</span><br><span class="line">        myFrame.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyFrame</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span>&#123;</span><br><span class="line">    ArrayList points;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyFrame</span><span class="params">(String title)</span> <span class="keyword">throws</span> HeadlessException &#123;</span><br><span class="line">        <span class="built_in">super</span>(title);</span><br><span class="line">        setBounds(<span class="number">200</span>,<span class="number">200</span>,<span class="number">400</span>,<span class="number">300</span>);</span><br><span class="line">        setVisible(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        points = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="built_in">this</span>.addMouseListener(<span class="keyword">new</span> <span class="title class_">MyMouseListener</span>());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">paint</span><span class="params">(Graphics g)</span> &#123;</span><br><span class="line">        <span class="type">Iterator</span> <span class="variable">iterator</span> <span class="operator">=</span> points.iterator();</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext())&#123;</span><br><span class="line">            <span class="type">Point</span> <span class="variable">point</span> <span class="operator">=</span> (Point) iterator.next();</span><br><span class="line">            g.setColor(Color.CYAN);</span><br><span class="line">            g.fillOval(point.x, point.y, <span class="number">10</span>, <span class="number">10</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">class</span> <span class="title class_">MyMouseListener</span> <span class="keyword">extends</span> <span class="title class_">MouseAdapter</span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">mousePressed</span><span class="params">(MouseEvent e)</span> &#123;</span><br><span class="line">            points.add(<span class="keyword">new</span> <span class="title class_">Point</span>(e.getX(), e.getY()));</span><br><span class="line">            repaint();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">close</span><span class="params">()</span>&#123;</span><br><span class="line">        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="272-窗口监听"><a class="markdownIt-Anchor" href="#272-窗口监听"></a> 2.7.2 窗口监听</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> lesson03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestWindow</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">MyFrame</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyFrame</span> <span class="keyword">extends</span> <span class="title class_">Frame</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyFrame</span><span class="params">()</span>&#123;</span><br><span class="line">        setBounds(<span class="number">300</span>,<span class="number">300</span>,<span class="number">500</span>,<span class="number">600</span>);</span><br><span class="line">        setVisible(<span class="literal">true</span>);</span><br><span class="line">        <span class="built_in">this</span>.addWindowListener(<span class="keyword">new</span> <span class="title class_">MyWindowListener</span>());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">class</span> <span class="title class_">MyWindowListener</span> <span class="keyword">extends</span> <span class="title class_">WindowAdapter</span> &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">windowClosing</span><span class="params">(WindowEvent e)</span> &#123;</span><br><span class="line">            System.exit(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">windowActivated</span><span class="params">(WindowEvent e)</span> &#123;</span><br><span class="line">            <span class="type">Frame</span> <span class="variable">frame</span> <span class="operator">=</span> (Frame) e.getSource();</span><br><span class="line">            frame.setTitle(<span class="string">&quot;Hello!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="28-键盘监听"><a class="markdownIt-Anchor" href="#28-键盘监听"></a> 2.8 键盘监听</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> lesson04;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestKeyListener</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">MyFrame</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyFrame</span> <span class="keyword">extends</span> <span class="title class_">Frame</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyFrame</span><span class="params">()</span>&#123;</span><br><span class="line">        setBounds(<span class="number">300</span>,<span class="number">300</span>,<span class="number">300</span>,<span class="number">300</span>);</span><br><span class="line">        setVisible(<span class="literal">true</span>);</span><br><span class="line">        <span class="built_in">this</span>.addKeyListener(<span class="keyword">new</span> <span class="title class_">Listener</span>());</span><br><span class="line">        <span class="built_in">this</span>.addWindowListener(<span class="keyword">new</span> <span class="title class_">close</span>());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">class</span> <span class="title class_">Listener</span> <span class="keyword">extends</span> <span class="title class_">KeyAdapter</span> &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">keyPressed</span><span class="params">(KeyEvent e)</span> &#123;</span><br><span class="line">            System.out.println(e.getKeyChar());</span><br><span class="line">            <span class="keyword">if</span> (e.getKeyCode() == KeyEvent.VK_3)</span><br><span class="line">                System.out.println(<span class="string">&quot;hhh&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">class</span> <span class="title class_">close</span> <span class="keyword">extends</span> <span class="title class_">WindowAdapter</span> &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">windowClosing</span><span class="params">(WindowEvent e)</span> &#123;</span><br><span class="line">            System.exit(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-swing"><a class="markdownIt-Anchor" href="#3-swing"></a> 3. Swing</h2><h3 id="31-窗口"><a class="markdownIt-Anchor" href="#31-窗口"></a> 3.1 窗口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//居中方法</span></span><br><span class="line">label.setHorizontalAlignment(SwingConstants.CENTER);</span><br></pre></td></tr></table></figure><p><code>JFrame是Frame的子类，但依赖于容器</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> lesson05;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JFrameDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//init();初始化</span></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">MyFrame</span>().init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyFrame</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//获得容器</span></span><br><span class="line">        <span class="type">Container</span> <span class="variable">contentPane</span> <span class="operator">=</span> getContentPane();</span><br><span class="line">        contentPane.setBackground(Color.CYAN);</span><br><span class="line"></span><br><span class="line">        setVisible(<span class="literal">true</span>);</span><br><span class="line">        setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line">        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyFrame</span><span class="params">()</span> <span class="keyword">throws</span> HeadlessException &#123;</span><br><span class="line">        add(<span class="keyword">new</span> <span class="title class_">JLabel</span>(<span class="string">&quot;欢迎来到对抗路&quot;</span>, SwingConstants.CENTER));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="32-弹窗"><a class="markdownIt-Anchor" href="#32-弹窗"></a> 3.2 弹窗</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> lesson06;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DialogDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">MyJFrame</span>().init();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyJFrame</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">Container</span> <span class="variable">container</span> <span class="operator">=</span> getContentPane();</span><br><span class="line">        container.setBackground(Color.CYAN);</span><br><span class="line">        setVisible(<span class="literal">true</span>);</span><br><span class="line">        setBounds(<span class="number">500</span>,<span class="number">500</span>,<span class="number">500</span>,<span class="number">800</span>);</span><br><span class="line"></span><br><span class="line">        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyJFrame</span><span class="params">()</span> <span class="keyword">throws</span> HeadlessException &#123;</span><br><span class="line">        <span class="type">JButton</span> <span class="variable">button</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JButton</span>(<span class="string">&quot;点击弹出对话框&quot;</span>);</span><br><span class="line">        button.setBounds(<span class="number">0</span>,<span class="number">0</span>,<span class="number">100</span>,<span class="number">100</span>);</span><br><span class="line">        <span class="type">JLabel</span> <span class="variable">jlabel</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>(<span class="string">&quot;Hello!&quot;</span>);</span><br><span class="line">        jlabel.setBounds(<span class="number">200</span>,<span class="number">300</span>,<span class="number">200</span>,<span class="number">100</span>);</span><br><span class="line">        jlabel.setHorizontalAlignment(SwingConstants.CENTER);</span><br><span class="line">        add(button);</span><br><span class="line">        add(jlabel);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        button.addActionListener(<span class="keyword">new</span> <span class="title class_">ActionListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">MyDialog</span>().init();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyDialog</span> <span class="keyword">extends</span> <span class="title class_">JDialog</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">Container</span> <span class="variable">container</span> <span class="operator">=</span> getContentPane();</span><br><span class="line">        container.setBackground(Color.BLUE);</span><br><span class="line">        setBounds(<span class="number">400</span>,<span class="number">400</span>,<span class="number">300</span>,<span class="number">550</span>);</span><br><span class="line">        setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyDialog</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">JLabel</span> <span class="variable">jLabel</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>(<span class="string">&quot;OK&quot;</span>);</span><br><span class="line">        jLabel.setBounds(<span class="number">10</span>,<span class="number">20</span>,<span class="number">50</span>,<span class="number">40</span>);</span><br><span class="line">        add(jLabel);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="33-icon-imageicon标签"><a class="markdownIt-Anchor" href="#33-icon-imageicon标签"></a> 3.3 Icon、ImageIcon标签</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> lesson07;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IconDemo</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span> <span class="keyword">implements</span> <span class="title class_">Icon</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">IconDemo</span><span class="params">()</span> <span class="keyword">throws</span> HeadlessException &#123;</span><br><span class="line">        setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> width;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> height;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">IconDemo</span><span class="params">(<span class="type">int</span> width, <span class="type">int</span> height)</span> <span class="keyword">throws</span> HeadlessException &#123;</span><br><span class="line">        <span class="built_in">this</span>.width = width;</span><br><span class="line">        <span class="built_in">this</span>.height = height;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">Container</span> <span class="variable">container</span> <span class="operator">=</span> getContentPane();</span><br><span class="line">        container.add(<span class="keyword">new</span> <span class="title class_">JLabel</span>(<span class="string">&quot;hello&quot;</span>, <span class="keyword">new</span> <span class="title class_">IconDemo</span>(<span class="number">15</span>,<span class="number">15</span>), SwingConstants.CENTER));</span><br><span class="line">        <span class="built_in">this</span>.setVisible(<span class="literal">true</span>);</span><br><span class="line">        <span class="built_in">this</span>.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">paintIcon</span><span class="params">(Component c, Graphics g, <span class="type">int</span> x, <span class="type">int</span> y)</span> &#123;</span><br><span class="line">        g.fillOval(x,y, width, height);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getIconWidth</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> width;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getIconHeight</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> width;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">IconDemo</span>().init();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> lesson08;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ImageDemo</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ImageDemo</span><span class="params">()</span> <span class="keyword">throws</span> HeadlessException &#123;</span><br><span class="line">        <span class="type">JLabel</span> <span class="variable">hello</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        <span class="comment">//图片放到out的对应文件夹下</span></span><br><span class="line">        <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> ImageDemo.class.getResource(<span class="string">&quot;头像01.jpg&quot;</span>);</span><br><span class="line">        hello.setIcon(<span class="keyword">new</span> <span class="title class_">ImageIcon</span>(url));</span><br><span class="line">        hello.setHorizontalAlignment(SwingConstants.CENTER);</span><br><span class="line"></span><br><span class="line">        <span class="type">Container</span> <span class="variable">container</span> <span class="operator">=</span> getContentPane();</span><br><span class="line">        container.add(hello);</span><br><span class="line">        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">        pack();</span><br><span class="line">        setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">ImageDemo</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="34-pannel面板"><a class="markdownIt-Anchor" href="#34-pannel面板"></a> 3.4 Pannel面板</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> lesson09;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JPanelDemo</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">JPanelDemo</span><span class="params">()</span> <span class="keyword">throws</span> HeadlessException &#123;</span><br><span class="line">        <span class="type">Container</span> <span class="variable">container</span> <span class="operator">=</span> getContentPane();</span><br><span class="line">        container.setLayout(<span class="keyword">new</span> <span class="title class_">GridLayout</span>(<span class="number">2</span>, <span class="number">1</span>, <span class="number">10</span> ,<span class="number">10</span>));<span class="comment">//后两个参数代表间距</span></span><br><span class="line"></span><br><span class="line">        <span class="type">JPanel</span> <span class="variable">panel</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JPanel</span>();</span><br><span class="line">        panel.add(<span class="keyword">new</span> <span class="title class_">JButton</span>(<span class="string">&quot;01&quot;</span>));</span><br><span class="line">        panel.add(<span class="keyword">new</span> <span class="title class_">JButton</span>(<span class="string">&quot;02&quot;</span>));</span><br><span class="line">        panel.add(<span class="keyword">new</span> <span class="title class_">JButton</span>(<span class="string">&quot;03&quot;</span>));</span><br><span class="line">        container.add(panel);</span><br><span class="line"></span><br><span class="line">        setVisible(<span class="literal">true</span>);</span><br><span class="line">        pack();</span><br><span class="line">        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">JPanelDemo</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>JScroll面板（带滚动条）</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> lesson09;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JScrollDemo</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">JScrollDemo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Container</span> <span class="variable">container</span> <span class="operator">=</span> getContentPane();</span><br><span class="line">        <span class="comment">//文本域</span></span><br><span class="line">        <span class="type">JTextArea</span> <span class="variable">textArea</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JTextArea</span>();</span><br><span class="line">        textArea.setText(<span class="string">&quot;欢迎学习wqwqrrqwrqrqrwqrqwrq&quot;</span> +<span class="string">&#x27;\n&#x27;</span>+</span><br><span class="line">                <span class="string">&quot;qwerqrqrqrw&quot;</span> +<span class="string">&#x27;\n&#x27;</span>+</span><br><span class="line">                <span class="string">&quot;wrqrqwrqrwrw！&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//JScroll面板（滚动条）</span></span><br><span class="line">        <span class="type">JScrollPane</span> <span class="variable">pane</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JScrollPane</span>(textArea);</span><br><span class="line">        container.add(pane);</span><br><span class="line">        <span class="built_in">this</span>.setVisible(<span class="literal">true</span>);</span><br><span class="line">        <span class="built_in">this</span>.setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">300</span>,<span class="number">350</span>);</span><br><span class="line">        <span class="built_in">this</span>.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">JScrollDemo</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="35-按钮"><a class="markdownIt-Anchor" href="#35-按钮"></a> 3.5 按钮</h3><h4 id="351-普通按钮"><a class="markdownIt-Anchor" href="#351-普通按钮"></a> 3.5.1 普通按钮</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> lesson10;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JButtonDemo</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">JButtonDemo</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">Container</span> <span class="variable">container</span> <span class="operator">=</span> getContentPane();</span><br><span class="line">        <span class="comment">//将一个图片变为图标</span></span><br><span class="line">        <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> JButtonDemo.class.getResource(<span class="string">&quot;头像01.jpg&quot;</span>);</span><br><span class="line">        <span class="type">ImageIcon</span> <span class="variable">icon</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ImageIcon</span>(url);</span><br><span class="line">        <span class="comment">//创建按钮</span></span><br><span class="line">        <span class="type">JButton</span> <span class="variable">jButton</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JButton</span>(icon);</span><br><span class="line">        jButton.setToolTipText(<span class="string">&quot;这是提示语&quot;</span>);</span><br><span class="line">        container.add(jButton);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.setVisible(<span class="literal">true</span>);</span><br><span class="line">        <span class="built_in">this</span>.pack();</span><br><span class="line">        <span class="built_in">this</span>.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">JButtonDemo</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="352-单选框按钮"><a class="markdownIt-Anchor" href="#352-单选框按钮"></a> 3.5.2 单选框按钮</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> lesson11;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JRadioButtonDemo</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">JRadioButtonDemo</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">Container</span> <span class="variable">container</span> <span class="operator">=</span> getContentPane();</span><br><span class="line">        <span class="comment">//单选框，分组，只能选择一个</span></span><br><span class="line">        <span class="type">JRadioButton</span> <span class="variable">jButton01</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JRadioButton</span>(<span class="string">&quot;01&quot;</span>);</span><br><span class="line">        <span class="type">JRadioButton</span> <span class="variable">jButton02</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JRadioButton</span>(<span class="string">&quot;02&quot;</span>);</span><br><span class="line">        <span class="type">JRadioButton</span> <span class="variable">jButton03</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JRadioButton</span>(<span class="string">&quot;03&quot;</span>);</span><br><span class="line">        <span class="type">ButtonGroup</span> <span class="variable">group</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ButtonGroup</span>();</span><br><span class="line">        group.add(jButton01);</span><br><span class="line">        group.add(jButton02);</span><br><span class="line">        group.add(jButton03);</span><br><span class="line">        container.add(jButton01,BorderLayout.CENTER);</span><br><span class="line">        container.add(jButton02, BorderLayout.NORTH);</span><br><span class="line">        container.add(jButton03, BorderLayout.SOUTH);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.setVisible(<span class="literal">true</span>);</span><br><span class="line">        <span class="built_in">this</span>.setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">500</span>,<span class="number">300</span>);</span><br><span class="line">        <span class="built_in">this</span>.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">JRadioButtonDemo</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="353-复选框"><a class="markdownIt-Anchor" href="#353-复选框"></a> 3.5.3 复选框</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> lesson11;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JCheckBoxDemo</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">JCheckBoxDemo</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">Container</span> <span class="variable">container</span> <span class="operator">=</span> getContentPane();</span><br><span class="line">        <span class="comment">//多选框</span></span><br><span class="line">        <span class="type">JCheckBox</span> <span class="variable">checkBox01</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JCheckBox</span>(<span class="string">&quot;01&quot;</span>);</span><br><span class="line">        <span class="type">JCheckBox</span> <span class="variable">checkBox02</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JCheckBox</span>(<span class="string">&quot;02&quot;</span>);</span><br><span class="line">        <span class="type">JCheckBox</span> <span class="variable">checkBox03</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JCheckBox</span>(<span class="string">&quot;03&quot;</span>);</span><br><span class="line">        container.add(checkBox01,BorderLayout.CENTER);</span><br><span class="line">        container.add(checkBox02,BorderLayout.NORTH);</span><br><span class="line">        container.add(checkBox03,BorderLayout.SOUTH);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.setVisible(<span class="literal">true</span>);</span><br><span class="line">        <span class="built_in">this</span>.setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">500</span>,<span class="number">300</span>);</span><br><span class="line">        <span class="built_in">this</span>.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">JCheckBoxDemo</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="36-列表"><a class="markdownIt-Anchor" href="#36-列表"></a> 3.6 列表</h3><h4 id="361-下拉框"><a class="markdownIt-Anchor" href="#361-下拉框"></a> 3.6.1 下拉框</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> lesson12;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JComboBoxDemo</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">JComboBoxDemo</span><span class="params">()</span> <span class="keyword">throws</span> HeadlessException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Container</span> <span class="variable">container</span> <span class="operator">=</span> <span class="built_in">this</span>.getContentPane();</span><br><span class="line">        JComboBox&lt;Object&gt; status = <span class="keyword">new</span> <span class="title class_">JComboBox</span>&lt;&gt;();</span><br><span class="line">        status.addItem(<span class="string">&quot;null&quot;</span>);</span><br><span class="line">        status.addItem(<span class="string">&quot;正在热映&quot;</span>);</span><br><span class="line">        status.addItem(<span class="string">&quot;已下架&quot;</span>);</span><br><span class="line">        status.addItem(<span class="string">&quot;即将上映&quot;</span>);</span><br><span class="line">        status.addActionListener(<span class="keyword">new</span> <span class="title class_">ActionListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line">                System.out.println(status.getSelectedIndex());<span class="comment">//获取项序数</span></span><br><span class="line">                System.out.println(status.getSelectedItem());<span class="comment">//获取内容</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        container.add(status);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.setVisible(<span class="literal">true</span>);</span><br><span class="line">        <span class="built_in">this</span>.setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">300</span>,<span class="number">500</span>);</span><br><span class="line">        <span class="built_in">this</span>.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">JComboBoxDemo</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="362-列表框"><a class="markdownIt-Anchor" href="#362-列表框"></a> 3.6.2 列表框</h4><p><code>String[]静态添加数据,Vector可动态调整数据</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> lesson12;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JComboBoxDemo</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">JComboBoxDemo</span><span class="params">()</span> <span class="keyword">throws</span> HeadlessException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Container</span> <span class="variable">container</span> <span class="operator">=</span> <span class="built_in">this</span>.getContentPane();</span><br><span class="line"></span><br><span class="line">        String[] content = &#123;<span class="string">&quot;1&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;3&quot;</span>&#125;;</span><br><span class="line">        JList&lt;Object&gt; status = <span class="keyword">new</span> <span class="title class_">JList</span>&lt;&gt;(content);</span><br><span class="line">        container.add(status);</span><br><span class="line">        <span class="built_in">this</span>.setVisible(<span class="literal">true</span>);</span><br><span class="line">        <span class="built_in">this</span>.setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">300</span>,<span class="number">500</span>);</span><br><span class="line">        <span class="built_in">this</span>.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">JComboBoxDemo</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="37-文字组件"><a class="markdownIt-Anchor" href="#37-文字组件"></a> 3.7 文字组件</h3><h4 id="371-文本框"><a class="markdownIt-Anchor" href="#371-文本框"></a> 3.7.1 文本框</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> lesson12;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JComboBoxDemo</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">JComboBoxDemo</span><span class="params">()</span> <span class="keyword">throws</span> HeadlessException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Container</span> <span class="variable">container</span> <span class="operator">=</span> <span class="built_in">this</span>.getContentPane();</span><br><span class="line">        <span class="type">JTextField</span> <span class="variable">textField</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JTextField</span>(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        <span class="type">JTextField</span> <span class="variable">textField2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JTextField</span>(<span class="string">&quot;world&quot;</span>,<span class="number">10</span>);</span><br><span class="line">        container.add(textField,BorderLayout.NORTH);</span><br><span class="line">        container.add(textField2,BorderLayout.SOUTH);</span><br><span class="line">        <span class="built_in">this</span>.setVisible(<span class="literal">true</span>);</span><br><span class="line">        <span class="built_in">this</span>.setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">300</span>,<span class="number">500</span>);</span><br><span class="line">        <span class="built_in">this</span>.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">JComboBoxDemo</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="372-密码框"><a class="markdownIt-Anchor" href="#372-密码框"></a> 3.7.2 密码框</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> lesson12;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JComboBoxDemo</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">JComboBoxDemo</span><span class="params">()</span> <span class="keyword">throws</span> HeadlessException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Container</span> <span class="variable">container</span> <span class="operator">=</span> <span class="built_in">this</span>.getContentPane();</span><br><span class="line">        <span class="type">JPasswordField</span> <span class="variable">passwordField</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JPasswordField</span>();</span><br><span class="line">        passwordField.setEchoChar(<span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">        container.add(passwordField);</span><br><span class="line">        <span class="built_in">this</span>.setVisible(<span class="literal">true</span>);</span><br><span class="line">        <span class="built_in">this</span>.setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">300</span>,<span class="number">500</span>);</span><br><span class="line">        <span class="built_in">this</span>.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">JComboBoxDemo</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="373-文本域"><a class="markdownIt-Anchor" href="#373-文本域"></a> 3.7.3 文本域</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> lesson09;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JScrollDemo</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">JScrollDemo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Container</span> <span class="variable">container</span> <span class="operator">=</span> getContentPane();</span><br><span class="line">        <span class="comment">//文本域</span></span><br><span class="line">        <span class="type">JTextArea</span> <span class="variable">textArea</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JTextArea</span>();</span><br><span class="line">        textArea.setText(<span class="string">&quot;欢迎学习wqwqrrqwrqrqrwqrqwrq&quot;</span> +<span class="string">&#x27;\n&#x27;</span>+</span><br><span class="line">                <span class="string">&quot;qwerqrqrqrw&quot;</span> +<span class="string">&#x27;\n&#x27;</span>+</span><br><span class="line">                <span class="string">&quot;wrqrqwrqrwrw！&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//JScroll面板（滚动条）</span></span><br><span class="line">        <span class="type">JScrollPane</span> <span class="variable">pane</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JScrollPane</span>(textArea);</span><br><span class="line">        container.add(pane);</span><br><span class="line">        <span class="built_in">this</span>.setVisible(<span class="literal">true</span>);</span><br><span class="line">        <span class="built_in">this</span>.setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">300</span>,<span class="number">350</span>);</span><br><span class="line">        <span class="built_in">this</span>.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">JScrollDemo</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-贪吃蛇"><a class="markdownIt-Anchor" href="#4-贪吃蛇"></a> 4. 贪吃蛇</h2><p><code>StartGame</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> snake;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//游戏中的主启动类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StartGame</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">StartGame</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(<span class="string">&quot;贪吃蛇&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.setBounds(<span class="number">10</span>,<span class="number">10</span>,<span class="number">900</span>,<span class="number">720</span>);</span><br><span class="line">        <span class="built_in">this</span>.setResizable(<span class="literal">false</span>);<span class="comment">//设置窗体大小不可变</span></span><br><span class="line">        <span class="built_in">this</span>.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">        <span class="built_in">this</span>.setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.add(<span class="keyword">new</span> <span class="title class_">GamePanel</span>());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">StartGame</span>().init();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>GamePanel</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> snake;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyEvent;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="comment">//游戏的面板</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GamePanel</span> <span class="keyword">extends</span> <span class="title class_">JPanel</span> <span class="keyword">implements</span> <span class="title class_">ActionListener</span> &#123;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">isStart</span> <span class="operator">=</span> <span class="literal">false</span>;<span class="comment">//游戏状态参数</span></span><br><span class="line">    <span class="type">boolean</span> <span class="variable">isFail</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">SnakeStructure</span> <span class="variable">snakeStructure</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SnakeStructure</span>();</span><br><span class="line">    <span class="type">Food</span> <span class="variable">food</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Food</span>();</span><br><span class="line">    <span class="type">Timer</span> <span class="variable">timer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Timer</span>(<span class="number">100</span>,<span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">GamePanel</span><span class="params">()</span>&#123;</span><br><span class="line">        snakeStructure.init();</span><br><span class="line">        food.init();</span><br><span class="line">        <span class="comment">//获得焦点和键盘事件</span></span><br><span class="line">        <span class="built_in">this</span>.setFocusable(<span class="literal">true</span>);</span><br><span class="line">        <span class="built_in">this</span>.addKeyListener(<span class="keyword">new</span> <span class="title class_">MyKeyListener</span>());</span><br><span class="line">        <span class="comment">//游戏一开始，定时器启动</span></span><br><span class="line">        timer.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义蛇的数据结构</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">SnakeStructure</span> &#123;</span><br><span class="line">        <span class="type">int</span> score;<span class="comment">//得分</span></span><br><span class="line">        <span class="type">int</span> length;<span class="comment">//蛇的长度</span></span><br><span class="line">        <span class="type">int</span>[] snakeX = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">600</span>]; <span class="comment">// 蛇的x坐标</span></span><br><span class="line">        <span class="type">int</span>[] snakeY = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">500</span>]; <span class="comment">// 蛇的y坐标</span></span><br><span class="line">        String fx;<span class="comment">//方向</span></span><br><span class="line">        <span class="comment">//初始化方法</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span>&#123;</span><br><span class="line">            length = <span class="number">3</span>;</span><br><span class="line">            score = <span class="number">0</span>;</span><br><span class="line">            snakeX[<span class="number">0</span>] = <span class="number">100</span>;snakeY[<span class="number">0</span>] = <span class="number">100</span>;<span class="comment">//脑袋的坐标</span></span><br><span class="line">            snakeX[<span class="number">1</span>] = <span class="number">75</span>;snakeY[<span class="number">1</span>] = <span class="number">100</span>;<span class="comment">//第一个身体的坐标</span></span><br><span class="line">            snakeX[<span class="number">2</span>] = <span class="number">50</span>;snakeY[<span class="number">2</span>] = <span class="number">100</span>;<span class="comment">//第二个身体的坐标</span></span><br><span class="line">            fx = <span class="string">&quot;R&quot;</span>;<span class="comment">//初始化方向为右</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义食物位置</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Food</span>&#123;</span><br><span class="line">        <span class="type">int</span> foodX, foodY;</span><br><span class="line">        <span class="type">Random</span> <span class="variable">random</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">        <span class="comment">//把食物随机分布在界面上</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span>&#123;</span><br><span class="line">            foodX = <span class="number">25</span> + <span class="number">25</span> * random.nextInt(<span class="number">34</span>);</span><br><span class="line">            foodY = <span class="number">75</span> + <span class="number">25</span> * random.nextInt(<span class="number">24</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//键盘监听器</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">MyKeyListener</span> <span class="keyword">extends</span> <span class="title class_">KeyAdapter</span> &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">keyPressed</span><span class="params">(KeyEvent e)</span> &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">keyCode</span> <span class="operator">=</span> e.getKeyCode();</span><br><span class="line">            <span class="keyword">if</span> (keyCode == KeyEvent.VK_SPACE) &#123;</span><br><span class="line">                <span class="keyword">if</span> (isFail)&#123;</span><br><span class="line">                    isFail = <span class="literal">false</span>;</span><br><span class="line">                    snakeStructure.init();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    isStart = !isStart;</span><br><span class="line">            &#125;</span><br><span class="line">            repaint();</span><br><span class="line">            <span class="comment">//小蛇移动</span></span><br><span class="line">            <span class="keyword">if</span> (keyCode == KeyEvent.VK_UP)&#123;</span><br><span class="line">                snakeStructure.fx = <span class="string">&quot;U&quot;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (keyCode == KeyEvent.VK_DOWN)&#123;</span><br><span class="line">                snakeStructure.fx = <span class="string">&quot;D&quot;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (keyCode == KeyEvent.VK_LEFT)&#123;</span><br><span class="line">                snakeStructure.fx = <span class="string">&quot;L&quot;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (keyCode == KeyEvent.VK_RIGHT)&#123;</span><br><span class="line">                snakeStructure.fx = <span class="string">&quot;R&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//事件监听---通过定时器实现,刷新</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isStart &amp;&amp; !isFail)&#123;</span><br><span class="line">            <span class="comment">//吃食物</span></span><br><span class="line">            <span class="keyword">if</span> (snakeStructure.snakeX[<span class="number">0</span>] == food.foodX &amp;&amp; snakeStructure.snakeY[<span class="number">0</span>] == food.foodY) &#123;</span><br><span class="line">                snakeStructure.length ++;</span><br><span class="line">                snakeStructure.score += <span class="number">10</span>;</span><br><span class="line">                food.init();<span class="comment">//再次初始化食物</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//身体移动</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> snakeStructure.length - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">                snakeStructure.snakeX[i] = snakeStructure.snakeX[i-<span class="number">1</span>];</span><br><span class="line">                snakeStructure.snakeY[i] = snakeStructure.snakeY[i-<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//走向</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="string">&quot;R&quot;</span>.equals(snakeStructure.fx))&#123;</span><br><span class="line">                snakeStructure.snakeX[<span class="number">0</span>] += <span class="number">25</span>;</span><br><span class="line">                <span class="keyword">if</span> (snakeStructure.snakeX[<span class="number">0</span>] &gt; <span class="number">850</span>)</span><br><span class="line">                    snakeStructure.snakeX[<span class="number">0</span>] = <span class="number">25</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;L&quot;</span>.equals(snakeStructure.fx))&#123;</span><br><span class="line">                snakeStructure.snakeX[<span class="number">0</span>] -= <span class="number">25</span>;</span><br><span class="line">                <span class="keyword">if</span> (snakeStructure.snakeX[<span class="number">0</span>] &lt; <span class="number">25</span>)</span><br><span class="line">                    snakeStructure.snakeX[<span class="number">0</span>] = <span class="number">850</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;U&quot;</span>.equals(snakeStructure.fx))&#123;</span><br><span class="line">                snakeStructure.snakeY[<span class="number">0</span>] -= <span class="number">25</span>;</span><br><span class="line">                <span class="keyword">if</span> (snakeStructure.snakeY[<span class="number">0</span>] &lt; <span class="number">75</span>)</span><br><span class="line">                    snakeStructure.snakeY[<span class="number">0</span>] = <span class="number">650</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;D&quot;</span>.equals(snakeStructure.fx))&#123;</span><br><span class="line">                snakeStructure.snakeY[<span class="number">0</span>] += <span class="number">25</span>;</span><br><span class="line">                <span class="keyword">if</span> (snakeStructure.snakeY[<span class="number">0</span>] &gt; <span class="number">650</span>)</span><br><span class="line">                    snakeStructure.snakeY[<span class="number">0</span>] = <span class="number">75</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//失败判断，装到自己就算失败</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; snakeStructure.length; i++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (snakeStructure.snakeX[<span class="number">0</span>] == snakeStructure.snakeX[i] &amp;&amp; snakeStructure.snakeY[<span class="number">0</span>] == snakeStructure.snakeY[i])</span><br><span class="line">                    isFail = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            repaint();</span><br><span class="line">        &#125;</span><br><span class="line">        timer.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//绘制面板</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">paintComponent</span><span class="params">(Graphics g)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.paintComponent(g);<span class="comment">//清屏，避免闪烁</span></span><br><span class="line">        <span class="comment">//绘制静态面板</span></span><br><span class="line">        <span class="built_in">this</span>.setBackground(Color.WHITE);</span><br><span class="line">        Date.header.paintIcon(<span class="built_in">this</span>,g,<span class="number">25</span>,<span class="number">11</span>);<span class="comment">//广告栏</span></span><br><span class="line">        g.fillRect(<span class="number">25</span>,<span class="number">75</span>,<span class="number">850</span>,<span class="number">600</span>);<span class="comment">//默认的游戏界面</span></span><br><span class="line">        <span class="comment">//计分板</span></span><br><span class="line">        g.setColor(Color.CYAN);</span><br><span class="line">        g.setFont(<span class="keyword">new</span> <span class="title class_">Font</span>(<span class="string">&quot;微软雅黑&quot;</span>, Font.BOLD,<span class="number">18</span>));</span><br><span class="line">        g.drawString(<span class="string">&quot;长度&quot;</span> + snakeStructure.length, <span class="number">750</span>,<span class="number">35</span>);</span><br><span class="line">        g.drawString(<span class="string">&quot;分数&quot;</span> + snakeStructure.score, <span class="number">750</span>,<span class="number">60</span>);</span><br><span class="line">        <span class="comment">//画出食物</span></span><br><span class="line">        Date.food.paintIcon(<span class="built_in">this</span>,g,food.foodX,food.foodY);</span><br><span class="line">        <span class="comment">//画出小蛇</span></span><br><span class="line">        <span class="keyword">switch</span> (snakeStructure.fx)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;R&quot;</span>:   Date.right.paintIcon(<span class="built_in">this</span>,g,snakeStructure.snakeX[<span class="number">0</span>],snakeStructure.snakeY[<span class="number">0</span>]);<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;L&quot;</span>:   Date.left.paintIcon(<span class="built_in">this</span>,g,snakeStructure.snakeX[<span class="number">0</span>],snakeStructure.snakeY[<span class="number">0</span>]);<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;U&quot;</span>:   Date.up.paintIcon(<span class="built_in">this</span>,g,snakeStructure.snakeX[<span class="number">0</span>],snakeStructure.snakeY[<span class="number">0</span>]);<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;D&quot;</span>:   Date.down.paintIcon(<span class="built_in">this</span>,g,snakeStructure.snakeX[<span class="number">0</span>],snakeStructure.snakeY[<span class="number">0</span>]);<span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; snakeStructure.length;i++)&#123;</span><br><span class="line">            Date.body.paintIcon(<span class="built_in">this</span>,g,snakeStructure.snakeX[i],snakeStructure.snakeY[i]);<span class="comment">//身体初始化</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//游戏状态</span></span><br><span class="line">        <span class="keyword">if</span> (isStart == <span class="literal">false</span>)&#123;</span><br><span class="line">            g.setColor(Color.WHITE);</span><br><span class="line">            g.setFont(<span class="keyword">new</span> <span class="title class_">Font</span>(<span class="string">&quot;微软雅黑&quot;</span>, Font.BOLD,<span class="number">40</span>));</span><br><span class="line">            g.drawString(<span class="string">&quot;按下空格开始游戏&quot;</span>,<span class="number">300</span>,<span class="number">300</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (isFail == <span class="literal">true</span>)&#123;</span><br><span class="line">            g.setColor(Color.red);</span><br><span class="line">            g.setFont(<span class="keyword">new</span> <span class="title class_">Font</span>(<span class="string">&quot;微软雅黑&quot;</span>, Font.BOLD,<span class="number">40</span>));</span><br><span class="line">            g.drawString(<span class="string">&quot;按下空格开始游戏&quot;</span>,<span class="number">300</span>,<span class="number">300</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Date</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> snake;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Date</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">URL</span> <span class="variable">headerURl</span> <span class="operator">=</span> Date.class.getResource(<span class="string">&quot;/statics/header.png&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">URL</span> <span class="variable">upURL</span> <span class="operator">=</span> Date.class.getResource(<span class="string">&quot;/statics/up.png&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">URL</span> <span class="variable">downURL</span> <span class="operator">=</span> Date.class.getResource(<span class="string">&quot;/statics/down.png&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">URL</span> <span class="variable">leftURl</span> <span class="operator">=</span> Date.class.getResource(<span class="string">&quot;/statics/left.png&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">URL</span> <span class="variable">rightURL</span> <span class="operator">=</span> Date.class.getResource(<span class="string">&quot;/statics/right.png&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">URL</span> <span class="variable">bodyURL</span> <span class="operator">=</span> Date.class.getResource(<span class="string">&quot;/statics/body.png&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">URL</span> <span class="variable">foodURL</span> <span class="operator">=</span> Date.class.getResource(<span class="string">&quot;/statics/food.png&quot;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">ImageIcon</span> <span class="variable">header</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ImageIcon</span>(headerURl);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">ImageIcon</span> <span class="variable">up</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ImageIcon</span>(upURL);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">ImageIcon</span> <span class="variable">down</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ImageIcon</span>(downURL);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">ImageIcon</span> <span class="variable">left</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ImageIcon</span>(leftURl);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">ImageIcon</span> <span class="variable">right</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ImageIcon</span>(rightURL);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">ImageIcon</span> <span class="variable">body</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ImageIcon</span>(bodyURL);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">ImageIcon</span> <span class="variable">food</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ImageIcon</span>(foodURL);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 拓展知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS3.0</title>
      <link href="/posts/95f6ae7f/"/>
      <url>/posts/95f6ae7f/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.edrawsoft.cn/viewer/public/s/eeacc731132983">思维脑图</a></p><h2 id="1-初识css"><a class="markdownIt-Anchor" href="#1-初识css"></a> 1. 初识CSS</h2><p><a href="https://www.runoob.com/">菜鸟教程</a></p><h3 id="11-css概念"><a class="markdownIt-Anchor" href="#11-css概念"></a> 1.1 CSS概念</h3><p><code>CSS ---&gt; Cascading Style Sheet 层叠级联样式表</code></p><p><strong>用来美化网页，如字体、颜色、边距、高度、背景图片、网页定位、页面浮动…</strong></p><h3 id="12-发展史"><a class="markdownIt-Anchor" href="#12-发展史"></a> 1.2 发展史</h3><ul><li>CSS 1.0</li><li>CSS 2.0   DIV（块） + CSS， HTML 与 CSS结构分离的思想，网页变得简单，SEO（搜索引擎优化）</li><li>CSS 2.1 浮动，定位</li><li>CSS 3.0 圆角，阴影，动画…浏览器兼容性</li></ul><h3 id="13-简单实例"><a class="markdownIt-Anchor" href="#13-简单实例"></a> 1.3 简单实例</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--规范&lt;style&gt;可以编写css的代码，每一个声明最好用分号结尾</span></span><br><span class="line"><span class="comment">    语法：</span></span><br><span class="line"><span class="comment">        选择器&#123;</span></span><br><span class="line"><span class="comment">            声明1；</span></span><br><span class="line"><span class="comment">            声明2；</span></span><br><span class="line"><span class="comment">            声明3；</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Jay<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="14-css的优势"><a class="markdownIt-Anchor" href="#14-css的优势"></a> 1.4 CSS的优势</h3><ol><li>内容与表现分离</li><li>网页的表现统一，容易修改</li><li>丰富的样式，使得页面布局更加灵活</li><li>减少网页的代码量，增加网页的浏览速度，节省网络带宽</li><li>运用独立于页面的CSS，有利于网页被搜索引擎收录</li></ol><h3 id="15-css导入的方式"><a class="markdownIt-Anchor" href="#15-css导入的方式"></a> 1.5 CSS导入的方式</h3><h4 id="151-行内样式"><a class="markdownIt-Anchor" href="#151-行内样式"></a> 1.5.1 行内样式</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--行内样式：在标签元素中，编写一个style属性--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">&quot;color: red&quot;</span>&gt;</span>Jay<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>使用style属性引入CSS样式</li><li>使用style属性设置CSS样式仅对当前的HTML标签起作为，并且是写在HTML标签中的这种方式不能起到内容与表现相分离，本质上没有体现出CSS的优势，因此不推荐使用。</li></ul><h4 id="152-内部样式表"><a class="markdownIt-Anchor" href="#152-内部样式表"></a> 1.5.2 内部样式表</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--内部样式--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">h1</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: green;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>CSS代码写在<code>&lt;head&gt;</code>的<code>&lt;style&gt;</code>标签中</li><li>优点：方便在同页面中修改样式</li><li>缺点：不利于在多页面间共享复用代码及维护，对内容与样式的分离也不够彻底引出外部样式表</li></ul><h4 id="153-外部样式表"><a class="markdownIt-Anchor" href="#153-外部样式表"></a> 1.5.3 外部样式表</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--链接式--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--导入式--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="keyword">@import</span> <span class="string">&quot;css/style.css&quot;</span>;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>CSS代码保存在扩展名为.css的样式表中</li><li>HTML文件引用扩展名为.css的样式表，有两种方式<ul><li>链接式（使用的最多）<ul><li>使用<code>&lt;link&gt;</code>标签链接外部样式表，并讲解各参数的含义，<code>&lt;link&gt;</code>标签必须放在<code>&lt;head&gt;</code>标签中</li></ul></li><li>导入式<ul><li>使用<code>@import</code>导入外部样式表</li></ul></li></ul></li></ul><p>链接式与导入式的区别</p><ol><li><code>&lt;link/&gt;</code>标签是属于XHTML范畴的，<code>@import</code>是属于CSS2.1中特有的。</li><li>使用<code>&lt;link/&gt;</code>链接的CSS是客户端浏览网页时先将外部CSS文件加载到网页当中，然后再进行编译显示，所以这种情况下显示出来的网页与用户预期的效果一样，即使网速再慢也一样的效果。</li><li>使用<code>@import</code>导入的CSS文件，客户端在浏览网页时是先将HTML结构呈现出来，再把外部CSS文件加载到网页当中，当然最终的效果也与使用<code>&lt;link/&gt;</code>链接文件效果一样，只是当网速较慢时会先显示没有CSS统一布局的HTML网页，这样就会给用户很不好的感觉。这个也是现在目前大多少网站采用链接外部样式表的主要原因。</li><li>由于<code>@import</code>是属于CSS2.1中特有的，因此对于不兼容CSS2.1的浏览器来说就是无效的。</li></ol><h2 id="2-选择器"><a class="markdownIt-Anchor" href="#2-选择器"></a> 2.  选择器</h2><p><code>作用：选择页面上的某一个或者某一类元素</code></p><h3 id="21-标签选择器"><a class="markdownIt-Anchor" href="#21-标签选择器"></a> 2.1 标签选择器</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="comment">/*标签选择器，会选择到页面上所有的这个标签的元素*/</span></span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">h1</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>学Java<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Jay<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="22-类选择器"><a class="markdownIt-Anchor" href="#22-类选择器"></a> 2.2 类选择器</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="comment">/*类选择器的格式  .class的名称&#123;&#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">      可以复用*/</span></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.jay</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: green;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.soul</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: aqua;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;jay&quot;</span>&gt;</span>标题1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;soul&quot;</span>&gt;</span>标题2<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="23-id选择器"><a class="markdownIt-Anchor" href="#23-id选择器"></a> 2.3 ID选择器</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="comment">/*id选择器格式，不可复用，id全局唯一*/</span></span></span><br><span class="line"><span class="language-css">      <span class="comment">/*  #id名称&#123;&#125;*/</span></span></span><br><span class="line"><span class="language-css">      <span class="selector-id">#jay</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>:red;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span> = <span class="string">jay</span>&gt;</span>标题1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="24-基本选择器的优先级"><a class="markdownIt-Anchor" href="#24-基本选择器的优先级"></a> 2.4 基本选择器的优先级</h3><p><code>ID选择器&gt;类选择器&gt;标签选择器</code></p><ol><li>标签选择器直接应用于HTML标签</li><li>类选择器可在页面中多次使用</li><li>ID选择器在同一个页面中只能使用一次</li></ol><h3 id="25-层次选择器"><a class="markdownIt-Anchor" href="#25-层次选择器"></a> 2.5 层次选择器</h3><p><img src="https://i.loli.net/2021/09/29/su6hwTCglcBjxA8.png" alt="image-20210929090116415" /><br /><code>就近原则</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*后代选择器*/</span></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*在body后面的所有p元素*/</span></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">body</span> <span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background</span>: red;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/*子选择器*/</span></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*在body后的一代p元素*/</span></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">body</span>&gt;<span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background</span>: green;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/*相邻兄弟选择器*/</span></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*.active向下的一个同级p元素*/</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.active</span> + <span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background</span>: yellow;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/*通用兄弟选择器*/</span></span></span><br><span class="line"><span class="language-css">    <span class="comment">/* .active向下的所有同代p元素*/</span></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.active</span>~<span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background</span>: blue;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span> = <span class="string">&quot;active&quot;</span>&gt;</span>p1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>p2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>p3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>p4<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>p5<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>p6<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="26-结构伪类选择器"><a class="markdownIt-Anchor" href="#26-结构伪类选择器"></a> 2.6 结构伪类选择器</h3><p><img src="https://i.loli.net/2021/09/29/bOnKwhLEtd6QqUI.png" alt="image-20210929090128732" /></p><p><code>就近原则</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/**ul的第一个子元素*/</span></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:first</span>-child&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background</span>: red;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/**ul的最后一个元素*/</span></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background</span>: green;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/*只选中p1：*/</span></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*定位到父元素，选择当前的第2个元素（按顺序）*/</span></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">p</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>)&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background</span>: yellow;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/*选中父元素，第1个属于p元素的类型（按类型）*/</span></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">p</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">1</span>)&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background</span>: blue;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/*伪类：鼠标定位特效*/</span></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">h1</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background</span>: orange ;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Jay<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>p1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>p2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>p3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>li1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>li2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>li3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="27-属性选择器常用"><a class="markdownIt-Anchor" href="#27-属性选择器常用"></a> 2.7 属性选择器（常用）</h3><p><img src="https://i.loli.net/2021/09/29/M4gIeXnqlrwiH3S.png" alt="image-20210929090147532" /></p><p><code>就近原则</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 所有链接 */</span></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: blue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 以 &quot;#&quot; 开头的页面本地链接 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-attr">[href^=<span class="string">&quot;#&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: yellow;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 包含 &quot;example&quot; 的链接 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-attr">[href*=<span class="string">&quot;example&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: orange;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 包含 &quot;insensitive&quot; 的链接,不区分大小写 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-attr">[href*=<span class="string">&quot;insensitive&quot;</span> i]</span> &#123;</span><br><span class="line"> <span class="attribute">background-color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 包含 &quot;cAsE&quot; 的链接，区分大小写 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-attr">[href*=<span class="string">&quot;cAsE&quot;</span> s]</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: pink;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 以 &quot;.org&quot; 结尾的链接 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-attr">[href$=<span class="string">&quot;.org&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#internal&quot;</span>&gt;</span>Internal link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://example.com&quot;</span>&gt;</span>Example link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#InSensitive&quot;</span>&gt;</span>Insensitive internal link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://example.org&quot;</span>&gt;</span>Example org link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="28-小结"><a class="markdownIt-Anchor" href="#28-小结"></a> 2.8 小结</h3><p><img src="https://i.loli.net/2021/09/29/YbvMtsURB6zN49g.png" alt="image-20210929090205619" /></p><h2 id="3-页面美化"><a class="markdownIt-Anchor" href="#3-页面美化"></a> 3.  页面美化</h2><p><code>作用</code></p><ol><li>有效的传递页面信息</li><li>使用CSS美化过的页面文本，使页面漂亮、美观，吸引用户</li><li>可以很好的突出页面的主题内容，使用户第一眼可以看到页面主要内容</li><li>具有良好的用户体验<br /><code>&lt; span&gt;标签：能让某几个文字或者某个词语凸显出来，从而添加对应的样式！</code></li></ol><h3 id="31-字体样式"><a class="markdownIt-Anchor" href="#31-字体样式"></a> 3.1 字体样式</h3><p><img src="https://i.loli.net/2021/09/29/WuyHVavXUOZB5KP.png" alt="image-20210929090219579" /></p><h3 id="32-文本样式"><a class="markdownIt-Anchor" href="#32-文本样式"></a> 3.2 文本样式</h3><p><img src="https://i.loli.net/2021/09/29/9wlpB7vRxnTr5L2.png" alt="image-20210929090227365" /></p><h3 id="33-超链接伪类"><a class="markdownIt-Anchor" href="#33-超链接伪类"></a> 3.3 超链接伪类</h3><p><img src="https://i.loli.net/2021/09/29/5Z7SkxwAIfh6yWY.png" alt="image-20210929090243313" /></p><h3 id="34-列表样式"><a class="markdownIt-Anchor" href="#34-列表样式"></a> 3.4 列表样式</h3><p><img src="https://i.loli.net/2021/09/29/IAZrwVNfWnLEKQC.png" alt="image-20210929090250319" /></p><h3 id="35-背景样式"><a class="markdownIt-Anchor" href="#35-背景样式"></a> 3.5 背景样式</h3><p><img src="https://i.loli.net/2021/09/29/hXJmF2nMqzL4T7u.png" alt="image-20210929090312485" /></p><h3 id="36-渐变"><a class="markdownIt-Anchor" href="#36-渐变"></a> 3.6 渐变</h3><p><a href="https://www.grabient.com/">调试网站</a></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-color</span>: <span class="number">#F4D03F</span>;</span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(<span class="number">132deg</span>, <span class="number">#F4D03F</span> <span class="number">0%</span>, <span class="number">#16A085</span> <span class="number">100%</span>);</span><br></pre></td></tr></table></figure><h3 id="37-小结"><a class="markdownIt-Anchor" href="#37-小结"></a> 3.7 小结</h3><p><img src="https://i.loli.net/2021/09/29/oEcxnDjzftJZiBO.png" alt="image-20210929090323653" /></p><h2 id="4-盒子模型"><a class="markdownIt-Anchor" href="#4-盒子模型"></a> 4. 盒子模型</h2><h3 id="41-简介"><a class="markdownIt-Anchor" href="#41-简介"></a> 4.1 简介</h3><p><img src="https://i.loli.net/2021/09/29/fYDvNdUkHJLjh25.png" alt="image-20210929090340360" /></p><h3 id="42-边框"><a class="markdownIt-Anchor" href="#42-边框"></a> 4.2 边框</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="attribute">border</span>:<span class="number">2px</span> solid <span class="number">#a1a1a1</span>;</span><br><span class="line"><span class="attribute">padding</span>:<span class="number">10px</span> <span class="number">40px</span>;</span><br><span class="line"><span class="attribute">background</span>:<span class="number">#dddddd</span>;</span><br><span class="line"><span class="attribute">width</span>:<span class="number">300px</span>;</span><br><span class="line"><span class="attribute">border-radius</span>:<span class="number">25px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/09/29/yVIhtvPABSE7MF5.png" alt="image-20210929090350690" /></p><h3 id="43-内外边距"><a class="markdownIt-Anchor" href="#43-内外边距"></a> 4.3 内外边距</h3><p><code>顺时针</code><br /><img src="https://i.loli.net/2021/09/29/DdWTf1Rot6KmAcv.png" alt="image-20210929090419868" /></p><ul><li>网页居中对齐的必要条件<ul><li>块元素</li><li>固定宽度</li></ul></li></ul><h3 id="44-圆角边框"><a class="markdownIt-Anchor" href="#44-圆角边框"></a> 4.4 圆角边框</h3><p><code>顺时针</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border-radius</span>:<span class="number">20px</span>10px50px30px;</span><br></pre></td></tr></table></figure><p><code>圆</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>border-radius制作圆形<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>:<span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">height</span>:<span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">border</span>:<span class="number">4px</span> solid red;</span></span><br><span class="line"><span class="language-css"><span class="attribute">border-radius</span>:<span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>半圆</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>border-radius制作半圆形<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background</span>: red;</span></span><br><span class="line"><span class="language-css"><span class="attribute">margin</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">1</span>)&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">border-radius</span>: <span class="number">50px</span> <span class="number">50px</span> <span class="number">0</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">2</span>)&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">border-radius</span>:<span class="number">0</span> <span class="number">0</span> <span class="number">50px</span> <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">3</span>)&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">border-radius</span>:<span class="number">0</span> <span class="number">50px</span> <span class="number">50px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">4</span>)&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">border-radius</span>: <span class="number">50px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="45-阴影"><a class="markdownIt-Anchor" href="#45-阴影"></a> 4.5 阴影</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>box-shadow的使用<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">border</span>: <span class="number">1px</span> solid red;</span></span><br><span class="line"><span class="language-css"><span class="attribute">border-radius</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">margin</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css"><span class="comment">/*box-shadow: 20px 10px 10px #06c; /!*内阴影*!/*/</span></span></span><br><span class="line"><span class="language-css"><span class="comment">/*box-shadow: 0px 0px 20px #06c; /!*只设置模糊半径的阴影 *!/*/</span></span></span><br><span class="line"><span class="language-css"><span class="attribute">box-shadow</span>: inset <span class="number">3px</span> <span class="number">3px</span> <span class="number">10px</span> <span class="number">#06c</span>; <span class="comment">/*内阴影*/</span></span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/09/29/dzDlSiqZwnLG84j.png" alt="image-20210929090436398" /></p><h3 id="46-小结"><a class="markdownIt-Anchor" href="#46-小结"></a> 4.6 小结</h3><p><img src="https://i.loli.net/2021/09/29/IhBqplwyxSOWgG8.png" alt="image-20210929090443509" /></p><h2 id="5-浮动"><a class="markdownIt-Anchor" href="#5-浮动"></a> 5. 浮动</h2><h3 id="51-标准文档流"><a class="markdownIt-Anchor" href="#51-标准文档流"></a> 5.1 标准文档流</h3><pre><code>* 标准文档流组成* 块级元素（block）&lt;h1&gt;…&lt;h6&gt;、&lt;p&gt;、&lt;div&gt;、列表* 内联元素（inline）&lt;span&gt;、&lt;a&gt;、&lt;img/&gt;、&lt;strong&gt;...</code></pre><p><code>内联标签可以包含于块级标签中，成为它的子元素，而反过来则不成立</code></p><h3 id="52-display"><a class="markdownIt-Anchor" href="#52-display"></a> 5.2 display</h3><p><img src="https://i.loli.net/2021/09/29/gforvtEMBAaQzNl.png" alt="image-20210929090451760" /></p><h3 id="53-float"><a class="markdownIt-Anchor" href="#53-float"></a> 5.3 float</h3><p><img src="https://i.loli.net/2021/09/29/5MtY8J6qvxFXosO.png" alt="image-20210929090457480" /></p><h3 id="54-边框塌陷"><a class="markdownIt-Anchor" href="#54-边框塌陷"></a> 5.4 边框塌陷</h3><p><code>clear</code><br /><img src="https://i.loli.net/2021/09/29/KQkI8yJGY2wqbd4.png" alt="image-20210929090506122" /><br /><img src="https://i.loli.net/2021/09/29/yJQONnvW8a1jKVw.png" alt="image-20210929090513260" /><br /><code>添加空div</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layer01&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;image/photo-1.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;日用品&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layer02&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;image/photo-2.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;图书&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layer03&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;image/photo-3.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;鞋子&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layer04&quot;</span>&gt;</span>浮动的盒子……<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;clear&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">.clear&#123; clear: both; margin: 0; padding: 0;&#125;</span><br></pre></td></tr></table></figure><p><code>设置父元素的高度</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layer01&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;image/photo-1.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;日用品&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layer02&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;image/photo-2.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;图书&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layer03&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;image/photo-3.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;鞋子&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layer04&quot;</span>&gt;</span>浮动的盒子……<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">#father &#123;height: 400px; border:1px #000 solid; &#125;</span><br></pre></td></tr></table></figure><p><code>父级添加overflow属性（溢出处理）</code><br /><img src="https://i.loli.net/2021/09/29/7wqtifXGLenBHyl.png" alt="image-20210929090523095" /><br /><strong>hidden属性值，这个值在网页中经常使用.</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layer01&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;image/photo-1.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;日用品&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layer02&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;image/photo-2.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;图书&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layer03&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;image/photo-3.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;鞋子&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layer04&quot;</span>&gt;</span>浮动的盒子……<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">#father &#123;overflow: hidden;border:1px #000 solid; &#125;</span><br></pre></td></tr></table></figure><p><code>父级添加伪类after(常用)</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layer01&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;image/photo-1.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;日用品&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layer02&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;image/photo-2.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;图书&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layer03&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;image/photo-3.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;鞋子&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layer04&quot;</span>&gt;</span>浮动的盒子……<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">.clear:after&#123;</span><br><span class="line">content: &#x27;&#x27;; /*在clear类后面添加内容为空*/</span><br><span class="line">display: block; /*把添加的内容转化为块元素*/</span><br><span class="line">clear: both; /*清除这个元素两边的浮动*/</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>小结</code></p><pre><code>* 【清除浮动，防止父级边框塌陷的四种方法】*  浮动元素后面加空div* 简单，空div会造成HTML代码冗余* 设置父元素的高度* 简单，元素固定高会降低扩展性* 父级添加overflow属性* 简单，下拉列表框的场景不能用* 父级添加伪类after* 写法比上面稍微复杂一点，但是没有副作用，推荐使用</code></pre><h3 id="55-inline-block和float区别"><a class="markdownIt-Anchor" href="#55-inline-block和float区别"></a> 5.5 inline-block和float区别</h3><pre><code>* display:inline-block* 可以让元素排在一行，并且支持宽度和高度，代码实现起来方便* 位置方向不可控制，会解析空格* IE 6、IE 7上不支持* float* 可以让元素排在一行并且支持宽度和高度，可以决定排列方向* float 浮动以后元素脱离文档流，会对周围元素产生影响，必须在它的父级上添加清除浮动的样式</code></pre><h3 id="56-小结"><a class="markdownIt-Anchor" href="#56-小结"></a> 5.6 小结</h3><p><img src="https://i.loli.net/2021/09/29/ARjnrqOzDgxF9iY.png" alt="image-20210929090534790" /></p><h2 id="6-定位"><a class="markdownIt-Anchor" href="#6-定位"></a> 6. 定位</h2><h3 id="61-相对定位"><a class="markdownIt-Anchor" href="#61-相对定位"></a> 6.1 相对定位</h3><p><img src="https://i.loli.net/2021/09/29/qZDoQ4t2wr1K9Tx.png" alt="image-20210929090541796" /></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#first</span> &#123;</span><br><span class="line"><span class="attribute">background-color</span>:<span class="number">#FC9</span>;</span><br><span class="line"><span class="attribute">border</span>:<span class="number">1px</span> <span class="number">#B55A00</span> dashed;</span><br><span class="line"><span class="attribute">position</span>:relative;</span><br><span class="line"><span class="attribute">right</span>:<span class="number">20px</span>;</span><br><span class="line"><span class="attribute">bottom</span>:<span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#second</span> &#123;</span><br><span class="line"><span class="attribute">background-color</span>:<span class="number">#CCF</span>;</span><br><span class="line"><span class="attribute">border</span>:<span class="number">1px</span> <span class="number">#0000A8</span> dashed;</span><br><span class="line"><span class="attribute">float</span><span class="selector-pseudo">:right</span>;</span><br><span class="line"><span class="attribute">position</span>:relative;</span><br><span class="line"><span class="attribute">left</span>:<span class="number">20px</span>;</span><br><span class="line"><span class="attribute">top</span>:-<span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/09/29/r6D3GgEPbtwOUS2.png" alt="image-20210929090600143" /></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#box</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">2px</span> solid red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>:<span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="number">#ff24cf</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="number">#47a4ff</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.a2</span>,<span class="selector-class">.a4</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: -<span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.a5</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>:<span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>:-<span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> = <span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;a1&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 链接1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;a2&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 链接2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;a3&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 链接3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;a4&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 链接4<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;a5&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 链接5<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><pre><code>* 相对定位元素的规律* 设置相对定位的盒子会相对它原来的位置，通过指定偏移，到达新的位置* 设置相对定位的盒子仍在标准文档流中，它对父级盒子和相邻的盒子都没有任何影响* 设置相对定位的盒子原来的位置会被保留下来</code></pre><h3 id="62-绝对定位"><a class="markdownIt-Anchor" href="#62-绝对定位"></a> 6.2 绝对定位</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#second</span> &#123;</span><br><span class="line"><span class="attribute">background-color</span>:<span class="number">#CCF</span>;</span><br><span class="line"><span class="attribute">border</span>:<span class="number">1px</span>#<span class="number">000</span>A8 dashed</span><br><span class="line">position:absolute;</span><br><span class="line"><span class="attribute">right</span>:<span class="number">30px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>* 绝对定位：* 使用了绝对定位的元素以它最近的一个“已经定位”的“祖先元素” 为基准进行偏移* 如果没有已经定位的祖先元素，会以浏览器窗口为基准进行定位* 绝对定位的元素从标准文档流中脱离，这意味着它们对其他元素的定位不会造成影响* 元素位置发生偏移后，它原来的位置不会被保留下来</code></pre><blockquote><p>设置了绝对定位但没有设置偏移量的元素将保持在原来的位置。<br />在网页制作中可以用于需要使某个元素脱离标准流，而仍然希望它保持在原来的位置的情况</p></blockquote><h3 id="63-固定定位"><a class="markdownIt-Anchor" href="#63-固定定位"></a> 6.3 固定定位</h3><blockquote><p>类似绝对定位，不过区别在于定位的基准不是祖先元素，而是浏览器窗口</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">1000px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">1</span>)&#123;<span class="comment">/*第一个div设置绝对定位*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: red;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">bottom</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">2</span>)&#123;<span class="comment">/*第二个div设置固定定位*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: yellow;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: fixed;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">bottom</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>div1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>div2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/09/29/tMZ8yN6njcgvEFf.png" alt="image-20210929090616467" /></p><h3 id="64-z-index及透明度"><a class="markdownIt-Anchor" href="#64-z-index及透明度"></a> 6.4 z-index及透明度</h3><p><img src="https://i.loli.net/2021/09/29/wWFPzRJfhbSXUBi.png" alt="image-20210929090622084" /></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Demo08<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span> = <span class="string">stylesheet</span> <span class="attr">href</span>=<span class="string">&quot;1.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span> = <span class="string">images/bk.webp</span> <span class="attr">alt</span>=<span class="string">&quot;图片加载失败&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span> = <span class="string">&quot;tipText&quot;</span>&gt;</span>hhhhhhhhhh<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span> = <span class="string">&quot;tipBG&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>时间：XXXX-XX-XX<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#content</span>, <span class="selector-tag">ul</span>, <span class="selector-tag">li</span>, <span class="selector-tag">body</span>, <span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span>,<span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">140px</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> red solid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tipText</span>, <span class="selector-class">.tipBG</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">140px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">55px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tipText</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">z-index</span> = <span class="number">3</span>;//图层优先级</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tipBG</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: black;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.5</span>;//透明度</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/09/29/pztsyExBZJUroNq.png" alt="image-20210929090635867" /></p><p><img src="https://i.loli.net/2021/09/29/1TPDMmXp4LqUw3A.png" alt="image-20210929090641336" /></p>]]></content>
      
      
      <categories>
          
          <category> Web基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5</title>
      <link href="/posts/98f3a6d9/"/>
      <url>/posts/98f3a6d9/</url>
      
        <content type="html"><![CDATA[<h2 id="1-初识html"><a class="markdownIt-Anchor" href="#1-初识html"></a> 1. 初识HTML</h2><p><code>HTML：Hyper Text Markup Language（超文本标记语言）</code></p><h3 id="11-w3c标准"><a class="markdownIt-Anchor" href="#11-w3c标准"></a> 1.1 W3C标准</h3><pre><code>* W3C* World Wide Web Consortium（万维网联盟）* 成立于1994年，Web技术领域最权威和具影响力的国际中立性技术标准机构* http://www.w3.org/* http://www.chinaw3c.org/* W3C标准包括* 结构化标准语言（HTML、XML）* 表现标准语言（CSS）* 行为标准（DOM、ECMAScript）</code></pre><h3 id="12-html基本结构"><a class="markdownIt-Anchor" href="#12-html基本结构"></a> 1.2 HTML基本结构</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--!DOCTYPE:告诉浏览器，我们要使用什么规范--&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;!--    meta:描述性标签，他用来描述我的网站的一些信息--&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;keywords&quot; content=&quot;HTML&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;description&quot; content=&quot;前端基础&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="2-标签"><a class="markdownIt-Anchor" href="#2-标签"></a> 2. 标签</h2><h3 id="21-网页标签"><a class="markdownIt-Anchor" href="#21-网页标签"></a> 2.1 网页标签</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;基本标签学习&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!--标题标签--&gt;</span><br><span class="line">&lt;h1&gt;一级标签&lt;/h1&gt;</span><br><span class="line">&lt;h2&gt;二级标签&lt;/h2&gt;</span><br><span class="line">&lt;h3&gt;三级标签&lt;/h3&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--段落标签——快捷方式：p + Tab--&gt;</span><br><span class="line">&lt;p&gt;故事的小黄花&lt;/p&gt;</span><br><span class="line">&lt;p&gt;从出生那年就飘着&lt;/p&gt;</span><br><span class="line">&lt;p&gt;童年的荡秋千&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--水平线标签——自闭合标签--&gt;</span><br><span class="line">&lt;hr/&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--换行标签——自闭合标签--&gt;</span><br><span class="line">故事的小黄花&lt;br/&gt;</span><br><span class="line">从出生那年就飘着&lt;br/&gt;</span><br><span class="line">童年的荡秋千&lt;br/&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--粗体，斜体--&gt;</span><br><span class="line">&lt;h1&gt;字体样式标签&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;&lt;strong&gt;I love you!&lt;/strong&gt;&lt;/p&gt;</span><br><span class="line">&lt;p&gt;&lt;em&gt;I love you!&lt;/em&gt;&lt;/p&gt;</span><br><span class="line">&lt;br/&gt;</span><br><span class="line">&lt;!--特殊符号——&amp;  ;（查百度）--&gt;</span><br><span class="line">空格&amp;nbsp;&lt;br/&gt;</span><br><span class="line">大于&amp;gt;&lt;br/&gt;</span><br><span class="line">小于&amp;lt;&lt;br/&gt;</span><br><span class="line">版权所有&amp;copy;&lt;br/&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="22-图像标签"><a class="markdownIt-Anchor" href="#22-图像标签"></a> 2.2 图像标签</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;图像标签&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!--img 学习</span><br><span class="line">src：图片地址</span><br><span class="line">    相对地址，绝对地址</span><br><span class="line">    ../  上一级标签</span><br><span class="line">--&gt;</span><br><span class="line">&lt;img src=&quot;../resources/img/1.jpg&quot; alt=&quot;图片加载失败文字&quot; title=&quot;图片悬浮文字&quot; height=&quot;1011&quot; width=&quot;2000&quot;&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="23-链接标签"><a class="markdownIt-Anchor" href="#23-链接标签"></a> 2.3 链接标签</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;链接标签&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!--使用name作为标记--&gt;</span><br><span class="line">&lt;a name=&quot;top&quot;&gt;&lt;/a&gt;</span><br><span class="line">&lt;!--a标签</span><br><span class="line">  href（必填）：表示要跳转到的页面</span><br><span class="line">  _blank：在新标签中打开</span><br><span class="line">  _self：在自己的网页打开</span><br><span class="line">--&gt;</span><br><span class="line">&lt;a href=&quot;https:www.baidu.com&quot; target=&quot;_blank&quot;&gt;百度&lt;/a&gt;&lt;br/&gt;</span><br><span class="line">&lt;a href=&quot;MyWeb02.html&quot;&gt;</span><br><span class="line">  &lt;img src=&quot;Image.png&quot; alt=&quot;图片加载失败文字&quot; title=&quot;图片悬浮文字&quot; height=&quot;1011&quot; width=&quot;2000&quot;&gt;</span><br><span class="line">&lt;/a&gt;&lt;br/&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--锚链接（可以跨文件使用）</span><br><span class="line">1.需要一个锚标记</span><br><span class="line">2.跳转到标记 #</span><br><span class="line">--&gt;</span><br><span class="line">&lt;a href=&quot;#top&quot;&gt;回到顶部&lt;/a&gt;</span><br><span class="line">&lt;a name=&quot;bottom&quot; &gt;&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--功能性链接</span><br><span class="line">  邮件链接：mailto</span><br><span class="line">  QQ链接：QQ推广（图片加载不出在两个冒号之间写上QQ号）</span><br><span class="line">--&gt;</span><br><span class="line">&lt;a href=&quot;mailto:1346438693@qq.com&quot;&gt;联系我们&lt;/a&gt;</span><br><span class="line">&lt;a target=&quot;_blank&quot; href=&quot;http://wpa.qq.com/msgrd?v=3&amp;uin=&amp;site=qq&amp;menu=yes&quot;&gt;</span><br><span class="line">  &lt;img border=&quot;0&quot; src=&quot;http://wpa.qq.com/pa?p=2:1346438693:52&quot; alt=&quot;联系我们&quot; title=&quot;联系我们&quot;/&gt;</span><br><span class="line">&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="3-行内元素和块元素"><a class="markdownIt-Anchor" href="#3-行内元素和块元素"></a> 3. 行内元素和块元素</h2><pre><code>* 块元素* 无论内容多少，该元素独占一行* p、h1 - h6...）* 行内元素* 内容撑开宽度，左右都是行内元素的可以排在一行* （a、strong、em ....）</code></pre><h2 id="4-列表"><a class="markdownIt-Anchor" href="#4-列表"></a> 4. 列表</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;列表学习&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!--有序列表--&gt;</span><br><span class="line">&lt;ol&gt;</span><br><span class="line">    &lt;li&gt;Java&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;Python&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;前端&lt;/li&gt;</span><br><span class="line">&lt;/ol&gt;</span><br><span class="line">&lt;hr/&gt;</span><br><span class="line">&lt;!--无序列表--&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">    &lt;li&gt;Java&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;Python&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;前端&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;hr/&gt;</span><br><span class="line">&lt;!--自定义列表</span><br><span class="line">    dl；标签</span><br><span class="line">    dt：列表名称</span><br><span class="line">    dd：列表内容</span><br><span class="line">--&gt;</span><br><span class="line">&lt;dl&gt;</span><br><span class="line">    &lt;dt&gt;计算机&lt;/dt&gt;</span><br><span class="line">    &lt;dd&gt;Java&lt;/dd&gt;</span><br><span class="line">    &lt;dd&gt;Python&lt;/dd&gt;</span><br><span class="line">    &lt;dt&gt;学科&lt;/dt&gt;</span><br><span class="line">    &lt;dd&gt;数学&lt;/dd&gt;</span><br><span class="line">    &lt;dd&gt;英语&lt;/dd&gt;</span><br><span class="line">&lt;/dl&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="5-表格"><a class="markdownIt-Anchor" href="#5-表格"></a> 5. 表格</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;表格标签&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!--表格table</span><br><span class="line">  行 tr</span><br><span class="line">  列 td</span><br><span class="line">--&gt;</span><br><span class="line">&lt;table border=&quot;1px&quot;&gt;</span><br><span class="line">  &lt;tr&gt;</span><br><span class="line">&lt;!--    跨行colspan--&gt;</span><br><span class="line">    &lt;td colspan=&quot;3&quot;&gt;学生成绩&lt;/td&gt;</span><br><span class="line">  &lt;/tr&gt;</span><br><span class="line">  &lt;tr&gt;</span><br><span class="line">&lt;!--    跨列rowspan--&gt;</span><br><span class="line">    &lt;td rowspan=&quot;2&quot;&gt;狂神&lt;/td&gt;</span><br><span class="line">    &lt;td&gt;语文&lt;/td&gt;</span><br><span class="line">    &lt;td&gt;100&lt;/td&gt;</span><br><span class="line">  &lt;/tr&gt;</span><br><span class="line">  &lt;tr&gt;</span><br><span class="line">    &lt;td&gt;数学&lt;/td&gt;</span><br><span class="line">    &lt;td&gt;100&lt;/td&gt;</span><br><span class="line">  &lt;/tr&gt;</span><br><span class="line">  &lt;tr&gt;</span><br><span class="line">    &lt;td rowspan=&quot;2&quot;&gt;秦将&lt;/td&gt;</span><br><span class="line">    &lt;td&gt;语文&lt;/td&gt;</span><br><span class="line">    &lt;td&gt;100&lt;/td&gt;</span><br><span class="line">  &lt;/tr&gt;</span><br><span class="line">  &lt;tr&gt;</span><br><span class="line">    &lt;td&gt;数学&lt;/td&gt;</span><br><span class="line">    &lt;td&gt;100&lt;/td&gt;</span><br><span class="line">  &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="6-视频和音频"><a class="markdownIt-Anchor" href="#6-视频和音频"></a> 6. 视频和音频</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;音频和视频&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!--音频和视频</span><br><span class="line">src：资源路径</span><br><span class="line">controls：控制条</span><br><span class="line">autoplay：自动播放（谷歌会限制自动播放）</span><br><span class="line">--&gt;</span><br><span class="line">&lt;video src=&quot;../resources/video/2.mp4&quot; controls autoplay&gt;&lt;/video&gt;</span><br><span class="line">&lt;audio src=&quot;../resources/audio/1.mp3&quot; controls &gt;&lt;/audio&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="7-页面结构分析"><a class="markdownIt-Anchor" href="#7-页面结构分析"></a> 7. 页面结构分析</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;网页结构分析&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;header&gt;</span><br><span class="line">  &lt;h2&gt;网页头部&lt;/h2&gt;</span><br><span class="line">&lt;/header&gt;</span><br><span class="line">&lt;section&gt;</span><br><span class="line">  &lt;h2&gt;网页主体&lt;/h2&gt;</span><br><span class="line">&lt;/section&gt;</span><br><span class="line">&lt;article&gt;</span><br><span class="line">  &lt;h2&gt;独立文章&lt;/h2&gt;</span><br><span class="line">&lt;/article&gt;</span><br><span class="line">&lt;aside&gt;</span><br><span class="line">  &lt;h2&gt;侧边栏&lt;/h2&gt;</span><br><span class="line">&lt;/aside&gt;</span><br><span class="line">&lt;footer&gt;</span><br><span class="line">  &lt;h2&gt;网页脚部&lt;/h2&gt;</span><br><span class="line">&lt;/footer&gt;</span><br><span class="line">&lt;nav&gt;</span><br><span class="line">  &lt;h2&gt;导航栏&lt;/h2&gt;</span><br><span class="line">&lt;/nav&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="8-iframe内联框架"><a class="markdownIt-Anchor" href="#8-iframe内联框架"></a> 8. iframe内联框架</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;iframe内联框架&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!--iframe内联框架</span><br><span class="line">name</span><br><span class="line">--&gt;</span><br><span class="line">&lt;iframe src=&quot;https://www.baidu.com&quot; frameborder=&quot;0&quot; width=&quot;1000px&quot; height=&quot;1000px&quot; name=&quot;hello&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;a href=&quot;MyWeb03.html&quot; target=&quot;hello&quot;&gt;点我跳转&lt;/a&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="9-表单"><a class="markdownIt-Anchor" href="#9-表单"></a> 9. 表单</h2><h3 id="9-1-表单语法"><a class="markdownIt-Anchor" href="#9-1-表单语法"></a> 9. 1 表单语法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;表单学习&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;注册&lt;/h1&gt;</span><br><span class="line">&lt;!--表单</span><br><span class="line">action：表单提交的位置，可以是网站，也可以是请求处理地址</span><br><span class="line">method：post，get 提交方式</span><br><span class="line">    get方式提交：我们可以在URL中看到我们提交的信息，不安全，高效</span><br><span class="line">    post：比较安全，传输大文件</span><br><span class="line">--&gt;</span><br><span class="line">&lt;form action=&quot;MyWeb01.html&quot; method=&quot;get&quot;&gt;</span><br><span class="line">&lt;!--  文本输入框</span><br><span class="line">value=&quot;Jay&quot; 默认初始值</span><br><span class="line">maxlength=&quot;8&quot; 最长能写的字符个数</span><br><span class="line">size=&quot;30&quot; 文本框长度</span><br><span class="line">--&gt;</span><br><span class="line">  &lt;p&gt;名字： &lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;&lt;/p&gt;</span><br><span class="line">&lt;!--  密码框--&gt;</span><br><span class="line">  &lt;p&gt;密码：&lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;&lt;/p&gt;</span><br><span class="line">&lt;!--  单选框标签</span><br><span class="line">name：表示组</span><br><span class="line">value：单选框的值</span><br><span class="line">--&gt;</span><br><span class="line">  &lt;p&gt;性别：</span><br><span class="line">    &lt;input type=&quot;radio&quot; value=&quot;boy&quot; name=&quot;性别&quot; checked&gt;男</span><br><span class="line">    &lt;input type=&quot;radio&quot; value=&quot;girl&quot; name=&quot;性别&quot;&gt;女</span><br><span class="line">  &lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--  复选框--&gt;</span><br><span class="line">  &lt;p&gt;爱好：</span><br><span class="line">    &lt;input type=&quot;checkbox&quot; value=&quot;sleep&quot; name=&quot;hobby&quot; checked&gt;睡觉</span><br><span class="line">    &lt;input type=&quot;checkbox&quot; value=&quot;code&quot; name=&quot;hobby&quot;&gt;敲代码</span><br><span class="line">    &lt;input type=&quot;checkbox&quot; value=&quot;game&quot; name=&quot;hobby&quot;&gt;游戏</span><br><span class="line">  &lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--  按钮--&gt;</span><br><span class="line">  &lt;input type=&quot;button&quot; name=&quot;button1&quot; value=&quot;get&quot;&gt;</span><br><span class="line">  &lt;input type=&quot;image&quot; src=&quot;../resources/image/五五开黑节.jpg&quot; alt=&quot;五五开黑节&quot;&gt;</span><br><span class="line">  &lt;p&gt;</span><br><span class="line">    &lt;input type=&quot;submit&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;reset&quot;&gt;</span><br><span class="line">  &lt;/p&gt;</span><br><span class="line">&lt;!--  文件域--&gt;</span><br><span class="line">  &lt;p&gt;</span><br><span class="line">    &lt;input type=&quot;file&quot; name=&quot;files&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;button&quot; value=&quot;上传&quot; name=&quot;upload&quot;&gt;</span><br><span class="line">  &lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--  邮件验证--&gt;</span><br><span class="line">    &lt;p&gt;邮件：</span><br><span class="line">      &lt;input type=&quot;email&quot; name=&quot;email&quot;&gt;</span><br><span class="line">    &lt;/p&gt;</span><br><span class="line">&lt;!--  URL验证--&gt;</span><br><span class="line">  &lt;p&gt;URL:</span><br><span class="line">    &lt;input type=&quot;url&quot; name=&quot;url&quot;&gt;</span><br><span class="line">  &lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--  数字--&gt;</span><br><span class="line">  &lt;p&gt;数字：</span><br><span class="line">    &lt;input type=&quot;number&quot; name=&quot;num&quot; max=&quot;100&quot; min=&quot;0&quot; step=&quot;10&quot;&gt;</span><br><span class="line">  &lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--  滑块--&gt;</span><br><span class="line">  &lt;p&gt;音量：</span><br><span class="line">    &lt;input type=&quot;range&quot; name=&quot;voice&quot; min=&quot;0&quot; max=&quot;100&quot; step=&quot;3&quot;&gt;</span><br><span class="line">  &lt;/p&gt;</span><br><span class="line">&lt;!--  搜索框--&gt;</span><br><span class="line">  &lt;input type=&quot;search&quot; name=&quot;search&quot;&gt;</span><br><span class="line">&lt;!--  下拉框--&gt;</span><br><span class="line">  &lt;p&gt;国家：</span><br><span class="line">    &lt;select name=&quot;列表名称&quot; id=&quot;dialog-publisher-value&quot;&gt;</span><br><span class="line">      &lt;option value=&quot;China&quot;&gt;中国&lt;/option&gt;</span><br><span class="line">      &lt;option value=&quot;USA&quot;&gt;美国&lt;/option&gt;</span><br><span class="line">      &lt;option value=&quot;Switzerland&quot;&gt;瑞士&lt;/option&gt;</span><br><span class="line">      &lt;option value=&quot;Japan&quot; selected&gt;日本&lt;/option&gt;</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line">  &lt;/p&gt;</span><br><span class="line">&lt;!--  文本域--&gt;</span><br><span class="line">  &lt;p&gt;反馈：</span><br><span class="line">    &lt;textarea name=&quot;feedback&quot; id=&quot;bottom-text&quot; cols=&quot;50&quot; rows=&quot;10&quot;&gt;文本内容&lt;/textarea&gt;</span><br><span class="line">  &lt;/p&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="92-表单应用"><a class="markdownIt-Anchor" href="#92-表单应用"></a> 9.2 表单应用</h3><ul><li>readonly ：只读</li><li>hidden：隐藏</li><li>disabled：禁用</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--  增强鼠标可用性：点击文字定位到对应文本框--&gt;</span><br><span class="line">  &lt;p&gt;</span><br><span class="line">    &lt;label for=&quot;mark&quot;&gt;你点我试试&lt;/label&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; id=&quot;mark&quot;&gt;</span><br><span class="line">  &lt;/p&gt;</span><br></pre></td></tr></table></figure><h3 id="93-表单初级验证"><a class="markdownIt-Anchor" href="#93-表单初级验证"></a> 9.3 表单初级验证</h3><ul><li>placeholder：信息提示语（输入框控件）</li><li>required：非空判断（输入框控件）</li><li>pattern：正则表达式</li></ul>]]></content>
      
      
      <categories>
          
          <category> Web基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript语法</title>
      <link href="/posts/6d207b45/"/>
      <url>/posts/6d207b45/</url>
      
        <content type="html"><![CDATA[<h2 id="1-概括"><a class="markdownIt-Anchor" href="#1-概括"></a> 1. 概括</h2><p><a href="https://ant.design/index-cn">Ant Design</a><br /><a href="https://cloud.tencent.com/developer/article/1636646">JavaScript的历史</a><br /><code>JavaScript是最流行的的脚本语言</code><br /><code>Java和JavaScript语言风格相差甚远，只是为了蹭热度</code></p><p><mark>一个合格的后端人员，必须精通JavaScript</mark></p><h2 id="2-快速入门"><a class="markdownIt-Anchor" href="#2-快速入门"></a> 2. 快速入门</h2><h3 id="21-导入javascript"><a class="markdownIt-Anchor" href="#21-导入javascript"></a> 2.1 导入JavaScript</h3><ol><li>内部标签</li><li>外部引入</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--外部引用--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--注意：必须成对出现，不要改成自闭合标签--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/action.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--不写type默认为text/javascript--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--html直接使用js，但不推荐</span></span><br><span class="line"><span class="comment">&lt;script&gt;</span></span><br><span class="line"><span class="comment">    alert(&quot;hello,world!&quot;);</span></span><br><span class="line"><span class="comment">&lt;/script&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;hello,world!&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="22-基本语法"><a class="markdownIt-Anchor" href="#22-基本语法"></a> 2.2 基本语法</h3><p><code>js中只有三种变量：let（局部变量）、var（全局变量）、const（常量）</code><br /><code>js严格区分大小写</code><br /><code>浏览器必备调试须知</code><br /><img src="https://i.loli.net/2021/09/29/8SIzuCR7i6yAtrp.png" alt="image-20210929084531022" /><br /><code>console.log()</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 变量定义</span></span><br><span class="line"><span class="keyword">var</span> score = <span class="number">60</span>;</span><br><span class="line"><span class="comment">// 2. 条件控制</span></span><br><span class="line"><span class="keyword">if</span> (score &gt;= <span class="number">90</span> &amp;&amp; score &lt;= <span class="number">100</span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (score &gt;= <span class="number">80</span> &amp;&amp; score &lt; <span class="number">90</span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (score &gt;= <span class="number">70</span> &amp;&amp; score &lt; <span class="number">80</span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;C&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (score &gt;= <span class="number">60</span> &amp;&amp; score &lt; <span class="number">70</span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;D&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &gt;= <span class="number">0</span> &amp;&amp; score &lt; <span class="number">60</span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;E&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;输入成绩有误！&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="23-数据类型"><a class="markdownIt-Anchor" href="#23-数据类型"></a> 2.3 数据类型</h3><p>数值、文本、图形、音频、视频…</p><p><mark>变量</mark><br /><code>var</code><br /><code>let</code><br /><code>命名规范与其他语言一样</code><br /><code>局部变量建议使用let去定义</code></p><p><mark>number</mark><br /><code>js不区别小数和整数</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">123 //整数</span><br><span class="line">123.1 //浮点数</span><br><span class="line">1.123e3 //科学计数法</span><br><span class="line">-99 //负数</span><br><span class="line">NaN // not a number</span><br><span class="line">Infinity //表示无限大</span><br></pre></td></tr></table></figure><p><mark>字符串</mark><br /><code>&quot;abc&quot;</code><br /><code>'abc'</code></p><p><mark>布尔值</mark><br /><code>true</code><br /><code>false</code></p><p><mark>逻辑运算</mark><br /><code>&amp;&amp;</code><br /><code>||</code><br /><code>!</code></p><p><mark>比较运算符</mark></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">=</span><br><span class="line">== 等于（类型不一样，值一样，也会判断为<span class="literal">true</span>）</span><br><span class="line">=== 绝对等于（类型和值都一样，才会判断为<span class="literal">true</span>）</span><br></pre></td></tr></table></figure><p>注意事项：1. NaN与所有的数值都不相等，包括自己；只能通过isNaN()来判断是否是NaN<br />2. 浮点数存在精度缺失的问题，尽量避免浮点数运算</p><p><mark>null和undefined</mark><br /><code>null 空</code><br /><code>undefined 未定义</code></p><p><mark>数组</mark></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="string">&#x27;hello&#x27;</span>];</span><br></pre></td></tr></table></figure><p><mark>对象</mark></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line"><span class="attr">name</span>: <span class="string">&quot;JayNier&quot;</span>,</span><br><span class="line"><span class="attr">age</span>: <span class="number">21</span>,</span><br><span class="line"><span class="attr">tags</span>:[<span class="string">&#x27;js&#x27;</span>,<span class="string">&#x27;ad&#x27;</span>,<span class="number">1</span>,<span class="number">2</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>‘use strict’; //严格检查模式<br />需要设置IDEA支持ES6语法，必须卸载js的第一行预防js的随意性导致的一些问题</p></blockquote><h2 id="3-数据类型"><a class="markdownIt-Anchor" href="#3-数据类型"></a> 3. 数据类型</h2><h3 id="31-字符串"><a class="markdownIt-Anchor" href="#31-字符串"></a> 3.1 字符串</h3><ol><li>正常字符串使用<code>''</code>和<code>“”</code>包裹</li><li>注意转义字符<kbd>&lt;/kbd&gt;的使用</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">\u4e2d  unicode字符</span><br><span class="line">\x41  Ascll字符</span><br></pre></td></tr></table></figure><ol start="3"><li>多行字符串使用<kbd>`</kbd>编写</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> msg =</span><br><span class="line"><span class="string">`hello</span></span><br><span class="line"><span class="string">world</span></span><br><span class="line"><span class="string">!`</span>;</span><br></pre></td></tr></table></figure><ol start="4"><li>模板字符串使用<kbd>`</kbd>和<kbd>${}</kbd>编写</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> name = <span class="string">&quot;Jay&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> age = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">let</span> msg = <span class="string">`hello, <span class="subst">$&#123;name&#125;</span>`</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(msg);</span><br></pre></td></tr></table></figure><ol start="5"><li>字符串长度</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str.<span class="property">length</span></span><br></pre></td></tr></table></figure><ol start="6"><li>字符串不可变</li><li>大小写转换</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这是方而不是属性</span></span><br><span class="line">str.<span class="title function_">toUpperCase</span>();</span><br><span class="line">str.<span class="title function_">toLowerCase</span>();</span><br></pre></td></tr></table></figure><ol start="8"><li>获取字符串指定字符下标</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str.<span class="title function_">indexOf</span>(<span class="string">&#x27;t&#x27;</span>);</span><br></pre></td></tr></table></figure><ol start="9"><li>获取子字符串（包头不包尾）</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">str.<span class="title function_">substring</span>(<span class="number">1</span>);</span><br><span class="line">str.<span class="title function_">substring</span>(<span class="number">1</span>,<span class="number">3</span>);</span><br><span class="line">str.<span class="property">substring</span>[<span class="number">1</span>,<span class="number">3</span>);<span class="comment">//测试后发现会报错</span></span><br></pre></td></tr></table></figure><h3 id="32-数组"><a class="markdownIt-Anchor" href="#32-数组"></a> 3.2 数组</h3><p><strong>Array可以包含任意的数据类型</strong></p><ol><li>长度</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arr.<span class="property">length</span></span><br></pre></td></tr></table></figure><p>注意：可以通过改变<code>arr.length</code>的值来调整大小。<br />2. <code>indexOf()</code>通过元素获得下表索引<br />3. <code>slice()</code>截取Array的一部分，返回新数组(包头不包尾)<br />4. <code>pop()</code>，<code>push()</code>出入栈<br /><img src="https://i.loli.net/2021/09/29/B9mVqKFU6iZDkzL.png" alt="image-20210929084606525" /></p><ol start="5"><li><code>shift()</code>，<code>unshift()</code><br /><img src="https://i.loli.net/2021/09/29/LEnMwVN79WeAx32.png" alt="image-20210929084616178" /></li><li><code>sort()</code>排序</li><li><code>reverse()</code>元素反转</li><li><code>concat()</code>数组拼接，获得新数组</li><li><code>join()</code>连接符<br /><u>打印拼接数组，使用指定的字符链接</u></li><li>多维数组</li></ol><h3 id="33-对象"><a class="markdownIt-Anchor" href="#33-对象"></a> 3.3 对象</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var 对象名 =&#123;</span><br><span class="line">属性名：属性值,</span><br><span class="line">属性名：属性值,</span><br><span class="line">属性名：属性值</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>{…}表示一个对象，键值对描述属性，多个属性间用逗号隔开，最后一个不加逗号<br /><code>JavaScript中的键都是字符串，值是任意类型</code></p><ol><li>对象赋值</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">person.<span class="property">name</span> = “<span class="title class_">Jay</span>”；</span><br></pre></td></tr></table></figure><ol start="2"><li>使用一个不存在的对象属性，不会报错 <code>undefined</code></li><li>动态的删减属性<code>delete</code></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> person.<span class="property">name</span></span><br></pre></td></tr></table></figure><ol start="4"><li>判断属性是否在这个对象中<code>in</code></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x27;age&#x27; in person;</span><br><span class="line">-&gt; true</span><br><span class="line">&#x27;toString&#x27; in person;</span><br><span class="line">-&gt; true //继承</span><br></pre></td></tr></table></figure><ol start="5"><li>判断属性是否是这个对象自己拥有<code>hasOwnProperty</code></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">person.hasOwnProperty(&#x27;age&#x27;);</span><br><span class="line">-&gt;true</span><br><span class="line">person.hasOwnProperty(&#x27;toString&#x27;);</span><br><span class="line">-&gt;false</span><br></pre></td></tr></table></figure><h3 id="34-map和set"><a class="markdownIt-Anchor" href="#34-map和set"></a> 3.4 Map和Set</h3><p><strong>ES6的新特性</strong><br /><code>Map</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> map = <span class="keyword">new</span> <span class="title class_">Map</span>([[<span class="string">&#x27;Tom&#x27;</span>,<span class="number">100</span>],[<span class="string">&#x27;Jack&#x27;</span>,<span class="number">95</span>],[<span class="string">&#x27;Lucy&#x27;</span>,<span class="number">80</span>]]);</span><br><span class="line"><span class="keyword">let</span> sorce = map.<span class="title function_">get</span>(<span class="string">&#x27;Tom&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sorce);</span><br><span class="line">map.<span class="title function_">set</span>(<span class="string">&#x27;admin&#x27;</span>,<span class="number">123</span>);<span class="comment">//添加元素</span></span><br><span class="line">map.<span class="title function_">delete</span>(<span class="string">&#x27;admin&#x27;</span>);<span class="comment">//删除元素</span></span><br></pre></td></tr></table></figure><p><code>Set</code>无序不重复集合</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> set = <span class="keyword">new</span> <span class="title class_">Set</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">4</span>]);<span class="comment">//可实现去重</span></span><br><span class="line">set.<span class="title function_">add</span>(<span class="number">5</span>);<span class="comment">//添加元素</span></span><br><span class="line">set.<span class="title function_">delete</span>(<span class="number">1</span>);<span class="comment">//删除元素</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(set.<span class="title function_">has</span>(<span class="number">4</span>));<span class="comment">//是否包含某个元素</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/09/29/CXEjPzs49aUqJpg.png" alt="image-20210929085034910" /></p><h2 id="4-流程控制"><a class="markdownIt-Anchor" href="#4-流程控制"></a> 4. 流程控制</h2><h3 id="41-条件判断"><a class="markdownIt-Anchor" href="#41-条件判断"></a> 4.1 条件判断</h3><p><code>if语句</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (score &gt;= <span class="number">90</span> &amp;&amp; score &lt;= <span class="number">100</span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (score &gt;= <span class="number">80</span> &amp;&amp; score &lt; <span class="number">90</span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (score &gt;= <span class="number">70</span> &amp;&amp; score &lt; <span class="number">80</span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;C&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (score &gt;= <span class="number">60</span> &amp;&amp; score &lt; <span class="number">70</span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;D&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &gt;= <span class="number">0</span> &amp;&amp; score &lt; <span class="number">60</span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;E&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;输入成绩有误！&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>switch 语句</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> d=<span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getDay</span>();</span><br><span class="line"><span class="keyword">switch</span> (d)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">0</span>:x=<span class="string">&quot;今天是星期日&quot;</span>;</span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">1</span>:x=<span class="string">&quot;今天是星期一&quot;</span>;</span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">2</span>:x=<span class="string">&quot;今天是星期二&quot;</span>;</span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">3</span>:x=<span class="string">&quot;今天是星期三&quot;</span>;</span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">4</span>:x=<span class="string">&quot;今天是星期四&quot;</span>;</span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">5</span>:x=<span class="string">&quot;今天是星期五&quot;</span>;</span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">6</span>:x=<span class="string">&quot;今天是星期六&quot;</span>;</span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="42-循环判断"><a class="markdownIt-Anchor" href="#42-循环判断"></a> 4.2 循环判断</h3><p><code>for 循环</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">      x=x + <span class="string">&quot;该数字为 &quot;</span> + i + <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>for in 遍历</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person=&#123;<span class="attr">fname</span>:<span class="string">&quot;Bill&quot;</span>,<span class="attr">lname</span>:<span class="string">&quot;Gates&quot;</span>,<span class="attr">age</span>:<span class="number">56</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (x <span class="keyword">in</span> person)  <span class="comment">// x 为索引号</span></span><br><span class="line">&#123;</span><br><span class="line">    txt=txt + person[x];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">123</span>,<span class="number">2142</span>,<span class="number">12414</span>,<span class="number">12341</span>];</span><br><span class="line"><span class="keyword">for</span> (index <span class="keyword">in</span> arr)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr[index]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>for of遍历</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">123</span>,<span class="number">2142</span>,<span class="number">12414</span>,<span class="number">12341</span>];</span><br><span class="line"><span class="keyword">for</span> (x <span class="keyword">of</span> arr)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> map = <span class="keyword">new</span> <span class="title class_">Map</span>([[<span class="string">&#x27;Tom&#x27;</span>,<span class="number">100</span>],[<span class="string">&#x27;Jack&#x27;</span>,<span class="number">95</span>],[<span class="string">&#x27;Lucy&#x27;</span>,<span class="number">80</span>]]);</span><br><span class="line"><span class="keyword">for</span> (x <span class="keyword">of</span> map)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> set = <span class="keyword">new</span> <span class="title class_">Set</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">4</span>]);</span><br><span class="line"><span class="keyword">for</span> (x <span class="keyword">of</span> set)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>while语句</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (i&lt;<span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line">    x=x + <span class="string">&quot;The number is &quot;</span> + i + <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    i++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">    x=x + <span class="string">&quot;The number is &quot;</span> + i + <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (i&lt;<span class="number">5</span>);</span><br></pre></td></tr></table></figure><h2 id="5-函数"><a class="markdownIt-Anchor" href="#5-函数"></a> 5. 函数</h2><h3 id="51-定义函数"><a class="markdownIt-Anchor" href="#51-定义函数"></a> 5.1 定义函数</h3><blockquote><p>定义方式一</p></blockquote><p><code>绝对值函数</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">abs</span>(<span class="params">x</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (x &gt; <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> -x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果没有执行<code>return</code>，函数执行完也会返回结果<code>undefined</code></p><blockquote><p>定义方式二</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> abs = <span class="keyword">function</span>(<span class="params">x</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (x &gt; <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> -x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>函数也可以理解为变量</code></p><p><strong>方式一和方式二等价</strong></p><blockquote><p>调用函数</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">abs</span>(<span class="number">10</span>); <span class="comment">// 10</span></span><br></pre></td></tr></table></figure><p>参数问题：JS可以传任意多个参数，也可以不传递参数</p><blockquote><p>假设不存在参数，如何规避</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> abs = <span class="keyword">function</span>(<span class="params">x</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> x !== <span class="string">&#x27;number&#x27;</span>)</span><br><span class="line"><span class="keyword">throw</span> <span class="string">&#x27;Not a Number&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (x &gt; <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> -x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>arguments</code></p><blockquote><p>传递多个参数时<code>arguments</code></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> abs = <span class="keyword">function</span>(<span class="params">x</span>)&#123;</span><br><span class="line"><span class="keyword">for</span> (x <span class="keyword">in</span> <span class="variable language_">arguments</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">arguments</span>[x]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>arguments</code>代表传递进来的所有参数，是一个数组</p><blockquote><p>ES6新特性：获取除已定义参数外的所有参数<code>rest</code></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> abs = <span class="keyword">function</span>(<span class="params">a,b,...rest</span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(rest);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="52-变量作用域"><a class="markdownIt-Anchor" href="#52-变量作用域"></a> 5.2 变量作用域</h3><blockquote><p>局部变量</p></blockquote><ol><li>变量在函数内声明，变量为局部作用域</li><li>局部变量只能在函数内部访问</li><li>因为局部变量只作用于函数内，所以不同的函数可以使用相同名称的变量</li><li>局部变量在函数开始执行时创建，函数执行完毕后局部变量自动销毁</li><li>想要在函数体外使用，可使用<code>闭包</code></li></ol><blockquote><p>全局变量</p></blockquote><ol><li>变量在函数外定义，即为全局变量</li><li>全局变量有全局作用域，网页中所有脚本和函数均可使用</li><li>如果变量在函数内没有声明，该变量为全局变量</li></ol><blockquote><p>函数参数</p></blockquote><p>函数参数只在函数内起作用，是局部变量</p><blockquote><p>内部函数和外部函数变量重名</p></blockquote><p>函数由“内”向“外”查找，假设外部存在这个同名的函数变量，则内部函数会屏蔽外部函数的变量</p><blockquote><p>提升变量的作用域</p></blockquote><p>JS执行引擎，自动提升了变量的声明，但是不会提升变量的赋值<br />代码规范：所有变量声明全部放在函数头部，有助于代码维护</p><blockquote><p>HTML下的全局变量</p></blockquote><p>在HTML中，全局变量是window对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> x = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"><span class="title function_">alet</span>(x);</span><br><span class="line"><span class="title function_">alet</span>(<span class="variable language_">window</span>.<span class="property">x</span>);</span><br><span class="line"><span class="comment">//两者等价</span></span><br></pre></td></tr></table></figure><p>JS实际上只有一个全局变量 <code>window</code>，任何变量（函数也可以视为变量），假设没有在函数作用范围内找到，就会向外查找，如果在全局作用域没有找到，报错<code>RefrenceError</code></p><blockquote><p>规范</p></blockquote><p>由于我们所有的全局变量都会绑定到我们的<code>window</code>上，如果不同的JS文件，使用了相同的全局变量，会产生冲突</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建唯一全局变量</span></span><br><span class="line"><span class="keyword">let</span> <span class="title class_">Jay</span> = &#123;&#125;;</span><br><span class="line"><span class="comment">//定义全局变量</span></span><br><span class="line"><span class="title class_">Jay</span>.<span class="property">a</span> = <span class="number">10</span>;</span><br><span class="line"><span class="title class_">Jay</span>.<span class="property">b</span> = <span class="number">100</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Jay</span>.<span class="property">a</span> + <span class="title class_">Jay</span>.<span class="property">b</span>);</span><br><span class="line"><span class="title class_">Jay</span>.<span class="property">add</span>= <span class="keyword">function</span>(<span class="params">x,y</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> x + y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>把自己的代码全部放入自己定义的唯一空间名字中，减少全局命名冲突问题</p><blockquote><p>局部作用域<code>let</code></p></blockquote><p>建议使用<code>let</code>去定义局部作用域的变量</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">f</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(i);<span class="comment">//i出了这个作用域仍能使用</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">f</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(i);<span class="comment">//i出了这个作用域仍能使用</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>常量<code>const</code></p></blockquote><p>在ES6之前，只有用全部大写字母命名的变量，就是常量，建议不要修改（但是能改变）<br />在ES6引入了<code>const</code></p><h3 id="53-方法"><a class="markdownIt-Anchor" href="#53-方法"></a> 5.3 方法</h3><blockquote><p>对象：属性和方法</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="title class_">Jay</span> = &#123;</span><br><span class="line"><span class="comment">//属性</span></span><br><span class="line"><span class="attr">name</span>: <span class="string">&#x27;JayNier&#x27;</span>,</span><br><span class="line"><span class="attr">birth</span>: <span class="number">2001</span>,</span><br><span class="line"><span class="comment">//方法</span></span><br><span class="line"><span class="attr">age</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">let</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getFullYear</span>();</span><br><span class="line"><span class="keyword">return</span> now - <span class="variable language_">this</span>.<span class="property">birth</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//方法调用要加()</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Jay</span>.<span class="title function_">age</span>())</span><br></pre></td></tr></table></figure><p><code>代码拆分后</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getAge</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">let</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getFullYear</span>();</span><br><span class="line">    <span class="keyword">return</span> now - <span class="variable language_">this</span>.<span class="property">birth</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="title class_">Jay</span> = &#123;</span><br><span class="line">    <span class="comment">//属性</span></span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;JayNier&#x27;</span>,</span><br><span class="line">    <span class="attr">birth</span>: <span class="number">2001</span>,</span><br><span class="line">    <span class="comment">//方法</span></span><br><span class="line">    <span class="attr">age</span>: getAge<span class="comment">//这里将函数看做变量使用</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//方法调用要加()</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Jay</span>.<span class="title function_">age</span>())</span><br><span class="line"><span class="comment">//不能直接调用getAge()，否则this指向window</span></span><br></pre></td></tr></table></figure><blockquote><p>apply：控制<code>this</code>的指向</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getAge</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">let</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getFullYear</span>();</span><br><span class="line">    <span class="keyword">return</span> now - <span class="variable language_">this</span>.<span class="property">birth</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="title class_">Jay</span> = &#123;</span><br><span class="line">    <span class="comment">//属性</span></span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;JayNier&#x27;</span>,</span><br><span class="line">    <span class="attr">birth</span>: <span class="number">2001</span>,</span><br><span class="line">    <span class="comment">//方法</span></span><br><span class="line">    <span class="attr">age</span>: getAge<span class="comment">//这里将函数看做变量使用</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//方法调用要加()</span></span><br><span class="line">getAge.<span class="title function_">apply</span>(<span class="title class_">Jay</span>,[])<span class="comment">//this指向了Jay对象，参数为空</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="6-内部对象"><a class="markdownIt-Anchor" href="#6-内部对象"></a> 6. 内部对象</h2><h3 id="61-date"><a class="markdownIt-Anchor" href="#61-date"></a> 6.1 Date</h3><blockquote><p>基本使用</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>();<span class="comment">//Sun Sep 05 2021 22:54:33 GMT+0800 (中国标准时间)</span></span><br><span class="line">now.<span class="title function_">getFullYear</span>();<span class="comment">//年</span></span><br><span class="line">now.<span class="title function_">getMonth</span>();<span class="comment">//月 0~11</span></span><br><span class="line">now.<span class="title function_">getDate</span>();<span class="comment">//日</span></span><br><span class="line">now.<span class="title function_">getDay</span>();<span class="comment">//星期</span></span><br><span class="line">now.<span class="title function_">getHours</span>();<span class="comment">//时</span></span><br><span class="line">now.<span class="title function_">getMinutes</span>();<span class="comment">//分</span></span><br><span class="line">now.<span class="title function_">getSeconds</span>();<span class="comment">//秒</span></span><br><span class="line">now.<span class="title function_">getTime</span>();<span class="comment">//时间戳  全世界统一 1970.1.1 0:00:00 至今的毫秒数</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">new</span> <span class="title class_">Date</span>(now.<span class="title function_">getTime</span>()))<span class="comment">//将时间戳转化为时间</span></span><br></pre></td></tr></table></figure><blockquote><p>转换</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">now.<span class="title function_">toLocaleString</span>();<span class="comment">//&quot;2021/9/5 下午11:00:53&quot;</span></span><br><span class="line">now.<span class="title function_">toGMTString</span>();<span class="comment">//&quot;Sun, 05 Sep 2021 15:00:53 GMT&quot;</span></span><br></pre></td></tr></table></figure><h3 id="62-json"><a class="markdownIt-Anchor" href="#62-json"></a> 6.2 JSON</h3><blockquote><p>JSON与XML</p></blockquote><ol><li>早期，所有数据传输习惯使用XML文件！</li><li>JSON是由道格拉斯·克罗克福特构想和设计的一种轻量级资料交换格式。</li><li>JSON最开始被广泛的应用于WEB应用的开发。不过目前JSON使用在JavaScript、Java、Node.js应用的情况比较多，PHP、C#等开发的WEB应用主要还是使用XML。</li><li>JSON与XML最大的不同在于XML是一个完整的标记语言，而JSON不是。这使得XML在程序判读上需要比较多的功夫。主要的原因在于XML的设计理念与JSON不同。XML利用标记语言的特性提供了绝佳的延展性（如XPath），在数据存储，扩展及高级检索方面具备对JSON的优势，而JSON则由于比XML更加小巧，以及浏览器的内建快速解析支持，使得其更适用于网络数据传输领域。</li><li>JSON格式取代了XML给网络传输带来了很大的便利，但是却没有了XML的一目了然，尤其是JSON数据很长的时候，会让人陷入繁琐复杂的数据节点查找中。开发者可以通过在线JSON格式化工具，来更方便的对JSON数据进行节点查找和解析。</li></ol><blockquote><p>JSON字符串与JS对象的转换</p></blockquote><p>格式：</p><ul><li>对象和Map都用<code>&#123;&#125;</code></li><li>数组和List都用<code>[]</code></li><li>键值对都用<code>key: value</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建对象</span></span><br><span class="line"><span class="keyword">let</span> user = &#123;</span><br><span class="line"><span class="attr">name</span>: <span class="string">&#x27;Jay&#x27;</span>,</span><br><span class="line"><span class="attr">age</span>: <span class="number">20</span>,</span><br><span class="line"><span class="attr">sex</span>: <span class="string">&#x27;boy&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//对象转换为json字符串 &#123;&quot;name&quot;:&quot;Jay&quot;,&quot;age&quot;:20,&quot;sex&quot;:&quot;boy&quot;&#125;</span></span><br><span class="line"><span class="keyword">let</span> jsonUser = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(user);</span><br><span class="line"><span class="comment">//json字符串转换为对象</span></span><br><span class="line"><span class="keyword">let</span> obj = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="string">&#x27;&#123;&quot;name&quot;:&quot;Jay&quot;,&quot;age&quot;:20,&quot;sex&quot;:&quot;boy&quot;&#125;&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="63-ajax"><a class="markdownIt-Anchor" href="#63-ajax"></a> 6.3 Ajax</h3><ol><li>AJAX = Asynchronous JavaScript and XML</li><li>AJAX 是一种用于创建快速动态网页的技术</li><li>AJAX 通过在后台与服务器进行少量数据交换，使网页实现异步更新。这意味着可以在不重载整个页面的情况下，对网页的某些部分进行更新。</li></ol><h2 id="7-面向对象编程"><a class="markdownIt-Anchor" href="#7-面向对象编程"></a> 7. 面向对象编程</h2><h3 id="71-面向对象原型继承"><a class="markdownIt-Anchor" href="#71-面向对象原型继承"></a> 7.1 面向对象原型继承</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="title class_">Student</span> =&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;XXX&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="title class_">NaN</span>,</span><br><span class="line">    <span class="attr">run</span>: <span class="keyword">function</span> (<span class="params">x</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span> + <span class="string">&#x27;跑了&#x27;</span> + x +<span class="string">&#x27;公里&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="title class_">Jay</span> = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;JayNier&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">20</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//原型指向Student对象 === 继承</span></span><br><span class="line"><span class="title class_">Jay</span>.<span class="property">__proto__</span> = <span class="title class_">Student</span>;</span><br><span class="line"><span class="title class_">Jay</span>.<span class="title function_">run</span>(<span class="number">20</span>);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构造新对象，可理解为函数</span></span><br><span class="line"><span class="keyword">function</span>  <span class="title function_">Student</span>(<span class="params">name</span>) &#123;</span><br><span class="line">   <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//给Student新增一个方法</span></span><br><span class="line"><span class="title class_">Student</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">say</span> = <span class="keyword">function</span> (<span class="params">content</span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="variable language_">this</span>.<span class="property">name</span> + <span class="string">&quot; say: &quot;</span> + content);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="title class_">JayNier</span> = <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&#x27;JayNier&#x27;</span>);</span><br><span class="line"><span class="title class_">JayNier</span>.<span class="title function_">say</span>(<span class="string">&#x27;Hello!&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="72-面向对象class继承"><a class="markdownIt-Anchor" href="#72-面向对象class继承"></a> 7.2 面向对象class继承</h3><p><code>class</code>关键字，是在ES6引入的</p><blockquote><p>定义class</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line"><span class="comment">//构造器</span></span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">hello</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;hello&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="title class_">JayNier</span> = <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&#x27;JayNier&#x27;</span>);</span><br><span class="line"><span class="title class_">JayNier</span>.<span class="title function_">hello</span>();</span><br></pre></td></tr></table></figure><blockquote><p>继承</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">hello</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;hello！&#x27;</span> + <span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Undergraduate</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Student</span>&#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name,grade</span>)&#123;</span><br><span class="line">        <span class="variable language_">super</span>(name);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">grade</span> = grade;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">gradePrint</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">hello</span>();</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;你考了&#x27;</span> + <span class="variable language_">this</span>.<span class="property">grade</span> + <span class="string">&#x27;分&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="title class_">JayNier</span> = <span class="keyword">new</span> <span class="title class_">Undergraduate</span>(<span class="string">&#x27;JayNier&#x27;</span>, <span class="number">90</span>);</span><br><span class="line"><span class="title class_">JayNier</span>.<span class="title function_">gradePrint</span>();</span><br></pre></td></tr></table></figure><p>本质：查看原型对象</p><blockquote><p>原型链</p></blockquote><p>略</p><h2 id="8-操作bom对象"><a class="markdownIt-Anchor" href="#8-操作bom对象"></a> 8. 操作BOM对象</h2><blockquote><p>浏览器介绍</p></blockquote><p><code>BOM：浏览器对象模型</code><br /><code>浏览器内核</code></p><blockquote><p>window</p></blockquote><p><code>window：浏览器窗口</code></p><blockquote><p>navigator</p></blockquote><p><code>navigator：封装了浏览器的信息</code><br /><code>浏览器信息可被人为修改，不建议使用这些属性来判断和编写代码</code></p><blockquote><p>screen</p></blockquote><p><code>screen：屏幕信息</code></p><blockquote><p>location</p></blockquote><p><code>location：当前页面的URL信息</code></p><blockquote><p>document</p></blockquote><p><code>DOM(Document Object Model，文档对象模型)定义了访问和操作HTML文档的标准方法。他把HTML文档表现为带有元素、属性和文本的树结构（节点数）</code><br /><code>cookie</code></p><blockquote><p>history(不建议使用)</p></blockquote><p><code>浏览器的历史记录</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">history.<span class="title function_">back</span>();<span class="comment">//后退</span></span><br><span class="line">history.<span class="title function_">forward</span>();<span class="comment">//前进</span></span><br></pre></td></tr></table></figure><h2 id="9-操作dom对象"><a class="markdownIt-Anchor" href="#9-操作dom对象"></a> 9. 操作DOM对象</h2><blockquote><p>HTML DOM 树</p></blockquote><p>浏览器网页就是一个DOM树形结构<br /><img src="https://i.loli.net/2021/09/29/zY6HcZW7BFdEomp.png" alt="image-20210929084708796" /></p><blockquote><p>基本操作</p></blockquote><ul><li>更新节点</li><li>遍历节点</li><li>删除节点</li><li>添加节点</li></ul><p>要操作一个DOM节点，就必须要先获得这个DOM节点</p><h3 id="91-获得dom节点"><a class="markdownIt-Anchor" href="#91-获得dom节点"></a> 9.1 获得DOM节点</h3><p>要把JS文件导入到<code>&lt;body&gt;</code>的最下面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> h1 = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;h1&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> p1 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;p1&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> p2 = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;p2&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> father = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;father&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> children = father.<span class="property">children</span>;</span><br></pre></td></tr></table></figure><p>这是原生代码，之后尽量使用JQuery</p><h3 id="92-更新dom节点"><a class="markdownIt-Anchor" href="#92-更新dom节点"></a> 9.2 更新DOM节点</h3><p><code>获取元素除根据id获取的，区域方式拿到的都是数组</code></p><blockquote><p>文本操作</p></blockquote><ul><li>修改文本的值：<code>p1.innerText = &quot;123&quot;;</code></li><li>可以解析HTML文本标签：<code>p1.innerHTML = '&lt;strong&gt; 456&lt;/strong&gt;';</code></li></ul><blockquote><p>样式操作</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">p1.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;blue&#x27;</span>;</span><br><span class="line">p1.<span class="property">style</span>.<span class="property">fontSize</span> = <span class="string">&#x27;50px&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="93-删除节点"><a class="markdownIt-Anchor" href="#93-删除节点"></a> 9.3 删除节点</h3><p>删除节点步骤：先定位到父节点，再通过父节点删除自己</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> = <span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>标题一<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span> = <span class="string">&quot;p1&quot;</span>&gt;</span> p1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span> = <span class="string">&quot;p2&quot;</span>&gt;</span> p2 <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> self  = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;p1&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> father = p1.<span class="property">parentElement</span>;</span><br><span class="line">father.<span class="title function_">removeChild</span>(p1)</span><br></pre></td></tr></table></figure><p><strong>注意：删除多个节点的时候，children是在时刻变化。</strong></p><h3 id="94-插入节点"><a class="markdownIt-Anchor" href="#94-插入节点"></a> 9.4 插入节点</h3><p>我们获得某个节点后，使用innerHTML就可以增加一个元素，但会覆盖原先的内容信息</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span> = <span class="string">&#x27;title&#x27;</span>&gt;</span> Hello, world!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> = <span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>标题一<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span> = <span class="string">&quot;p1&quot;</span>&gt;</span> p1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span> = <span class="string">&quot;p2&quot;</span>&gt;</span> p2 <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>改变节点位置，实现插入</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> father = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;father&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> title = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;title&quot;</span>)</span><br><span class="line">father.<span class="title function_">appendChild</span>(title);</span><br></pre></td></tr></table></figure><blockquote><p>新建普通节点，进行插入</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> father = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;father&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> x = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;p&#x27;</span>);<span class="comment">//创建一个p标签</span></span><br><span class="line">x.<span class="property">id</span> = <span class="string">&quot;new&quot;</span>;</span><br><span class="line">x.<span class="property">innerText</span> = <span class="string">&quot;I&#x27;m baby!&quot;</span>;</span><br><span class="line">father.<span class="title function_">appendChild</span>(x);</span><br></pre></td></tr></table></figure><blockquote><p>新建标签节点，进行插入</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> father = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;father&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> myScript = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;script&quot;</span>);</span><br><span class="line">myScript.<span class="title function_">setAttribute</span>(<span class="string">&quot;type&quot;</span>,<span class="string">&quot;text/javascript&quot;</span>);</span><br><span class="line">father.<span class="title function_">appendChild</span>(myScript);</span><br></pre></td></tr></table></figure><blockquote><p>插入样式</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> myStyle = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;style&#x27;</span>);<span class="comment">//创建样式标签</span></span><br><span class="line">myStyle.<span class="title function_">setAttribute</span>(<span class="string">&#x27;type&#x27;</span>, <span class="string">&#x27;text/css&#x27;</span>);</span><br><span class="line">myStyle.<span class="property">innerHTML</span> = <span class="string">`body&#123;//新建样式</span></span><br><span class="line"><span class="string">    background-color: ;</span></span><br><span class="line"><span class="string">&#125;`</span>;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;head&#x27;</span>)[<span class="number">0</span>].<span class="title function_">appendChild</span>(myStyle);<span class="comment">//get的是数组</span></span><br></pre></td></tr></table></figure><blockquote><p>在前部插入</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span> = <span class="string">&#x27;title&#x27;</span>&gt;</span> Hello, world!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> = <span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>标题一<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span> = <span class="string">&quot;p1&quot;</span>&gt;</span> p1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span> = <span class="string">&quot;p2&quot;</span>&gt;</span> p2 <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/action.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> parentNode = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;father&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> newNode = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;title&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> referenceNode = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;p2&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">let</span> insertedNode = parentNode.<span class="title function_">insertBefore</span>(newNode, referenceNode);</span><br></pre></td></tr></table></figure><h2 id="10-表单操作"><a class="markdownIt-Anchor" href="#10-表单操作"></a> 10. 表单操作</h2><p><a href="https://www.bootcdn.cn/">BootCDN</a></p><blockquote><p>获取表单信息</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> = <span class="string">&quot;form&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span> = <span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>性别：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;radio&quot;</span> <span class="attr">name</span> = <span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;man&quot;</span>&gt;</span> 男</span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;radio&quot;</span> <span class="attr">name</span> = <span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;woman&quot;</span>&gt;</span> 女</span><br><span class="line">            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span> = <span class="string">&quot;submit&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;getInformation()&quot;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/action.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getInformation</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> sex, username;</span><br><span class="line">    <span class="comment">//获取用户名</span></span><br><span class="line">    username = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;username&quot;</span>).<span class="property">value</span>;</span><br><span class="line">    <span class="comment">//获取sex的选中值</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="variable language_">document</span>.<span class="title function_">getElementsByName</span>(<span class="string">&quot;sex&quot;</span>).<span class="property">length</span>; i++)</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="title function_">getElementsByName</span>(<span class="string">&quot;sex&quot;</span>)[i])</span><br><span class="line">            sex = <span class="variable language_">document</span>.<span class="title function_">getElementsByName</span>(<span class="string">&quot;sex&quot;</span>)[i].<span class="property">value</span>;</span><br><span class="line">    <span class="title function_">alert</span>(username);</span><br><span class="line">    <span class="title function_">alert</span>(sex);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>表单加密</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/blueimp-md5/2.18.0/js/md5.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/blueimp-md5/2.18.0/js/md5.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> = <span class="string">&quot;form&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">onsubmit</span>=<span class="string">&quot;return check()&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span> = <span class="string">&quot;username&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>密码：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;password&quot;</span> <span class="attr">id</span> = <span class="string">&quot;password&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;hidden&quot;</span> <span class="attr">id</span> = <span class="string">&quot;password_MD5&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">hidden</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span> = <span class="string">&quot;submit&quot;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/action.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">check</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> username, password, password_MD5;</span><br><span class="line"></span><br><span class="line">    username = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;username&quot;</span>).<span class="property">value</span>;</span><br><span class="line">    password_MD5 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;password_MD5&quot;</span>);<span class="comment">//不能直接进行赋值，若在此处赋值，那么password_MD5始终为空，无法重置</span></span><br><span class="line">    password = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;password&quot;</span>).<span class="property">value</span>;</span><br><span class="line"></span><br><span class="line">    password_MD5.<span class="property">value</span> = <span class="title function_">md5</span>(password);</span><br><span class="line">    <span class="keyword">if</span> (username.<span class="title function_">toString</span>() === <span class="string">&quot;&quot;</span> || password.<span class="title function_">toString</span>() === <span class="string">&quot;&quot;</span>)&#123;<span class="comment">//此处不能用password_MD5判断，加密后空也是有值的d41d8cd98f00b204e9800998ecf8427e</span></span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;请输入用户名和密码&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="11-jquery"><a class="markdownIt-Anchor" href="#11-jquery"></a> 11. jQuery</h2><p><a href="https://www.bootcdn.cn/">BootCDN</a><br /><a href="https://jquery.cuishifeng.cn/">帮助文档</a><br />jQuery库中存在大量的JavaScript函数</p><blockquote><p>公式：<code>$(selector).action(函数体)</code></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;lib/jquery-3.6.0.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span> = <span class="string">&#x27;test&#x27;</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&#x27;#test&#x27;</span>).<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">alert</span>(<span class="string">&quot;hello, world!&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>selector</code>与<code>css</code>的选择器写法一样</p><blockquote><p>选择器</p></blockquote><p>建议查看<a href="https://jquery.cuishifeng.cn/">帮助文档</a></p><p><code>三种基本选择器</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;#id&#x27;</span>).<span class="title function_">click</span>();</span><br><span class="line">$(<span class="string">&#x27;p&#x27;</span>).<span class="title function_">click</span>();</span><br><span class="line">$(<span class="string">&#x27;.class&#x27;</span>).<span class="title function_">click</span>();</span><br></pre></td></tr></table></figure><blockquote><p>事件</p></blockquote><p><strong>鼠标事件、键盘事件、其他事件</strong></p><p><em>在DOM加载完成时运行的代码，可以这样写：</em></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="comment">// 在这里写你的代码...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><em><code>$(document).ready()</code>的简写</em></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="keyword">function</span>(<span class="params">$</span>) &#123;</span><br><span class="line">  <span class="comment">// 你可以在这里继续使用$作为别名...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;lib/jquery-3.6.0.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#test</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>请在方框内移动鼠标<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span> = <span class="string">&#x27;location&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> = <span class="string">&#x27;test&#x27;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//在DOM加载完成时运行的代码</span></span></span><br><span class="line"><span class="language-javascript">    $(<span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&#x27;#test&#x27;</span>).<span class="title function_">mousemove</span>(<span class="keyword">function</span> (<span class="params">e</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&#x27;#location&#x27;</span>).<span class="title function_">text</span>(<span class="string">&quot;x：&quot;</span> + e.<span class="property">pageX</span> + <span class="string">&quot;  y：&quot;</span> + e.<span class="property">pageY</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>操作DOM元素</p></blockquote><p><code>节点文本操作</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;lib/jquery-3.6.0.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> = <span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>标题一<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span> = <span class="string">&quot;p1&quot;</span>&gt;</span> p1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span> = <span class="string">&quot;p2&quot;</span>&gt;</span> p2 <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&#x27;p[id = p1]&#x27;</span>).<span class="title function_">text</span>();<span class="comment">//获得值</span></span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&#x27;p[id = p1]&#x27;</span>).<span class="title function_">text</span>(<span class="string">&quot;修改值&quot;</span>);<span class="comment">//修改值</span></span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&#x27;p[id = p1]&#x27;</span>).<span class="title function_">html</span>();<span class="comment">//获得值</span></span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&#x27;p[id = p1]&#x27;</span>).<span class="title function_">html</span>(<span class="string">&quot;修改值&quot;</span>);<span class="comment">//修改值</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>css操作</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;p[id = p1]&#x27;</span>).<span class="title function_">css</span>(&#123;<span class="attr">color</span>:<span class="string">&#x27;red&#x27;</span>&#125;);<span class="comment">//键值对</span></span><br></pre></td></tr></table></figure><p><code>显示与隐藏</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;p[id = p1]&#x27;</span>).<span class="title function_">show</span>();</span><br><span class="line">$(<span class="string">&#x27;p[id = p1]&#x27;</span>).<span class="title function_">hide</span>();</span><br></pre></td></tr></table></figure><blockquote><p>小技巧</p></blockquote><ol><li>如何巩固JS（看jQuery源码，看游戏源码）</li><li>如何巩固HTML、CSS（扒网站）</li></ol><p><a href="https://ant.design/index-cn">Ant Design</a><br /><a href="https://element.eleme.cn/">Element-UI</a><br /><a href="https://www.layui.com/">Layui</a></p>]]></content>
      
      
      <categories>
          
          <category> Web基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb</title>
      <link href="/posts/99720b1c/"/>
      <url>/posts/99720b1c/</url>
      
        <content type="html"><![CDATA[<h2 id="1-基本概念"><a class="markdownIt-Anchor" href="#1-基本概念"></a> 1. 基本概念</h2><h3 id="11-前言"><a class="markdownIt-Anchor" href="#11-前言"></a> 1.1 前言</h3><p>静态Web</p><ul><li>html，css</li><li>提供给所有人看的数据，始终不会发生改变</li></ul><p>动态Web</p><ul><li>淘宝等几乎所有网站</li><li>提供给所有人看的数据始终会发生改变，每个人在不同时间和地点看到的信息不相同</li><li>技术栈：Servlet/JSP，ASP，PHP</li></ul><p>在Java中，动态web资源开发的技术统称为JavaWeb</p><h3 id="12-web应用程序"><a class="markdownIt-Anchor" href="#12-web应用程序"></a> 1.2 Web应用程序</h3><p>WEB应用程序指供浏览器访问的程序，通常也简称为web应用。</p><p>一个web应用由多个静态web资源和动态web资源组成，如：</p><ul><li><p>html、css、js文件</p></li><li><p>Jsp文件、java程序、支持jar包、</p></li><li><p>配置文件（properties）</p></li></ul><p>Web应用开发好后，若想供外界访问，需要把web应用所在目录交给web服务器管理，这个过程称之为虚似目录的映射。</p><h3 id="13-静态web"><a class="markdownIt-Anchor" href="#13-静态web"></a> 1.3 静态Web</h3><p><img src="https://i.loli.net/2021/09/30/1fdypZ9UNt5vrwQ.png" alt="image-20210930152833572" /></p><h3 id="14-动态web"><a class="markdownIt-Anchor" href="#14-动态web"></a> 1.4 动态Web</h3><p><img src="https://i.loli.net/2021/09/30/Ruc2Z7jQdxDrqLk.png" alt="image-20210930154547851" /></p><h2 id="2-web服务器"><a class="markdownIt-Anchor" href="#2-web服务器"></a> 2. Web服务器</h2><h3 id="21-技术讲解"><a class="markdownIt-Anchor" href="#21-技术讲解"></a> 2.1 技术讲解</h3><ul><li><p>ASP</p><ul><li>微软开发的，最早流行</li><li>在HTMl中嵌入VB的脚本，ASP + COM</li><li>在ASP开发中，基本一个页面都有几千行业务代码，极其混乱</li><li>维护成本高</li><li>C#</li></ul></li><li><p>PHP</p><ul><li>PHP开发速度快，功能很强大，跨平台，代码简单</li><li>无法承载大访问量请求</li></ul></li><li><p>JSP/Servlet</p><ul><li>sun公司主推的B/S架构</li><li>基于Java语言（所有的大公司和一些开源组件，都是用Java写）</li><li>可以承载三高问题（高并发、高可用、高性能）带来的影响</li><li>语法像ASP</li></ul></li></ul><h3 id="22-web服务器"><a class="markdownIt-Anchor" href="#22-web服务器"></a> 2.2 Web服务器</h3><p>服务器是一种被动的操作，用来处理用户的一些请求和给用户响应信息</p><p>IIS</p><ul><li>微软开发，Windows中自带</li></ul><p>Tomcat</p><ul><li>Tomcat 提供了一个&quot;纯Java&quot;的HTTP Web 服务器环境，Java代码可以在其中运行。</li><li>它还添加了基于用户和基于系统的 Web 应用程序增强功能，以增加对跨各种环境的部署的支持。它还尝试通过网络管理会话和应用程序。</li></ul><h2 id="3-tomcat"><a class="markdownIt-Anchor" href="#3-tomcat"></a> 3. Tomcat</h2><p><a href="https://blog.csdn.net/qq_39047789/article/details/103883252?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163296530916780269838610%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=163296530916780269838610&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v29_ecpm-14-103883252.pc_search_ecpm_flag&amp;utm_term=tomcat%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B&amp;spm=1018.2226.3001.4187">tomcat下载安装及配置</a></p><p><img src="https://i.loli.net/2021/09/30/GatRmohHrYIi1KA.png" alt="image-20210930162818730" /></p><p><img src="https://i.loli.net/2021/09/30/b1XjHT3I6fWQPg7.png" alt="image-20210930163038425" /></p><p><img src="https://i.loli.net/2021/09/30/5lsbkEaWijBTv8f.png" alt="image-20210930163310410" /></p><p>修改配置文件：端口号、域名</p><p><img src="https://s2.loli.net/2021/12/24/rqeiVz6tmP1ngxE.png" alt="image-20210930164033003" /></p><p><img src="https://i.loli.net/2021/09/30/YSZdjnmOGCLpPMi.png" alt="image-20210930164059076" /></p><blockquote><p>默认端口号</p></blockquote><ul><li>Tomcat：8080</li><li>mysql：3306</li><li>http：80</li><li>https：443</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-- webapps：Tomcat服务器的web目录</span><br><span class="line"> -- jezer：网站的目录名</span><br><span class="line"> -- WEB-INF</span><br><span class="line"> -- classes：java程序</span><br><span class="line"> -- lib：web应用所依赖的java包</span><br><span class="line"> -- web.xml：网站配置文件</span><br><span class="line"> -- index.html：默认的首页</span><br><span class="line"> -- static</span><br><span class="line"> -- css</span><br><span class="line"> -- style.css</span><br><span class="line"> -- js</span><br><span class="line"> -- img</span><br></pre></td></tr></table></figure><blockquote><p>请你谈谈网站是如何进行访问的！</p></blockquote><ol><li>输入一个域名；回车</li><li>检查本机的 C:\Windows\System32\drivers\etc\hosts配置文件下有没有这个域名映射；</li></ol><ul><li>有：直接返回对应的ip地址，这个地址中，有我们需要访问的web程序，可以直接访问</li><li>没有：去DNS服务器找，找到的话就返回，找不到就返回找不到；<br /><img src="https://i.loli.net/2021/10/02/lxUwHAGodikObTX.png" alt="image-20211002204912348" /></li></ul><h2 id="4-http"><a class="markdownIt-Anchor" href="#4-http"></a> 4. Http</h2><h3 id="41-什么是http"><a class="markdownIt-Anchor" href="#41-什么是http"></a> 4.1 什么是HTTP</h3><p>HTTP（超文本传输协议）是一个简单的请求响应协议，它通常运行在TCP上</p><ul><li>文本：HTML，字符串，…</li><li>超文本：图片，音乐，视频，定位，地图</li></ul><h3 id="42-两个时代"><a class="markdownIt-Anchor" href="#42-两个时代"></a> 4.2 两个时代</h3><ul><li>HTTP 1.0<ul><li>客户端与web服务器连接后，只能获得一个web资源，断开连接 （短连接）</li></ul></li><li>HTTP 1.1<ul><li>客户端与web服务器连接后，可以获得多个web资源（长连接）</li></ul></li></ul><h3 id="43-http请求"><a class="markdownIt-Anchor" href="#43-http请求"></a> 4.3 HTTP请求</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Request URL: https://www.baidu.com/                  -- 请求地址</span><br><span class="line">Request Method: GET                  --get/post方法</span><br><span class="line">Status Code: 200 OK (from disk cache) -- 状态码</span><br><span class="line">Remote Address: 180.101.49.12:443 -- 远程IP地址和端口</span><br><span class="line">Referrer Policy: strict-origin-when-cross-origin</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line">Accept-Encoding: gzip, deflate, br</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Cookie: BIDUPSID=31CFA05956CDE7FC66D7D9ED5242B2DE; PSTM=1628569252; BD_UPN=12314753; BAIDUID=40D39965FF4B498757830022995F4266:FG=1; __yjs_duid=1_d409a5609dc61e377604ee98346a1e7f1628649932758; H_WISE_SIDS=107314_110085_127969_168388_175755_177370_178384_178530_178626_179347_179453_179620_181106_181133_181136_181251_181485_181587_181712_181825_182238_182273_182531_182860_183031_183227_183327_183492_183536_183611_183867_184012_184199_184319_184440_184510_184560_184577_184712_184792_184794_184810_184838_184894_184905_185036_185252_185519_185636_185650_185747_185823_185904_186039_186311_186316_186407_186562_186596_186664_186677_186831_186841_186899_187021_187067_187088_187206_187324_187387; BDUSS=VKeWd6bUdyT35JQnM2WVBDQ0M5UEY0SWpEMGNGRlpmdFVKQXdMWDNzNHV4WEJoRVFBQUFBJCQAAAAAAQAAAAEAAABSvn9HSmF5TmllcgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC44SWEuOElhek; BDUSS_BFESS=VKeWd6bUdyT35JQnM2WVBDQ0M5UEY0SWpEMGNGRlpmdFVKQXdMWDNzNHV4WEJoRVFBQUFBJCQAAAAAAQAAAAEAAABSvn9HSmF5TmllcgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC44SWEuOElhek; H_PS_PSSID=34647_34527_34067_31254_34654_34711_34525_34584_34705_26350_34702; BDORZ=B490B5EBF6F3CD402E515D22BCDA1598; delPer=0; BD_CK_SAM=1; PSINO=5; BDRCVFR[feWj1Vr5u3D]=mk3SLVN4HKm; BAIDUID_BFESS=40D39965FF4B498757830022995F4266:FG=1; H_PS_645EC=f819hhKmOLdQklYyWKn3ViFKZ3ngXwFNGuZUrf3MwgJ3%2BkpCQpO6PLtVcHO1jARVDeuZ; BA_HECTOR=al2h21aha10085al5v1glb4820q</span><br><span class="line">Host: www.baidu.com</span><br><span class="line">Referer: https://www.baidu.com/</span><br><span class="line">sec-ch-ua: &quot;Google Chrome&quot;;v=&quot;93&quot;, &quot; Not;A Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;93&quot;</span><br><span class="line">sec-ch-ua-mobile: ?0</span><br><span class="line">sec-ch-ua-platform: &quot;Windows&quot;</span><br><span class="line">Sec-Fetch-Dest: document</span><br><span class="line">Sec-Fetch-Mode: navigate</span><br><span class="line">Sec-Fetch-Site: same-origin</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.63 Safari/537.36</span><br></pre></td></tr></table></figure><h3 id="44-http响应"><a class="markdownIt-Anchor" href="#44-http响应"></a> 4.4 HTTP响应</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Bdpagetype: 2</span><br><span class="line">Bdqid: 0xbf9c09340001d944</span><br><span class="line">Cache-Control: private</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Content-Encoding: gzip</span><br><span class="line">Content-Type: text/html;charset=utf-8</span><br><span class="line">Date: Thu, 30 Sep 2021 10:27:23 GMT</span><br><span class="line">Expires: Thu, 30 Sep 2021 10:27:23 GMT</span><br><span class="line">Server: BWS/1.1</span><br><span class="line">Set-Cookie: BDSVRTM=375; path=/</span><br><span class="line">Set-Cookie: BD_HOME=1; path=/</span><br><span class="line">Set-Cookie: H_PS_PSSID=34647_34527_34067_31254_34654_34711_34525_34584_34705_26350_34702; path=/; domain=.baidu.com</span><br><span class="line">Strict-Transport-Security: max-age=172800</span><br><span class="line">Traceid: 1632997643064118375413806920676554168644</span><br><span class="line">Transfer-Encoding: chunked</span><br><span class="line">X-Frame-Options: sameorigin</span><br><span class="line">X-Ua-Compatible: IE=Edge,chrome=1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Refresh：告诉客户端，多久刷新一次</span><br><span class="line">Location：让网页重新定位</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/kebi007/article/details/103059900?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163299356616780255291694%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=163299356616780255291694&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-103059900.pc_search_ecpm_flag&amp;utm_term=get%E5%92%8Cpost%E7%9A%84%E5%8C%BA%E5%88%AB&amp;spm=1018.2226.3001.4187">post和get的区别,状态码</a></p><h2 id="5maven"><a class="markdownIt-Anchor" href="#5maven"></a> 5.Maven</h2><p>方便我们导入jar包</p><p><mark>Maven核心思想：约定大于配置</mark></p><p><a href="https://blog.csdn.net/a805814077/article/details/100545928?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163291260916780264048614%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=163291260916780264048614&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-100545928.pc_search_ecpm_flag&amp;utm_term=maven%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE&amp;spm=1018.2226.3001.4187">Maven安装与配置</a></p><p><a href="https://blog.csdn.net/weixin_43232955/article/details/97840767?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163291523116780366539813%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=163291523116780366539813&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-97840767.pc_search_ecpm_flag&amp;utm_term=maven%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AEidea&amp;spm=1018.2226.3001.4187">Maven安装配置及在idea中配置</a></p><p><img src="https://i.loli.net/2021/09/30/6qsouhvS8cne5lU.png" alt="image-20210930204744945" /></p><blockquote><p>约定大于配置</p></blockquote><p>我们之后可以能遇到我们写的配置文件，无法被导出或者生效的问题.</p><p>解决方案：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--在build中配置resources，来防止我们资源导出失败的问题--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6servlet"><a class="markdownIt-Anchor" href="#6servlet"></a> 6.Servlet</h2><h3 id="61-servlet简介"><a class="markdownIt-Anchor" href="#61-servlet简介"></a> 6.1 Servlet简介</h3><ul><li><p>Servlet就是sun公司开发动态web的一门技术</p></li><li><p>Sun在这些API中提供一个接口叫做：Servlet，如果你想开发一个Servlet程序，只需要完成两个小步骤：</p><ul><li>编写一个类，实现Servlet接口</li><li>把开发好的Java类部署到web服务器中。</li></ul></li></ul><p><strong>把实现了Servlet接口的Java程序叫做Servlet</strong></p><h3 id="62-helloservlet"><a class="markdownIt-Anchor" href="#62-helloservlet"></a> 6.2 HelloServlet</h3><p>Serlvet接口Sun公司有两个默认的实现类：<code>HttpServlet</code>，<code>GenericServlet</code></p><ol><li>构建一个普通的Maven项目，删掉里面的src目录，以后我们的学习就在这个项目里面建立Moudel；这个空的工程就是Maven主工程；</li><li>关于Maven父子工程的理解：</li></ol><p>父项目中会有</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>servlet-01<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br></pre></td></tr></table></figure><p>子项目会有</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javaweb-02-servlet<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.kuang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure><p><mark>父项目中的java子项目可以直接使用</mark></p><blockquote><p>编写Servlet的映射</p></blockquote><p>为什么需要映射：我们写的是JAVA程序，但是要通过浏览器访问，而浏览器需要连接web服务器，所以我们需要再web服务中注册我们写的Servlet，还需给他一个浏览器能够访问的路径；</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--注册Servlet--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.kuang.servlet.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Servlet的请求路径--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="63-mapping-问题"><a class="markdownIt-Anchor" href="#63-mapping-问题"></a> 6.3 Mapping 问题</h3><ol><li>一个 Servlet 可以指定一个映射路径</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>一个 Servlet 可以指定一个映射路径</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello2<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello3<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello4<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello5<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>一个Servlet可以指定通用映射路径</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>默认请求路径</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--默认请求路径--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="5"><li>指定一些后缀或者前缀等等….</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--可以自定义后缀实现请求映射</span></span><br><span class="line"><span class="comment">    注意点，*前面不能加项目映射的路径</span></span><br><span class="line"><span class="comment">    hello/sajdlkajda.qinjiang</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.qinjiang<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="6"><li>优先级问题</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--404--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定了固有的映射路径优先级最高，如果找不到就会走默认的处理请求； --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>error<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.kuang.servlet.ErrorServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>error<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="64-servletcontext"><a class="markdownIt-Anchor" href="#64-servletcontext"></a> 6.4 ServletContext</h3><h4 id="641-共享数据"><a class="markdownIt-Anchor" href="#641-共享数据"></a> 6.4.1 共享数据</h4><p>在一个 servlet 中保存的数据，可以在另一个 servlet 中拿到；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//this.getInitParameter()   初始化参数</span></span><br><span class="line">        <span class="comment">//this.getServletConfig()   Servlet配置</span></span><br><span class="line">        <span class="comment">//this.getServletContext()  Servlet上下文</span></span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="built_in">this</span>.getServletContext();</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;秦疆&quot;</span>; <span class="comment">//数据</span></span><br><span class="line">        context.setAttribute(<span class="string">&quot;username&quot;</span>,username); <span class="comment">//将一个数据保存在了ServletContext中，名字为：username 。值 username</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GetServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="built_in">this</span>.getServletContext();</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> (String) context.getAttribute(<span class="string">&quot;username&quot;</span>);</span><br><span class="line"></span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">        resp.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        resp.getWriter().print(<span class="string">&quot;名字&quot;</span>+username);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.kuang.servlet.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>getc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.kuang.servlet.GetServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>getc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/getc<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="642-获取初始化参数"><a class="markdownIt-Anchor" href="#642-获取初始化参数"></a> 6.4.2 获取初始化参数</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置一些web应用初始化参数--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>url<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>jdbc:mysql://localhost:3306/mybatis<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">    <span class="type">ServletContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="built_in">this</span>.getServletContext();</span><br><span class="line">    <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> context.getInitParameter(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">    resp.getWriter().print(url);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="643-请求转发"><a class="markdownIt-Anchor" href="#643-请求转发"></a> 6.4.3 请求转发</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">    <span class="type">ServletContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="built_in">this</span>.getServletContext();</span><br><span class="line">    System.out.println(<span class="string">&quot;进入了ServletDemo04&quot;</span>);</span><br><span class="line">    <span class="comment">//RequestDispatcher requestDispatcher = context.getRequestDispatcher(&quot;/gp&quot;); //转发的请求路径</span></span><br><span class="line">    <span class="comment">//requestDispatcher.forward(req,resp); //调用forward实现请求转发；</span></span><br><span class="line">    context.getRequestDispatcher(<span class="string">&quot;/gp&quot;</span>).forward(req,resp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>请求转发</p><p><img src="https://i.loli.net/2021/10/02/sYfJ8mvwQAe4IN6.png" alt="image-20211002211217048" /></p><p>重定向</p><p><img src="https://i.loli.net/2021/10/02/MHDLcN5qQVu2vOT.png" alt="image-20211002211232984" /></p><h4 id="644-读取资源文件"><a class="markdownIt-Anchor" href="#644-读取资源文件"></a> 6.4.4 读取资源文件</h4><p>Properties</p><ul><li>在 java 目录下新建 properties</li><li>在 resources 目录下新建 properties</li></ul><p>发现：都被打包到了同一个路径下：classes，我们俗称这个路径为classpath:</p><p>思路：需要一个文件流；</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">uername</span>=<span class="string">sjmp</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jezer.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jay_Soul</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo01</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> <span class="built_in">this</span>.getServletContext().getResourceAsStream(<span class="string">&quot;/WEB-INF/classes/dp.properties&quot;</span>);</span><br><span class="line">        <span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        properties.load(is);</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> properties.getProperty(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">pwd</span> <span class="operator">=</span> properties.getProperty(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        resp.getWriter().print(name + <span class="string">&quot;: &quot;</span>+ pwd);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="65-httpservletreponese"><a class="markdownIt-Anchor" href="#65-httpservletreponese"></a> 6.5 HttpServletReponese</h3><p>Web 服务器接收到客户端的 http 请求，针对这个请求，分别创建一个代表请求的 HttpServletRequest 对象，代表响应的一个 HttpServletResponse；</p><ul><li>如果想要获取客户端请求过来的参数：找 HttpServletRequest</li><li>如果要给客户端响应一些信息：找 HttpServletResponse</li></ul><h4 id="651-简单分类"><a class="markdownIt-Anchor" href="#651-简单分类"></a> 6.5.1 简单分类</h4><blockquote><p>负责向浏览器发送数据的方法</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ServletOutputStream <span class="title function_">getOutputStream</span><span class="params">()</span> <span class="keyword">throws</span> IOException;</span><br><span class="line">PrintWriter <span class="title function_">getWriter</span><span class="params">()</span> <span class="keyword">throws</span> IOException;</span><br></pre></td></tr></table></figure><blockquote><p>负责向浏览器发送响应头的方法</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">setCharacterEncoding</span><span class="params">(String var1)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">setContentLength</span><span class="params">(<span class="type">int</span> var1)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">setContentLengthLong</span><span class="params">(<span class="type">long</span> var1)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">setContentType</span><span class="params">(String var1)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">setDateHeader</span><span class="params">(String var1, <span class="type">long</span> var2)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">addDateHeader</span><span class="params">(String var1, <span class="type">long</span> var2)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">setHeader</span><span class="params">(String var1, String var2)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">addHeader</span><span class="params">(String var1, String var2)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">setIntHeader</span><span class="params">(String var1, <span class="type">int</span> var2)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">addIntHeader</span><span class="params">(String var1, <span class="type">int</span> var2)</span>;</span><br></pre></td></tr></table></figure><blockquote><p>响应的状态码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">SC_CONTINUE</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_SWITCHING_PROTOCOLS</span> <span class="operator">=</span> <span class="number">101</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_OK</span> <span class="operator">=</span> <span class="number">200</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_CREATED</span> <span class="operator">=</span> <span class="number">201</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_ACCEPTED</span> <span class="operator">=</span> <span class="number">202</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_NON_AUTHORITATIVE_INFORMATION</span> <span class="operator">=</span> <span class="number">203</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_NO_CONTENT</span> <span class="operator">=</span> <span class="number">204</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_RESET_CONTENT</span> <span class="operator">=</span> <span class="number">205</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_PARTIAL_CONTENT</span> <span class="operator">=</span> <span class="number">206</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_MULTIPLE_CHOICES</span> <span class="operator">=</span> <span class="number">300</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_MOVED_PERMANENTLY</span> <span class="operator">=</span> <span class="number">301</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_MOVED_TEMPORARILY</span> <span class="operator">=</span> <span class="number">302</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_FOUND</span> <span class="operator">=</span> <span class="number">302</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_SEE_OTHER</span> <span class="operator">=</span> <span class="number">303</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_NOT_MODIFIED</span> <span class="operator">=</span> <span class="number">304</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_USE_PROXY</span> <span class="operator">=</span> <span class="number">305</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_TEMPORARY_REDIRECT</span> <span class="operator">=</span> <span class="number">307</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_BAD_REQUEST</span> <span class="operator">=</span> <span class="number">400</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_UNAUTHORIZED</span> <span class="operator">=</span> <span class="number">401</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_PAYMENT_REQUIRED</span> <span class="operator">=</span> <span class="number">402</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_FORBIDDEN</span> <span class="operator">=</span> <span class="number">403</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_NOT_FOUND</span> <span class="operator">=</span> <span class="number">404</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_METHOD_NOT_ALLOWED</span> <span class="operator">=</span> <span class="number">405</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_NOT_ACCEPTABLE</span> <span class="operator">=</span> <span class="number">406</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_PROXY_AUTHENTICATION_REQUIRED</span> <span class="operator">=</span> <span class="number">407</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_REQUEST_TIMEOUT</span> <span class="operator">=</span> <span class="number">408</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_CONFLICT</span> <span class="operator">=</span> <span class="number">409</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_GONE</span> <span class="operator">=</span> <span class="number">410</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_LENGTH_REQUIRED</span> <span class="operator">=</span> <span class="number">411</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_PRECONDITION_FAILED</span> <span class="operator">=</span> <span class="number">412</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_REQUEST_ENTITY_TOO_LARGE</span> <span class="operator">=</span> <span class="number">413</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_REQUEST_URI_TOO_LONG</span> <span class="operator">=</span> <span class="number">414</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_UNSUPPORTED_MEDIA_TYPE</span> <span class="operator">=</span> <span class="number">415</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_REQUESTED_RANGE_NOT_SATISFIABLE</span> <span class="operator">=</span> <span class="number">416</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_EXPECTATION_FAILED</span> <span class="operator">=</span> <span class="number">417</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_INTERNAL_SERVER_ERROR</span> <span class="operator">=</span> <span class="number">500</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_NOT_IMPLEMENTED</span> <span class="operator">=</span> <span class="number">501</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_BAD_GATEWAY</span> <span class="operator">=</span> <span class="number">502</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_SERVICE_UNAVAILABLE</span> <span class="operator">=</span> <span class="number">503</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_GATEWAY_TIMEOUT</span> <span class="operator">=</span> <span class="number">504</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_HTTP_VERSION_NOT_SUPPORTED</span> <span class="operator">=</span> <span class="number">505</span>;</span><br></pre></td></tr></table></figure><h4 id="652-下载文件"><a class="markdownIt-Anchor" href="#652-下载文件"></a> 6.5.2 下载文件</h4><blockquote><p>基本步骤</p></blockquote><ol><li>要获取下载文件的路径</li><li>下载的文件名是什么？</li><li>设置浏览器使其支持下载的内容</li><li>获取下载文件的输入流</li><li>创建缓冲区</li><li>获取 OutputStream 对象</li><li>将 FileOutputStream 写入到 buffer缓冲区</li><li>使用 OutputStream 将缓冲区中的数据输出到客户端</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jezer.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletOutputStream;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URLEncoder;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jay_Soul</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Download</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">// 1. 要获取下载文件的路径</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">realPath</span> <span class="operator">=</span> <span class="string">&quot;H:\\Date\\IdeaProject\\JavaWeb-01-servlet\\response\\src\\main\\resources\\头像.png&quot;</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;下载文件的路径：&quot;</span>+realPath);</span><br><span class="line">        <span class="comment">// 2. 下载的文件名是啥？</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> realPath.substring(realPath.lastIndexOf(<span class="string">&quot;\\&quot;</span>) + <span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 3. 设置想办法让浏览器能够支持(Content-Disposition)下载我们需要的东西,中文文件名URLEncoder.encode编码，否则有可能乱码</span></span><br><span class="line">        resp.setHeader(<span class="string">&quot;Content-Disposition&quot;</span>,<span class="string">&quot;attachment;filename=&quot;</span>+ URLEncoder.encode(fileName,<span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">        <span class="comment">// 4. 获取下载文件的输入流</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(realPath);</span><br><span class="line">        <span class="comment">// 5. 创建缓冲区</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="comment">// 6. 获取OutputStream对象</span></span><br><span class="line">        <span class="type">ServletOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> resp.getOutputStream();</span><br><span class="line">        <span class="comment">// 7. 将FileOutputStream流写入到buffer缓冲区,使用OutputStream将缓冲区中的数据输出到客户端！</span></span><br><span class="line">        <span class="keyword">while</span> ((len=in.read(buffer))&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            out.write(buffer,<span class="number">0</span>,len);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        in.close();</span><br><span class="line">        out.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="653-验证码"><a class="markdownIt-Anchor" href="#653-验证码"></a> 6.5.3 验证码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jezer.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jay_Soul</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ImageServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="comment">//生成验证码随机数</span></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">makeNum</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">Random</span> <span class="variable">random</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">        <span class="type">String</span> <span class="variable">num</span> <span class="operator">=</span> random.nextInt(<span class="number">9999999</span>) +<span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">7</span> - num.length(); i++)&#123;</span><br><span class="line">            sb.append(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        num = sb.toString() + num;</span><br><span class="line">        <span class="keyword">return</span> num;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//让图片3秒刷新一次</span></span><br><span class="line">        resp.setHeader(<span class="string">&quot;refresh&quot;</span>, <span class="string">&quot;3&quot;</span>);</span><br><span class="line">        <span class="comment">//在内存中创建一个图片</span></span><br><span class="line">        <span class="type">BufferedImage</span> <span class="variable">image</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedImage</span>(<span class="number">80</span>, <span class="number">20</span>, BufferedImage.TYPE_INT_RGB);</span><br><span class="line">        <span class="comment">//得到图片</span></span><br><span class="line">        <span class="type">Graphics2D</span> <span class="variable">g</span> <span class="operator">=</span> (Graphics2D) image.getGraphics();</span><br><span class="line">        <span class="comment">//设置图片的背景颜色</span></span><br><span class="line">        g.setColor(Color.white);</span><br><span class="line">        g.fillRect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">80</span>, <span class="number">20</span>);</span><br><span class="line">        <span class="comment">//给图片写数据</span></span><br><span class="line">        g.setColor(Color.BLUE);</span><br><span class="line">        g.setFont(<span class="keyword">new</span> <span class="title class_">Font</span>(<span class="string">&quot;楷体&quot;</span>, Font.BOLD, <span class="number">20</span>));</span><br><span class="line">        g.drawString(makeNum(), <span class="number">0</span> ,<span class="number">20</span>);</span><br><span class="line">        <span class="comment">//告诉浏览器，缓存形式打开</span></span><br><span class="line">        resp.setContentType(<span class="string">&quot;image/jpeg&quot;</span>);</span><br><span class="line">        <span class="comment">//清空浏览器缓存</span></span><br><span class="line">        resp.setDateHeader(<span class="string">&quot;expires&quot;</span>, -<span class="number">1</span>);</span><br><span class="line">        resp.setHeader(<span class="string">&quot;Cache-Control&quot;</span>, <span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">        resp.setHeader(<span class="string">&quot;Pragma&quot;</span>, <span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">        <span class="comment">//把图片传给浏览器</span></span><br><span class="line">        ImageIO.write(image, <span class="string">&quot;jpeg&quot;</span>, resp.getOutputStream());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="654-重定向"><a class="markdownIt-Anchor" href="#654-重定向"></a> 6.5.4 重定向</h4><p><img src="https://i.loli.net/2021/10/02/MHDLcN5qQVu2vOT.png" alt="image-20211002211232984" /></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>request<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.jezer.servlet.RequestTest<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>request<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/login<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jezer.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jay_Soul</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RequestTest</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//处理请求</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(username+<span class="string">&quot;:&quot;</span>+password);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//重定向时候一定要注意，路径问题，否则404；</span></span><br><span class="line">        resp.sendRedirect(<span class="string">&quot;success.jsp&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>  pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h2&gt;Hello World!&lt;/h2&gt;</span><br><span class="line">&lt;%--这里提交的路径，需要寻找到项目的路径--%&gt;</span><br><span class="line">&lt;%--$&#123;pageContext.request.contextPath&#125;代表当前的项目--%&gt;</span><br><span class="line"></span><br><span class="line">&lt;form action=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/login&quot;</span> method=<span class="string">&quot;get&quot;</span>&gt;</span><br><span class="line">    用户名：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span>&gt; &lt;br&gt;</span><br><span class="line">    密码：&lt;input type=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;password&quot;</span>&gt; &lt;br&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Jay_Soul</span><br><span class="line">  Date: <span class="number">2021</span>/<span class="number">10</span>/<span class="number">4</span></span><br><span class="line">  Time: <span class="number">16</span>:<span class="number">12</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">成功</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="66-httpservletrequest"><a class="markdownIt-Anchor" href="#66-httpservletrequest"></a> 6.6 HttpServletRequest</h3><p>HttpServletRequest 代表客户端的请求，用户通过 HTTP 协议访问服务器，HTTP 请求中的所有信息会被封装到 HttpServletRequest ，通过这个HttpServletRequest 的方法，获得客户端的所有信息；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line"></span><br><span class="line">    req.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">    resp.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">    String[] hobbys = req.getParameterValues(<span class="string">&quot;hobbys&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;=============================&quot;</span>);</span><br><span class="line">    <span class="comment">//后台接收中文乱码问题</span></span><br><span class="line">    System.out.println(username);</span><br><span class="line">    System.out.println(password);</span><br><span class="line">    System.out.println(Arrays.toString(hobbys));</span><br><span class="line">    System.out.println(<span class="string">&quot;=============================&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    System.out.println(req.getContextPath());</span><br><span class="line">    <span class="comment">//通过请求转发</span></span><br><span class="line">    <span class="comment">//这里的 / 代表当前的web应用</span></span><br><span class="line">    req.getRequestDispatcher(<span class="string">&quot;/success.jsp&quot;</span>).forward(req,resp);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-cookie与session"><a class="markdownIt-Anchor" href="#7-cookie与session"></a> 7. Cookie与Session</h2><h3 id="71-会话"><a class="markdownIt-Anchor" href="#71-会话"></a> 7.1 会话</h3><p><strong>会话</strong>：用户打开一个浏览器，点击了很多超链接，访问多个 Web 资源，关闭浏览器，这个过程可以称之为会话；</p><p><strong>有状态会话</strong>：一个用户访问过某网站，下次来的时候，该网站知道该用户之前访问过</p><p><strong>一个网站，怎么证明你来过？</strong></p><p>客户端 ： 服务端给客户端一个 信件，客户端下次访问服务端带上信件就可以了； cookie<br />服务端：服务器登记你来过了，下次你来的时候我来匹配你； seesion</p><p><strong>区别</strong></p><ol><li>存储位置不同: cookie是保存在客户端, session是保存服务器端</li><li>存储数据量大小不同: cookie存储是有限的, 不超过4KB, seesion是无限制的;</li><li>存储的数据类型不同:cookie只能存储键值对的字符串类型,而session可以存储任意类型</li><li>默认有效期不同:cookie默认是会话级别的cookie,而session默认有效期是30分钟</li></ol><h3 id="72-cookie"><a class="markdownIt-Anchor" href="#72-cookie"></a> 7.2 Cookie</h3><p><mark>cookie一般会保存在本地的用户目录下 appdata</mark></p><ol><li>一个 Web 站点可以给浏览器发送多个 Cookie，最多存放 20 个 cookie；</li><li>cookie 大小有限制 4kb；</li><li>300 个 cookie 浏览器上限</li></ol><p><mark>删除Cookie</mark></p><ul><li>不设置有效期，关闭浏览器，自动失效；</li><li>设置有效期为 0；</li></ul><p><mark>编码解码：</mark></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">URLEncoder.encode(<span class="string">&quot;Jezer&quot;</span>,<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">URLDecoder.decode(cookie.getValue(),<span class="string">&quot;UTF-8&quot;</span>)</span><br></pre></td></tr></table></figure><p><mark>源码</mark></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jezer.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.Cookie;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jay_Soul</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CookieDemo01</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">           服务器告诉把你来的时间封装成一个信件，下次带来</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="comment">//解决中文乱码问题</span></span><br><span class="line">        resp.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        req.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        resp.setHeader(<span class="string">&quot;Content-type&quot;</span>,<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> resp.getWriter();</span><br><span class="line">        <span class="comment">//从客户端获取cookie</span></span><br><span class="line">        <span class="comment">//说明cookie存在多个</span></span><br><span class="line">        Cookie[] cookies = req.getCookies();</span><br><span class="line">        <span class="comment">//判断cookie是否存在</span></span><br><span class="line">        <span class="keyword">if</span> (cookies != <span class="literal">null</span>)&#123;</span><br><span class="line">            out.write(<span class="string">&quot;你上次访问时间为：&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="string">&quot;lastLoginTime&quot;</span>.equals(cookie.getName())) &#123;</span><br><span class="line">                    <span class="type">long</span> <span class="variable">lastLoginTime</span> <span class="operator">=</span> Long.parseLong(cookie.getValue());</span><br><span class="line">                    <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>(lastLoginTime);</span><br><span class="line">                    out.write(date.toLocaleString());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            out.write(<span class="string">&quot;这是你第一访问本站&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//服务给客户端响应cookie</span></span><br><span class="line">        <span class="type">Cookie</span> <span class="variable">cookie</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cookie</span>(<span class="string">&quot;lastLoginTime&quot;</span>, System.currentTimeMillis()+<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="comment">//设置有效期一天</span></span><br><span class="line">        cookie.setMaxAge(<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>);</span><br><span class="line">        resp.addCookie(cookie);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="73-session"><a class="markdownIt-Anchor" href="#73-session"></a> 7.3 Session</h3><p>Session的概念</p><ul><li>服务器会给每一个用户（浏览器）创建一个 Session 对象；</li><li>一个 Session 独占一个浏览器，只要浏览器没有关闭，这个 Session 就存在；</li><li>用户登录之后，整个网站它都可以访问！-&gt; 保存用户的信息；保存购物车的信息…</li></ul><p>Session 和 cookie 的区别：</p><ul><li>Cookie是把用户的数据写给用户的浏览器，浏览器保存 （可以保存多个）</li><li>Session把用户的数据写到用户独占Session中，服务器端保存 （保存重要的信息，减少服务器资源的浪费）</li><li>Session 对象由服务创建；</li></ul><p>使用场景：</p><ul><li>保存一个登录用户的信息；</li><li>购物车信息；</li><li>在整个网站中经常会使用的数据，我们将它保存在 Session 中；</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jezer.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jay_Soul</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SessionDemo01</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//解决乱码问题</span></span><br><span class="line">        req.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        resp.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> req.getSession();</span><br><span class="line">        session.setAttribute(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;Jezer&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">sessionId</span> <span class="operator">=</span> session.getId();</span><br><span class="line">        <span class="keyword">if</span> (session.isNew()) &#123;</span><br><span class="line">            resp.getWriter().write(<span class="string">&quot;session创建成功,ID:&quot;</span> + sessionId);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            resp.getWriter().write(<span class="string">&quot;session以及在服务器中存在了,ID:&quot;</span> + sessionId);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*Session创建的时候做了什么事情；</span></span><br><span class="line"><span class="comment">        Cookie cookie = new Cookie(&quot;JSESSIONID&quot;,sessionId);</span></span><br><span class="line"><span class="comment">        resp.addCookie(cookie);</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jezer.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jay_Soul</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SessionDemo02</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> req.getSession();</span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> resp.getWriter();</span><br><span class="line">        out.write((String )session.getAttribute(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//手动清除和注销Session</span></span><br><span class="line"><span class="keyword">package</span> com.jezer.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jay_Soul</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SessionDemo03</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> req.getSession();</span><br><span class="line">        session.removeValue(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        session.invalidate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>会话自动过期：web.xml 配置</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--设置Session默认的失效时间--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">session-config</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--15分钟后Session自动失效，以分钟为单位--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">session-timeout</span>&gt;</span>15<span class="tag">&lt;/<span class="name">session-timeout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">session-config</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="8jsp"><a class="markdownIt-Anchor" href="#8jsp"></a> 8.JSP</h2><h3 id="81-jsp概念"><a class="markdownIt-Anchor" href="#81-jsp概念"></a> 8.1 JSP概念</h3><p>Java Server Pages ： Java服务器端页面，也和Servlet一样，用于动态Web技术！</p><p>最大的特点：写JSP就像在写HTML</p><p>区别：</p><ul><li>HTML只给用户提供静态的数据</li><li>JSP 页面中可以嵌入Java 代码，为用户提供动态数据；</li></ul><h3 id="82-jsp原理"><a class="markdownIt-Anchor" href="#82-jsp原理"></a> 8.2 JSP原理</h3><p>服务器内部工作：<br />Tomcat 中有一个 work 工作目录；<br />IDEA 中使用 Tomcat 的会在 IDEA 中 Tomcat 中生产一个 work 目录</p><p><code>C:\Users\Jay_Soul\AppData\Local\JetBrains\IntelliJIdea2021.2\tomcat</code></p><p>发现页面转变成了 Java 程序</p><p><img src="https://i.loli.net/2021/10/06/rvuS8pRNWKsfBMt.png" alt="image-20211006104823431" /></p><p>浏览器向服务器发送请求，不管访问什么资源，其实都是在访问 Servlet ！</p><p>JSP 最终也会被转换成一个 Java 类！</p><p>JSP 本质上就是一个 Servlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">_jspInit</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">//销毁</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">_jspDestroy</span><span class="params">()</span> &#123;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">//JSPService</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">_jspService</span><span class="params">(.HttpServletRequest request,HttpServletResponse response)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li>判断请求</li><li>内置一些对象</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> javax.servlet.jsp.PageContext pageContext;  <span class="comment">//页面上下文</span></span><br><span class="line">javax.servlet.http.<span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> <span class="literal">null</span>;    <span class="comment">//session</span></span><br><span class="line"><span class="keyword">final</span> javax.servlet.ServletContext application;   <span class="comment">//applicationContext</span></span><br><span class="line"><span class="keyword">final</span> javax.servlet.ServletConfig config;         <span class="comment">//config</span></span><br><span class="line">javax.servlet.jsp.<span class="type">JspWriter</span> <span class="variable">out</span> <span class="operator">=</span> <span class="literal">null</span>;           <span class="comment">//out</span></span><br><span class="line"><span class="keyword">final</span> java.lang.<span class="type">Object</span> <span class="variable">page</span> <span class="operator">=</span> <span class="built_in">this</span>;               <span class="comment">//page：当前</span></span><br><span class="line">HttpServletRequest request                        <span class="comment">//请求</span></span><br><span class="line">HttpServletResponse response                      <span class="comment">//响应</span></span><br></pre></td></tr></table></figure><ol start="3"><li>输出页面前增加的代码</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">response.setContentType(<span class="string">&quot;text/html&quot;</span>);       <span class="comment">//设置响应的页面类型</span></span><br><span class="line">pageContext = _jspxFactory.getPageContext(<span class="built_in">this</span>, request, response, <span class="literal">null</span>, <span class="literal">true</span>, <span class="number">8192</span>, <span class="literal">true</span>);</span><br><span class="line">_jspx_page_context = pageContext;</span><br><span class="line">application = pageContext.getServletContext();</span><br><span class="line">config = pageContext.getServletConfig();</span><br><span class="line">session = pageContext.getSession();</span><br><span class="line">out = pageContext.getOut();</span><br><span class="line">_jspx_out = out;</span><br></pre></td></tr></table></figure><ol start="4"><li>以上这些对象可直接在 JSP 中使用</li></ol><p>在JSP页面中，只要是 JAVA代码就会原封不动的输出；</p><p>如果是HTML代码，就会被转换为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">out.write(<span class="string">&quot;&lt;html&gt;\r\n&quot;</span>);</span><br></pre></td></tr></table></figure><p>这样的格式，输出到前端！</p><h3 id="83-jsp语法"><a class="markdownIt-Anchor" href="#83-jsp语法"></a> 8.3 JSP语法</h3><blockquote><p>JSP 表达式</p></blockquote><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--JSP表达式</span><br><span class="line">作用：用来将程序的输出，输出到客户端</span><br><span class="line">&lt;%= 变量或者表达式%&gt;</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%= <span class="keyword">new</span> <span class="title class_">java</span>.util.Date()%&gt;</span><br></pre></td></tr></table></figure><blockquote><p>JSP脚本片段</p></blockquote><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--jsp脚本片段--%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">  <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;=<span class="number">100</span> ; i++) &#123;</span><br><span class="line">    sum+=i;</span><br><span class="line">  &#125;</span><br><span class="line">  out.println(<span class="string">&quot;&lt;h1&gt;Sum=&quot;</span>+sum+<span class="string">&quot;&lt;/h1&gt;&quot;</span>);</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><blockquote><p>JSP与java拼接</p></blockquote><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">  <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">  out.println(x);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;p&gt;这是一个JSP文档&lt;/p&gt;</span><br><span class="line">&lt;%</span><br><span class="line">  <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">  out.println(y);</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;hr&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;%--在代码嵌入HTML元素--%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">%&gt;</span><br><span class="line">  &lt;h1&gt;Hello,World  &lt;%=i%&gt; &lt;/h1&gt;</span><br><span class="line">&lt;%</span><br><span class="line">  &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><blockquote><p>JSP声明</p></blockquote><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;%!</span><br><span class="line">  <span class="keyword">static</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;Loading Servlet!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="type">int</span> <span class="variable">globalVar</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">Hello</span><span class="params">()</span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;你好！&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p>JSP声明：会被编译到JSP生成Java的类中！其他的，就会被生成<code>_jspService</code>方法中！</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;%%&gt;</span><br><span class="line">&lt;%=%&gt;</span><br><span class="line">&lt;%!%&gt;</span><br><span class="line">&lt;%--注释--%&gt;</span><br></pre></td></tr></table></figure><p>JSP的注释，不会在客户端显示，HTML就会！</p><h3 id="84-jsp指令"><a class="markdownIt-Anchor" href="#84-jsp指令"></a> 8.4 JSP指令</h3><p><strong>定制错误页面</strong></p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="meta">@page</span> errorPage=<span class="string">&quot;error/500.jsp&quot;</span> %&gt;</span><br></pre></td></tr></table></figure><p>也可以在web.xml中修改</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">error-code</span>&gt;</span>500<span class="tag">&lt;/<span class="name">error-code</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">location</span>&gt;</span>/error/500.jsp<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">error-code</span>&gt;</span>404<span class="tag">&lt;/<span class="name">error-code</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">location</span>&gt;</span>/error/404.jsp<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>相同文件套用</strong></p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="meta">@page</span> args.... %&gt;</span><br><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">&quot;&quot;</span>%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%--<span class="meta">@include</span>会将两个页面合二为一--%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">&quot;common/header.jsp&quot;</span>%&gt;</span><br><span class="line">&lt;h1&gt;网页主体&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">&quot;common/footer.jsp&quot;</span>%&gt;</span><br><span class="line"></span><br><span class="line">&lt;hr&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;%--jSP标签</span><br><span class="line">    jsp:include：拼接页面，本质还是三个</span><br><span class="line">    --%&gt;</span><br><span class="line">&lt;jsp:include page=<span class="string">&quot;/common/header.jsp&quot;</span>/&gt;</span><br><span class="line">&lt;h1&gt;网页主体&lt;/h1&gt;</span><br><span class="line">&lt;jsp:include page=<span class="string">&quot;/common/footer.jsp&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><h3 id="85-九大内置对象"><a class="markdownIt-Anchor" href="#85-九大内置对象"></a> 8.5 九大内置对象</h3><ul><li>PageContext 存东西</li><li>Request 存东西</li><li>Response</li><li>Session 存东西</li><li>Application 【ServletContext】 存东西</li><li>config 【ServletConfig】</li><li>out</li><li>page</li><li>exception</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;%-- 作用域：pageContext &lt; request &lt; session &lt; application --%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">pageContext.setAttribute(<span class="string">&quot;name1&quot;</span>,<span class="string">&quot;秦疆1号&quot;</span>); <span class="comment">//保存的数据只在一个页面中有效</span></span><br><span class="line">request.setAttribute(<span class="string">&quot;name2&quot;</span>,<span class="string">&quot;秦疆2号&quot;</span>); <span class="comment">//保存的数据只在一次请求中有效，请求转发会携带这个数据</span></span><br><span class="line">session.setAttribute(<span class="string">&quot;name3&quot;</span>,<span class="string">&quot;秦疆3号&quot;</span>); <span class="comment">//保存的数据只在一次会话中有效，从打开浏览器到关闭浏览器</span></span><br><span class="line">application.setAttribute(<span class="string">&quot;name4&quot;</span>,<span class="string">&quot;秦疆4号&quot;</span>);  <span class="comment">//保存的数据只在服务器中有效，从打开服务器到关闭服务器</span></span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p>request：客户端向服务器发送请求，产生的数据，用户用完就没用了</p><p>session：客户端向服务器发送请求，产生的数据，用户用完一会还有用</p><p>application：客户端向服务器发送请求，产生的数据，一个用户用完了，其他用户还可能使用</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;%-- 转发代码实现 --%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    pageContext.forward(<span class="string">&quot;/index.jsp&quot;</span>);<span class="comment">//前端实现方法,pageContext帮我封装好了</span></span><br><span class="line">    request.getRequestDispatcher(<span class="string">&quot;/index.jsp&quot;</span>).forward(request,response);<span class="comment">//后端实现方法</span></span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><h3 id="86-jsp标签-jstl标签-el表达式"><a class="markdownIt-Anchor" href="#86-jsp标签-jstl标签-el表达式"></a> 8.6 JSP标签、JSTL标签、EL表达式</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- JSTL表达式的依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp.jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- standard标签库 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>taglibs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>standard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>EL 表达式： ${}</p></blockquote><ul><li>获取数据</li><li>执行运算</li><li>获取 Web 开发的常用对象</li></ul><blockquote><p>JSP 标签</p></blockquote><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--jsp:include--%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%--</span><br><span class="line">http:<span class="comment">//localhost:8080/jsptag.jsp?name=kuangshen&amp;age=12</span></span><br><span class="line">--%&gt;</span><br><span class="line"></span><br><span class="line">&lt;jsp:forward page=<span class="string">&quot;/jsptag2.jsp&quot;</span>&gt;</span><br><span class="line">    &lt;jsp:param name=<span class="string">&quot;name&quot;</span> value=<span class="string">&quot;kuangshen&quot;</span>&gt;&lt;/jsp:param&gt;</span><br><span class="line">    &lt;jsp:param name=<span class="string">&quot;age&quot;</span> value=<span class="string">&quot;12&quot;</span>&gt;&lt;/jsp:param&gt;</span><br><span class="line">&lt;/jsp:forward&gt;</span><br></pre></td></tr></table></figure><blockquote><p>JSTL表达式</p></blockquote><p>JSTL 标签库的使用就是为了弥补 HTML 标签的不足；它自定义许多标签，可以供我们使用，标签的功能和 Java 代码一样！</p><p><a href="https://www.runoob.com/jsp/jsp-jstl.html">菜鸟教程</a></p><p><strong>JSTL标签库使用步骤</strong></p><ul><li>引入对应的 taglib</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;c&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br></pre></td></tr></table></figure><ul><li>使用其中的方法</li></ul><p><img src="https://i.loli.net/2021/10/06/U1xmzfTWJvw8Gka.png" alt="image-20211006163018200" /></p><ul><li><strong>在 Tomcat 也需要引入 JSTL 的包，否则会报错：JSTL 解析错误</strong></li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;c&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">  &lt;h4&gt;<span class="keyword">if</span>测试&lt;/h4&gt;</span><br><span class="line">  &lt;hr&gt;</span><br><span class="line">  &lt;form action=<span class="string">&quot;#&quot;</span> method=<span class="string">&quot;get&quot;</span>&gt;</span><br><span class="line">    &lt;%--</span><br><span class="line">    EL表达式获取表单中的数据</span><br><span class="line">    $&#123;param.参数名&#125;</span><br><span class="line">    --%&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span> value=<span class="string">&quot;$&#123;param.username&#125;&quot;</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;登录&quot;</span>&gt;</span><br><span class="line">  &lt;/form&gt;</span><br><span class="line">  &lt;%--判断如果提交的用户名是管理员，则登录成功--%&gt;</span><br><span class="line">  &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;param.username==&#x27;admin&#x27;&#125;&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;isAdmin&quot;</span>&gt;</span><br><span class="line">    &lt;c:out value=<span class="string">&quot;管理员欢迎您！&quot;</span>/&gt;</span><br><span class="line">  &lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line">  &lt;%--自闭合标签--%&gt;</span><br><span class="line">  &lt;c:out value=<span class="string">&quot;$&#123;isAdmin&#125;&quot;</span>/&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;%--定义一个变量score，值为<span class="number">85</span>--%&gt;</span><br><span class="line">&lt;c:set <span class="keyword">var</span>=<span class="string">&quot;score&quot;</span> value=<span class="string">&quot;55&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">&lt;c:choose&gt;</span><br><span class="line">    &lt;c:when test=<span class="string">&quot;$&#123;score&gt;=90&#125;&quot;</span>&gt;</span><br><span class="line">        你的成绩为优秀</span><br><span class="line">    &lt;/c:when&gt;</span><br><span class="line">    &lt;c:when test=<span class="string">&quot;$&#123;score&gt;=80&#125;&quot;</span>&gt;</span><br><span class="line">        你的成绩为一般</span><br><span class="line">    &lt;/c:when&gt;</span><br><span class="line">    &lt;c:when test=<span class="string">&quot;$&#123;score&gt;=70&#125;&quot;</span>&gt;</span><br><span class="line">        你的成绩为良好</span><br><span class="line">    &lt;/c:when&gt;</span><br><span class="line">    &lt;c:when test=<span class="string">&quot;$&#123;score&lt;=60&#125;&quot;</span>&gt;</span><br><span class="line">        你的成绩为不及格</span><br><span class="line">    &lt;/c:when&gt;</span><br><span class="line">&lt;/c:choose&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line"></span><br><span class="line">    ArrayList&lt;String&gt; people = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    people.add(<span class="number">0</span>,<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    people.add(<span class="number">1</span>,<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">    people.add(<span class="number">2</span>,<span class="string">&quot;王五&quot;</span>);</span><br><span class="line">    people.add(<span class="number">3</span>,<span class="string">&quot;赵六&quot;</span>);</span><br><span class="line">    people.add(<span class="number">4</span>,<span class="string">&quot;田六&quot;</span>);</span><br><span class="line">    request.setAttribute(<span class="string">&quot;list&quot;</span>,people);</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;%--</span><br><span class="line"><span class="keyword">var</span> , 每一次遍历出来的变量</span><br><span class="line">items, 要遍历的对象</span><br><span class="line">begin,   哪里开始</span><br><span class="line">end,     到哪里</span><br><span class="line">step,   步长</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;c:forEach <span class="keyword">var</span>=<span class="string">&quot;people&quot;</span> items=<span class="string">&quot;$&#123;list&#125;&quot;</span>&gt;</span><br><span class="line">    &lt;c:out value=<span class="string">&quot;$&#123;people&#125;&quot;</span>/&gt; &lt;br&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br><span class="line"></span><br><span class="line">&lt;hr&gt;</span><br><span class="line"></span><br><span class="line">&lt;c:forEach <span class="keyword">var</span>=<span class="string">&quot;people&quot;</span> items=<span class="string">&quot;$&#123;list&#125;&quot;</span> begin=<span class="string">&quot;1&quot;</span> end=<span class="string">&quot;3&quot;</span> step=<span class="string">&quot;1&quot;</span> &gt;</span><br><span class="line">    &lt;c:out value=<span class="string">&quot;$&#123;people&#125;&quot;</span>/&gt; &lt;br&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="9-javabean"><a class="markdownIt-Anchor" href="#9-javabean"></a> 9. JavaBean</h2><p>org.example.pojo实体类<br />JavaBean有特定的写法：</p><ul><li>必须要有一个无参构造</li><li>属性必须私有化</li><li>必须有对应的get/set方法；</li></ul><p>一般用来和数据库的字段做映射 ORM；</p><p>ORM ：对象关系映射</p><ul><li>表—&gt;类</li><li>字段–&gt;属性</li><li>行记录----&gt;对象</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">&quot;com.jezer.pojo.People&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">  &lt;jsp:useBean id=<span class="string">&quot;people&quot;</span> class=<span class="string">&quot;com.jezer.pojo.People&quot;</span> scope=<span class="string">&quot;page&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">  &lt;jsp:setProperty name=<span class="string">&quot;people&quot;</span> property=<span class="string">&quot;address&quot;</span> value=<span class="string">&quot;浙江&quot;</span>/&gt;</span><br><span class="line">  &lt;jsp:setProperty name=<span class="string">&quot;people&quot;</span> property=<span class="string">&quot;id&quot;</span> value=<span class="string">&quot;1&quot;</span>/&gt;</span><br><span class="line">  &lt;jsp:setProperty name=<span class="string">&quot;people&quot;</span> property=<span class="string">&quot;age&quot;</span> value=<span class="string">&quot;12&quot;</span>/&gt;</span><br><span class="line">  &lt;jsp:setProperty name=<span class="string">&quot;people&quot;</span> property=<span class="string">&quot;name&quot;</span> value=<span class="string">&quot;Jezer&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">  &lt;jsp:getProperty name=<span class="string">&quot;people&quot;</span> property=<span class="string">&quot;address&quot;</span>/&gt;</span><br><span class="line">  &lt;jsp:getProperty name=<span class="string">&quot;people&quot;</span> property=<span class="string">&quot;id&quot;</span>/&gt;</span><br><span class="line">  &lt;jsp:getProperty name=<span class="string">&quot;people&quot;</span> property=<span class="string">&quot;age&quot;</span>/&gt;</span><br><span class="line">  &lt;jsp:getProperty name=<span class="string">&quot;people&quot;</span> property=<span class="string">&quot;name&quot;</span>/&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="10-mvc三层架构"><a class="markdownIt-Anchor" href="#10-mvc三层架构"></a> 10. MVC三层架构</h2><p>MVC ： Model View Controller 模型、视图、控制器</p><blockquote><p>早年的二层架构</p></blockquote><p><img src="https://i.loli.net/2021/10/08/ERUzhioPQ14d2Ts.png" alt="image-20211008103949296" /></p><p>用户直接访问控制层，控制层就可以直接操作数据库；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">servlet--CRUD--&gt;数据库</span><br><span class="line">弊端：程序十分臃肿，不利于维护</span><br><span class="line">servlet的代码中：处理请求、响应、视图跳转、处理JDBC、处理业务代码、处理逻辑代码</span><br><span class="line"></span><br><span class="line">架构：没有什么是加一层解决不了的！</span><br><span class="line">程序猿调用</span><br><span class="line">|</span><br><span class="line">JDBC</span><br><span class="line">|</span><br><span class="line">Mysql Oracle SqlServer ....</span><br></pre></td></tr></table></figure><blockquote><p>三层架构</p></blockquote><p><img src="https://i.loli.net/2021/10/08/pem91FdTlSjg4Ct.png" alt="image-20211008110754290" /></p><p>Model</p><ul><li>业务处理：业务逻辑（Service）</li><li>数据持久层：CRUD</li></ul><p>View</p><ul><li>展示数据</li><li>提供链接发起 Servlet 请求（a,form,img…）</li></ul><p>Controller （Servlet）</p><ul><li>接收用户的请求：（req：请求参数、Session 信息…）</li><li>交给业务层处理对应的代码</li><li>控制试图的跳转</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">登录---&gt;接收用户的登录请求---&gt;处理用户的请求（获取用户登录的参数，username，password）----&gt;交给业务层处理登录业务（判断用户名密码是否正确：事务）---&gt;Dao层查询用户名和密码是否正确--&gt;数据库</span><br></pre></td></tr></table></figure><h2 id="11-filter"><a class="markdownIt-Anchor" href="#11-filter"></a> 11. Filter</h2><p>Filter：过滤器，用来过滤网站的数据；</p><ul><li>处理中文乱码</li><li>登录验证</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CharacterEncodingFilter</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化：web服务器启动，就以及初始化了，随时等待过滤对象出现！</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;CharacterEncodingFilter初始化&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Chain : 链</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    1. 过滤中的所有代码，在过滤特定请求的时候都会执行</span></span><br><span class="line"><span class="comment">    2. 必须要让过滤器继续同行</span></span><br><span class="line"><span class="comment">        chain.doFilter(request,response);</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        request.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        response.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        response.setContentType(<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;CharacterEncodingFilter执行前....&quot;</span>);</span><br><span class="line">        chain.doFilter(request,response); <span class="comment">//让我们的请求继续走，如果不写，程序到这里就被拦截停止！</span></span><br><span class="line">        System.out.println(<span class="string">&quot;CharacterEncodingFilter执行后....&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//销毁：web服务器关闭的时候，过滤会销毁</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;CharacterEncodingFilter销毁&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>在web.xml中注册Filter</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.kuang.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--只要是 /servlet的任何请求，会经过这个过滤器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/servlet/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;url-pattern&gt;/*&lt;/url-pattern&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​</p><h2 id="12监听器"><a class="markdownIt-Anchor" href="#12监听器"></a> 12.监听器</h2><p><code>看情况使用监听器</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//统计网站在线人数 ： 统计session</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OnlineCountListener</span> <span class="keyword">implements</span> <span class="title class_">HttpSessionListener</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建session监听： 看你的一举一动</span></span><br><span class="line">    <span class="comment">//一旦创建Session就会触发一次这个事件！</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sessionCreated</span><span class="params">(HttpSessionEvent se)</span> &#123;</span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">ctx</span> <span class="operator">=</span> se.getSession().getServletContext();</span><br><span class="line"></span><br><span class="line">        System.out.println(se.getSession().getId());</span><br><span class="line"></span><br><span class="line">        <span class="type">Integer</span> <span class="variable">onlineCount</span> <span class="operator">=</span> (Integer) ctx.getAttribute(<span class="string">&quot;OnlineCount&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (onlineCount==<span class="literal">null</span>)&#123;</span><br><span class="line">            onlineCount = <span class="keyword">new</span> <span class="title class_">Integer</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> onlineCount.intValue();</span><br><span class="line">            onlineCount = <span class="keyword">new</span> <span class="title class_">Integer</span>(count+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ctx.setAttribute(<span class="string">&quot;OnlineCount&quot;</span>,onlineCount);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//销毁session监听</span></span><br><span class="line">    <span class="comment">//一旦销毁Session就会触发一次这个事件！</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sessionDestroyed</span><span class="params">(HttpSessionEvent se)</span> &#123;</span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">ctx</span> <span class="operator">=</span> se.getSession().getServletContext();</span><br><span class="line"></span><br><span class="line">        <span class="type">Integer</span> <span class="variable">onlineCount</span> <span class="operator">=</span> (Integer) ctx.getAttribute(<span class="string">&quot;OnlineCount&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (onlineCount==<span class="literal">null</span>)&#123;</span><br><span class="line">            onlineCount = <span class="keyword">new</span> <span class="title class_">Integer</span>(<span class="number">0</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> onlineCount.intValue();</span><br><span class="line">            onlineCount = <span class="keyword">new</span> <span class="title class_">Integer</span>(count-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ctx.setAttribute(<span class="string">&quot;OnlineCount&quot;</span>,onlineCount);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    Session销毁：</span></span><br><span class="line"><span class="comment">    1. 手动销毁  getSession().invalidate();</span></span><br><span class="line"><span class="comment">    2. 自动销毁</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--注册监听器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>com.kuang.listener.OnlineCountListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebApp </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java文件上传</title>
      <link href="/posts/592e5fba/"/>
      <url>/posts/592e5fba/</url>
      
        <content type="html"><![CDATA[<h2 id="文件上传"><a class="markdownIt-Anchor" href="#文件上传"></a> 文件上传</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;https://jakarta.ee/xml/ns/jakartaee&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;https://jakarta.ee/xml/ns/jakartaee</span></span></span><br><span class="line"><span class="string"><span class="tag">                      https://jakarta.ee/xml/ns/jakartaee/web-app_5_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">version</span>=<span class="string">&quot;5.0&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/commons-io/commons-io --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet.jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>注意事项</code></p><ol><li>上传文件需要放在外界无法直接访问的目录,例如<code>WEB-INF</code>目录;</li><li>上传文件的文件名一定要保持唯一性; -时间戳 -<code>uuid</code>-</li><li>限制文件上传的最大值</li><li>可以限制上传文件的类型，在收到上传文件时，判断后缀名是否合法；</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jezer.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.FileItem;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.FileUploadException;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.ProgressListener;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.disk.DiskFileItemFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.servlet.ServletFileUpload;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jay_Soul</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断上传的文件是普通表单还是带文件的表单</span></span><br><span class="line">        <span class="keyword">if</span> (!ServletFileUpload.isMultipartContent(req))&#123;</span><br><span class="line">            <span class="keyword">return</span>; <span class="comment">//终止方法运行，说明这是一个普通的表单，直接返回</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//上传文件需要放在外界无法直接访问的目录,例如WEB-INF目录;</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">uploadPath</span> <span class="operator">=</span> <span class="built_in">this</span>.getServletContext().getRealPath(<span class="string">&quot;/WEB-INF/upload&quot;</span>);</span><br><span class="line">        <span class="type">File</span> <span class="variable">uploadFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(uploadPath);</span><br><span class="line">        <span class="keyword">if</span> (!uploadFile.exists())&#123;</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">mkdir</span> <span class="operator">=</span> uploadFile.mkdir();<span class="comment">//创建目录</span></span><br><span class="line">            System.out.println(mkdir);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//缓存，临时文件</span></span><br><span class="line">        <span class="comment">//临时路径，假如文件超过了预期的大小，我们就把它放到一个临时文件，过几天自动删除，或者提醒用户转存为永久</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">tempPath</span> <span class="operator">=</span> <span class="built_in">this</span>.getServletContext().getRealPath(<span class="string">&quot;/WEB-INF/temp&quot;</span>);</span><br><span class="line">        <span class="type">File</span> <span class="variable">tempFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(tempPath);</span><br><span class="line">        <span class="keyword">if</span> (!tempFile.exists())&#123;</span><br><span class="line">            tempFile.mkdir();<span class="comment">//创建目录</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 处理上传的文件,一般都需要通过流来获取,我们可以使用 request.getInputstream(),原生态的文件上传流获取,十分麻烦</span></span><br><span class="line">        <span class="comment">// 但是我们都建议使用 Apache的文件上传组件来实现, common-fileupload,它需要依赖于commons-io组件;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//1. 创建DiskFileItemFactory对象，处理文件路径或者大小限制</span></span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">             * 通过这个工厂设置一个缓冲区,当上传的文件大于这个缓冲区的时候,将他放到临时文件 factory.setSizeThreshold(1024 * 1024);</span></span><br><span class="line"><span class="comment">             * 缓存区大小为1M factory.setRepository (file);</span></span><br><span class="line"><span class="comment">             * 临时目录的保存目录,需要一个File</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="type">DiskFileItemFactory</span> <span class="variable">factory</span> <span class="operator">=</span> getDiskFileItemFactory(tempFile);</span><br><span class="line">            <span class="comment">// 2、获取ServletFileUpload</span></span><br><span class="line">            <span class="type">ServletFileUpload</span> <span class="variable">upload</span> <span class="operator">=</span> getServletFileUpload(factory);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 3、处理上传文件</span></span><br><span class="line">            <span class="comment">// 把前端请求解析，封装成FileItem对象，需要从ServletFileUpload对象中获取</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> uploadParseRequest(upload, req, uploadPath);</span><br><span class="line">            <span class="comment">// Servlet请求转发消息</span></span><br><span class="line">            System.out.println(msg);</span><br><span class="line">            <span class="keyword">if</span>(<span class="string">&quot;文件上传成功!&quot;</span>.equals(msg)) &#123;</span><br><span class="line">                <span class="comment">// Servlet请求转发消息</span></span><br><span class="line">                req.setAttribute(<span class="string">&quot;msg&quot;</span>,msg);</span><br><span class="line">                req.getRequestDispatcher(<span class="string">&quot;info.jsp&quot;</span>).forward(req, resp);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                msg =<span class="string">&quot;请上传文件&quot;</span>;</span><br><span class="line">                req.setAttribute(<span class="string">&quot;msg&quot;</span>,msg);</span><br><span class="line">                req.getRequestDispatcher(<span class="string">&quot;info.jsp&quot;</span>).forward(req, resp);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileUploadException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> DiskFileItemFactory <span class="title function_">getDiskFileItemFactory</span><span class="params">(File tempFile)</span> &#123;</span><br><span class="line">        <span class="type">DiskFileItemFactory</span> <span class="variable">factory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DiskFileItemFactory</span>();</span><br><span class="line">        <span class="comment">/* 通过这个工厂设置一个缓冲区,当上传的文件大于这个缓冲区的时候,将他放到临时文件中; */</span></span><br><span class="line">        factory.setSizeThreshold(<span class="number">1024</span> * <span class="number">1024</span>);<span class="comment">// 缓冲区大小为1M</span></span><br><span class="line">        factory.setRepository(tempFile);<span class="comment">// 临时目录的保存目录,需要一个file</span></span><br><span class="line">        <span class="keyword">return</span> factory;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ServletFileUpload <span class="title function_">getServletFileUpload</span><span class="params">(DiskFileItemFactory factory)</span> &#123;</span><br><span class="line">        <span class="type">ServletFileUpload</span> <span class="variable">upload</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServletFileUpload</span>(factory);</span><br><span class="line">        <span class="comment">// 监听长传进度</span></span><br><span class="line">        upload.setProgressListener(<span class="keyword">new</span> <span class="title class_">ProgressListener</span>() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// pBYtesRead:已读取到的文件大小</span></span><br><span class="line">            <span class="comment">// pContextLength:文件大小</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">(<span class="type">long</span> pBytesRead, <span class="type">long</span> pContentLength, <span class="type">int</span> pItems)</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;总大小：&quot;</span> + pContentLength + <span class="string">&quot;已上传：&quot;</span> + pBytesRead);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 处理乱码问题</span></span><br><span class="line">        upload.setHeaderEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        <span class="comment">// 设置单个文件的最大值</span></span><br><span class="line">        upload.setFileSizeMax(<span class="number">1024</span> * <span class="number">1024</span> * <span class="number">10</span>);</span><br><span class="line">        <span class="comment">// 设置总共能够上传文件的大小</span></span><br><span class="line">        <span class="comment">// 1024 = 1kb * 1024 = 1M * 10 = 10м</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> upload;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">uploadParseRequest</span><span class="params">(ServletFileUpload upload, HttpServletRequest request, String uploadPath)</span> <span class="keyword">throws</span> FileUploadException, IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="comment">// 把前端请求解析，封装成FileItem对象</span></span><br><span class="line">        List&lt;FileItem&gt; fileItems = upload.parseRequest(request);</span><br><span class="line">        <span class="keyword">for</span> (FileItem fileItem : fileItems) &#123;</span><br><span class="line">            <span class="keyword">if</span> (fileItem.isFormField()) &#123;<span class="comment">// 判断上传的文件是普通的表单还是带文件的表单</span></span><br><span class="line">                <span class="comment">// getFieldName指的是前端表单控件的name;</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> fileItem.getFieldName();</span><br><span class="line">                <span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> fileItem.getString(<span class="string">&quot;UTF-8&quot;</span>); <span class="comment">// 处理乱码</span></span><br><span class="line">                System.out.println(name + <span class="string">&quot;: &quot;</span> + value);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;<span class="comment">// 判断它是上传的文件</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">// ============处理文件==============</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">// 拿到文件名</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">uploadFileName</span> <span class="operator">=</span> fileItem.getName();</span><br><span class="line">                System.out.println(<span class="string">&quot;上传的文件名: &quot;</span> + uploadFileName);</span><br><span class="line">                <span class="keyword">if</span> (uploadFileName.trim().equals(<span class="string">&quot;&quot;</span>) || uploadFileName == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 获得上传的文件名/images/girl/paojie.png</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> uploadFileName.substring(uploadFileName.lastIndexOf(<span class="string">&quot;/&quot;</span>) + <span class="number">1</span>);</span><br><span class="line">                <span class="comment">// 获得文件的后缀名</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">fileExtName</span> <span class="operator">=</span> uploadFileName.substring(uploadFileName.lastIndexOf(<span class="string">&quot;.&quot;</span>) + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                 * 如果文件后缀名fileExtName不是我们所需要的 就直按return.不处理,告诉用户文件类型不对。</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="string">&quot;文件信息[件名: &quot;</span> + fileName + <span class="string">&quot; ---文件类型&quot;</span> + fileExtName + <span class="string">&quot;]&quot;</span>);</span><br><span class="line">                <span class="comment">// 可以使用UID（唯一识别的通用码),保证文件名唯</span></span><br><span class="line">                <span class="comment">// 0UID. randomUUID(),随机生一个唯一识别的通用码;</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">uuidPath</span> <span class="operator">=</span> UUID.randomUUID().toString();</span><br><span class="line"></span><br><span class="line">                <span class="comment">// ================处理文件完毕==============</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">// 存到哪? uploadPath</span></span><br><span class="line">                <span class="comment">// 文件真实存在的路径realPath</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">realPath</span> <span class="operator">=</span> uploadPath + <span class="string">&quot;/&quot;</span> + uuidPath;</span><br><span class="line">                <span class="comment">// 给每个文件创建一个对应的文件夹</span></span><br><span class="line">                <span class="type">File</span> <span class="variable">realPathFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(realPath);</span><br><span class="line">                <span class="keyword">if</span> (!realPathFile.exists()) &#123;</span><br><span class="line">                    realPathFile.mkdir();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// ==============存放地址完毕==============</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                <span class="comment">// 获得文件上传的流</span></span><br><span class="line">                <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> fileItem.getInputStream();</span><br><span class="line">                <span class="comment">// 创建一个文件输出流</span></span><br><span class="line">                <span class="comment">// realPath =真实的文件夹;</span></span><br><span class="line">                <span class="comment">// 差了一个文件;加上翰出文件的名产&quot;/&quot;+uuidFileName</span></span><br><span class="line">                <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(realPath + <span class="string">&quot;/&quot;</span> + fileName);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 创建一个缓冲区</span></span><br><span class="line">                <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span> * <span class="number">1024</span>];</span><br><span class="line">                <span class="comment">// 判断是否读取完毕</span></span><br><span class="line">                <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">                <span class="comment">// 如果大于0说明还存在数据;</span></span><br><span class="line">                <span class="keyword">while</span> ((len = inputStream.read(buffer)) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    fos.write(buffer, <span class="number">0</span>, len);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 关闭流</span></span><br><span class="line">                fos.close();</span><br><span class="line">                inputStream.close();</span><br><span class="line"></span><br><span class="line">                msg = <span class="string">&quot;文件上传成功!&quot;</span>;</span><br><span class="line">                fileItem.delete(); <span class="comment">// 上传成功,清除临时文件</span></span><br><span class="line">                <span class="comment">//=============文件传输完成=============</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    servlet注册--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>FileServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.jezer.servlet.FileServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>FileServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/upload.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--index.jsp--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;title&gt;$Title$&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">&lt;%--通过表单上传文件：</span><br><span class="line">  get： 上传文件大小有限制；</span><br><span class="line">  post： 上传文件大小没有限制；</span><br><span class="line">--%&gt;</span><br><span class="line">  &lt;form action=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/ upload.do&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span> method = <span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">  上传用户：&lt;input type=<span class="string">&quot;text&quot;</span> name = <span class="string">&quot;username&quot;</span>&gt;&lt;br/&gt;</span><br><span class="line">  &lt;p&gt;&lt;input  type=<span class="string">&quot;file&quot;</span> name = <span class="string">&quot;upload&quot;</span>&gt;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;input type=<span class="string">&quot;submit&quot;</span>&gt; | &lt;input type=<span class="string">&quot;reset&quot;</span>&gt;&lt;/p&gt;</span><br><span class="line">  &lt;/form&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--info.jsp--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">$&#123;msg&#125;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/13/S6Gfhetp3s4axgR.png" alt="image-20211013235558064" /></p><p>课后巩固：</p><p><code>UUID</code></p><p><code>native</code></p><p><code>序列化接口</code></p>]]></content>
      
      
      <categories>
          
          <category> 拓展知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java多线程</title>
      <link href="/posts/a2c3ad19/"/>
      <url>/posts/a2c3ad19/</url>
      
        <content type="html"><![CDATA[<p><code>线程开启后不一定立即执行，由CPU调度</code></p><h2 id="1-多线程创建方式"><a class="markdownIt-Anchor" href="#1-多线程创建方式"></a> 1. 多线程创建方式</h2><h3 id="11-创建线程方式1"><a class="markdownIt-Anchor" href="#11-创建线程方式1"></a> 1.1 创建线程方式1</h3><p>继承Thread类，重写run方法线程体，调用start();</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">   线程开启后不一定立即执行，由cpu安排调度</span><br><span class="line"> */</span><br><span class="line">//创建线程方式1：继承Thread类，重写run方法线程体，调用start();</span><br><span class="line">//继承Thread类</span><br><span class="line">public class TestThread1 extends  Thread&#123;</span><br><span class="line">    //重写run方法线程体</span><br><span class="line">    public void run() &#123;</span><br><span class="line">        for (int i = 0; i &lt; 20; i++) &#123;</span><br><span class="line">            System.out.println(&quot;Jay &quot; + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        //创建一个线程对象</span><br><span class="line">        TestThread1 testThread1 = new TestThread1();</span><br><span class="line">        //调用start()方法开启线程</span><br><span class="line">        testThread1.start();</span><br><span class="line">        for (int i = 0; i &lt; 20; i++) &#123;</span><br><span class="line">            System.out.println(&quot;Soul &quot; + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1V4411p7EF?p=3&amp;share_source=copy_web">视频链接</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Jay;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.io.FileUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">练习Thread，实现多线程同步下载图片</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestThread2</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">TestThread2</span><span class="params">(String url, String name)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.url = url;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//下载图片的线程执行体</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">WebDownloader</span> <span class="variable">webDownloader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WebDownloader</span>();</span><br><span class="line">        webDownloader.downloader(url, name);</span><br><span class="line">        System.out.println(name + <span class="string">&quot; 文件下载成功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">TestThread2</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestThread2</span>(<span class="string">&quot;https://cdn.jsdelivr.net/gh/filess/img17@main/2021/05/07/1620371242789-b286c6f7-a06c-48c7-a53b-3a86d18cea97.png&quot;</span>, <span class="string">&quot;p1.png&quot;</span>);</span><br><span class="line">        <span class="type">TestThread2</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestThread2</span>(<span class="string">&quot;https://cdn.jsdelivr.net/gh/filess/img16@main/2021/05/07/1620377761880-1d4715d4-482c-4d52-a5aa-210a1a354c77.png&quot;</span>, <span class="string">&quot;p2.png&quot;</span>);</span><br><span class="line">        <span class="type">TestThread2</span> <span class="variable">t3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestThread2</span>(<span class="string">&quot;https://cdn.jsdelivr.net/gh/filess/img8@main/2021/05/07/1620377156603-8b53ee53-8de0-4f81-b667-3df6ce555064.png&quot;</span>, <span class="string">&quot;p3.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line">        t3.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//下载器</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">WebDownloader</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">downloader</span><span class="params">(String url, String name)</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            FileUtils.copyURLToFile(<span class="keyword">new</span> <span class="title class_">URL</span>(url), <span class="keyword">new</span> <span class="title class_">File</span>(name));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.out.println(<span class="string">&quot;IO异常，downloader下载出现问题&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1V4411p7EF?p=4&amp;share_source=copy_web">视频链接</a></p><h3 id="12-创建线程方法2"><a class="markdownIt-Anchor" href="#12-创建线程方法2"></a> 1.2 创建线程方法2</h3><p>实现runnable接口，重写run方法执行线程需要丢入runnable接口实现类，调用start方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//创建线程方法2：实现runnable接口，重写run方法执行线程需要丢入runnable接口实现类，调用start方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestThread3</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="comment">//重写run方法线程体</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Jay &quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建runnable接口的实现类对象</span></span><br><span class="line">        <span class="type">TestThread3</span> <span class="variable">testThread3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestThread3</span>();</span><br><span class="line">        <span class="comment">//创建线程对象，通过线程对象来开启我的线程（代理）</span></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(testThread3).start();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Soul &quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1V4411p7EF?p=5&amp;share_source=copy_web">视频链接</a></p><p><code>多个线程同时操作同一对象，线程不安全，数据紊乱</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//多个线程同时操作同一对象，线程不安全，数据紊乱</span></span><br><span class="line"><span class="comment">//买火车票的例子</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestThread4</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">ticketNums</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (ticketNums &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">/*try &#123;</span></span><br><span class="line"><span class="comment">                Thread.sleep(200);</span></span><br><span class="line"><span class="comment">            &#125; catch (InterruptedException e) &#123;</span></span><br><span class="line"><span class="comment">                e.printStackTrace();</span></span><br><span class="line"><span class="comment">            &#125;*/</span></span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot;--&gt;拿到了第&quot;</span> + ticketNums-- + <span class="string">&quot;票&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">TestThread4</span> <span class="variable">ticket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestThread4</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(ticket, <span class="string">&quot;小明&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(ticket, <span class="string">&quot;小红&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(ticket, <span class="string">&quot;小黄&quot;</span>).start();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1V4411p7EF?p=6&amp;share_source=copy_web">视频链接</a></p><p><code>龟兔赛跑</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> kotlin.reflect.jvm.internal.impl.descriptors.Visibilities;</span><br><span class="line"></span><br><span class="line"><span class="comment">//模拟龟兔赛跑</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Race</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String winner;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (Thread.currentThread().getName().equals(<span class="string">&quot;兔子&quot;</span>) &amp;&amp; i % <span class="number">60</span> == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Thread.sleep(<span class="number">1</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (gameOver(i)) <span class="keyword">break</span>;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot;--&gt;跑了&quot;</span> + i + <span class="string">&quot;步&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断是否完成比赛</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">gameOver</span> <span class="params">(<span class="type">int</span> step)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (winner != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (step &gt;= <span class="number">100</span>) &#123;</span><br><span class="line">            winner = Thread.currentThread().getName();</span><br><span class="line">            System.out.println(<span class="string">&quot;Winner is &quot;</span> + winner);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>  <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Race</span> <span class="variable">race</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Race</span>();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(race, <span class="string">&quot;兔子&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(race, <span class="string">&quot;乌龟&quot;</span>).start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1V4411p7EF?p=7&amp;share_source=copy_web">视频链接</a></p><h3 id="13-线程创建方式3"><a class="markdownIt-Anchor" href="#13-线程创建方式3"></a> 1.3 线程创建方式3</h3><p>实现callable接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.io.FileUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Callable;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutorService;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executors;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Future;</span><br><span class="line"><span class="comment">//线程创建方式三：实现callable接口</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">callable的好处</span></span><br><span class="line"><span class="comment">1、可以定义返回值</span></span><br><span class="line"><span class="comment">2、可以抛出异常</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestCallable</span> <span class="keyword">implements</span> <span class="title class_">Callable</span>&lt;Boolean&gt; &#123;</span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">TestCallable</span><span class="params">(String url, String name)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.url = url;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//下载图片的线程执行体</span></span><br><span class="line">    <span class="keyword">public</span> Boolean <span class="title function_">call</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">WebDownloader</span> <span class="variable">webDownloader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WebDownloader</span>();</span><br><span class="line">        webDownloader.downloader(url, name);</span><br><span class="line">        System.out.println(name + <span class="string">&quot; 文件下载成功&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">TestCallable</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestCallable</span>(<span class="string">&quot;https://cdn.jsdelivr.net/gh/filess/img17@main/2021/05/07/1620371242789-b286c6f7-a06c-48c7-a53b-3a86d18cea97.png&quot;</span>, <span class="string">&quot;p1.png&quot;</span>);</span><br><span class="line">        <span class="type">TestCallable</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestCallable</span>(<span class="string">&quot;https://cdn.jsdelivr.net/gh/filess/img16@main/2021/05/07/1620377761880-1d4715d4-482c-4d52-a5aa-210a1a354c77.png&quot;</span>, <span class="string">&quot;p2.png&quot;</span>);</span><br><span class="line">        <span class="type">TestCallable</span> <span class="variable">t3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestCallable</span>(<span class="string">&quot;https://cdn.jsdelivr.net/gh/filess/img8@main/2021/05/07/1620377156603-8b53ee53-8de0-4f81-b667-3df6ce555064.png&quot;</span>, <span class="string">&quot;p3.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建执行服务：</span></span><br><span class="line">        <span class="type">ExecutorService</span> <span class="variable">ser</span> <span class="operator">=</span> Executors.newFixedThreadPool(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//提交执行</span></span><br><span class="line">        Future&lt;Boolean&gt; r1 = ser.submit(t1);</span><br><span class="line">        Future&lt;Boolean&gt; r2 = ser.submit(t2);</span><br><span class="line">        Future&lt;Boolean&gt; r3 = ser.submit(t3);</span><br><span class="line">        <span class="comment">//关闭服务</span></span><br><span class="line">        ser.shutdownNow();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//下载器</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">WebDownloader</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">downloader</span><span class="params">(String url, String name)</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            FileUtils.copyURLToFile(<span class="keyword">new</span> <span class="title class_">URL</span>(url), <span class="keyword">new</span> <span class="title class_">File</span>(name));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.out.println(<span class="string">&quot;IO异常，downloader下载出现问题&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1V4411p7EF?p=8&amp;share_source=copy_web">视频链接</a></p><h2 id="2-静态代理模式"><a class="markdownIt-Anchor" href="#2-静态代理模式"></a> 2. 静态代理模式</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Jay;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">静态代理：</span></span><br><span class="line"><span class="comment">1、真实对象和代理对象都要实现一个接口</span></span><br><span class="line"><span class="comment">2、代理对象需要代理真是角色</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StaticProxy</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">MarryCompany</span>(<span class="keyword">new</span> <span class="title class_">you</span>()).happyMarry();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Marry</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">happyMarry</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//真实角色结婚</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">you</span> <span class="keyword">implements</span> <span class="title class_">Marry</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">happyMarry</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;源宝结婚了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//婚庆公司代理</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MarryCompany</span> <span class="keyword">implements</span>  <span class="title class_">Marry</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Marry target;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MarryCompany</span><span class="params">(Marry target)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.target = target;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">happyMarry</span><span class="params">()</span> &#123;</span><br><span class="line">        berfore();</span><br><span class="line">        <span class="built_in">this</span>.target.happyMarry();<span class="comment">//这是真实对象</span></span><br><span class="line">        after();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">after</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;收尾款&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">berfore</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;布置场地&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1V4411p7EF?p=9&amp;share_source=copy_web">视频链接</a></p><h2 id="3-lamda表达式"><a class="markdownIt-Anchor" href="#3-lamda表达式"></a> 3. Lamda表达式</h2><h3 id="31-为什么使用lamda表示"><a class="markdownIt-Anchor" href="#31-为什么使用lamda表示"></a> 3.1 为什么使用lamda表示</h3><pre><code>- 避免匿名内部类定义过多- 使代码看起来简洁，去掉无意义的代码，只留下核心逻辑- 其实质属于函数式编程的概念</code></pre><h3 id="32-函数式接口的定义"><a class="markdownIt-Anchor" href="#32-函数式接口的定义"></a> 3.2 函数式接口的定义</h3><pre><code>- 任何接口，如果只包含唯一一个抽象方法，那么它就是一个函数式接口- 对于函数式接口，我们可以通过lamda表达式来创建接口的对象</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> thread.lamda;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">推导lamda表达式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestLamda01</span> &#123;</span><br><span class="line">    <span class="comment">//3.静态内部类</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Like2</span> <span class="keyword">implements</span> <span class="title class_">ILike</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">lamda</span><span class="params">()</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;I like lamda2!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">ILike</span> <span class="variable">like</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Like</span>();</span><br><span class="line">        like.lamda();</span><br><span class="line"></span><br><span class="line">        like = <span class="keyword">new</span> <span class="title class_">Like2</span>();</span><br><span class="line">        like.lamda();</span><br><span class="line">        <span class="comment">//4.局部内部类</span></span><br><span class="line">        <span class="keyword">class</span> <span class="title class_">Like3</span> <span class="keyword">implements</span> <span class="title class_">ILike</span>&#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">lamda</span><span class="params">()</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;I like lamda3!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        like = <span class="keyword">new</span> <span class="title class_">Like3</span>();</span><br><span class="line">        like.lamda();</span><br><span class="line">        <span class="comment">//5.匿名内部类，没有类的名称，必须借助接口或者父类</span></span><br><span class="line">        like = <span class="keyword">new</span> <span class="title class_">ILike</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">lamda</span><span class="params">()</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;I like lamda4!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        like.lamda();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//6.用lamda简化</span></span><br><span class="line">        like = ()-&gt;&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;I like lamda5!&quot;</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        like.lamda();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1.定义一个函数式接口</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">ILike</span>&#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">lamda</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.实现类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Like</span> <span class="keyword">implements</span> <span class="title class_">ILike</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">lamda</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;I like lamda!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> thread.lamda;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestLamda02</span> &#123;</span><br><span class="line">    <span class="comment">//静态内部类</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">love2</span> <span class="keyword">implements</span> <span class="title class_">ILove</span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">love</span><span class="params">(<span class="type">int</span> a)</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;I love&quot;</span> + a);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//普通类实现</span></span><br><span class="line">        <span class="type">ILove</span> <span class="variable">love</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">love</span>();</span><br><span class="line">        love.love(<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//静态内部类实现</span></span><br><span class="line">        love = <span class="keyword">new</span> <span class="title class_">love2</span>();</span><br><span class="line">        love.love(<span class="number">2</span>);</span><br><span class="line">        <span class="comment">//局部内部类</span></span><br><span class="line">        <span class="keyword">class</span> <span class="title class_">love3</span> <span class="keyword">implements</span> <span class="title class_">ILove</span>&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">love</span><span class="params">(<span class="type">int</span> a)</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;I love&quot;</span> + a);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">love3</span>().love(<span class="number">77</span>);</span><br><span class="line">        <span class="comment">//匿名内部类</span></span><br><span class="line">        love = <span class="keyword">new</span> <span class="title class_">ILove</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">love</span><span class="params">(<span class="type">int</span> a)</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;I love&quot;</span> + a);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        love.love(<span class="number">3</span>);</span><br><span class="line">        <span class="comment">//lamda 简化</span></span><br><span class="line">        love = (<span class="type">int</span> a)-&gt;&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;I love&quot;</span> + a);</span><br><span class="line">        &#125;;</span><br><span class="line">        love.love(<span class="number">4</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">ILove</span>&#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">love</span><span class="params">(<span class="type">int</span> a)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">love</span> <span class="keyword">implements</span> <span class="title class_">ILove</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">love</span><span class="params">(<span class="type">int</span> a)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;I love&quot;</span> + a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="33-lamda简化形式"><a class="markdownIt-Anchor" href="#33-lamda简化形式"></a> 3.3 lamda简化形式</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//简化形式1</span></span><br><span class="line">love = (a) -&gt; &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;I love&quot;</span> + a);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//简化形式2（参数&lt;=1）</span></span><br><span class="line">love = a -&gt; &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;I love&quot;</span> + a);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//简化形式3（代码只有一行）</span></span><br><span class="line">love = a -&gt; System.out.println(<span class="string">&quot;I love&quot;</span> + a);</span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1V4411p7EF?p=10&amp;share_source=copy_web">视频链接</a></p><h2 id="4-线程状态和方法"><a class="markdownIt-Anchor" href="#4-线程状态和方法"></a> 4. 线程状态和方法</h2><p><code>线程一旦进入死亡状态，就不能再次启动</code></p><h3 id="41-五大状态"><a class="markdownIt-Anchor" href="#41-五大状态"></a> 4.1 五大状态</h3><pre><code>* 创建状态（new）* 就绪状态（start）* 运行状态* 阻塞状态（sleep，wait）* 死亡状态</code></pre><h3 id="42-线程方法"><a class="markdownIt-Anchor" href="#42-线程方法"></a> 4.2 线程方法</h3><p><img src="https://img-blog.csdnimg.cn/20210717160343691.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81NTc1OTQ5NA==,size_16,color_FFFFFF,t_70#pic_center" alt="线程方法" /></p><h3 id="43-停止线程"><a class="markdownIt-Anchor" href="#43-停止线程"></a> 4.3 停止线程</h3><pre><code>- 推荐线程自己停下来（不建议死循环）- 建议使用一个标志位进行终止变量（当flag= false，则终止线程运行）- 不要使用stop或者destroy等过时或者JDK不建议使用的方法</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> thread.methods;</span><br><span class="line"><span class="comment">//测试stop</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestStop</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="comment">//1.设置一个标志位</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (flag)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;run ....... Thread&quot;</span> + i++);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//2.设置一个公开的方法停止线程，转换标志位</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.flag = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">TestStop</span> <span class="variable">testStop</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestStop</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(testStop).start();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;main&quot;</span> + i);</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">900</span>)&#123;</span><br><span class="line">                testStop.stop();</span><br><span class="line">                System.out.println(<span class="string">&quot;线程已经停止&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1V4411p7EF?p=11&amp;share_source=copy_web">视频链接</a></p><h3 id="44-线程休眠sleep"><a class="markdownIt-Anchor" href="#44-线程休眠sleep"></a> 4.4 线程休眠（sleep）</h3><pre><code>* sleep（时间）指定当前线程阻塞的毫秒数* sleep存在异常InterruptedException* sleep时间达到后，线程进入就绪状态* sleep可以模拟网络延时，倒计时等* 每一个对象都有一个锁，sleep不会释放锁</code></pre><p><a href="https://www.bilibili.com/video/BV1V4411p7EF?p=12&amp;share_source=copy_web">视频链接</a></p><h3 id="45-线程礼让yield"><a class="markdownIt-Anchor" href="#45-线程礼让yield"></a> 4.5 线程礼让（yield）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> thread.methods;</span><br><span class="line"><span class="comment">//测试礼让线程</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestYield</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//lamda表达式</span></span><br><span class="line">        <span class="type">Runnable</span> <span class="variable">myYield</span> <span class="operator">=</span> ()-&gt;&#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot;线程开始执行&quot;</span>);</span><br><span class="line">            Thread.yield();</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot;线程运行结束&quot;</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(myYield, <span class="string">&quot;a&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(myYield, <span class="string">&quot;b&quot;</span>).start();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//class MyYield implements Runnable&#123;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    @Override</span></span><br><span class="line"><span class="comment">//    public void run() &#123;</span></span><br><span class="line"><span class="comment">//        System.out.println(Thread.currentThread().getName() + &quot;线程开始执行&quot;);</span></span><br><span class="line"><span class="comment">//        Thread.yield();</span></span><br><span class="line"><span class="comment">//        System.out.println(Thread.currentThread().getName() + &quot;线程运行结束&quot;);</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1V4411p7EF?p=13&amp;share_source=copy_web">视频链接</a></p><h3 id="46-合并线程join"><a class="markdownIt-Anchor" href="#46-合并线程join"></a> 4.6 合并线程（Join）</h3><pre><code>* Join合并线程，待此线程执行完成后，再执行其他线程，其他线程阻塞* 可以想象成插队</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> thread.methods;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试join方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestJoin</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;VIP来了&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="comment">//启动我们的线程</span></span><br><span class="line">        <span class="type">TestJoin</span> <span class="variable">testJoin</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestJoin</span>();</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(testJoin);</span><br><span class="line">        thread.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//主线程</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">500</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">100</span>)&#123;</span><br><span class="line">                thread.join();</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;main&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1V4411p7EF?p=14&amp;share_source=copy_web">视频链接</a></p><h3 id="47-观测线程状态"><a class="markdownIt-Anchor" href="#47-观测线程状态"></a> 4.7 观测线程状态</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> thread.state;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestState</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(()-&gt;&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;/////&quot;</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//观察状态(new)</span></span><br><span class="line">        Thread.<span class="type">State</span> <span class="variable">state</span> <span class="operator">=</span> thread.getState();</span><br><span class="line">        System.out.println(state);</span><br><span class="line">        <span class="comment">//run</span></span><br><span class="line">        thread.start();</span><br><span class="line">        state = thread.getState();</span><br><span class="line">        System.out.println(state);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//只要线程不终止，就一直输出状态</span></span><br><span class="line">        <span class="keyword">while</span> (state != Thread.State.TERMINATED)&#123;</span><br><span class="line">            Thread.sleep(<span class="number">100</span>);</span><br><span class="line">            state = thread.getState();<span class="comment">//更新线程状态</span></span><br><span class="line">            System.out.println(state);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1V4411p7EF?p=15&amp;share_source=copy_web">视频链接</a></p><h2 id="5-线程优先级"><a class="markdownIt-Anchor" href="#5-线程优先级"></a> 5. 线程优先级</h2><p><code>优先级低只是意味着获得调度的概率低，并不是优先级低就不会被调用了，这都是看CPU调度</code></p><pre><code>* 线程的优先级用数字表示，范围从1~10* Thread.MIN_PRIORITY = 1* Thread.MAX_PRIORITY =10* Thread.NORM_PRIORITY = 5* 使用以下方式改变或者获取优先级* getPriority()* setPriority(int xxx)</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> thread.state;</span><br><span class="line"><span class="comment">//测试线程的优先级</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestPriority</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//主线程优先级</span></span><br><span class="line">        System.out.println(Thread.currentThread().getName()+<span class="string">&quot;--&gt;&quot;</span>+Thread.currentThread().getPriority());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建线程</span></span><br><span class="line">        <span class="type">MyPriority</span> <span class="variable">myPriority</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyPriority</span>();</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(myPriority);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(myPriority);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(myPriority);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t6</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(myPriority);</span><br><span class="line"></span><br><span class="line">        t1.setPriority(<span class="number">10</span>);</span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line">        t3.setPriority(<span class="number">8</span>);</span><br><span class="line">        t3.start();</span><br><span class="line">        t6.setPriority(<span class="number">1</span>);</span><br><span class="line">        t6.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyPriority</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + <span class="string">&quot;--&gt;&quot;</span> +Thread.currentThread().getPriority());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1V4411p7EF?p=16&amp;share_source=copy_web">视频链接</a></p><h2 id="6-守护daemon线程"><a class="markdownIt-Anchor" href="#6-守护daemon线程"></a> 6. 守护（daemon）线程</h2><pre><code>* 线程分为用户线程和守护线程* 虚拟机必须确保用户线程执行完毕（main）* 虚拟机不用等待守护线程执行完毕，如后台记录操作日志，监控内存，垃圾回收等待（gc）</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> thread.methods;</span><br><span class="line"><span class="comment">//测试守护线程</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestDaemon</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Love</span> <span class="variable">love</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Love</span>();</span><br><span class="line">        <span class="type">You</span> <span class="variable">you</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">You</span>();</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(love);</span><br><span class="line">        thread.setDaemon(<span class="literal">true</span>);<span class="comment">//默认是false表示是用户线程</span></span><br><span class="line">        thread.start();<span class="comment">//守护线程启动</span></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(you).start();<span class="comment">//用户线程启动</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//守护线程</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Love</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;爱与你相伴&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//用户线程</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">You</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">36500</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;独行，相伴&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;-====goodbye!world!====-&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1V4411p7EF?p=17&amp;share_source=copy_web">视频链接</a></p><h2 id="7-线程同步"><a class="markdownIt-Anchor" href="#7-线程同步"></a> 7. 线程同步</h2><p><code>并发：同一个对象被多个线程同时操作 形成条件：队列和锁（锁机制synchronized）</code></p><pre><code>* 上万人同时抢100张票* 两个银行同时取钱</code></pre><p><a href="https://www.bilibili.com/video/BV1V4411p7EF?p=18&amp;share_source=copy_web">视频链接</a></p><h3 id="71-三大不安全案例"><a class="markdownIt-Anchor" href="#71-三大不安全案例"></a> 7.1 三大不安全案例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> thread.syn;</span><br><span class="line"><span class="comment">//不安全的买票</span></span><br><span class="line"><span class="comment">//线程不安全，有负数</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UnsafeBuyTicket</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">BuyTicket</span> <span class="variable">buyTicket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BuyTicket</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(buyTicket, <span class="string">&quot;小明&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(buyTicket, <span class="string">&quot;小红&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(buyTicket, <span class="string">&quot;小杰&quot;</span>).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BuyTicket</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="keyword">private</span>  <span class="type">int</span> <span class="variable">ticketNums</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    <span class="type">boolean</span>  <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">while</span> (flag)&#123;</span><br><span class="line">            <span class="keyword">if</span> (ticketNums &lt;= <span class="number">1</span>) flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">100</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot; 拿到&quot;</span> + ticketNums--);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> thread.syn;</span><br><span class="line"><span class="comment">//银行取钱</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UnsafeBank</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Account</span> <span class="variable">account</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Account</span>(<span class="number">100000</span>, <span class="string">&quot;结婚基金&quot;</span>);</span><br><span class="line">        <span class="type">Drawing</span> <span class="variable">you</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Drawing</span>(account, <span class="number">5000</span>, <span class="string">&quot;yourself&quot;</span>);</span><br><span class="line">        <span class="type">Drawing</span> <span class="variable">yourWife</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Drawing</span>(account, <span class="number">10000</span>, <span class="string">&quot;yourWife&quot;</span>);</span><br><span class="line">        you.start();</span><br><span class="line">        yourWife.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Account</span>&#123;</span><br><span class="line">    <span class="type">int</span> money;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Account</span><span class="params">(<span class="type">int</span> money, String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.money = money;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Drawing</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line">    Account account;</span><br><span class="line">    <span class="type">int</span> drawingMoney;</span><br><span class="line">    <span class="type">int</span> nowMoney;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Drawing</span><span class="params">(Account account, <span class="type">int</span> drawingMoney, String name)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>(name);</span><br><span class="line">        <span class="built_in">this</span>.account = account;</span><br><span class="line">        <span class="built_in">this</span>.drawingMoney = drawingMoney;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="keyword">if</span> (account.money - drawingMoney &lt; <span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="built_in">this</span>.getName()+ <span class="string">&quot;余额不足&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        account.money =  account.money - drawingMoney;</span><br><span class="line">        nowMoney = nowMoney + drawingMoney;</span><br><span class="line">        System.out.println(account.name + <span class="string">&quot;余额为&quot;</span> + account.money);</span><br><span class="line">        <span class="comment">//Thread.currentThread().getName() == this.getName();</span></span><br><span class="line">        System.out.println(<span class="built_in">this</span>.getName() + <span class="string">&quot;手里的钱为&quot;</span> + nowMoney);</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> thread.syn;</span><br><span class="line"><span class="comment">//表格</span></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UnsafeList</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        List&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Thread</span>(()-&gt;&#123;list.add(Thread.currentThread().getName());&#125;).start();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">10</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(list.size());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1V4411p7EF?p=19&amp;share_source=copy_web">视频链接</a></p><h3 id="72-同步方法"><a class="markdownIt-Anchor" href="#72-同步方法"></a> 7.2 同步方法</h3><p><code>public synchronized void method(int args)&#123;&#125; 同步方法的同步监听器就是this，即对象本身，或者是class</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> thread.syn;</span><br><span class="line"><span class="comment">//安全的买票</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UnsafeBuyTicket</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">BuyTicket</span> <span class="variable">buyTicket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BuyTicket</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(buyTicket, <span class="string">&quot;小明&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(buyTicket, <span class="string">&quot;小红&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(buyTicket, <span class="string">&quot;小杰&quot;</span>).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BuyTicket</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="keyword">private</span>  <span class="type">int</span> <span class="variable">ticketNums</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    <span class="type">boolean</span>  <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">while</span> (flag)&#123;</span><br><span class="line">            buy();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//synchronized 同步方法，锁的是this</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">buy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (ticketNums &lt;= <span class="number">0</span>) &#123;flag = <span class="literal">false</span>;<span class="keyword">return</span>;&#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">100</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + <span class="string">&quot; 拿到&quot;</span> + ticketNums--);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="73-同步块"><a class="markdownIt-Anchor" href="#73-同步块"></a> 7.3 同步块</h3><p><code>synchronized（Obj）&#123;&#125; Obj可以是任何对象，但是推荐使用共享资源（增删改）作为同步监视器</code></p><pre><code>* 同步监视器的执行过程* 第一个线程访问，锁定同步监视器，执行其中代码。* 第二个线程访问，发现同步监视器被锁定，无法访问* 第一个线程访问完毕，解锁同步监视器* 第二线程访问，发现同步监视器没有锁，然后锁定并访问</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> thread.syn;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UnsafeBank</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Account</span> <span class="variable">account</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Account</span>(<span class="number">100000</span>, <span class="string">&quot;结婚基金&quot;</span>);</span><br><span class="line">        <span class="type">Drawing</span> <span class="variable">you</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Drawing</span>(account, <span class="number">5000</span>, <span class="string">&quot;yourself&quot;</span>);</span><br><span class="line">        <span class="type">Drawing</span> <span class="variable">yourWife</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Drawing</span>(account, <span class="number">10000</span>, <span class="string">&quot;yourWife&quot;</span>);</span><br><span class="line">        you.start();</span><br><span class="line">        yourWife.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Account</span>&#123;</span><br><span class="line">    <span class="type">int</span> money;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Account</span><span class="params">(<span class="type">int</span> money, String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.money = money;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Drawing</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line">    Account account;</span><br><span class="line">    <span class="type">int</span> drawingMoney;</span><br><span class="line">    <span class="type">int</span> nowMoney;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Drawing</span><span class="params">(Account account, <span class="type">int</span> drawingMoney, String name)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>(name);</span><br><span class="line">        <span class="built_in">this</span>.account = account;</span><br><span class="line">        <span class="built_in">this</span>.drawingMoney = drawingMoney;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (account)&#123;</span><br><span class="line">            <span class="keyword">if</span> (account.money - drawingMoney &lt; <span class="number">0</span>)&#123;</span><br><span class="line">                System.out.println(<span class="built_in">this</span>.getName()+ <span class="string">&quot;余额不足&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            account.money =  account.money - drawingMoney;</span><br><span class="line">            nowMoney = nowMoney + drawingMoney;</span><br><span class="line">            System.out.println(account.name + <span class="string">&quot;余额为&quot;</span> + account.money);</span><br><span class="line">            <span class="comment">//Thread.currentThread().getName() == this.getName();</span></span><br><span class="line">            System.out.println(<span class="built_in">this</span>.getName() + <span class="string">&quot;手里的钱为&quot;</span> + nowMoney);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> thread.syn;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UnsafeList</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        List&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Thread</span>(()-&gt;&#123;</span><br><span class="line">                <span class="keyword">synchronized</span> (list)&#123;</span><br><span class="line">                    list.add(Thread.currentThread().getName());&#125;</span><br><span class="line">                &#125;).start();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">10</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(list.size());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1V4411p7EF?p=20&amp;share_source=copy_web">视频链接</a></p><p><code>CopyOnWriteArrayList&lt;String&gt; list = new CopyOnWriteArrayList&lt;String&gt;(); 自带锁的list</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> thread.syn;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.CopyOnWriteArrayList;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试JUC安全类型的集合</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestJUC</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        CopyOnWriteArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">CopyOnWriteArrayList</span>&lt;String&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Thread</span>(()-&gt; list.add(Thread.currentThread().getName())).start();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">10</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(list.size());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1V4411p7EF?p=21&amp;share_source=copy_web">视频链接</a></p><h3 id="74-死锁"><a class="markdownIt-Anchor" href="#74-死锁"></a> 7.4 死锁</h3><p><code>死锁：某一个同步块同时拥有“两个以上对象的锁”</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> thread.syn;</span><br><span class="line"><span class="comment">//死锁：多个线程互相抱着对方需要的资源，然后形成僵持</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DeadLock</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">MakeUp</span> <span class="variable">g1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MakeUp</span>(<span class="number">0</span>,<span class="string">&quot;灰姑娘&quot;</span>);</span><br><span class="line">        <span class="type">MakeUp</span> <span class="variable">g2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MakeUp</span>(<span class="number">1</span>,<span class="string">&quot;白雪公主&quot;</span>);</span><br><span class="line">        g1.start();</span><br><span class="line">        g2.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//口红</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LipStick</span>&#123;&#125;</span><br><span class="line"><span class="comment">//镜子</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Mirror</span>&#123;&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MakeUp</span> <span class="keyword">extends</span> <span class="title class_">Thread</span> &#123;</span><br><span class="line">    <span class="comment">//需要的资源只有一份，用static来保证</span></span><br><span class="line">    <span class="keyword">static</span> <span class="type">LipStick</span> <span class="variable">lipStick</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LipStick</span>();</span><br><span class="line">    <span class="keyword">static</span> <span class="type">Mirror</span> <span class="variable">mirror</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Mirror</span>();</span><br><span class="line">    <span class="type">int</span> choice;<span class="comment">//选择</span></span><br><span class="line">    String name;<span class="comment">//使用化妆品的人</span></span><br><span class="line">    MakeUp(<span class="type">int</span> choice, String name) &#123;</span><br><span class="line">        <span class="built_in">this</span>.choice = choice;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            makeup();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//化妆，互相持有对方的资源</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">makeup</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="keyword">if</span> (choice == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (lipStick) &#123;<span class="comment">//获得口红的锁</span></span><br><span class="line">                System.out.println(<span class="built_in">this</span>.name + <span class="string">&quot;获得口红&quot;</span>);</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">synchronized</span> (mirror) &#123;<span class="comment">//获得镜子的锁</span></span><br><span class="line">                System.out.println(<span class="built_in">this</span>.name + <span class="string">&quot;获得镜子的锁&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (mirror) &#123;<span class="comment">//获得镜子的锁</span></span><br><span class="line">                System.out.println(<span class="built_in">this</span>.name + <span class="string">&quot;获得镜子的锁&quot;</span>);</span><br><span class="line">                Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">synchronized</span> (lipStick) &#123;<span class="comment">//获得口红的锁</span></span><br><span class="line">                System.out.println(<span class="built_in">this</span>.name + <span class="string">&quot;获得口红的锁&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1V4411p7EF?p=22&amp;share_source=copy_web">视频链接</a></p><h3 id="75-锁显性lock"><a class="markdownIt-Anchor" href="#75-锁显性lock"></a> 7.5 锁（显性LOCK）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> thread.syn;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.ReentrantLock;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestLock</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">TestLock2</span> <span class="variable">testLock2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestLock2</span>();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(testLock2, <span class="string">&quot;小明&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(testLock2, <span class="string">&quot;小杰&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(testLock2, <span class="string">&quot;小王&quot;</span>).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TestLock2</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">tickNums</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">ReentrantLock</span> <span class="variable">reentrantLock</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ReentrantLock</span>();</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            reentrantLock.lock();</span><br><span class="line">            <span class="keyword">while</span> (flag)&#123;</span><br><span class="line">                <span class="keyword">if</span> (tickNums &lt;= <span class="number">0</span> )&#123;</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Thread.sleep(<span class="number">100</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.println(Thread.currentThread().getName() + <span class="string">&quot;获得了&quot;</span> + tickNums--);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            reentrantLock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1V4411p7EF?p=23&amp;share_source=copy_web">视频链接</a></p><h2 id="8-线程协作"><a class="markdownIt-Anchor" href="#8-线程协作"></a> 8. 线程协作</h2><p><code>生产者消费者问题：生产者和消费者共享同一个资源，并且生产者和消费者之间相互依赖，互为条件</code></p><table><thead><tr><th style="text-align:left">作用</th><th style="text-align:right">方法名</th></tr></thead><tbody><tr><td style="text-align:left">表示线程一直等待，直到其他线程通知，与sleep不同，会释放锁</td><td style="text-align:right">wait（）</td></tr><tr><td style="text-align:left">指定等待的毫秒数</td><td style="text-align:right">wait(long timeout)</td></tr><tr><td style="text-align:left">唤醒一个等待状态的线程</td><td style="text-align:right">notify()</td></tr><tr><td style="text-align:left">唤醒同一个对象上所有调用wait()方法的线程，优先级别高的线程优先调度</td><td style="text-align:right">notifyAll()</td></tr></tbody></table><h3 id="81-解决方式1"><a class="markdownIt-Anchor" href="#81-解决方式1"></a> 8.1 解决方式1</h3><p><code>并发协作模型“生产者/消费者模式”--&gt;管程法</code></p><pre><code>* 生产者：负责生产数据的模块（可能是方法，对象，线程，进程）* 消费者：负责处理数据的模块（可能是方法，对象，线程，进程）* 缓冲区：消费者不能直接使用生产者的数据，他们之间有个“缓冲区”</code></pre><p><code>生产者将生产好的数据放入缓冲区，消费者从缓冲区拿出数据</code><br /><a href="https://www.bilibili.com/video/BV1V4411p7EF?p=24&amp;share_source=copy_web">视频链接</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> thread.itc;</span><br><span class="line"><span class="comment">//测试：生产者消费者模型--&gt;管程法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestPC</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">SynContainer</span> <span class="variable">container</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SynContainer</span>();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Producer</span>(container).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Consumer</span>(container).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//生产者</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Producer</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line">    SynContainer container;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Producer</span><span class="params">(SynContainer container)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.container = container;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//生产</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">            container.push(<span class="keyword">new</span> <span class="title class_">Chicken</span>(i));</span><br><span class="line">            System.out.println(<span class="string">&quot;生产了&quot;</span> + i + <span class="string">&quot;只鸡&quot;</span>);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">0</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//消费者</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Consumer</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line">    SynContainer container;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Consumer</span><span class="params">(SynContainer container)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.container = container;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//消费</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;消费了--&gt;&quot;</span> + container.pop().id + <span class="string">&quot;只鸡&quot;</span>);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">0</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//产品</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Chicken</span>&#123;</span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Chicken</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//缓冲区</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SynContainer</span>&#123;</span><br><span class="line">    <span class="comment">//需要一个容器大小</span></span><br><span class="line">    Chicken[] chickens = <span class="keyword">new</span> <span class="title class_">Chicken</span>[<span class="number">10</span>];</span><br><span class="line">    <span class="comment">//容器计数器</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//生产者放入产品</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">push</span><span class="params">(Chicken chicken)</span>&#123;</span><br><span class="line">        <span class="comment">//如果容器满了，需要等待消费者消费</span></span><br><span class="line">        <span class="keyword">if</span>(count == chickens.length)&#123;</span><br><span class="line">            <span class="comment">//通知消费者消费，生产等待</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="built_in">this</span>.wait();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果没有满，丢入产品</span></span><br><span class="line">        chickens[count] = chicken;</span><br><span class="line">        count++;</span><br><span class="line">        <span class="comment">//可以通知消费者消费产品</span></span><br><span class="line">        <span class="built_in">this</span>.notifyAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//消费者消费产品</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> Chicken <span class="title function_">pop</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//判断能否消费</span></span><br><span class="line">        <span class="keyword">if</span> (count == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">//等待生产者生产</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="built_in">this</span>.wait();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果可以消费</span></span><br><span class="line">        count--;</span><br><span class="line">        <span class="type">Chicken</span> <span class="variable">chicken</span> <span class="operator">=</span> chickens[count];</span><br><span class="line">        <span class="comment">//吃完了，通知生产者生产</span></span><br><span class="line">        <span class="built_in">this</span>.notifyAll();</span><br><span class="line">        <span class="keyword">return</span> chicken;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1V4411p7EF?p=25&amp;share_source=copy_web">视频链接</a></p><h3 id="82-解决方式2"><a class="markdownIt-Anchor" href="#82-解决方式2"></a> 8.2 解决方式2</h3><p><code>并发协作模型“生产者/消费者模式”--&gt;信号灯法</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> thread.itc;</span><br><span class="line"><span class="comment">////测试：生产者消费者模型--&gt;信号灯法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestPC2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Program</span> <span class="variable">program</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Program</span>();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Player</span>(program).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Audience</span>(program).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//生产者--&gt;演员</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Player</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line">    Program program;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Player</span><span class="params">(Program program)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.program = program;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">            <span class="built_in">this</span>.program.show (<span class="string">&quot;Jay&#x27;s专场&quot;</span>, i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//消费者--&gt;观众</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Audience</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line">    Program program;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Audience</span><span class="params">(Program program)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.program = program;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">            <span class="built_in">this</span>.program.clap();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//产品--&gt;节目</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Program</span>&#123;</span><br><span class="line">    <span class="comment">//演员表演，观众观看 T</span></span><br><span class="line">    <span class="comment">//观众鼓掌，演员致敬 F</span></span><br><span class="line">    String name;<span class="comment">//表演的节目</span></span><br><span class="line">    <span class="type">int</span> order;<span class="comment">//节目序号</span></span><br><span class="line">    <span class="type">boolean</span>  <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;<span class="comment">//信号灯</span></span><br><span class="line">    <span class="comment">//表演</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">show</span> <span class="params">(String name, <span class="type">int</span> order)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!flag)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="built_in">this</span>.wait();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;演员表演了&quot;</span> + name + <span class="string">&quot;第&quot;</span> + order + <span class="string">&quot;个节目&quot;</span>);</span><br><span class="line">        <span class="comment">//观众鼓掌喝彩，演员致敬</span></span><br><span class="line">        <span class="built_in">this</span>.notifyAll();</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.order = order;</span><br><span class="line">        <span class="built_in">this</span>.flag = !<span class="built_in">this</span>.flag;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//鼓掌</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">clap</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (flag)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="built_in">this</span>.wait();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;观众看完&quot;</span> + name + <span class="string">&quot;第&quot;</span> + order + <span class="string">&quot;个节目，会场响起热烈掌声，演员们鞠躬致敬&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.notifyAll();</span><br><span class="line">        <span class="built_in">this</span>.flag = !<span class="built_in">this</span>.flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1V4411p7EF?p=26&amp;share_source=copy_web">视频链接</a></p><h2 id="9-线程池"><a class="markdownIt-Anchor" href="#9-线程池"></a> 9. 线程池</h2><pre><code>* 背景：经常创建和销毁、使用量特别大的资源，比如并发情况下的线程，对性能影响很大* 思路：提前创建好多个线程，放到线程池中，使用时直接获取，使用完放回池中。可以避免繁创建销毁、实现重复利用。类似生活中的公共交通工具（单车）。* 好处：* 提高响应速度（减少了创建新线程的时间）* 降低资源消耗（重复利用线程池中线程，不用每次都创建）* 便于线程管理</code></pre><p><code>newFixedThreadPool：线程池大小</code><br /><code>corePoolSize：核心池的大小</code><br /><code>maximumPoolSize：最大线程数</code><br /><code>keepAliveTime：线程没有任务时最多保持多长时间后会终止</code><br /><code>线程池相关API：ExecutorService 和 Executors</code><br /><code>void execute(Runnable command)：执行任务/命令，没有返回值，一般用来执行Runnable</code><br /><code>&lt;T&gt;Future&lt;T&gt;submit(Callable&lt;T&gt;task)：执行任务，有返回值，一般用来执行</code><br /><code>Callablevoid shutdown()：关闭连接池</code><br /><code>Executors：工具类、线程池的工厂类，用于创建并返回不同类型的线程池</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> thread.syn;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutorService;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executors;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试线程池</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestPool</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//1.创建线程池</span></span><br><span class="line">        <span class="type">ExecutorService</span> <span class="variable">service</span> <span class="operator">=</span> Executors.newFixedThreadPool(<span class="number">10</span>);</span><br><span class="line">        service.execute(<span class="keyword">new</span> <span class="title class_">MyThread</span>());</span><br><span class="line">        service.execute(<span class="keyword">new</span> <span class="title class_">MyThread</span>());</span><br><span class="line">        service.execute(<span class="keyword">new</span> <span class="title class_">MyThread</span>());</span><br><span class="line">        service.execute(<span class="keyword">new</span> <span class="title class_">MyThread</span>());</span><br><span class="line">        <span class="comment">//2.关闭连接</span></span><br><span class="line">        service.shutdown();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyThread</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot;  &quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1V4411p7EF?p=27&amp;share_source=copy_web">视频链接1</a><br /><a href="https://www.bilibili.com/video/BV1V4411p7EF?p=28&amp;share_source=copy_web">视频链接2</a></p><hr />]]></content>
      
      
      <categories>
          
          <category> 拓展知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java注解与反射</title>
      <link href="/posts/41268e44/"/>
      <url>/posts/41268e44/</url>
      
        <content type="html"><![CDATA[<h2 id="1-注解"><a class="markdownIt-Anchor" href="#1-注解"></a> 1. 注解</h2><h3 id="11-内置注解"><a class="markdownIt-Anchor" href="#11-内置注解"></a> 1.1 内置注解</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span> : 定义在java.lang.Override中,此注释只适用于修辞方法, 表示一个方法声明打算重写超类中的另一个方法声明.</span><br><span class="line"></span><br><span class="line"><span class="meta">@Deprecated</span> :定义在java.lang.Deprecated中,此注释可以用于修辞方法,属性,类,表示不鼓励程序员使用这样的元素,通常是因为它很危险或者存在更好的选择.</span><br><span class="line"></span><br><span class="line"><span class="meta">@SuppressWarnings</span> : 定义在java.lang.SuppressWarnings中,用来抑制编译时的警告信息，与前两个注释有所不同,你需要添加一-个参数才能正确使用，这些参数都是已经定义好了的,我们选择性的使用就好了.</span><br><span class="line"></span><br><span class="line"><span class="meta">@SuppressWarnings(“all”)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@SuppressWarnings(“unchecked”)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@SuppressWarnings(value=&#123;“unchecked”,“deprecation”&#125;)</span></span><br></pre></td></tr></table></figure><h3 id="12-元注解"><a class="markdownIt-Anchor" href="#12-元注解"></a> 1.2 元注解</h3><p>元注解的作用就是负责注解其他注解, Java定义了4个标准的meta-annotation类型,他们被用来提供对其他annotation类型作说明.<br />这些类型和它们所支持的类在java.lang.annotation包中可以找到.<br /><code>@Target</code> :用于描述注解的使用范围(即:被描述的注解可以用在什么地方)<br /><code>@Retention</code> :表示需要在什么级别保存该注释信息,用于描述注解的生命周期<br />(SOURCE &lt; CLASS &lt; RUNTIME)<br /><code>@Document</code>:说明该注解将被包含在javadoc中<br /><code>@Inherited</code>: 说明子类可以继承父类中的注解</p><h3 id="13-自定义注解"><a class="markdownIt-Anchor" href="#13-自定义注解"></a> 1.3 自定义注解</h3><p>使用<code>@interface</code>自定义注解时,自动继承了java.lang .annotation.Annotation接口</p><p>1.<code>@interface</code>用来声明一个注解,格式: <code>public @ interface注解名&#123;定义内容&#125;</code><br />2.其中的每一个方法实际上是声明了一个配置参数.<br />3.方法的名称就是参数的名称.<br />4.返回值类型就是参数的类型(返回值只能是基本类型,Class , String , enum ).<br />5.可以通过default来声明参数的默认值<br />6.如果只有一个参数成员, 一般参数名为value<br />7.注解元素必须要有值，我们定义注解元素时,经常使用空字符串，0作为默认值.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.company.annotation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.ElementType;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.RetentionPolicy;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 自定义注解</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test1</span> &#123;</span><br><span class="line"><span class="comment">// 注解可以显示赋值 如果没有默认值，就必须给注解赋值</span></span><br><span class="line"><span class="meta">@MyAnnotation(name = &quot;hello&quot;, age = 19)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test2</span> &#123;</span><br><span class="line"><span class="comment">// 注解只有一个参数，可以省去参数名</span></span><br><span class="line"><span class="meta">@MyAnnotation2(&quot;hello&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.TYPE, ElementType.METHOD&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@interface</span> MyAnnotation&#123;</span><br><span class="line">    <span class="comment">// 注解的参数: 参数类型 + 参数名（）;这不是方法</span></span><br><span class="line">    String <span class="title function_">name</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;<span class="comment">//default 为默认值，没有顺序</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">age</span><span class="params">()</span> <span class="keyword">default</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">id</span><span class="params">()</span> <span class="keyword">default</span> -<span class="number">1</span>;<span class="comment">// 如果默认值为-1，代表不存在</span></span><br><span class="line"></span><br><span class="line">    String[] schools() <span class="keyword">default</span> <span class="string">&quot;清华大学&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Target(&#123;ElementType.TYPE, ElementType.METHOD&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@interface</span> MyAnnotation2&#123;</span><br><span class="line">    String <span class="title function_">value</span><span class="params">()</span>;<span class="comment">//只有一个值建议取名为value</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-反射机制"><a class="markdownIt-Anchor" href="#2-反射机制"></a> 2. 反射机制</h2><h3 id="21-简介"><a class="markdownIt-Anchor" href="#21-简介"></a> 2.1 简介</h3><p><code>静态语言：java、C、C++(运行时结构不可变)</code><br /><code>动态语言：Object-C、C#、javaScript、PHP、Python(运行时代码可以根据某些条件改变自身结构)</code></p><ul><li>Reflection(反射)是Java被视为动态语言的关键，反射机制允许程序在执行期间借助于Reflection API取得任何类的内部信息，并且能直接操作任意对象的内部属性以及方法<br />                <code>Class c = Class.forName(&quot;java.lang.String&quot;)</code></li><li>加载完类之后，在堆内存的方法区中就产生了一个Class类型的对象（一个类只有一个Class对象），这个对象就包含了完整的类的结构信息。我们可以通过这个对象看到类的结构，这个对象就像一面镜子，透过这个镜子可以看到类的结构—&gt;反射<br /><img src="https://i.loli.net/2021/09/29/e79nOBcJhkT4aiN.png" alt="image-20210929083553279" /></li></ul><h3 id="22-获取反射对象"><a class="markdownIt-Anchor" href="#22-获取反射对象"></a> 2.2 获取反射对象</h3><h4 id="221-反射机制提供的功能"><a class="markdownIt-Anchor" href="#221-反射机制提供的功能"></a> 2.2.1 反射机制提供的功能</h4><ul><li>在运行时判断任意一个对象所属的类</li><li>在运行时构造任意一个类的对象</li><li>在运行时判断任意一个类所具有的成员变量和方法</li><li>在运行时获取泛型信息</li><li>在运行时调用任意一个对象的成员变量和方法</li><li>在运行时处理注解</li><li>生成动态代理</li><li>……</li></ul><h4 id="222-java反射优缺点"><a class="markdownIt-Anchor" href="#222-java反射优缺点"></a> 2.2.2 Java反射优缺点</h4><ul><li>优点：<ul><li>可以实现动态创建对象和编译，体现很大的灵活性</li></ul></li><li>缺点<ul><li>对性能有影响。使用反射基本上是一种解释操作，我们可以告诉JVM，我们希望做什么并且它满足我们的要求。这类操作总是慢于直接执行相同的操作</li></ul></li></ul><h4 id="223-反射相关的主要api"><a class="markdownIt-Anchor" href="#223-反射相关的主要api"></a> 2.2.3 反射相关的主要API</h4><ul><li>java.lang.Class：代表一个类，它就是Object类getClass()方法的返回值，它是唯一的所以类都指向它</li><li>java.lang.reflect.Method：代表类的方法</li><li>java.lang.reflect.Field：代表类的成员变量</li><li>java.lang.reflect.Constructor：代表类的构造器</li><li>……</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException &#123;</span><br><span class="line">        <span class="comment">// 通过反射返回类的Class对象</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c1</span> <span class="operator">=</span>  Class.forName(<span class="string">&quot;Demo.User&quot;</span>);</span><br><span class="line">        System.out.println(c1);</span><br><span class="line">        <span class="comment">// 一个类在方法区中只有一个Class对象</span></span><br><span class="line">        <span class="comment">// 一个类被加载之后，类的整个结构(构造器、方法、属性等等)都会被封装在Class对象中</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c2</span> <span class="operator">=</span>  Class.forName(<span class="string">&quot;Demo.User&quot;</span>);</span><br><span class="line">        System.out.println(c1.hashCode());</span><br><span class="line">        System.out.println(c2.hashCode());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">User</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(String name, <span class="type">int</span> id ,<span class="type">int</span> age)</span>&#123;</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line"><span class="built_in">this</span>.id = id;</span><br><span class="line"><span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span>&#123;<span class="keyword">return</span> name;&#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span>&#123;<span class="built_in">this</span>.name = name&#125;;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span>&#123;<span class="keyword">return</span> id;&#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(<span class="type">int</span> id)</span>&#123;<span class="built_in">this</span>.id = id&#125;;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span>&#123;<span class="keyword">return</span> age;&#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(<span class="type">int</span> age)</span>&#123;<span class="built_in">this</span>.age = age&#125;;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line"><span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line"><span class="string">&quot;, id=&quot;</span> + id +</span><br><span class="line"><span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line"><span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>结果</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">class demo.User</span><br><span class="line">1066516207</span><br><span class="line">1066516207</span><br></pre></td></tr></table></figure><h4 id="224-class类详解"><a class="markdownIt-Anchor" href="#224-class类详解"></a> 2.2.4 Class类详解</h4><p><img src="https://i.loli.net/2021/09/29/qPvGASa3QhiOtfm.png" alt="image-20210929083628198" /></p><p><mark>对象照镜子后可以得到的信息：某个类的属性、方法和构造器、某个类到底实现了哪些接口。对于每个类而言，JRE都为其保留一个不变的class类型的对象。一个Class对象包含了特定某个结构的相关信息</mark></p><ul><li>Class本身也是一个类，不过这个类只有一个，所有的类都执行它，例如User类、Person类等</li><li>Class对象是Class类的对象，只能由系统建立</li><li>一个加载的类(例如User.java)在JVM中只会有一个Class对象</li><li>一个Class对象对应的是一个加载到JVM中的对应的XXX.class文件</li><li>每个类的实例都会记着自己是由哪个Class对象所生成</li><li>通过CLass对象可以完整地得到一个类中所有被加载的信息</li><li>Class类是Reflection的根源，针对任何你想动态加载、运行的类、唯有先获得类对应的Class对象</li></ul><h4 id="225-获取class类的方法"><a class="markdownIt-Anchor" href="#225-获取class类的方法"></a> 2.2.5 获取Class类的方法</h4><p><img src="https://i.loli.net/2021/09/29/uvOyCDpsEBjGZAe.png" alt="image-20210929083641783" /></p><ol><li><strong>若已知具体的类，通过类的class属性获取，该方法最为安全可靠，程序性能最高</strong></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">c2</span> <span class="operator">=</span> User.getClass();</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>已知某个类的实例，通过类的实例中的getClass()方法获取</strong></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">c2</span> <span class="operator">=</span> user.getClass();</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>已知一个类的全类名，且该类在类路径下，可通过Class类的静态方法forName()获取</strong></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">c3</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;Demo.User&quot;</span>);</span><br></pre></td></tr></table></figure><ol start="4"><li><strong>通过类名.class获得</strong></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">c3</span> <span class="operator">=</span> User.class;</span><br></pre></td></tr></table></figure><ol start="5"><li><strong>通过基本内置类型的包装类的Type属性（了解）</strong></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">c4</span> <span class="operator">=</span> Integer.TYPE;</span><br></pre></td></tr></table></figure><ol start="6"><li><strong>通过ClassLoader类加载器获取</strong></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Constructor</span> <span class="variable">constructor</span> <span class="operator">=</span> c1.getDeclaredConstructor(String.class);</span><br><span class="line"><span class="type">Class</span> <span class="variable">c5</span> <span class="operator">=</span> constructor.getDeclaringClass();</span><br><span class="line">System.out.println(c5.hashCode());</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">refClass</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        System.out.println(<span class="string">&quot;this is :&quot;</span> + person.name);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 方式一: 通过对象获得</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c1</span> <span class="operator">=</span> person.getClass();</span><br><span class="line">        System.out.println(c1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 方式二： forname获得</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c2</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;Demo.Student&quot;</span>);</span><br><span class="line">        System.out.println(c2);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 方式三：通过类名.class获得</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c3</span> <span class="operator">=</span> Student.class;</span><br><span class="line">        System.out.println(c3);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 方法四 ：基本内置类型的包装类都有一个Type属性</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c4</span> <span class="operator">=</span> Integer.TYPE;</span><br><span class="line">        System.out.println(c4);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获得父类类型</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c5</span> <span class="operator">=</span> c1.getSuperclass();</span><br><span class="line">        System.out.println(c5);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Person&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">extends</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = <span class="string">&quot;Student&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Teacher</span> <span class="keyword">extends</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Teacher</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = <span class="string">&quot;Teacher&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="23-具有class对象的类型"><a class="markdownIt-Anchor" href="#23-具有class对象的类型"></a> 2.3 具有Class对象的类型</h3><ul><li><strong>class：外部类、成员内部类和静态内部类、局部内部类、匿名内部类</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">c1</span> <span class="operator">=</span> Object.class;</span><br></pre></td></tr></table></figure><ul><li><strong>interface：接口</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">c2</span> <span class="operator">=</span> Comparable.class;</span><br></pre></td></tr></table></figure><ul><li><strong>[]：数组</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">c3</span> <span class="operator">=</span> String[].class;</span><br></pre></td></tr></table></figure><ul><li><strong>enum：枚举</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">c4</span> <span class="operator">=</span> ElementType.class;</span><br></pre></td></tr></table></figure><ul><li><strong>annotation：注解</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">c5</span> <span class="operator">=</span> Override.class;</span><br></pre></td></tr></table></figure><ul><li><strong>void</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">c7</span> <span class="operator">=</span> <span class="keyword">void</span>.class;</span><br></pre></td></tr></table></figure><p><code>Conclusion</code></p><ol><li>元素类型不同，Class对象不同，例如int[ ]、String[ ]</li><li>元素类型相同，但是维度不同，Class对象不同，例如int[ ]和int[ ][ ]</li><li>元素类型相同，维度相同，但是具体内容不同，Class对象相同，例如：int[10]和int[100]</li></ol><h1 id="3-类加载内存分析"><a class="markdownIt-Anchor" href="#3-类加载内存分析"></a> 3.  类加载内存分析</h1><p><img src="https://i.loli.net/2021/09/29/ND4qjdAKZGVc2zP.png" alt="image-20210929083658671" /><br /><img src="https://i.loli.net/2021/09/29/eRWbwQOHnf89Msx.png" alt="image-20210929083709141" /></p><ul><li>加载：将class文件字节码内容加载到内存中，并将这些静态数据转换成方法区的运行时数据结构,然后生成一个代表这个类的java.lang.Class对象.</li><li>链接:将Java类的二进制代码合并到JVM的运行状态之中的过程。<ul><li>验证:确保加载的类信息符合JVM规范，没有安全方面的问题</li><li>准备:正式为类变量(static) 分配内存并设置类变量默认初始值的阶段,这些内存都将在方法区中进行分配。</li><li>解析:虚拟机常量池内的符号引用(常量名)替换为直接引用(地址)的过程。</li></ul></li><li>初始化:<ul><li>执行类构造器<clinit> ()方法的过程。类构造器<clinit> ()方法是由编译期自动收集类中所有类变量的赋值动作和静态代码块中的语句合并产生的。(类构造器是构造类信息的，不是构造该类对象的构造器)。</li><li>当初始化一个类的时候，如果发现其父类还没有进行初始化，则需要先触发其父类的初始化。</li><li>虚拟机会保证一 个类的<clinit>()方法在多线程环境中被正确加锁和同步。</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo04</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        A a=<span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        System.out.println(A.m);<span class="comment">//100</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        1.加载到内存，产生一个类对应Class对象</span></span><br><span class="line"><span class="comment">        2.链接，链接结束后m=0</span></span><br><span class="line"><span class="comment">        3.初始化</span></span><br><span class="line"><span class="comment">        &lt;clinit&gt;()&#123;</span></span><br><span class="line"><span class="comment">            System. out . println( &quot;A类静态代码块初始化&quot;) ;</span></span><br><span class="line"><span class="comment">            m = 300;</span></span><br><span class="line"><span class="comment">            m=100;</span></span><br><span class="line"><span class="comment">         &#125;</span></span><br><span class="line"><span class="comment">         m=100</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;A类静态代码块初始化&quot;</span>);</span><br><span class="line">        m = <span class="number">300</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">A</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;A类的参构造初始化&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-类的初始化"><a class="markdownIt-Anchor" href="#4-类的初始化"></a> 4. 类的初始化</h2><ul><li>类的主动引用(一定会发生类的初始化)<ul><li>当虚拟机启动，先初始化main方法所在的类</li><li>new一个类的对象</li><li>调用类的静态成员(除了final常量)和静态方法</li><li>使用java.lang.reflect包的方法对类进行反射调用</li><li>当初始化一个类, 如果其父类没有被初始化，则先会初始化它的父类</li></ul></li><li>类的被动引用(不会发生类的初始化)<ul><li>当访问一个静态域时，只有真正声明这个域的类才会被初始化。如:当通过子类引用父类的静态变量，不会导致子类初始化</li><li>通过数组定义类引用，不会触发此类的初始化</li><li>引用常量不会触发此类的初始化(常量在链接阶段就存入调用类的常量池中了)</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo05</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;main类被加载&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">Son</span> <span class="variable">son</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Son</span>();</span><br><span class="line">        <span class="comment">//1.主动引用</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * main类被加载</span></span><br><span class="line"><span class="comment">        * 父类被加载</span></span><br><span class="line"><span class="comment">        * 子类被加载</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        Class.forName (<span class="string">&quot;Demo.Son&quot;</span>);</span><br><span class="line">        <span class="comment">//反射也会产生主动引用</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * main类被加载</span></span><br><span class="line"><span class="comment">         * 父类被加载</span></span><br><span class="line"><span class="comment">         * 子类被加载</span></span><br><span class="line"><span class="comment">         * */</span></span><br><span class="line">        <span class="comment">//不会产生类的初始化的方法</span></span><br><span class="line">        System.out.println(Son.b);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * main类被加载</span></span><br><span class="line"><span class="comment">        * 父类被加载</span></span><br><span class="line"><span class="comment">        * 输出：2</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">        <span class="comment">//Son[] array = new Son[5];</span></span><br><span class="line">        System.out.println(Son.M) ;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * main类被加载</span></span><br><span class="line"><span class="comment">         * 输出：1</span></span><br><span class="line"><span class="comment">         * */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Father</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;父类被加载&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son</span> <span class="keyword">extends</span> <span class="title class_">Father</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;子类被加载&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">M</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-类加载器"><a class="markdownIt-Anchor" href="#5-类加载器"></a> 5. 类加载器</h2><p><img src="https://i.loli.net/2021/09/29/aSQ7eFGML1j8oCV.png" alt="image-20210929083734650" /></p><ul><li>类加载的作用:将class文件字节码内容加载到内存中，并将这些静态数据转换成方法区的运行时数据结构，然后在堆中生成一个代表这个类的java.lang(Class对象)作为方法区中类数据的访问入口。</li><li>类缓存:标准的JavaSE类加载器可以按要求查找类,但一旦某企类被加载到类加载器中，它将维持加载(缓存) 一段时间。不过JVM垃圾回收机制可以回收这些Class对象</li><li>类加载器作用是用来把类(class)装载进内存的。JVM规范走义了如下类型的类的加载器</li><li>双亲委派机制：如果自己定义和jdk同名的类，运行时虚拟机会在系统的类加载器中寻找，再去扩展类加载器中寻找，再去根加载器中寻找，如果存在同名的类，会使用根加载器中的类，而不使用自己定义的类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo06</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException &#123;</span><br><span class="line">        <span class="comment">//获取系统的类加载器</span></span><br><span class="line">        <span class="type">ClassLoader</span> <span class="variable">systemClassLoader</span> <span class="operator">=</span> ClassLoader.getSystemClassLoader();</span><br><span class="line">        System.out.println(systemClassLoader);</span><br><span class="line">        <span class="comment">//结果：sun.misc.Launcher$AppClassLoader@18b4aac2</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取系统类加载器的父类加载器--&gt;扩展类加载器</span></span><br><span class="line">        <span class="type">ClassLoader</span> <span class="variable">parent</span> <span class="operator">=</span> systemClassLoader.getParent();</span><br><span class="line">        System.out.println(parent);</span><br><span class="line">        <span class="comment">//结果：sun.misc.Launcher$ExtClassLoader@4554617c</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取扩展类加载器的父类加载器- -&gt;根加载器(C/c++)</span></span><br><span class="line">        <span class="type">ClassLoader</span> <span class="variable">grantparent</span> <span class="operator">=</span> parent.getParent();</span><br><span class="line">        System.out.println(grantparent);</span><br><span class="line">        <span class="comment">//结果：null</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//测试当前类是哪个加载器加载的</span></span><br><span class="line">        <span class="type">ClassLoader</span> <span class="variable">classLoader</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;Demo.User&quot;</span>).getClassLoader();</span><br><span class="line">        System.out.println(classLoader);</span><br><span class="line">        <span class="comment">//结果：sun.misc.Launcher$AppClassLoader@18b4aac2</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//测试JDK内置的类是谁加载的</span></span><br><span class="line">        <span class="type">ClassLoader</span> <span class="variable">classLoader1</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.lang.Object&quot;</span>).getClassLoader();</span><br><span class="line">        System.out.println(classLoader1);</span><br><span class="line">        <span class="comment">//结果：null</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//如何获得系统类加载器可以加载的路径</span></span><br><span class="line">        System.out.println(System.getProperty(<span class="string">&quot;java.class.path&quot;</span>));</span><br><span class="line">       <span class="comment">/*</span></span><br><span class="line"><span class="comment">       * D:\Environment\java\jre\lib\charsets.jar;</span></span><br><span class="line"><span class="comment">       * D:\Environment\java\jre\lib\deploy.jar;</span></span><br><span class="line"><span class="comment">       * D:\Environment\java\jre\lib\ext\access-bridge-64.jar;</span></span><br><span class="line"><span class="comment">       * D:\Environment\java\jre\lib\ext\cldrdata.jar;</span></span><br><span class="line"><span class="comment">       * D:\Environment\java\jre\lib\ext\dnsns.jar;</span></span><br><span class="line"><span class="comment">       * D:\Environment\java\jre\lib\ext\jaccess.jar;</span></span><br><span class="line"><span class="comment">       * D:\Environment\java\jre\lib\ext\jfxrt.jar;</span></span><br><span class="line"><span class="comment">       * D:\Environment\java\jre\lib\ext\localedata.jar;</span></span><br><span class="line"><span class="comment">       * D:\Environment\java\jre\lib\ext\nashorn.jar;</span></span><br><span class="line"><span class="comment">       * D:\Environment\java\jre\lib\ext\sunec.jar;</span></span><br><span class="line"><span class="comment">       * D:\Environment\java\jre\lib\ext\sunjce_provider.jar;</span></span><br><span class="line"><span class="comment">       * D:\Environment\java\jre\lib\ext\sunmscapi.jar;</span></span><br><span class="line"><span class="comment">       * D:\Environment\java\jre\lib\ext\sunpkcs11.jar;</span></span><br><span class="line"><span class="comment">       * D:\Environment\java\jre\lib\ext\zipfs.jar;</span></span><br><span class="line"><span class="comment">       * D:\Environment\java\jre\lib\javaws.jar;</span></span><br><span class="line"><span class="comment">       * D:\Environment\java\jre\lib\jce.jar;</span></span><br><span class="line"><span class="comment">       * D:\Environment\java\jre\lib\jfr.jar;</span></span><br><span class="line"><span class="comment">       * D:\Environment\java\jre\lib\jfxswt.jar;</span></span><br><span class="line"><span class="comment">       * D:\Environment\java\jre\lib\jsse.jar;</span></span><br><span class="line"><span class="comment">       * D:\Environment\java\jre\lib\management-agent.jar;</span></span><br><span class="line"><span class="comment">       * D:\Environment\java\jre\lib\plugin.jar;</span></span><br><span class="line"><span class="comment">       * D:\Environment\java\jre\lib\resources.jar;</span></span><br><span class="line"><span class="comment">       * D:\Environment\java\jre\lib\rt.jar;</span></span><br><span class="line"><span class="comment">       * D:\project\java-design\out\production\design02;</span></span><br><span class="line"><span class="comment">       * D:\IDEA\IntelliJ IDEA 2020.1.1\lib\idea_rt.jar</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-获取运行时类的完整结构"><a class="markdownIt-Anchor" href="#6-获取运行时类的完整结构"></a> 6. 获取运行时类的完整结构</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sun.reflect.misc.MethodUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Member;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获得类的信息</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo07</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchFieldException, NoSuchMethodException &#123;</span><br><span class="line">        <span class="type">Class</span> <span class="variable">c1</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;com.reflection.User&quot;</span>);</span><br><span class="line">        <span class="comment">//获得类的信息</span></span><br><span class="line">        System.out.println(c1.getName());<span class="comment">//获得包名+类名</span></span><br><span class="line">        System.out.println(c1.getSimpleName());<span class="comment">//获得类名</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得类的属性</span></span><br><span class="line">        System.out.println(<span class="string">&quot;=======================&quot;</span>);</span><br><span class="line">        Field[] fields = c1.getFields();<span class="comment">//获取类的公开属性和父类的公开属性</span></span><br><span class="line">        fields = c1.getDeclaredFields();<span class="comment">//获取类的任何属性</span></span><br><span class="line">        <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">            System.out.println(field);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得指定属性的值</span></span><br><span class="line">        <span class="type">Field</span> <span class="variable">name</span> <span class="operator">=</span> c1.getDeclaredField(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        System.out.println(name);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得类的方法</span></span><br><span class="line">        System.out.println(<span class="string">&quot;=========================&quot;</span>);</span><br><span class="line">        Method[] methods = c1.getMethods();<span class="comment">//获得本类和父类的所有public方法</span></span><br><span class="line">        <span class="keyword">for</span> (Method method : methods) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;methods &quot;</span> + method);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;=========================&quot;</span>);</span><br><span class="line">        Method[] decmethods = c1.getDeclaredMethods();<span class="comment">//获得本类的所有方法</span></span><br><span class="line">        <span class="keyword">for</span> (Method method : decmethods) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;getDeclaredMethods&quot;</span> + method);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得指定方法</span></span><br><span class="line">        <span class="comment">//需要传参数的原因：存在重载，参数可找到指定的方法</span></span><br><span class="line">        System.out.println(<span class="string">&quot;=========================&quot;</span>);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">getName</span> <span class="operator">=</span> c1.getMethod(<span class="string">&quot;getName&quot;</span>, <span class="literal">null</span>);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">setName</span> <span class="operator">=</span> c1.getMethod(<span class="string">&quot;setName&quot;</span>, String.class);</span><br><span class="line">        System.out.println(getName);</span><br><span class="line">        System.out.println(setName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得构造器</span></span><br><span class="line">        System.out.println(<span class="string">&quot;=========================&quot;</span>);</span><br><span class="line">        Constructor[] constructors = c1.getConstructors();</span><br><span class="line">        <span class="keyword">for</span> (Constructor constructor : constructors) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;getConstructors &quot;</span> + constructor);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;=========================&quot;</span>);</span><br><span class="line">        Constructor[] constructors1 = c1.getDeclaredConstructors();</span><br><span class="line">        <span class="keyword">for</span> (Constructor constructor : constructors1) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;getDeclaredConstructors &quot;</span> + constructors1);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得指定的构造器</span></span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">getDeclaredConstructor</span> <span class="operator">=</span> c1.getDeclaredConstructor(String.class, <span class="type">int</span>.class);</span><br><span class="line">        System.out.println(<span class="string">&quot;指定构造器&quot;</span> + getDeclaredConstructor);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-动态创建对象"><a class="markdownIt-Anchor" href="#7-动态创建对象"></a> 7. 动态创建对象</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="comment">//动态创建对象，通过反射</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo08</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, IllegalAccessException, InstantiationException, NoSuchMethodException, InvocationTargetException, NoSuchFieldException &#123;</span><br><span class="line">        <span class="comment">//获得class对象</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c1</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;com.reflection.User&quot;</span>);</span><br><span class="line">        <span class="comment">//创建一个对象</span></span><br><span class="line">        System.out.println(<span class="string">&quot;============================&quot;</span>);</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User)c1.newInstance();<span class="comment">//本质是调用了类的无参构造器</span></span><br><span class="line">        System.out.println(user);</span><br><span class="line">        System.out.println(<span class="string">&quot;============================&quot;</span>);</span><br><span class="line">        <span class="comment">//1. 通过Class类的getDeclaredConstructor取得本类的指定形参类型的构造器</span></span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">constructor</span> <span class="operator">=</span> c1.getDeclaredConstructor(String.class,<span class="type">int</span>.class);</span><br><span class="line">        <span class="comment">//2. 向构造器的形参中传递一一个对象数组进去，里面包含了构造器中所需的各个参数。</span></span><br><span class="line">        <span class="comment">//3. 通过Constructor实例化对象</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user2</span> <span class="operator">=</span> (User)constructor.newInstance(<span class="string">&quot;gdj&quot;</span>,<span class="number">22</span>);</span><br><span class="line">        <span class="comment">//通过构造器创建对象(需要重写toString)</span></span><br><span class="line">        System.out.println(user2);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//通过反射调用普通方法</span></span><br><span class="line">        <span class="comment">//通过反射获取一个方法</span></span><br><span class="line">        System.out.println(<span class="string">&quot;============================&quot;</span>);</span><br><span class="line">        <span class="type">User</span> <span class="variable">user3</span> <span class="operator">=</span> (User)c1.newInstance();</span><br><span class="line">        <span class="comment">//1. 取得本类的指定形参类型的构造器</span></span><br><span class="line">        <span class="type">Method</span> <span class="variable">setName</span> <span class="operator">=</span> c1.getDeclaredMethod(<span class="string">&quot;setName&quot;</span>,String.class);</span><br><span class="line"><span class="comment">//2. 使用invoke进行调用，并向方法中传递要设置的obj对象的参数信息。</span></span><br><span class="line">    <span class="comment">//invoke:激活的意思  参数：对象，方法的值</span></span><br><span class="line">        setName.invoke(user3,<span class="string">&quot;jay&quot;</span>);</span><br><span class="line">        System.out.println(user3.getName());</span><br><span class="line">        System.out.println(<span class="string">&quot;============================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//通过反射操作属性</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user4</span> <span class="operator">=</span> (User)c1.newInstance();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">name</span> <span class="operator">=</span> c1.getDeclaredField(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="comment">//不能直接操作私有private属性，我们需要关闭程序的安全监测，属性或方法的setAccessible(true)</span></span><br><span class="line">        name.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        name.set(user3,<span class="string">&quot;gdj&quot;</span>);</span><br><span class="line">        System.out.println(user4.getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>setAccessible</code></p><ul><li>Method和Field、Constructor对象都有setAccessible()方法。</li><li>setAccessible作用是启动和禁用访问安全检查的开关。</li><li>参数值为true则指示反射的对象在使用时应该取消Java语言访问检查。</li><li>提高反射的效率。如果代码中必须用反射，而该句代码需要频繁的被调用，那么请设置为true。</li><li>使得原本无法访问的私有成员也可以访问</li><li>参数值为false则指示反射的对象应该实施Java语言访问检查</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo09</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> NoSuchMethodException, IllegalAccessException, InvocationTargetException &#123;</span><br><span class="line">        test1();<span class="comment">//5ms</span></span><br><span class="line">        test2();<span class="comment">//4114ms</span></span><br><span class="line">        test3();<span class="comment">//1483ms</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//普通方式调用</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        <span class="type">long</span> <span class="variable">start</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">1000000000</span>; i++) &#123;</span><br><span class="line">            user.getName();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="variable">end</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">        System.out.println(end-start+<span class="string">&quot;ms&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//反射方式调用</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test2</span><span class="params">()</span> <span class="keyword">throws</span> NoSuchMethodException, InvocationTargetException, IllegalAccessException &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        <span class="type">Class</span> <span class="variable">c1</span> <span class="operator">=</span> user.getClass();</span><br><span class="line">        <span class="type">Method</span> <span class="variable">getName</span> <span class="operator">=</span> c1.getDeclaredMethod(<span class="string">&quot;getName&quot;</span>,<span class="literal">null</span>);</span><br><span class="line">        <span class="type">long</span> <span class="variable">start</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">1000000000</span>; i++) &#123;</span><br><span class="line">            getName.invoke(user,<span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="variable">end</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">        System.out.println(end-start+<span class="string">&quot;ms&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//反射方式调用 关闭检测</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test3</span><span class="params">()</span> <span class="keyword">throws</span> NoSuchMethodException, InvocationTargetException, IllegalAccessException &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        <span class="type">Class</span> <span class="variable">c1</span> <span class="operator">=</span> user.getClass();</span><br><span class="line">        <span class="type">Method</span> <span class="variable">getName</span> <span class="operator">=</span> c1.getDeclaredMethod(<span class="string">&quot;getName&quot;</span>,<span class="literal">null</span>);</span><br><span class="line">        getName.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">long</span> <span class="variable">start</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">1000000000</span>; i++) &#123;</span><br><span class="line">            getName.invoke(user,<span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="variable">end</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">        System.out.println(end-start+<span class="string">&quot;ms&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8-反射操作泛型了解"><a class="markdownIt-Anchor" href="#8-反射操作泛型了解"></a> 8. 反射操作泛型（了解）</h2><p>1.Java采用泛型擦除的机制来引入泛型, Java中的泛型仅仅是给编译器javac使用的，确保数据的安全性和免去强制类型转换问题,但是, 一旦编译完成,所有和泛型有关的类型全部擦除<br />2.为了通过反射操作这些类型, Java新增了ParameterizedType , GenericArrayType ，TypeVariable和WildcardType几种类型来代表不能被归一到Class类中的类型但是又和原始类型齐名的类型.</p><ul><li>ParameterizedType :表示一种参数化类型,比如Collection<String></li><li>GenericArrayType :表示一种元素类型是参数化类型或者类型变量的数组类型</li><li>TypeVariable :是各种类型变量的公共父接口</li><li>WildcardType :代表-种通配符类型表达式</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.ParameterizedType;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Type;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo10</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test01</span> <span class="params">(Map&lt;String,User&gt; map, List&lt;User&gt; list)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test01&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, User&gt; <span class="title function_">test02</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test02&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> NoSuchMethodException &#123;</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> Demo10.class.getMethod(<span class="string">&quot;test01&quot;</span>,Map.class,List.class);</span><br><span class="line">        Type[] genericParameterTypes= method.getGenericParameterTypes();</span><br><span class="line">        <span class="keyword">for</span> (Type genericParameterType : genericParameterTypes) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;参数范型&quot;</span>+genericParameterType);</span><br><span class="line">            <span class="keyword">if</span> (genericParameterType <span class="keyword">instanceof</span> ParameterizedType)&#123;</span><br><span class="line">                Type[] actualTypeAnguments=((ParameterizedType)genericParameterType).getActualTypeArguments();</span><br><span class="line">                <span class="keyword">for</span> (Type actualTypeAngument : actualTypeAnguments) &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;实际参数范型&quot;</span>+actualTypeAngument);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">Method</span> <span class="variable">method1</span> <span class="operator">=</span> Demo10.class.getMethod(<span class="string">&quot;test02&quot;</span>,<span class="literal">null</span>);</span><br><span class="line">        Type getGenericReturnType= method1.getGenericReturnType();</span><br><span class="line">        <span class="keyword">if</span> (getGenericReturnType <span class="keyword">instanceof</span>  ParameterizedType) &#123;</span><br><span class="line">            Type[] actualTypeArguments = ((ParameterizedType) getGenericReturnType).getActualTypeArguments();</span><br><span class="line">            <span class="keyword">for</span> (Type actualTypeArgument : actualTypeArguments) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;返回值范型&quot;</span> + actualTypeArgument);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="9-反射操作注解"><a class="markdownIt-Anchor" href="#9-反射操作注解"></a> 9.  反射操作注解</h2><p><code>ORM：Object Relationship Mapping --&gt; 对象关系映射</code><br /><img src="https://i.loli.net/2021/09/29/DN7hfyuJOtqCG1s.png" alt="image-20210929083809969" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.xml.internal.ws.api.ha.StickyFeature;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.security.cert.CRLReason;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo11</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchFieldException &#123;</span><br><span class="line">        <span class="type">Class</span> <span class="variable">c1</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;demo.Student2&quot;</span>);</span><br><span class="line">        <span class="comment">//通过反射获取注解</span></span><br><span class="line">        Annotation[] annotations = c1.getAnnotations();</span><br><span class="line">        <span class="keyword">for</span> (Annotation annotation : annotations) &#123;</span><br><span class="line">            System.out.println(annotation);</span><br><span class="line">            <span class="comment">//结果：@demo.Table(value=db_student)</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得注解中的value值</span></span><br><span class="line">        <span class="type">Table</span> <span class="variable">table</span> <span class="operator">=</span> (Table)c1.getAnnotation(Table.class);</span><br><span class="line">        <span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> table.value();</span><br><span class="line">        System.out.println(value);</span><br><span class="line">        <span class="comment">//结果：db_student</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得类指定的注解</span></span><br><span class="line">        <span class="type">Field</span> <span class="variable">f</span> <span class="operator">=</span> c1.getDeclaredField(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        Filed annotation=f.getAnnotation(Filed.class);</span><br><span class="line">        System.out.println(annotation.columnName());</span><br><span class="line">        <span class="comment">//结果：db_name</span></span><br><span class="line">        System.out.println(annotation.length());</span><br><span class="line">        <span class="comment">//结果：3</span></span><br><span class="line">        System.out.println(annotation.type());</span><br><span class="line">        <span class="comment">//结果：varchar</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Table(&quot;db_student&quot;)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student2</span>&#123;</span><br><span class="line">    <span class="meta">@Filed(columnName = &quot;db_id&quot;,type = &quot;int&quot;,length = 10)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="meta">@Filed(columnName = &quot;db_age&quot;,type = &quot;int&quot;,length = 10)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="meta">@Filed(columnName = &quot;db_name&quot;,type = &quot;varchar&quot;,length = 3)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student2</span><span class="params">()</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student2</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> age, String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;Student2&#123;&quot;</span> +</span><br><span class="line"><span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line"><span class="string">&quot;, id=&quot;</span> + id +</span><br><span class="line"><span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line"><span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//类名的注解</span></span><br><span class="line"><span class="meta">@Target(ElementType.TYPE)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@interface</span> Table&#123;</span><br><span class="line">    String <span class="title function_">value</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//属性的注解</span></span><br><span class="line"><span class="meta">@Target(ElementType.FIELD)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@interface</span> Filed&#123;</span><br><span class="line">    String <span class="title function_">columnName</span><span class="params">()</span>;</span><br><span class="line">    String <span class="title function_">type</span><span class="params">()</span>;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">length</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 拓展知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java网络编程</title>
      <link href="/posts/f6491cfb/"/>
      <url>/posts/f6491cfb/</url>
      
        <content type="html"><![CDATA[<h2 id="1-概述"><a class="markdownIt-Anchor" href="#1-概述"></a> 1.  概述</h2><p><code>地球村：与国外的同学交流</code><br /><code>信件：</code><br /><img src="https://i.loli.net/2021/09/29/KlhjzAHBe3rRg7a.png" alt="image-20210929081205442" /></p><h3 id="11-计算机网络"><a class="markdownIt-Anchor" href="#11-计算机网络"></a> 1.1 计算机网络</h3><p>计算机网络是指将<mark>地理位置不同</mark>的具有独立功能的<mark>多台计算机及其外部设备</mark>，通过通信线路连接起来，在网络操作系统，网络管理软件及<mark>网络通信协议</mark>的管理和协调下，<mark>实现资源共享和信息传递</mark>的计算机系统。</p><h3 id="12-网络编程"><a class="markdownIt-Anchor" href="#12-网络编程"></a> 1.2 网络编程</h3><p>网络编程最主要的工作就是在发送端把信息通过规定好的协议进行<mark>组装包</mark>，在接收端按照规定好的协议把包进行<mark>解析</mark>，从而提取出对应的信息，达到<mark>通信</mark>的目的。</p><h3 id="13-前提条件"><a class="markdownIt-Anchor" href="#13-前提条件"></a> 1.3 前提条件</h3><ul><li>如何准确的定位网络上的一台主机（IP地址、端口）</li><li>找到了这个主机，如何传输数据<br /><code>javaweb：网页编程 B/S</code><br /><code>网络编程：TCP C/S</code><br /><a href="https://www.bilibili.com/video/BV1LJ411z7vY?share_source=copy_web">视频链接</a></li></ul><h2 id="2-网络通信的要素"><a class="markdownIt-Anchor" href="#2-网络通信的要素"></a> 2.  网络通信的要素</h2><h3 id="21-网络通信的实现方式"><a class="markdownIt-Anchor" href="#21-网络通信的实现方式"></a> 2.1 网络通信的实现方式</h3><p>通信双方地址：</p><ul><li>IP 地址</li><li>端口<br />规则：网络通信协议</li><li>TCP/IP参考协议<br /><img src="https://i.loli.net/2021/09/29/8alb3GnqLRekMpQ.png" alt="image-20210929081232502" /><img src="https://i.loli.net/2021/09/29/5QjPwluBgsa3hMI.png" alt="image-20210929081243398" /></li></ul><h3 id="22-万物皆对象"><a class="markdownIt-Anchor" href="#22-万物皆对象"></a> 2.2 万物皆对象</h3><ol><li>网络编程中有两个主要的问题</li></ol><ul><li>如何准确的定位到网络上的一台或多台主机</li><li>找到主机后如何进行通讯</li></ul><ol start="2"><li>网络编程中的要素</li></ol><ul><li>IP地址和端口号</li><li>网络通信协议<br /><a href="https://www.bilibili.com/video/BV1LJ411z7vY?p=2&amp;share_source=copy_web">视频链接</a></li></ul><h2 id="3-ip"><a class="markdownIt-Anchor" href="#3-ip"></a> 3.  IP</h2><p>IP地址：InetAddress</p><ul><li>唯一定位一台网络上计算机</li><li>127.0.0.1：本机localhost</li><li>IP地址的分类<ul><li>IPV4/IPV6</li><li>IPV4  127.0.0.1  :4个字节组成，0-255， 42亿  2011年用尽</li><li>IPV6   fe80::6c61:9c78:5c7b:18e9%3（config） 256位， 8个无符号整数<br /><code>2001:0bb2:aaaa:0015:0000:0000:1aaa:1312</code></li></ul></li><li>公网（互联网）-  私网（局域网）</li><li>ABCD类地址</li><li>192.168.xx.xx  专门给组织内部使用的</li><li>域名：记忆IP问题！</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.UnknownHostException;</span><br><span class="line"><span class="comment">//查找IP地址</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestInetAddress</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">InetAddress</span> <span class="variable">inetAddress1</span> <span class="operator">=</span> InetAddress.getByName(<span class="string">&quot;127.0.0.1&quot;</span>);</span><br><span class="line">            System.out.println(inetAddress1);</span><br><span class="line">            <span class="type">InetAddress</span> <span class="variable">inetAddress2</span> <span class="operator">=</span> InetAddress.getByName(<span class="string">&quot;www.baidu.com&quot;</span>);</span><br><span class="line">            System.out.println(inetAddress2);</span><br><span class="line">            <span class="type">InetAddress</span> <span class="variable">inetAddress3</span> <span class="operator">=</span> InetAddress.getByName(<span class="string">&quot;localhost&quot;</span>);</span><br><span class="line">            System.out.println(inetAddress3);</span><br><span class="line">            <span class="type">InetAddress</span> <span class="variable">inetAddress4</span> <span class="operator">=</span> InetAddress.getLocalHost();</span><br><span class="line">            System.out.println(inetAddress4);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnknownHostException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1LJ411z7vY?p=3&amp;share_source=copy_web">视频链接</a></p><h2 id="4-端口"><a class="markdownIt-Anchor" href="#4-端口"></a> 4. 端口</h2><p>端口表示计算机上的一个程序的进程；</p><ul><li>不同的进程有不同的端口号！用来区分软件！</li><li>单个协议下，端口号不能冲突</li><li>端口分类<ul><li>公有端口 0 ~ 1023<ul><li>HTTP：80</li><li>HTTPS： 443</li><li>FTP：21</li><li>Telent ： 23</li></ul></li><li>程序注册端口 1024 ~ 49151<ul><li>Tomcat： 8080</li><li>MySQL： 3306</li><li>Oracle：1521</li><li>动态、私有： 49152 ~ 65535</li></ul></li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Dos 命令</span><br><span class="line">netstat -ano //查看所有端口</span><br><span class="line">netstat -ano|finderstr&quot; &quot; //查看指定的端口</span><br><span class="line">tasklist|findstr &quot;10092&quot; //查看指定端口的进程</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.InetSocketAddress;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestInetSocketAddress</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">InetSocketAddress</span> <span class="variable">inetSocketAddress1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InetSocketAddress</span>(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">8080</span>);</span><br><span class="line">        <span class="type">InetSocketAddress</span> <span class="variable">inetSocketAddress2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InetSocketAddress</span>(<span class="string">&quot;localhost&quot;</span>, <span class="number">8080</span>);</span><br><span class="line">        System.out.println(inetSocketAddress1);</span><br><span class="line">        System.out.println(inetSocketAddress2);</span><br><span class="line"></span><br><span class="line">        System.out.println(inetSocketAddress1.getAddress());</span><br><span class="line">        System.out.println(inetSocketAddress1.getHostName());</span><br><span class="line">        System.out.println(inetSocketAddress1.getPort());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1LJ411z7vY?p=4&amp;share_source=copy_web">视频链接</a></p><h2 id="5-通信协议"><a class="markdownIt-Anchor" href="#5-通信协议"></a> 5. 通信协议</h2><p>协议：约定，就好比我们现在说的是普通话<br />网络通信协议：速率，传输码率，代码结构，传输控制…<br />TCP/IP协议簇（一种协议）：</p><ul><li>TCP：用户传输协议</li><li>UDP：用户数据报协议</li><li>IP：网络互连协议</li><li></li></ul><p>TCP：打电话</p><ul><li><p>连接，稳定</p></li><li><p>三次握手，四次挥手</p></li><li><p>客户端、服务端</p></li><li><p>传输完成，释放连接，效率低</p></li></ul><p>UDP：发短信</p><ul><li>不连接，不稳定</li><li>客户端、服务端：没有明确的界限</li><li>不管有没有准备好，都可以发给你</li><li>导弹</li><li>DDOS：洪水攻击！（饱和攻击）</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//三次握手，四次挥手</span></span><br><span class="line">A：你瞅啥？</span><br><span class="line">B: 瞅你咋地？</span><br><span class="line">A：干一场！</span><br><span class="line">A: 我要走了！</span><br><span class="line">B: 你真的要走了吗？</span><br><span class="line">B: 你真的真的要走了吗？</span><br><span class="line">A：我走了！</span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1LJ411z7vY?p=5&amp;share_source=copy_web">视频链接</a></p><h2 id="6-tcp"><a class="markdownIt-Anchor" href="#6-tcp"></a> 6. TCP</h2><h3 id="61-基本框架"><a class="markdownIt-Anchor" href="#61-基本框架"></a> 6.1 基本框架</h3><p>客户端：<br />1. 连接服务器Socket<br />2. 发送消息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"><span class="keyword">import</span> java.net.UnknownHostException;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TcpClientDemo1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Socket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">OutputStream</span> <span class="variable">os</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//1、要知道服务器的地址，端口号</span></span><br><span class="line">            <span class="type">InetAddress</span> <span class="variable">serverIP</span> <span class="operator">=</span> InetAddress.getByName(<span class="string">&quot;localhost&quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">port</span> <span class="operator">=</span> <span class="number">9999</span>;</span><br><span class="line">            <span class="comment">//2、创建一个socket连接</span></span><br><span class="line">            socket = <span class="keyword">new</span> <span class="title class_">Socket</span>(serverIP, port);</span><br><span class="line">            <span class="comment">//3、发射消息IO流</span></span><br><span class="line">            os = socket.getOutputStream();</span><br><span class="line">            os.write(<span class="string">&quot;Hello, Jay_Soul&quot;</span>.getBytes());</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (socket != <span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    socket.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>服务器：<br />1. 建立服务的端口Server 和 Socket<br />2. 等待用户的连接 accept<br />3. 接受用的消息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.ByteArrayInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TcpServerDemo1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">ServerSocket</span> <span class="variable">serverSocket</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Socket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">baos</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//1、我得有一个地址</span></span><br><span class="line">            serverSocket = <span class="keyword">new</span> <span class="title class_">ServerSocket</span>(<span class="number">9999</span>);</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">                <span class="comment">//2、等待客户端连接过来</span></span><br><span class="line">                socket = serverSocket.accept();</span><br><span class="line">                <span class="comment">//3、读取客户端的消息</span></span><br><span class="line">                is = socket.getInputStream();</span><br><span class="line">                <span class="comment">//管道流</span></span><br><span class="line">                baos = <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">                <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                <span class="type">int</span> len;</span><br><span class="line">                <span class="keyword">while</span> ((len = is.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                    baos.write(buffer, <span class="number">0</span>, len);</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.println(baos.toString());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">            byte[] buffer = new byte[1024];</span></span><br><span class="line"><span class="comment">                int len;</span></span><br><span class="line"><span class="comment">                while ((len = is.read(buffer)) != -1)&#123;</span></span><br><span class="line"><span class="comment">                    String msg = new String(buffer, 0 , len);</span></span><br><span class="line"><span class="comment">                    System.out.println(msg);</span></span><br><span class="line"><span class="comment">                &#125;</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">//关闭资源</span></span><br><span class="line">            <span class="keyword">if</span> (baos != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    baos.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (is != <span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    is.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (socket != <span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    socket.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                serverSocket.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1LJ411z7vY?p=6&amp;share_source=copy_web">视频链接</a></p><h3 id="62-文件上传"><a class="markdownIt-Anchor" href="#62-文件上传"></a> 6.2  文件上传</h3><p><strong>客户端</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TcpClientDemo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">//1.创建一个Socket连接</span></span><br><span class="line">        <span class="type">Socket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Socket</span>(InetAddress.getByName(<span class="string">&quot;127.0.0.1&quot;</span>), <span class="number">9000</span>);</span><br><span class="line">        <span class="comment">//2.创建一个输出流</span></span><br><span class="line">        <span class="type">OutputStream</span> <span class="variable">os</span> <span class="operator">=</span> socket.getOutputStream();</span><br><span class="line">        <span class="comment">//3.文件流</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;1.jpg&quot;</span>);</span><br><span class="line">        <span class="comment">//4.写出文件</span></span><br><span class="line">        <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="type">int</span> len;</span><br><span class="line">        <span class="keyword">while</span> ((len = fis.read(buffer)) != -<span class="number">1</span>)&#123;</span><br><span class="line">            os.write(buffer,<span class="number">0</span>, len);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//5.通知服务器传输完毕</span></span><br><span class="line">        socket.shutdownOutput();</span><br><span class="line">        <span class="comment">//6.确定接受完毕</span></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> socket.getInputStream();</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">baos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">byte</span>[] buffer2 = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="type">int</span> len2;</span><br><span class="line">        <span class="keyword">while</span> ((len2 = is.read(buffer2)) != -<span class="number">1</span>)&#123;</span><br><span class="line">            baos.write(buffer2,<span class="number">0</span>,len2);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(baos);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//7.关闭资源</span></span><br><span class="line">        baos.close();</span><br><span class="line">        is.close();</span><br><span class="line">        fis.close();</span><br><span class="line">        os.close();</span><br><span class="line">        socket.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>服务端</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TcpServerDemo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">//1.创建服务</span></span><br><span class="line">        <span class="type">ServerSocket</span> <span class="variable">serverSocket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServerSocket</span>(<span class="number">9000</span>);</span><br><span class="line">        <span class="comment">//2.监听客户端的连接</span></span><br><span class="line">        <span class="type">Socket</span> <span class="variable">socket</span> <span class="operator">=</span> serverSocket.accept();<span class="comment">//阻塞式监听，会一直等待客户端连接</span></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="comment">//3.获取输入流</span></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> socket.getInputStream();</span><br><span class="line">        <span class="comment">//4.文件输出</span></span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;receive.jpg&quot;</span>);</span><br><span class="line">        <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="type">int</span> len;</span><br><span class="line">        <span class="keyword">while</span> ((len = is.read(buffer)) != -<span class="number">1</span>)&#123;</span><br><span class="line">            fos.write(buffer,<span class="number">0</span>, len);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//5.通知客户端接收成功</span></span><br><span class="line">        <span class="type">OutputStream</span> <span class="variable">os</span> <span class="operator">=</span> socket.getOutputStream();</span><br><span class="line">        os.write(<span class="string">&quot;接受成功&quot;</span>.getBytes());</span><br><span class="line">        <span class="comment">//6. 关闭资源</span></span><br><span class="line">        os.close();</span><br><span class="line">        fos.close();</span><br><span class="line">        is.close();</span><br><span class="line">        socket.close();</span><br><span class="line">        serverSocket.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1LJ411z7vY?p=7&amp;share_source=copy_web">视频链接</a></p><h2 id="7-tomcat"><a class="markdownIt-Anchor" href="#7-tomcat"></a> 7. Tomcat</h2><ul><li>服务端<ul><li>自定义 S</li><li>Tomcat S</li></ul></li><li>客户端<ul><li><p>自定义 C</p></li><li><p>浏览器 B</p></li></ul></li></ul><p><a href="https://www.bilibili.com/video/BV1LJ411z7vY?p=8&amp;share_source=copy_web">视频链接</a></p><h2 id="8-udp"><a class="markdownIt-Anchor" href="#8-udp"></a> 8. UDP</h2><p><code>不用连接，需要得到对方地址</code></p><h3 id="81-基本框架"><a class="markdownIt-Anchor" href="#81-基本框架"></a> 8.1 基本框架</h3><p><strong>发送端</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UdpClientDemo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">//1.建立一个Socket</span></span><br><span class="line">        <span class="type">DatagramSocket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramSocket</span>();</span><br><span class="line">        <span class="comment">//2.建立包</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> <span class="string">&quot;你好&quot;</span>;</span><br><span class="line">        <span class="type">InetAddress</span> <span class="variable">localhost</span> <span class="operator">=</span> InetAddress.getByName(<span class="string">&quot;127.0.0.1&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">port</span> <span class="operator">=</span> <span class="number">9090</span>;</span><br><span class="line">        <span class="type">DatagramPacket</span> <span class="variable">packet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramPacket</span>(msg.getBytes(), <span class="number">0</span>, msg.getBytes().length, localhost, port);</span><br><span class="line">        <span class="comment">//3.发送包</span></span><br><span class="line">        socket.send(packet);</span><br><span class="line">        <span class="comment">//4.关闭流</span></span><br><span class="line">        socket.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>接收端</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.SocketException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UdpServerDemo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">//开放端口</span></span><br><span class="line">        <span class="type">DatagramSocket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramSocket</span>(<span class="number">9090</span>);</span><br><span class="line">        <span class="comment">//接受数据包</span></span><br><span class="line">        <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="type">DatagramPacket</span> <span class="variable">packet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramPacket</span>(buffer, <span class="number">0</span>, buffer.length);</span><br><span class="line">        socket.receive(packet);<span class="comment">//阻塞接受</span></span><br><span class="line">        System.out.println(packet.getAddress().getHostAddress());</span><br><span class="line">        System.out.println(<span class="keyword">new</span> <span class="title class_">String</span>(packet.getData(), <span class="number">0</span>, packet.getLength()));</span><br><span class="line">        <span class="comment">//关闭连接</span></span><br><span class="line">        socket.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1LJ411z7vY?p=9&amp;share_source=copy_web">视频链接</a></p><h3 id="82-循环接发消息"><a class="markdownIt-Anchor" href="#82-循环接发消息"></a> 8.2 循环接发消息</h3><p><strong>循环发送消息</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lesson03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.InetSocketAddress;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UdpSender01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">DatagramSocket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramSocket</span>(<span class="number">8888</span>);</span><br><span class="line">        <span class="comment">//准备数据：控制台读取System.in</span></span><br><span class="line">        <span class="type">BufferedReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">date</span> <span class="operator">=</span> reader.readLine();</span><br><span class="line">            <span class="type">byte</span>[] dates = date.getBytes();</span><br><span class="line">            <span class="type">DatagramPacket</span> <span class="variable">packet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramPacket</span>(dates, <span class="number">0</span>, dates.length, <span class="keyword">new</span> <span class="title class_">InetSocketAddress</span>(<span class="string">&quot;localhost&quot;</span>, <span class="number">6666</span>));</span><br><span class="line">            socket.send(packet);</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">&quot;bye&quot;</span>.equals(date)) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        socket.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>循环接收消息</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lesson03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UdpReceiver01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">DatagramSocket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramSocket</span>(<span class="number">6666</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="comment">//准备接收包裹</span></span><br><span class="line">            <span class="type">byte</span>[] container = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="type">DatagramPacket</span> <span class="variable">packet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramPacket</span>(container, <span class="number">0</span>, container.length);</span><br><span class="line">            socket.receive(packet);</span><br><span class="line"></span><br><span class="line">            <span class="type">byte</span>[] date = packet.getData();</span><br><span class="line">            <span class="type">String</span> <span class="variable">receive</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(date, <span class="number">0</span>, packet.getLength());</span><br><span class="line">            System.out.println(receive);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="string">&quot;bye&quot;</span>.equals(receive))  <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        socket.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1LJ411z7vY?p=10&amp;share_source=copy_web">视频链接</a></p><h3 id="83-udp多线程在线咨询"><a class="markdownIt-Anchor" href="#83-udp多线程在线咨询"></a> 8.3 UDP多线程在线咨询</h3><p><strong>发送端</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lesson04;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.InetSocketAddress;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TalkSend</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line">    <span class="type">DatagramSocket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">BufferedReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> fromPort;</span><br><span class="line">    <span class="keyword">private</span> String toIp;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> toPort;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">TalkSend</span><span class="params">(<span class="type">int</span> fromPort, String toIp, <span class="type">int</span> toPort)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.fromPort = fromPort;</span><br><span class="line">        <span class="built_in">this</span>.toIp = toIp;</span><br><span class="line">        <span class="built_in">this</span>.toPort = toPort;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            socket = <span class="keyword">new</span> <span class="title class_">DatagramSocket</span>(fromPort);</span><br><span class="line">            reader = <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">date</span> <span class="operator">=</span> reader.readLine();</span><br><span class="line">                <span class="type">byte</span>[] dates = date.getBytes();</span><br><span class="line">                <span class="type">DatagramPacket</span> <span class="variable">packet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramPacket</span>(dates, <span class="number">0</span>, dates.length, <span class="keyword">new</span> <span class="title class_">InetSocketAddress</span>(<span class="built_in">this</span>.toIp, <span class="built_in">this</span>.toPort));</span><br><span class="line">                socket.send(packet);</span><br><span class="line">                <span class="keyword">if</span> (<span class="string">&quot;bye&quot;</span>.equals(date)) <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        socket.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>接收端</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lesson04;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TalkReceive</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="type">DatagramSocket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> port;</span><br><span class="line">    <span class="keyword">private</span> String msgFrom;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">TalkReceive</span><span class="params">(<span class="type">int</span> port, String msgFrom)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.port = port;</span><br><span class="line">        <span class="built_in">this</span>.msgFrom = msgFrom;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            socket = <span class="keyword">new</span> <span class="title class_">DatagramSocket</span>(port);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">byte</span>[] container = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                <span class="type">DatagramPacket</span> <span class="variable">packet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramPacket</span>(container, <span class="number">0</span> , container.length);</span><br><span class="line">                socket.receive(packet);</span><br><span class="line"></span><br><span class="line">                <span class="type">byte</span>[] date = packet.getData();</span><br><span class="line">                <span class="type">String</span> <span class="variable">receive</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(date, <span class="number">0</span>, packet.getLength());</span><br><span class="line">                System.out.println(msgFrom +<span class="string">&quot; :&quot;</span> + receive);</span><br><span class="line">                <span class="keyword">if</span> (<span class="string">&quot;bye&quot;</span>.equals(receive)) <span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        socket.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>学生端</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lesson04;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentSend</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">TalkSend</span>(<span class="number">7777</span>,<span class="string">&quot;localhost&quot;</span>, <span class="number">9999</span>)).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">TalkReceive</span>(<span class="number">8888</span>,<span class="string">&quot;王老师&quot;</span>)).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>教师端</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lesson04;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TeacherSend</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">TalkSend</span>(<span class="number">5555</span>,<span class="string">&quot;localhost&quot;</span>, <span class="number">8888</span>)).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">TalkReceive</span>(<span class="number">9999</span>,<span class="string">&quot;张三&quot;</span>)).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1LJ411z7vY?p=11&amp;share_source=copy_web">视频链接</a></p><h2 id="9-url"><a class="markdownIt-Anchor" href="#9-url"></a> 9. URL</h2><p><code>统一资源定位符：定位资源的，点位互联网上的某一个资源</code><br /><code>协议：//ip地址：端口/项目名/资源</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lesson05;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">URLDemo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> MalformedURLException &#123;</span><br><span class="line">        <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;http://localhost:8080/helloworld/index.jsp?username=kuangshen&amp;password=123&quot;</span>);</span><br><span class="line">        System.out.println(url.getProtocol());<span class="comment">//协议</span></span><br><span class="line">        System.out.println(url.getHost());<span class="comment">//主机IP</span></span><br><span class="line">        System.out.println(url.getPort());<span class="comment">//端口</span></span><br><span class="line">        System.out.println(url.getPath());<span class="comment">//全路径</span></span><br><span class="line">        System.out.println(url.getFile());<span class="comment">//文件</span></span><br><span class="line">        System.out.println(url.getQuery());<span class="comment">//参数</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lesson05;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.HttpURLConnection;</span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">URLDown</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">//1.下载地址</span></span><br><span class="line">        <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;http://localhost:8080//gdj//123.txt&quot;</span>);</span><br><span class="line">        <span class="comment">//2.连接到这个资源</span></span><br><span class="line">        HttpURLConnection urlConnection= (HttpURLConnection) url.openConnection();</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> urlConnection.getInputStream();</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ware.txt&quot;</span>);</span><br><span class="line">        <span class="comment">//3.写出数据</span></span><br><span class="line">        <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="type">int</span> len;</span><br><span class="line">        <span class="keyword">while</span> ((len = inputStream.read(buffer)) != -<span class="number">1</span>)&#123;</span><br><span class="line">            fos.write(buffer, <span class="number">0</span>, len);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//4.断开连接</span></span><br><span class="line">        fos.close();</span><br><span class="line">        inputStream.close();</span><br><span class="line">        urlConnection.disconnect();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="%3Ciframe%20src=%22//player.bilibili.com/player.html?aid=77704395&amp;bvid=BV1LJ411z7vY&amp;cid=132936380&amp;page=12%22%20scrolling=%22no%22%20border=%220%22%20frameborder=%22no%22%20framespacing=%220%22%20allowfullscreen=%22true%22%3E%20%3C/iframe%3E">视频链接</a></p>]]></content>
      
      
      <categories>
          
          <category> 拓展知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java邮件发送</title>
      <link href="/posts/eedac2c7/"/>
      <url>/posts/eedac2c7/</url>
      
        <content type="html"><![CDATA[<h2 id="1-邮件发送原理"><a class="markdownIt-Anchor" href="#1-邮件发送原理"></a> 1. 邮件发送原理</h2><p><img src="https://i.loli.net/2021/10/14/J3OWohRq2PXDzCk.png" alt="image-20211014150823428" /></p><h2 id="2-导入jar包"><a class="markdownIt-Anchor" href="#2-导入jar包"></a> 2. 导入jar包</h2><p><a href="https://mvnrepository.com/artifact/javax.activation/activation">activation.jar</a></p><p><a href="https://mvnrepository.com/artifact/javax.mail/mail">mail.jar</a></p><h2 id="3-获取授权码"><a class="markdownIt-Anchor" href="#3-获取授权码"></a> 3. 获取授权码</h2><p><img src="https://i.loli.net/2021/10/14/d3XmagRPJUfCQlO.png" alt="image-20211014153627010" /></p><p><img src="https://i.loli.net/2021/10/14/uhYTVzDwsEJLKFc.png" alt="image-20211014153438517" /></p><h2 id="4-简单文本邮件发送实现"><a class="markdownIt-Anchor" href="#4-简单文本邮件发送实现"></a> 4. 简单文本邮件发送实现</h2><p><img src="https://i.loli.net/2021/10/14/yNHfSnAWmYThtVc.png" alt="image-20211014154653575" /></p><p><strong>步骤：</strong></p><p><strong>1.创建session对象</strong></p><p><strong>2.创建Transport对象</strong></p><p><strong>3.使用邮箱的用户名和授权码连上邮件服务器</strong></p><p><strong>4.创建一个Message对象（需要传递session）</strong></p><ul><li><strong>message需要指明发件人、收件人以及文件内容</strong></li></ul><p><strong>5.发送邮件</strong></p><p><strong>6.关闭连接</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.mail.util.MailSSLSocketFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.mail.*;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.InternetAddress;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeMessage;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jay_Soul</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Mailing</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">        Properties prop=<span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        prop.setProperty(<span class="string">&quot;mail.host&quot;</span>,<span class="string">&quot;smtp.qq.com&quot;</span>);<span class="comment">///设置QQ邮件服务器</span></span><br><span class="line">        prop.setProperty(<span class="string">&quot;mail.transport.protocol&quot;</span>,<span class="string">&quot;smtp&quot;</span>);<span class="comment">///邮件发送协议</span></span><br><span class="line">        prop.setProperty(<span class="string">&quot;mail.smtp.auth&quot;</span>,<span class="string">&quot;true&quot;</span>);<span class="comment">//需要验证用户密码</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//QQ邮箱需要设置SSL加密，其他邮箱不需要</span></span><br><span class="line">        MailSSLSocketFactory sf=<span class="keyword">new</span> <span class="title class_">MailSSLSocketFactory</span>();</span><br><span class="line">        sf.setTrustAllHosts(<span class="literal">true</span>);</span><br><span class="line">        prop.put(<span class="string">&quot;mail.smtp.ssl.enable&quot;</span>,<span class="string">&quot;true&quot;</span>);</span><br><span class="line">        prop.put(<span class="string">&quot;mail.smtp.ssl.socketFactory&quot;</span>,sf);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用javaMail发送邮件的5个步骤</span></span><br><span class="line">        <span class="comment">//1.创建定义整个应用程序所需要的环境信息的session对象</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//QQ才有！其他邮箱就不用</span></span><br><span class="line">        Session session=Session.getDefaultInstance(prop, <span class="keyword">new</span> <span class="title class_">Authenticator</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> PasswordAuthentication <span class="title function_">getPasswordAuthentication</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="comment">//发件人邮件用户名、授权码</span></span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PasswordAuthentication</span>(<span class="string">&quot;XXXX@qq.com&quot;</span>,<span class="string">&quot;授权码&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//开启session的debug模式，这样可以查看到程序发送Email的运行状态</span></span><br><span class="line">        session.setDebug(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//2.通过session得到transport对象</span></span><br><span class="line">        Transport ts=session.getTransport();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.使用邮箱的用户名和授权码连上邮件服务器</span></span><br><span class="line">        ts.connect(<span class="string">&quot;smtp.qq.com&quot;</span>,<span class="string">&quot;XXXX@qq.com&quot;</span>,<span class="string">&quot;授权码&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.创建邮件：写文件</span></span><br><span class="line">        <span class="comment">//注意需要传递session</span></span><br><span class="line">        MimeMessage message=<span class="keyword">new</span> <span class="title class_">MimeMessage</span>(session);</span><br><span class="line">        <span class="comment">//指明邮件的发件人</span></span><br><span class="line">        message.setFrom(<span class="keyword">new</span> <span class="title class_">InternetAddress</span>(<span class="string">&quot;XXXX@qq.com&quot;</span>));</span><br><span class="line">        <span class="comment">//指明邮件的收件人</span></span><br><span class="line">        message.setRecipient(Message.RecipientType.TO,<span class="keyword">new</span> <span class="title class_">InternetAddress</span>(<span class="string">&quot;XXXX@qq.com&quot;</span>));</span><br><span class="line">        <span class="comment">//邮件标题</span></span><br><span class="line">        message.setSubject(<span class="string">&quot;发送的标题&quot;</span>);</span><br><span class="line">        <span class="comment">//邮件的文本内容，本质是html语言</span></span><br><span class="line">        message.setContent(<span class="string">&quot;内容&quot;</span>,<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5.发送邮件</span></span><br><span class="line">        ts.sendMessage(message,message.getAllRecipients());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//6.关闭连接</span></span><br><span class="line">        ts.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5复杂文件内容的发送"><a class="markdownIt-Anchor" href="#5复杂文件内容的发送"></a> 5.复杂文件内容的发送</h2><h3 id="51-文件构成解析"><a class="markdownIt-Anchor" href="#51-文件构成解析"></a> 5.1 文件构成解析</h3><p><img src="https://i.loli.net/2021/10/15/cq54E3v2kNTxLsP.png" alt="image-20211015002633154" /></p><h3 id="52-包含图片的发送"><a class="markdownIt-Anchor" href="#52-包含图片的发送"></a> 5.2 包含图片的发送</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.mail.util.MailSSLSocketFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.activation.DataHandler;</span><br><span class="line"><span class="keyword">import</span> javax.activation.FileDataSource;</span><br><span class="line"><span class="keyword">import</span> javax.mail.*;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.InternetAddress;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeBodyPart;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeMessage;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeMultipart;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jay_Soul</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Mailing</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">        Properties prop=<span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        prop.setProperty(<span class="string">&quot;mail.host&quot;</span>,<span class="string">&quot;smtp.qq.com&quot;</span>);<span class="comment">///设置QQ邮件服务器</span></span><br><span class="line">        prop.setProperty(<span class="string">&quot;mail.transport.protocol&quot;</span>,<span class="string">&quot;smtp&quot;</span>);<span class="comment">///邮件发送协议</span></span><br><span class="line">        prop.setProperty(<span class="string">&quot;mail.smtp.auth&quot;</span>,<span class="string">&quot;true&quot;</span>);<span class="comment">//需要验证用户密码</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//QQ邮箱需要设置SSL加密，其他邮箱不需要</span></span><br><span class="line">        MailSSLSocketFactory sf=<span class="keyword">new</span> <span class="title class_">MailSSLSocketFactory</span>();</span><br><span class="line">        sf.setTrustAllHosts(<span class="literal">true</span>);</span><br><span class="line">        prop.put(<span class="string">&quot;mail.smtp.ssl.enable&quot;</span>,<span class="string">&quot;true&quot;</span>);</span><br><span class="line">        prop.put(<span class="string">&quot;mail.smtp.ssl.socketFactory&quot;</span>,sf);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用javaMail发送邮件的5个步骤</span></span><br><span class="line">        <span class="comment">//1.创建定义整个应用程序所需要的环境信息的session对象</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//QQ才有！其他邮箱就不用</span></span><br><span class="line">        Session session=Session.getDefaultInstance(prop, <span class="keyword">new</span> <span class="title class_">Authenticator</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> PasswordAuthentication <span class="title function_">getPasswordAuthentication</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="comment">//发件人邮件用户名、授权码</span></span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PasswordAuthentication</span>(<span class="string">&quot;XXXX@qq.com&quot;</span>,<span class="string">&quot;授权码&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//开启session的debug模式，这样可以查看到程序发送Email的运行状态</span></span><br><span class="line">        session.setDebug(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//2.通过session得到transport对象</span></span><br><span class="line">        Transport ts=session.getTransport();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.使用邮箱的用户名和授权码连上邮件服务器</span></span><br><span class="line">        ts.connect(<span class="string">&quot;smtp.qq.com&quot;</span>,<span class="string">&quot;XXXX@qq.com&quot;</span>,<span class="string">&quot;授权码&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.创建邮件：写文件</span></span><br><span class="line">        <span class="comment">//注意需要传递session</span></span><br><span class="line">        MimeMessage message=<span class="keyword">new</span> <span class="title class_">MimeMessage</span>(session);</span><br><span class="line">        <span class="comment">//指明邮件的发件人</span></span><br><span class="line">        message.setFrom(<span class="keyword">new</span> <span class="title class_">InternetAddress</span>(<span class="string">&quot;XXXX@qq.com&quot;</span>));</span><br><span class="line">        <span class="comment">//指明邮件的收件人</span></span><br><span class="line">        message.setRecipient(Message.RecipientType.TO,<span class="keyword">new</span> <span class="title class_">InternetAddress</span>(<span class="string">&quot;XXXX@qq.com&quot;</span>));</span><br><span class="line">        <span class="comment">//邮件标题</span></span><br><span class="line">        message.setSubject(<span class="string">&quot;发送的标题&quot;</span>);</span><br><span class="line">        <span class="comment">//邮件的文本内容</span></span><br><span class="line">        <span class="comment">//=================================准备图片数据=======================================</span></span><br><span class="line">        <span class="comment">//准备图片数据</span></span><br><span class="line">        MimeBodyPart image=<span class="keyword">new</span> <span class="title class_">MimeBodyPart</span>();</span><br><span class="line">        <span class="comment">//图片需要经过数据化的处理</span></span><br><span class="line">        <span class="type">DataHandler</span> <span class="variable">dh</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataHandler</span>(<span class="keyword">new</span> <span class="title class_">FileDataSource</span>(<span class="string">&quot;C:\\Users\\Jay_Soul\\Desktop\\cutcamera.png&quot;</span>));</span><br><span class="line">        <span class="comment">//在body中放入这个处理过图片的数据</span></span><br><span class="line">        image.setDataHandler(dh);</span><br><span class="line">        <span class="comment">//给这个图片设置一个ID名字</span></span><br><span class="line">        image.setContentID(<span class="string">&quot;1.png&quot;</span>);</span><br><span class="line">        <span class="comment">//设置图片名字，避免名字异常</span></span><br><span class="line">        image.setFileName(<span class="string">&quot;头像.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//准备正文的数据</span></span><br><span class="line">        <span class="type">MimeBodyPart</span> <span class="variable">text</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MimeBodyPart</span>();</span><br><span class="line">        text.setContent(<span class="string">&quot;这是一张头像&lt;img src=&#x27;cid:1.png&#x27;&gt;&quot;</span>,<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//描述数据关系</span></span><br><span class="line">        <span class="type">MimeMultipart</span> <span class="variable">mm</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">MimeMultipart</span>();</span><br><span class="line">        mm.addBodyPart(text);</span><br><span class="line">        mm.addBodyPart(image);</span><br><span class="line">        mm.setSubType(<span class="string">&quot;related&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置到消息中，保存修改</span></span><br><span class="line">        message.setContent(mm);</span><br><span class="line">        message.saveChanges();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5.发送邮件</span></span><br><span class="line">        ts.sendMessage(message,message.getAllRecipients());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//6.关闭连接</span></span><br><span class="line">        ts.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="53-包含文件的发送"><a class="markdownIt-Anchor" href="#53-包含文件的发送"></a> 5.3 包含文件的发送</h3><p><code>对文件内容进行了封装</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.mail.util.MailSSLSocketFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.activation.DataHandler;</span><br><span class="line"><span class="keyword">import</span> javax.activation.FileDataSource;</span><br><span class="line"><span class="keyword">import</span> javax.mail.*;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.*;</span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jay_Soul</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Mailing</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">        Properties prop=<span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        prop.setProperty(<span class="string">&quot;mail.host&quot;</span>,<span class="string">&quot;smtp.qq.com&quot;</span>);<span class="comment">///设置QQ邮件服务器</span></span><br><span class="line">        prop.setProperty(<span class="string">&quot;mail.transport.protocol&quot;</span>,<span class="string">&quot;smtp&quot;</span>);<span class="comment">///邮件发送协议</span></span><br><span class="line">        prop.setProperty(<span class="string">&quot;mail.smtp.auth&quot;</span>,<span class="string">&quot;true&quot;</span>);<span class="comment">//需要验证用户密码</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//QQ邮箱需要设置SSL加密，其他邮箱不需要</span></span><br><span class="line">        MailSSLSocketFactory sf=<span class="keyword">new</span> <span class="title class_">MailSSLSocketFactory</span>();</span><br><span class="line">        sf.setTrustAllHosts(<span class="literal">true</span>);</span><br><span class="line">        prop.put(<span class="string">&quot;mail.smtp.ssl.enable&quot;</span>,<span class="string">&quot;true&quot;</span>);</span><br><span class="line">        prop.put(<span class="string">&quot;mail.smtp.ssl.socketFactory&quot;</span>,sf);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用javaMail发送邮件的5个步骤</span></span><br><span class="line">        <span class="comment">//1.创建定义整个应用程序所需要的环境信息的session对象</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//QQ才有！其他邮箱就不用</span></span><br><span class="line">        Session session=Session.getDefaultInstance(prop, <span class="keyword">new</span> <span class="title class_">Authenticator</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> PasswordAuthentication <span class="title function_">getPasswordAuthentication</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="comment">//发件人邮件用户名、授权码</span></span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PasswordAuthentication</span>(<span class="string">&quot;XXXX@qq.com&quot;</span>,<span class="string">&quot;授权码&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//开启session的debug模式，这样可以查看到程序发送Email的运行状态</span></span><br><span class="line">        session.setDebug(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//2.通过session得到transport对象</span></span><br><span class="line">        Transport ts=session.getTransport();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.使用邮箱的用户名和授权码连上邮件服务器</span></span><br><span class="line">        ts.connect(<span class="string">&quot;smtp.qq.com&quot;</span>,<span class="string">&quot;XXXX@qq.com&quot;</span>,<span class="string">&quot;授权码&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.创建邮件：写文件</span></span><br><span class="line">        <span class="type">MimeMessage</span> <span class="variable">mimeMessage</span> <span class="operator">=</span> imageMail(session);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5.发送邮件</span></span><br><span class="line">        ts.sendMessage(mimeMessage,mimeMessage.getAllRecipients());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//6.关闭连接</span></span><br><span class="line">        ts.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> MimeMessage <span class="title function_">imageMail</span><span class="params">(Session session)</span> <span class="keyword">throws</span> MessagingException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//消息的固定信息</span></span><br><span class="line">        <span class="type">MimeMessage</span> <span class="variable">mimeMessage</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MimeMessage</span>(session);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//邮件发送人</span></span><br><span class="line">        mimeMessage.setFrom(<span class="keyword">new</span> <span class="title class_">InternetAddress</span>(<span class="string">&quot;jezer05@qq.com&quot;</span>));</span><br><span class="line">        <span class="comment">//邮件接收人，可以同时发送给很多人，我们这里只发给自己；</span></span><br><span class="line">        mimeMessage.setRecipient(Message.RecipientType.TO, <span class="keyword">new</span> <span class="title class_">InternetAddress</span>(<span class="string">&quot;jezer05@qq.com&quot;</span>));</span><br><span class="line">        mimeMessage.setSubject(<span class="string">&quot;我也不知道是个什么东西就发给你了&quot;</span>); <span class="comment">//邮件主题</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        编写邮件内容</span></span><br><span class="line"><span class="comment">        1.图片</span></span><br><span class="line"><span class="comment">        2.附件</span></span><br><span class="line"><span class="comment">        3.文本</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//图片</span></span><br><span class="line">        <span class="type">MimeBodyPart</span> <span class="variable">body1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MimeBodyPart</span>();</span><br><span class="line">        body1.setDataHandler(<span class="keyword">new</span> <span class="title class_">DataHandler</span>(<span class="keyword">new</span> <span class="title class_">FileDataSource</span>(<span class="string">&quot;C:\\Users\\Jay_Soul\\Desktop\\头像.png&quot;</span>)));</span><br><span class="line">        body1.setContentID(<span class="string">&quot;1.png&quot;</span>); <span class="comment">//图片设置ID</span></span><br><span class="line">        body1.setFileName(<span class="string">&quot;头像.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//文本</span></span><br><span class="line">        <span class="type">MimeBodyPart</span> <span class="variable">body2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MimeBodyPart</span>();</span><br><span class="line">        body2.setContent(<span class="string">&quot;请注意，我不是广告&lt;img src=&#x27;cid:1.png&#x27;&gt;&quot;</span>,<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//附件</span></span><br><span class="line">        <span class="type">MimeBodyPart</span> <span class="variable">body3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MimeBodyPart</span>();</span><br><span class="line">        body3.setDataHandler(<span class="keyword">new</span> <span class="title class_">DataHandler</span>(<span class="keyword">new</span> <span class="title class_">FileDataSource</span>(<span class="string">&quot;C:\\Users\\Jay_Soul\\Desktop\\javaWeb帮助文档.md&quot;</span>)));</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            body3.setFileName(MimeUtility.encodeText(<span class="string">&quot;javaWeb帮助文档.md&quot;</span>)); <span class="comment">//附件设置名字,注意中文乱码问题</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">MimeBodyPart</span> <span class="variable">body4</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MimeBodyPart</span>();</span><br><span class="line">        body4.setDataHandler(<span class="keyword">new</span> <span class="title class_">DataHandler</span>(<span class="keyword">new</span> <span class="title class_">FileDataSource</span>(<span class="string">&quot;C:\\Users\\Jay_Soul\\Desktop\\mail-1.4.7.jar&quot;</span>)));</span><br><span class="line">        body4.setFileName(<span class="string">&quot;1.jar&quot;</span>); <span class="comment">//附件设置名字</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//拼装邮件正文内容</span></span><br><span class="line">        <span class="type">MimeMultipart</span> <span class="variable">multipart1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MimeMultipart</span>();</span><br><span class="line">        multipart1.addBodyPart(body1);</span><br><span class="line">        multipart1.addBodyPart(body2);</span><br><span class="line">        multipart1.setSubType(<span class="string">&quot;related&quot;</span>); <span class="comment">//1.文本和图片内嵌成功！</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//new MimeBodyPart().setContent(multipart1); //将拼装好的正文内容设置为主体</span></span><br><span class="line">        <span class="type">MimeBodyPart</span> <span class="variable">contentText</span> <span class="operator">=</span>  <span class="keyword">new</span> <span class="title class_">MimeBodyPart</span>();</span><br><span class="line">        contentText.setContent(multipart1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//拼接附件</span></span><br><span class="line">        <span class="type">MimeMultipart</span> <span class="variable">allFile</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">MimeMultipart</span>();</span><br><span class="line">        allFile.addBodyPart(body3); <span class="comment">//附件</span></span><br><span class="line">        allFile.addBodyPart(body4); <span class="comment">//附件</span></span><br><span class="line">        allFile.addBodyPart(contentText);<span class="comment">//正文</span></span><br><span class="line">        allFile.setSubType(<span class="string">&quot;mixed&quot;</span>); <span class="comment">//正文和附件都存在邮件中，所有类型设置为mixed；</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//放到Message消息中</span></span><br><span class="line">        mimeMessage.setContent(allFile);</span><br><span class="line">        mimeMessage.saveChanges();<span class="comment">//保存修改</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> mimeMessage;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-javaweb发送邮件"><a class="markdownIt-Anchor" href="#6-javaweb发送邮件"></a> 6. JavaWeb发送邮件</h2><p>现在很多的网站都提供有用户注册功能， 通常我们注册成功之后就会收到一封来自注册网站的邮件。邮件里面的内容可能包含了我们的注册的用户名和密码以及一个激活账户的超链接等信息。今天我们也来实现一个这样的功能，用户注册成功之后，就将用户的注册信息以Email的形式发送到用户的注册邮箱当中，实现发送邮件功能就得借助于<code>JavaMail</code>了。</p><ol><li>新建一个JavaWeb项目，配置tomcat，添加jar包</li></ol><p><img src="https://i.loli.net/2021/10/14/qoHMGzhgVsEUWaX.png" alt="image-20211014174128078" /></p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.jezer<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>WebMailing<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/javax.activation/activation --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.activation<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>activation<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/javax.mail/mail --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.mail<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mail<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet.jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>编写对应的用户实体类</li></ol><p><code>Lombok</code></p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jezer.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jay_Soul</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUsername</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUsername</span><span class="params">(String username)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPassword</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPassword</span><span class="params">(String password)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getEmail</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setEmail</span><span class="params">(String email)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.email = email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(String username, String password, String email)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">        <span class="built_in">this</span>.email = email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;username=&#x27;&quot;</span> + username + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, password=&#x27;&quot;</span> + password + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, email=&#x27;&quot;</span> + email + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>前端注册页面</li></ol> <figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;注册&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;form action=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/register.do&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">    用户名：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span>&gt;&lt;br/&gt;</span><br><span class="line">    密码：&lt;input type=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;password&quot;</span>&gt;&lt;br/&gt;</span><br><span class="line">    邮箱：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;email&quot;</span>&gt;&lt;br/&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;注册&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ol start="4"><li>邮件发送工具类</li></ol> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jezer.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.mail.util.MailSSLSocketFactory;</span><br><span class="line"><span class="keyword">import</span> com.jezer.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.mail.*;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.InternetAddress;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeMessage;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 网站3s原则：用户体验</span></span><br><span class="line"><span class="comment"> * 多线程实现用户体验！！ （异步处理）</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jay_Soul</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MailSender</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line">    <span class="comment">//用于给用户发送邮件的邮箱</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">from</span> <span class="operator">=</span> <span class="string">&quot;jezer05@qq.com&quot;</span>;</span><br><span class="line">    <span class="comment">//邮箱的用户名</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;Jezer&quot;</span>;</span><br><span class="line">    <span class="comment">//邮箱的密码</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;授权码&quot;</span>;</span><br><span class="line">    <span class="comment">//发送邮件的服务器地址</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">host</span> <span class="operator">=</span> <span class="string">&quot;smtp.qq.com&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> User user;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MailSender</span><span class="params">(User user)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.user = user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 重写run方法的实现，在run方法中发送邮件给指定的用户</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="type">Properties</span> <span class="variable">prop</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">            prop.setProperty(<span class="string">&quot;mail.host&quot;</span>, host);</span><br><span class="line">            prop.setProperty(<span class="string">&quot;mail.transport.protocol&quot;</span>, <span class="string">&quot;smtp&quot;</span>);</span><br><span class="line">            prop.setProperty(<span class="string">&quot;mail.smtp.auth&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 关于QQ邮箱，还要设置SSL加密，加上以下代码即可</span></span><br><span class="line">            <span class="type">MailSSLSocketFactory</span> <span class="variable">sf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MailSSLSocketFactory</span>();</span><br><span class="line">            sf.setTrustAllHosts(<span class="literal">true</span>);</span><br><span class="line">            prop.put(<span class="string">&quot;mail.smtp.ssl.enable&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">            prop.put(<span class="string">&quot;mail.smtp.ssl.socketFactory&quot;</span>, sf);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//1、创建定义整个应用程序所需的环境信息的 Session 对象</span></span><br><span class="line">            <span class="type">Session</span> <span class="variable">session</span> <span class="operator">=</span> Session.getDefaultInstance(prop, <span class="keyword">new</span> <span class="title class_">Authenticator</span>() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> PasswordAuthentication <span class="title function_">getPasswordAuthentication</span><span class="params">()</span> &#123;</span><br><span class="line">                    <span class="comment">//发件人邮件用户名、授权码</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PasswordAuthentication</span>(<span class="string">&quot;jezer05@qq.com&quot;</span>, <span class="string">&quot;授权码&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//开启Session的debug模式，这样就可以查看到程序发送Email的运行状态</span></span><br><span class="line">            session.setDebug(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//2、通过session得到transport对象</span></span><br><span class="line">            <span class="type">Transport</span> <span class="variable">ts</span> <span class="operator">=</span> session.getTransport();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//3、使用邮箱的用户名和授权码连上邮件服务器</span></span><br><span class="line">            ts.connect(host, username, password);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//4、创建邮件</span></span><br><span class="line">            <span class="type">MimeMessage</span> <span class="variable">message</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MimeMessage</span>(session);</span><br><span class="line">            message.setFrom(<span class="keyword">new</span> <span class="title class_">InternetAddress</span>(from)); <span class="comment">//发件人</span></span><br><span class="line">            message.setRecipient(Message.RecipientType.TO, <span class="keyword">new</span> <span class="title class_">InternetAddress</span>(user.getEmail())); <span class="comment">//收件人</span></span><br><span class="line">            message.setSubject(<span class="string">&quot;用户注册邮件&quot;</span>); <span class="comment">//邮件的标题</span></span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">info</span> <span class="operator">=</span> <span class="string">&quot;恭喜您注册成功，您的用户名：&quot;</span> + user.getUsername() + <span class="string">&quot;,您的密码：&quot;</span> + user.getPassword() + <span class="string">&quot;，请妥善保管，如有问题请联系网站客服!!&quot;</span>;</span><br><span class="line"></span><br><span class="line">            message.setContent(info, <span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line">            message.saveChanges();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//发送邮件</span></span><br><span class="line">            ts.sendMessage(message, message.getAllRecipients());</span><br><span class="line">            ts.close();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>编写对应的servlet处理类</li></ol> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jezer.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.jezer.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.jezer.utils.MailSender;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jay_Soul</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RegisterServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//接收用户请求，封装成对象</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">email</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;email&quot;</span>);</span><br><span class="line">            <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(username,password,email);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//用户注册成功之后，给用户发送一封邮件</span></span><br><span class="line">            <span class="comment">//我们使用线程来专门发送邮件，防止出现耗时，和网站注册人数过多的情况；</span></span><br><span class="line">            <span class="type">MailSender</span> <span class="variable">send</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MailSender</span>(user);</span><br><span class="line">            <span class="comment">//启动线程，线程启动之后就会执行run方法来发送邮件</span></span><br><span class="line">            send.start();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//注册用户</span></span><br><span class="line">            request.setAttribute(<span class="string">&quot;message&quot;</span>, <span class="string">&quot;注册成功，我们已经发了一封带了注册信息的电子邮件，请查收！如网络不稳定，可能过会儿才能收到！！&quot;</span>);</span><br><span class="line">            request.getRequestDispatcher(<span class="string">&quot;info.jsp&quot;</span>).forward(request, response);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            request.setAttribute(<span class="string">&quot;message&quot;</span>, <span class="string">&quot;注册失败！！&quot;</span>);</span><br><span class="line">            request.getRequestDispatcher(<span class="string">&quot;info.jsp&quot;</span>).forward(request, response);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doGet(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>注册Servlet</li></ol> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>RegisterServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.jezer.servlet.RegisterServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>RegisterServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/register.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="7"><li>发送成功或失败的反馈页面</li></ol> <figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Jay_Soul</span><br><span class="line">  Date: <span class="number">2021</span>/<span class="number">10</span>/<span class="number">14</span></span><br><span class="line">  Time: <span class="number">17</span>:<span class="number">52</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;提示信息&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">$&#123;message&#125;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="8"><li>Tomcat运行</li></ol><h2 id="7-坑点记录"><a class="markdownIt-Anchor" href="#7-坑点记录"></a> 7. 坑点记录</h2><h3 id="71-案发经历"><a class="markdownIt-Anchor" href="#71-案发经历"></a> 7.1 案发经历</h3><ol><li>我直接创建一个没有原型的Maven项目</li></ol><p><img src="https://i.loli.net/2021/10/14/6khZ812X7eGvFiM.png" alt="image-20211014230330670" /></p><ol start="2"><li>然后在项目中添加框架支持（不是新建模块）</li></ol><p><img src="https://i.loli.net/2021/10/14/peZ3OW9uVgrTCn7.png" alt="image-20211014220539132" /></p><ol start="3"><li><p>选择Web应用程序<br /><img src="https://i.loli.net/2021/10/14/vny8tPhKS6ANUqm.png" alt="image-20211014230720091" /></p></li><li><p>当我一切准备就绪后，满怀期待的启动Tomcat，结果报了404，看了一眼Tomact，发现生成了<code>out</code>文件夹，并没有``target<code>文件夹（这个问题之前遇见过），我在</code>pom.xml<code>中加入</code><packaging>war</packaging><code>即可（希望大佬能解释一波原理），我们可以看到</code>target`文件夹出来了</p></li></ol><p><img src="https://i.loli.net/2021/10/14/vehFX5tcz3IdVoy.png" alt="image-20211014232339803" /></p><p><img src="https://i.loli.net/2021/10/14/CDcdxJUZo19LBgm.png" alt="image-20211014232738147" /></p><ol start="5"><li>再一次快快乐乐的点击运行Tomcat，网站也正常弹出index.jsp界面，结果点下注册，她还是来了！</li></ol><p><img src="https://i.loli.net/2021/10/14/OKbkfatcWDhli2T.png" alt="image-20211014231503177" /></p><p><img src="https://i.loli.net/2021/10/14/zCEY4GMpOojN8LI.png" alt="image-20211014231527260" /></p><ol start="6"><li>从报错信息可以看到，服务器没找到servlet类，我大胆猜测，class类没进webapp（其实我还是把整个代码过了一遍，以为是代码问题，绷不住了），我打开<code>target</code>文件夹一看，果不其然，他真的很干净</li></ol><p><img src="https://i.loli.net/2021/10/14/t6UKQYTg1lwO4nN.png" alt="image-20211014233125434" /></p><ol start="7"><li>又到了紧张刺激的环节，我把Maven选项卡搞了个遍，还有不停的查看项目结构，导入jar包…痛苦</li></ol><p><img src="https://i.loli.net/2021/10/14/UfJSsHv8a9GITd3.png" alt="image-20211014233246775" /></p><ol start="8"><li>在各种瞎点的过程中，get了意外的收获，我发现web资源目录发生了改变，那个地址不就是从原型导入的地址吗，web文件的蓝色圆点标志也消失了（现在知道，那个蓝色圆点标志就代表服务器文件夹所在地）</li></ol><p><img src="https://i.loli.net/2021/10/14/f8hgp61TnCV5tMb.png" alt="image-20211014233908104" /></p><p><img src="https://i.loli.net/2021/10/14/Q6sGpD2lvkY4y3J.png" alt="image-20211014233758932" /></p><p><img src="https://i.loli.net/2021/10/14/7o2UhONW3SIuwel.png" alt="image-20211014233949220" /></p><ol start="9"><li>现在可以确定一件事，只要出现<code>class</code>文件，问题就可以顺利解决，当我点击<code>生命周期</code>中的<code>install</code>后，惊奇发现，<code>target</code>文件终于出现<code>class</code>文件，同时报了一段错误<code>webxml attribute is required (or pre-existing WEB-INF/web.xml if executing in update mode)</code>翻译成中文<code>需要 webxml 属性（或预先存在的 WEB-INF/Web.xml如果在更新模式下执行）</code></li></ol><p><img src="https://i.loli.net/2021/10/14/ZfJ8hRsjvVgraUo.png" alt="image-20211014235030107" /></p><ol start="10"><li>之后我点击启动Tomcat，突然发现问题解决了，猛男落泪了。</li></ol><h3 id="72-总结"><a class="markdownIt-Anchor" href="#72-总结"></a> 7.2 总结</h3><p>个人猜测，可能是Maven项目默认认为<code>webapp</code>在<code>src</code>下，所以一直加载不出<code>class</code>,如果一开始选择创建新模块就没这么多事了，以上全为个人观点，我是小白，很多原理也不清楚，希望大佬能在评论区指点迷津</p>]]></content>
      
      
      <categories>
          
          <category> 拓展知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SMBMS(超市管理项目)</title>
      <link href="/posts/8ce5d842/"/>
      <url>/posts/8ce5d842/</url>
      
        <content type="html"><![CDATA[<p><code>注意事项:</code>js代码中文乱码问题，可以将编码改成UTF-8-bom，记得清除网站缓存<kbd>Ctcl</kbd>+<kbd>Shift</kbd>+<kbd>Delete</kbd></p><p><a href="https://github.com/Archer-Jezer/SMBMS.git">SMBMS项目github下载</a></p><p><a href="https://pan.baidu.com/s/1OlhHZlx8OK-NKK138lGW0Q">SMBMS项目百度网盘下载</a>               提取码rex3</p><p><mark>记得修改smbms\WEB-INF\classes下的db.properties文件内容，该项目只完成到用户管理，可直接在Tomcat中跑</mark></p><h3 id="1-搭建项目准备工作"><a class="markdownIt-Anchor" href="#1-搭建项目准备工作"></a> 1. 搭建项目准备工作</h3><ol><li><p>搭建一个maven web 项目</p></li><li><p>配置Tomcat</p></li><li><p>测试项目是否能够跑起来</p></li><li><p>导入项目中需要的jar包;<br />jsp，Servlet，mysql驱动，jstl，standard</p></li><li><p>构建项目包结构</p></li><li><p>编写实体类<br />ROM映射:表-类映射</p></li><li><p>编写基础公共类<br />1、数据库配置文件（mysql5.xx和8.xx的编写有差异）</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">driver</span> = <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span> = <span class="string">jdbc:mysql://localhost:3306/jdbcStudy?useUnicode = true&amp;characterEncoding =utf8&amp;useSSL= true &amp;serverTimezone=GMT%2B8</span></span><br><span class="line"><span class="attr">username</span> = <span class="string">root</span></span><br><span class="line"><span class="attr">password</span> = <span class="string">12345678</span></span><br></pre></td></tr></table></figure><p>2、编写数据库的公共类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jezer.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jay_Soul</span></span><br><span class="line"><span class="comment"> * 操作数据库的公共类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BaseDao</span> &#123;</span><br><span class="line">    <span class="comment">//静态代码块,在类加载的时候执行</span></span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String driver;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String url;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String user;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**初始化连接参数,从配置文件里获得*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        <span class="type">String</span> <span class="variable">configFile</span> <span class="operator">=</span> <span class="string">&quot;db.properties&quot;</span>;</span><br><span class="line">        InputStream is= BaseDao.class.getClassLoader().getResourceAsStream(configFile);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            properties.load(is);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        driver=properties.getProperty(<span class="string">&quot;driver&quot;</span>);</span><br><span class="line">        url=properties.getProperty(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">        user=properties.getProperty(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        password=properties.getProperty(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取数据库连接</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title function_">getConnection</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(driver);</span><br><span class="line">            connection = DriverManager.getConnection(url, user, password);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> connection;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**编写查询公共方法*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ResultSet <span class="title function_">executeQuery</span><span class="params">(Connection connection, PreparedStatement preparedStatement,ResultSet resultSet, String sql, Object[] params)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">        preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; params.length; i++) &#123;</span><br><span class="line">            <span class="comment">//setObject，占位符从1开始，但是数组下标从0开始</span></span><br><span class="line">            preparedStatement.setObject(i + <span class="number">1</span>, params[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        resultSet = preparedStatement.executeQuery();</span><br><span class="line">        <span class="keyword">return</span> resultSet;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**编写更新公共方法*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">execute</span><span class="params">(Connection connection,PreparedStatement preparedStatement , String sql, Object[] params)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">        preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; params.length; i++) &#123;</span><br><span class="line">            <span class="comment">//setObject，占位符从1开始，但是数组下标从0开始</span></span><br><span class="line">            preparedStatement.setObject(i + <span class="number">1</span>, params[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> preparedStatement.executeUpdate();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**释放资源*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">closeResource</span><span class="params">(Connection connection, PreparedStatement preparedStatement, ResultSet resultSet)</span>&#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isClose</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (resultSet != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resultSet.close();</span><br><span class="line">                <span class="comment">//GC回收</span></span><br><span class="line">                resultSet = <span class="literal">null</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">                isClose = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (preparedStatement != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                preparedStatement.close();</span><br><span class="line">                <span class="comment">//GC回收</span></span><br><span class="line">                preparedStatement = <span class="literal">null</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">                isClose = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">                <span class="comment">//GC回收</span></span><br><span class="line">                connection = <span class="literal">null</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">                isClose = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> isClose;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3、编写字符编码过滤器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jezer.filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jay_Soul</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CharacterEncodingFilter</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        servletRequest.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        servletResponse.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.jezer.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>导入静态资源</p></li></ol><h2 id="2登录功能实现"><a class="markdownIt-Anchor" href="#2登录功能实现"></a> 2.登录功能实现</h2><ol><li><p>编写前端页面</p></li><li><p>设置首页</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span><br><span class="line">    pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;系统登录 - 超市订单管理系统&lt;/title&gt;</span><br><span class="line">    &lt;link type=<span class="string">&quot;text/css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;$&#123;pageContext.request.contextPath &#125;/css/style.css&quot;</span> /&gt;</span><br><span class="line">    &lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line"><span class="comment">/* if(top.location!=self.location)&#123;</span></span><br><span class="line"><span class="comment">      top.location=self.location;</span></span><br><span class="line"><span class="comment"> &#125; */</span></span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body class=<span class="string">&quot;login_bg&quot;</span>&gt;</span><br><span class="line">    &lt;section class=<span class="string">&quot;loginBox&quot;</span>&gt;</span><br><span class="line">        &lt;header class=<span class="string">&quot;loginHeader&quot;</span>&gt;</span><br><span class="line">            &lt;h1&gt;超市订单管理系统&lt;/h1&gt;</span><br><span class="line">        &lt;/header&gt;</span><br><span class="line">        &lt;section class=<span class="string">&quot;loginCont&quot;</span>&gt;</span><br><span class="line">        &lt;form class=<span class="string">&quot;loginForm&quot;</span> action=<span class="string">&quot;$&#123;pageContext.request.contextPath &#125;/login.do&quot;</span>  name=<span class="string">&quot;actionForm&quot;</span> id=<span class="string">&quot;actionForm&quot;</span>  method=<span class="string">&quot;post&quot;</span> &gt;</span><br><span class="line">&lt;div class=<span class="string">&quot;info&quot;</span>&gt;$&#123;error&#125;&lt;/div&gt;</span><br><span class="line">&lt;div class=<span class="string">&quot;inputbox&quot;</span>&gt;</span><br><span class="line">                    &lt;label <span class="keyword">for</span>=<span class="string">&quot;userCode&quot;</span>&gt;用户名：&lt;/label&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;text&quot;</span> class=<span class="string">&quot;input-text&quot;</span> id=<span class="string">&quot;userCode&quot;</span> name=<span class="string">&quot;userCode&quot;</span> placeholder=<span class="string">&quot;请输入用户名&quot;</span> required/&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=<span class="string">&quot;inputbox&quot;</span>&gt;</span><br><span class="line">                    &lt;label <span class="keyword">for</span>=<span class="string">&quot;userPassword&quot;</span>&gt;密码：&lt;/label&gt;</span><br><span class="line">                    &lt;input type=<span class="string">&quot;password&quot;</span> id=<span class="string">&quot;userPassword&quot;</span> name=<span class="string">&quot;userPassword&quot;</span> placeholder=<span class="string">&quot;请输入密码&quot;</span> required/&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">&lt;div class=<span class="string">&quot;subBtn&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">                    &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;登录&quot;</span>/&gt;</span><br><span class="line">                    &lt;input type=<span class="string">&quot;reset&quot;</span> value=<span class="string">&quot;重置&quot;</span>/&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">        &lt;/section&gt;</span><br><span class="line">    &lt;/section&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>login.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>编写dao层登录用户登录的接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line">    <span class="comment">/**得到要登录的用户*/</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">getLoginUser</span><span class="params">(Connection connection, String userCode)</span> <span class="keyword">throws</span> SQLException;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>编写dao层接口的实现类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jezer.dao.user;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.jezer.dao.BaseDao;</span><br><span class="line"><span class="keyword">import</span> com.jezer.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jay_Soul</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title class_">UserDao</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">getLoginUser</span><span class="params">(Connection connection, String userCode)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">preparedStatement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from smbms_user where user userCode = ?&quot;</span>;</span><br><span class="line">            Object[] params = &#123;userCode&#125;;</span><br><span class="line">            resultSet = BaseDao.executeQuery(connection, preparedStatement, resultSet, sql, params);</span><br><span class="line">            <span class="keyword">if</span> (resultSet.next())&#123;</span><br><span class="line">                user = <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">                user.setId(resultSet.getInt(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">                user.setUserCode(resultSet.getString(<span class="string">&quot;userCode&quot;</span>));</span><br><span class="line">                user.setUserName(resultSet.getString(<span class="string">&quot;userName&quot;</span>));</span><br><span class="line">                user.setUserPassword(resultSet.getString(<span class="string">&quot;userPassword&quot;</span>));</span><br><span class="line">                user.setGender(resultSet.getInt(<span class="string">&quot;gender&quot;</span>));</span><br><span class="line">                user.setBirthday(resultSet.getDate(<span class="string">&quot;birthday&quot;</span>));</span><br><span class="line">                user.setPhone(resultSet.getString(<span class="string">&quot;phone&quot;</span>));</span><br><span class="line">                user.setAddress(resultSet.getString(<span class="string">&quot;address&quot;</span>));</span><br><span class="line">                user.setUserRole(resultSet.getInt(<span class="string">&quot;userRole&quot;</span>));</span><br><span class="line">                user.setCreatedBy(resultSet.getInt(<span class="string">&quot;createdBy&quot;</span>));</span><br><span class="line">                user.setCreationDate(resultSet.getTimestamp(<span class="string">&quot;creationDate&quot;</span>));</span><br><span class="line">                user.setModifyBy(resultSet.getInt(<span class="string">&quot;modifyBy&quot;</span>));</span><br><span class="line">                user.setModifyDate(resultSet.getTimestamp(<span class="string">&quot;modifyDate&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            BaseDao.closeResource(<span class="literal">null</span>, preparedStatement, resultSet);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>业务层接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//业务层接口</span></span><br><span class="line"><span class="keyword">public</span> User <span class="title function_">login</span><span class="params">(String userCode, String password)</span>;</span><br></pre></td></tr></table></figure><ol start="6"><li>业务层实现类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jezer.service.user;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.jezer.dao.BaseDao;</span><br><span class="line"><span class="keyword">import</span> com.jezer.dao.user.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.jezer.dao.user.UserDaoImpl;</span><br><span class="line"><span class="keyword">import</span> com.jezer.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jay_Soul</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 业务层都会调用dao层，所以我们要引入Dao层</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UserServiceImpl</span><span class="params">()</span>&#123;</span><br><span class="line">        userDao = <span class="keyword">new</span> <span class="title class_">UserDaoImpl</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">login</span><span class="params">(String userCode, String password)</span> &#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection = BaseDao.getConnection();</span><br><span class="line">            <span class="comment">//通过业务层调用对应的具体的数据库操作</span></span><br><span class="line">            user = userDao.getLoginUser(connection, userCode);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            BaseDao.closeResource(connection, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>  user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="7"><li>业务层代码测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">UserService</span> <span class="variable">userService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserServiceImpl</span>();</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.login(<span class="string">&quot;admin&quot;</span>, <span class="string">&quot;wedawdasdfa&quot;</span>);</span><br><span class="line">    System.out.println(user.getUserPassword());</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="8"><li>编写Servlet</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jezer.servlet.user;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.jezer.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.jezer.service.user.UserService;</span><br><span class="line"><span class="keyword">import</span> com.jezer.service.user.UserServiceImpl;</span><br><span class="line"><span class="keyword">import</span> com.jezer.util.Constants;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jay_Soul</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Servlet：控制层，调用业务层代码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;LoginServlet--start...&quot;</span>);</span><br><span class="line">        <span class="comment">//获取用户名和密码</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">userCode</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;userCode&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">userPassword</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;userPassword&quot;</span>);</span><br><span class="line">        <span class="comment">//和数据库中的密码进行对比，调用业务层</span></span><br><span class="line">        <span class="type">UserService</span> <span class="variable">userService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserServiceImpl</span>();</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.login(userCode, userPassword);</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != user &amp;&amp; userPassword.equals(user.getUserPassword()))&#123;</span><br><span class="line">            <span class="comment">//将用户信息放到session中;</span></span><br><span class="line">            req.getSession().setAttribute(Constants.USER_SESSION, user);</span><br><span class="line">            <span class="comment">//跳转到主页</span></span><br><span class="line">            resp.sendRedirect(<span class="string">&quot;jsp/frame.jsp&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//如果失败，返回错误信息</span></span><br><span class="line">            req.setAttribute(<span class="string">&quot;error&quot;</span>, <span class="string">&quot;用户名或者密码错误&quot;</span>);</span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;login.jsp&quot;</span>).forward(req, resp);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="9"><li>注册Servlet</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LoginServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.jezer.servlet.user.LoginServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LoginServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/login.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="10"><li>测试访问,保证以上功能可以成功</li></ol></li></ol><h2 id="3-登录功能优化"><a class="markdownIt-Anchor" href="#3-登录功能优化"></a> 3. 登录功能优化</h2><h3 id="31-注销功能"><a class="markdownIt-Anchor" href="#31-注销功能"></a> 3.1 注销功能</h3><p>思路：移除session，返回登录页面</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jezer.servlet.user;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.jezer.util.Constants;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jay_Soul</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LogoutServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//移除用户的Constant.USER_SESSION</span></span><br><span class="line">        req.getSession().removeAttribute(Constants.USER_SESSION);</span><br><span class="line">        resp.sendRedirect(req.getContextPath()+<span class="string">&quot;/login.jsp&quot;</span>);<span class="comment">//返回登录界面</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LogoutServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.jezer.servlet.user.LogoutServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LogoutServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/jsp/logout.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="32-登录拦截优化"><a class="markdownIt-Anchor" href="#32-登录拦截优化"></a> 3.2 登录拦截优化</h3><p>编写一个过滤器，并注册</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jezer.filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.jezer.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.jezer.util.Constants;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jay_Soul</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysFilter</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        <span class="type">HttpServletRequest</span> <span class="variable">request</span> <span class="operator">=</span> (HttpServletRequest) servletRequest;</span><br><span class="line">        <span class="type">HttpServletResponse</span> <span class="variable">response</span> <span class="operator">=</span> (HttpServletResponse) servletResponse;</span><br><span class="line">        <span class="comment">//过滤器，从Session中获取用户</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User) request.getSession().getAttribute(Constants.USER_SESSION);</span><br><span class="line">        <span class="keyword">if</span> (user == <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="comment">//说明已经被移除或注销或者未登录</span></span><br><span class="line">            response.sendRedirect(<span class="string">&quot;/smbms/error.jsp&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>SysFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.jezer.filter.SysFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>SysFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/jsp/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-密码修改"><a class="markdownIt-Anchor" href="#4-密码修改"></a> 4. 密码修改</h2><ol><li>导入前端素材</li><li>写项目，建议从底层向上写</li><li>UserDao接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**修改当前用户密码*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">updatePwd</span><span class="params">(Connection connection, <span class="type">int</span> id, String password)</span> <span class="keyword">throws</span> SQLException;</span><br></pre></td></tr></table></figure><ol start="4"><li>UserDao接口实现类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改用户密码</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">updatePwd</span><span class="params">(Connection connection, <span class="type">int</span> id, String password)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">    <span class="type">PreparedStatement</span> <span class="variable">preparedStatement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">execute</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (connection != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;update smbms_user set userPassword = ? where id = ? &quot;</span>;</span><br><span class="line">        Object params[] = &#123;password, id&#125;;</span><br><span class="line">        execute = BaseDao.execute(connection, preparedStatement, sql, params);</span><br><span class="line">        BaseDao.closeResource(<span class="literal">null</span>, preparedStatement, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> execute;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>UserService层</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据用户id修改密码</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">updatePwd</span><span class="params">(<span class="type">int</span> id, String password)</span>;</span><br></pre></td></tr></table></figure><ol start="6"><li>UserService实现类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 修改用户密码</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">updatePwd</span><span class="params">(<span class="type">int</span> id, String password)</span> &#123;</span><br><span class="line">    <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">isOK</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改密码</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        connection = BaseDao.getConnection();</span><br><span class="line">        <span class="keyword">if</span> (userDao.updatePwd(connection, id, password) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            isOK = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">        BaseDao.closeResource(connection,<span class="literal">null</span>,<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> isOK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="7"><li>servlet记得实现复用，要提取出方法！</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jezer.servlet.user;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.jezer.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.jezer.service.user.UserService;</span><br><span class="line"><span class="keyword">import</span> com.jezer.service.user.UserServiceImpl;</span><br><span class="line"><span class="keyword">import</span> com.jezer.util.Constants;</span><br><span class="line"><span class="keyword">import</span> com.mysql.cj.util.StringUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//修改密码</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">method</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;method&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;method&quot;</span>.equals(method) &amp;&amp; <span class="literal">null</span> != method)&#123;</span><br><span class="line">            <span class="built_in">this</span>.updatePwd(req, resp);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改用户密码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updatePwd</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span>&#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">object</span> <span class="operator">=</span> req.getSession().getAttribute(Constants.USER_SESSION);</span><br><span class="line">        <span class="type">String</span> <span class="variable">newpassword</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;newpassword&quot;</span>);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isOK</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != object &amp;&amp; !StringUtils.isNullOrEmpty(newpassword))&#123;</span><br><span class="line">            <span class="type">UserService</span> <span class="variable">userService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserServiceImpl</span>();</span><br><span class="line">            <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User) object;</span><br><span class="line">            isOK = userService.updatePwd(user.getId(), newpassword);</span><br><span class="line">            <span class="keyword">if</span> (isOK)&#123;</span><br><span class="line">                req.setAttribute(Constants.SYS_MESSAGE, <span class="string">&quot;修改密码成功,请退出并使用新密码重新登录！&quot;</span>);</span><br><span class="line">                req.getSession().removeAttribute(Constants.USER_SESSION);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                req.setAttribute(Constants.SYS_MESSAGE, <span class="string">&quot;修改密码失败！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            req.setAttribute(Constants.SYS_MESSAGE, <span class="string">&quot;修改密码失败！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;pwdmodify.jsp&quot;</span>).forward(req, resp);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ServletException | IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>UserServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.jezer.servlet.user.UserServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>UserServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/jsp/user.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="8"><li>测试</li></ol><h3 id="5-优化密码修改使用ajax"><a class="markdownIt-Anchor" href="#5-优化密码修改使用ajax"></a> 5. 优化密码修改使用Ajax</h3><ol><li>导入阿里的包</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.alibaba/fastjson --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.68<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>后台代码修改</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jezer.servlet.user;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONArray;</span><br><span class="line"><span class="keyword">import</span> com.jezer.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.jezer.service.user.UserService;</span><br><span class="line"><span class="keyword">import</span> com.jezer.service.user.UserServiceImpl;</span><br><span class="line"><span class="keyword">import</span> com.jezer.util.Constants;</span><br><span class="line"><span class="keyword">import</span> com.mysql.cj.util.StringUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//修改密码</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">method</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;method&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;savepwd&quot;</span>.equals(method) &amp;&amp; <span class="literal">null</span> != method)&#123;</span><br><span class="line">            <span class="built_in">this</span>.updatePwd(req, resp);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;pwdmodify&quot;</span>.equals(method) &amp;&amp; <span class="literal">null</span> != method)&#123;</span><br><span class="line">            <span class="built_in">this</span>.pwdModify(req, resp);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改用户密码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updatePwd</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span>&#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">object</span> <span class="operator">=</span> req.getSession().getAttribute(Constants.USER_SESSION);</span><br><span class="line">        <span class="type">String</span> <span class="variable">newpassword</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;newpassword&quot;</span>);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isOK</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != object &amp;&amp; !StringUtils.isNullOrEmpty(newpassword))&#123;</span><br><span class="line">            <span class="type">UserService</span> <span class="variable">userService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserServiceImpl</span>();</span><br><span class="line">            <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User) object;</span><br><span class="line">            isOK = userService.updatePwd(user.getId(), newpassword);</span><br><span class="line">            <span class="keyword">if</span> (isOK)&#123;</span><br><span class="line">                req.setAttribute(Constants.SYS_MESSAGE, <span class="string">&quot;修改密码成功,请退出并使用新密码重新登录！&quot;</span>);</span><br><span class="line">                req.getSession().removeAttribute(Constants.USER_SESSION);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                req.setAttribute(Constants.SYS_MESSAGE, <span class="string">&quot;修改密码失败！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            req.setAttribute(Constants.SYS_MESSAGE, <span class="string">&quot;修改密码失败！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;pwdmodify.jsp&quot;</span>).forward(req, resp);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ServletException | IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    验证旧密码</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pwdModify</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span>&#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">o</span> <span class="operator">=</span> req.getSession().getAttribute(Constants.USER_SESSION);</span><br><span class="line">        <span class="type">String</span> <span class="variable">oldpassword</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;oldpassword&quot;</span>);</span><br><span class="line">        <span class="comment">//万能的Map：结果集</span></span><br><span class="line">        Map&lt;String, String&gt; resultMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> == o)&#123;</span><br><span class="line">            <span class="comment">//Session失效</span></span><br><span class="line">            resultMap.put(<span class="string">&quot;result&quot;</span>, <span class="string">&quot;sessionerror&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (StringUtils.isNullOrEmpty(<span class="string">&quot;oldpassword&quot;</span>))&#123;</span><br><span class="line">            resultMap.put(<span class="string">&quot;result&quot;</span>, <span class="string">&quot;error&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User) o;</span><br><span class="line">            <span class="type">String</span> <span class="variable">userPassword</span> <span class="operator">=</span> user.getUserPassword();</span><br><span class="line">            <span class="keyword">if</span> (oldpassword.equals(userPassword))&#123;</span><br><span class="line">                resultMap.put(<span class="string">&quot;result&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                resultMap.put(<span class="string">&quot;result&quot;</span>, <span class="string">&quot;false&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            resp.setContentType(<span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">            <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> resp.getWriter();</span><br><span class="line">            <span class="comment">//JSONArray 阿里巴巴的JSON工具类，转换格式</span></span><br><span class="line">            out.write(JSONArray.toJSONString(resultMap));</span><br><span class="line">            out.flush();</span><br><span class="line">            out.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>测试</li></ol><h2 id="6-用户管理实现"><a class="markdownIt-Anchor" href="#6-用户管理实现"></a> 6. 用户管理实现</h2><ol><li><p>导入分页的工具类-PageSupport</p></li><li><p>用户列表页面导入userlist.jsp</p></li></ol><h3 id="61-获取用户数量"><a class="markdownIt-Anchor" href="#61-获取用户数量"></a> 6.1 获取用户数量</h3><ol><li>UserDao</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据用户名或者角色查询用户总数</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getUserCount</span><span class="params">(Connection connection,String username ,<span class="type">int</span> userRole)</span><span class="keyword">throws</span> SQLException, Exception;</span><br></pre></td></tr></table></figure><ol start="2"><li>UserDaoImpl</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 查询用户总数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getUserCount</span><span class="params">(Connection connection, String username, <span class="type">int</span> userRole)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">    <span class="type">PreparedStatement</span> <span class="variable">preparedStatement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (connection != <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">        sql.append(<span class="string">&quot;select COUNT(1) as count from smbms_user u, smbms_role r where u.userRole = r.id&quot;</span>);</span><br><span class="line">        ArrayList&lt;Object&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();<span class="comment">//存放参数</span></span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isNullOrEmpty(username))&#123;</span><br><span class="line">            sql.append(<span class="string">&quot; and u.userName like ?&quot;</span>);</span><br><span class="line">            list.add(<span class="string">&quot;%&quot;</span> + username + <span class="string">&quot;%&quot;</span>);<span class="comment">//index = 0;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (userRole &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            sql.append(<span class="string">&quot; and u.userRole = ?&quot;</span>);</span><br><span class="line">            list.add(userRole);<span class="comment">//index = 1;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//把List转换为数组</span></span><br><span class="line">        Object[] params = list.toArray();</span><br><span class="line">        System.out.println(<span class="string">&quot;UserDaoImpl-&gt;getUserCount:&quot;</span> + sql.toString());</span><br><span class="line">        resultSet = BaseDao.executeQuery(connection,preparedStatement, resultSet, sql.toString(),  params);</span><br><span class="line">        <span class="keyword">if</span> (resultSet.next())&#123;</span><br><span class="line">            count = resultSet.getInt(<span class="string">&quot;count&quot;</span>);<span class="comment">//从结果集中获取数量</span></span><br><span class="line">        &#125;</span><br><span class="line">        BaseDao.closeResource(<span class="literal">null</span>, preparedStatement, resultSet);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>UserService</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询记录数</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getUserCount</span><span class="params">(String username, <span class="type">int</span> userRole)</span>;</span><br></pre></td></tr></table></figure><ol start="4"><li>UserServiceImpl</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 查询记录数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getUserCount</span><span class="params">(String userName, <span class="type">int</span> userRole)</span> &#123;</span><br><span class="line">    <span class="type">Connection</span> <span class="variable">connection</span>  <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        connection = BaseDao.getConnection();</span><br><span class="line">        count = userDao.getUserCount(connection, userName, userRole);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">        BaseDao.closeResource(connection, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">UserServiceImpl</span> <span class="variable">userService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserServiceImpl</span>();</span><br><span class="line">    <span class="type">int</span> <span class="variable">userCount</span> <span class="operator">=</span> userService.getUserCount(<span class="literal">null</span>, <span class="number">0</span>);</span><br><span class="line">    System.out.println(userCount);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="62-获取用户列表"><a class="markdownIt-Anchor" href="#62-获取用户列表"></a> 6.2 获取用户列表</h3><ol><li>UserDao</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过条件查询-userList</span></span><br><span class="line"><span class="keyword">public</span> List&lt;User&gt; <span class="title function_">getUserList</span><span class="params">(Connection connection, String userName, <span class="type">int</span> userRole, <span class="type">int</span> currentPageNo, <span class="type">int</span> pageSize)</span><span class="keyword">throws</span> Exception;</span><br></pre></td></tr></table></figure><ol start="2"><li>UserDaoImpl</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">        查询用户信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> List&lt;User&gt; <span class="title function_">getUserList</span><span class="params">(Connection connection, String userName, <span class="type">int</span> userRole, <span class="type">int</span> currentPageNo, <span class="type">int</span> pageSize)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">    <span class="type">PreparedStatement</span> <span class="variable">preparedStatement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    ArrayList&lt;User&gt; userList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">null</span> != connection)&#123;</span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">        sql.append(<span class="string">&quot;select u.*,r.roleName as userRoleName from smbms_user u,smbms_role r where u.userRole = r.id&quot;</span>);</span><br><span class="line">        ArrayList&lt;Object&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isNullOrEmpty(userName))&#123;</span><br><span class="line">            sql.append(<span class="string">&quot; and u.userName like ?&quot;</span>);</span><br><span class="line">            list.add(<span class="string">&quot;%&quot;</span>+userName+<span class="string">&quot;%&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(userRole &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            sql.append(<span class="string">&quot; and u.userRole = ?&quot;</span>);</span><br><span class="line">            list.add(userRole);</span><br><span class="line">        &#125;</span><br><span class="line">        sql.append(<span class="string">&quot; order by creationDate DESC limit ?,?&quot;</span>);</span><br><span class="line">        currentPageNo = (currentPageNo-<span class="number">1</span>)*pageSize;</span><br><span class="line">        list.add(currentPageNo);</span><br><span class="line">        list.add(pageSize);</span><br><span class="line"></span><br><span class="line">        Object[] params = list.toArray();</span><br><span class="line">        System.out.println(<span class="string">&quot;sql ----&gt; &quot;</span> + sql.toString());</span><br><span class="line">        resultSet = BaseDao.executeQuery(connection, preparedStatement, resultSet, sql.toString(), params);</span><br><span class="line">        <span class="keyword">while</span>(resultSet.next())&#123;</span><br><span class="line">            <span class="type">User</span> <span class="variable">_user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">            _user.setId(resultSet.getInt(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">            _user.setUserCode(resultSet.getString(<span class="string">&quot;userCode&quot;</span>));</span><br><span class="line">            _user.setUserName(resultSet.getString(<span class="string">&quot;userName&quot;</span>));</span><br><span class="line">            _user.setGender(resultSet.getInt(<span class="string">&quot;gender&quot;</span>));</span><br><span class="line">            _user.setBirthday(resultSet.getDate(<span class="string">&quot;birthday&quot;</span>));</span><br><span class="line">            _user.setPhone(resultSet.getString(<span class="string">&quot;phone&quot;</span>));</span><br><span class="line">            _user.setUserRole(resultSet.getInt(<span class="string">&quot;userRole&quot;</span>));</span><br><span class="line">            _user.setUserRoleName(resultSet.getString(<span class="string">&quot;userRoleName&quot;</span>));</span><br><span class="line">            userList.add(_user);</span><br><span class="line">        &#125;</span><br><span class="line">        BaseDao.closeResource(<span class="literal">null</span>, preparedStatement, resultSet);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> userList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>UserService</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据条件查询用户列表</span></span><br><span class="line"><span class="keyword">public</span> List&lt;User&gt; <span class="title function_">getUserList</span><span class="params">(String queryUserName, <span class="type">int</span> queryUserRole, <span class="type">int</span> currentPageNo, <span class="type">int</span> pageSize)</span>;</span><br></pre></td></tr></table></figure><ol start="4"><li>UserServiceImpl</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   根据条件查询用户列表</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> List&lt;User&gt; <span class="title function_">getUserList</span><span class="params">(String queryUserName, <span class="type">int</span> queryUserRole, <span class="type">int</span> currentPageNo, <span class="type">int</span> pageSize)</span> &#123;</span><br><span class="line">    <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    List&lt;User&gt; userList = <span class="literal">null</span>;</span><br><span class="line">    System.out.println(<span class="string">&quot;queryUserName ---- &gt; &quot;</span> + queryUserName);</span><br><span class="line">    System.out.println(<span class="string">&quot;queryUserRole ---- &gt; &quot;</span> + queryUserRole);</span><br><span class="line">    System.out.println(<span class="string">&quot;currentPageNo ---- &gt; &quot;</span> + currentPageNo);</span><br><span class="line">    System.out.println(<span class="string">&quot;pageSize ---- &gt; &quot;</span> + pageSize);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        connection = BaseDao.getConnection();</span><br><span class="line">        userList = userDao.getUserList(connection, queryUserName, queryUserRole, currentPageNo, pageSize);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">        BaseDao.closeResource(connection, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> userList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">UserServiceImpl</span> <span class="variable">userService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserServiceImpl</span>();</span><br><span class="line">    List&lt;User&gt; userList = userService.getUserList(<span class="string">&quot;系统管理员&quot;</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">5</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;处理了&quot;</span> + userList.size() + <span class="string">&quot;条！&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="63-获取角色信息"><a class="markdownIt-Anchor" href="#63-获取角色信息"></a> 6.3 获取角色信息</h3><p>为了我们的职责统一，我们可以把角色的操作单独放在一个包中，和pojo类对应。。。</p><ol><li>RoleDao</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取角色列表</span></span><br><span class="line"><span class="keyword">public</span> List&lt;Role&gt; <span class="title function_">getRoleList</span><span class="params">(Connection connection)</span><span class="keyword">throws</span> Exception;</span><br></pre></td></tr></table></figure><ol start="2"><li>RoleDaoImpl</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jezer.dao.role;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.jezer.dao.BaseDao;</span><br><span class="line"><span class="keyword">import</span> com.jezer.pojo.Role;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RoleDaoImpl</span> <span class="keyword">implements</span> <span class="title class_">RoleDao</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Role&gt; <span class="title function_">getRoleList</span><span class="params">(Connection connection)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">preparedStatement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        List&lt;Role&gt; roleList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Role&gt;();</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from smbms_role&quot;</span>;</span><br><span class="line">            Object[] params= &#123;&#125;;</span><br><span class="line">            resultSet = BaseDao.executeQuery(connection, preparedStatement, resultSet, sql, params);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (resultSet. next())&#123;</span><br><span class="line">                <span class="type">Role</span> <span class="variable">_role</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Role</span>();</span><br><span class="line">                _role.setId(resultSet.getInt(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">                _role.setRoleCode(resultSet.getString(<span class="string">&quot;roleCode&quot;</span>));</span><br><span class="line">                _role.setRoleName(resultSet.getString(<span class="string">&quot;roleName&quot;</span>));</span><br><span class="line">                roleList.add(_role);</span><br><span class="line">            &#125;</span><br><span class="line">            BaseDao.closeResource(<span class="literal">null</span>, preparedStatement, resultSet);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> roleList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>RoleService</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">RoleService</span> &#123;</span><br><span class="line"><span class="comment">//角色列表查询</span></span><br><span class="line"><span class="keyword">public</span> List&lt;Role&gt; <span class="title function_">getRoleList</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>RoleServiceImpl</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jezer.service.role;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.jezer.dao.BaseDao;</span><br><span class="line"><span class="keyword">import</span> com.jezer.dao.role.RoleDao;</span><br><span class="line"><span class="keyword">import</span> com.jezer.dao.role.RoleDaoImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.jezer.pojo.Role;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RoleServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">RoleService</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 业务层都会调用dao层，所以我们要引入Dao层</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> RoleDao roleDao;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">RoleServiceImpl</span><span class="params">()</span> &#123;</span><br><span class="line">        roleDao = <span class="keyword">new</span> <span class="title class_">RoleDaoImpl</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Role&gt; <span class="title function_">getRoleList</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        List&lt;Role&gt; roleList = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection = BaseDao.getConnection();</span><br><span class="line">            roleList = roleDao.getRoleList(connection);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            BaseDao.closeResource(connection, <span class="literal">null</span> , <span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>  roleList;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">RoleService</span> <span class="variable">roleService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RoleServiceImpl</span>();</span><br><span class="line">        List&lt;Role&gt; roleList = roleService.getRoleList();</span><br><span class="line">        System.out.println(roleList.size());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="64-用户显示的servlet"><a class="markdownIt-Anchor" href="#64-用户显示的servlet"></a> 6.4 用户显示的Servlet</h3><ol><li>获取用户前端的数据（查询）</li><li>判断请求是否需要执行，看参数的值判断</li><li>为了实现分页，需要计算出当前页面和总页面，页面大小…</li><li>用户列表展示</li><li>返回前端</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">·<span class="comment">/** 用户管理查询  */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">query</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span>&#123;</span><br><span class="line">    <span class="comment">//查询用户列表</span></span><br><span class="line">    <span class="comment">//从前端获取数据</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">queryname</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;queryname&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">queryUserRole</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;queryUserRole&quot;</span>);</span><br><span class="line">    String pageIndex= req.getParameter(<span class="string">&quot;pageIndex&quot;</span>);</span><br><span class="line">    <span class="comment">//获取用户列表</span></span><br><span class="line">    <span class="type">UserServiceImpl</span> <span class="variable">userService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserServiceImpl</span>();</span><br><span class="line">    <span class="type">RoleServiceImpl</span> <span class="variable">roleService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RoleServiceImpl</span>();</span><br><span class="line">    <span class="type">int</span> <span class="variable">pageSize</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line">    List&lt;User&gt; userList = <span class="literal">null</span>;</span><br><span class="line">    List&lt;Role&gt; roleList = <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">/* 将String类型转化为int，同时进行错误判断 */</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">currentPageNo</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">queryUserRole_int</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (queryname == <span class="literal">null</span>)&#123;</span><br><span class="line">        queryname = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (queryUserRole != <span class="literal">null</span>  &amp;&amp; !<span class="string">&quot;&quot;</span>.equals(queryUserRole))&#123;</span><br><span class="line">        queryUserRole_int = Integer.parseInt(queryUserRole);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (pageIndex != <span class="literal">null</span>)&#123;</span><br><span class="line">        currentPageNo = Integer.parseInt(pageIndex);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取用户总数</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">totalCount</span> <span class="operator">=</span> userService.getUserCount(queryname, queryUserRole_int);</span><br><span class="line">    <span class="comment">//总页数支持</span></span><br><span class="line">    <span class="type">PageSupport</span> <span class="variable">pageSupport</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PageSupport</span>();</span><br><span class="line">    pageSupport.setCurrentPageNo(currentPageNo);</span><br><span class="line">    pageSupport.setPageSize(pageSize);</span><br><span class="line">    pageSupport.setTotalPageCount(totalCount);</span><br><span class="line">    <span class="type">int</span> <span class="variable">totalPageCount</span> <span class="operator">=</span> pageSupport.getTotalPageCount();</span><br><span class="line">    <span class="comment">//控制首页和尾页</span></span><br><span class="line">    <span class="keyword">if</span> (currentPageNo &lt; <span class="number">1</span>)&#123;</span><br><span class="line">        currentPageNo = <span class="number">1</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (currentPageNo &gt; totalPageCount)&#123;</span><br><span class="line">        currentPageNo = totalPageCount;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取用户列表显示</span></span><br><span class="line">    userList = userService.getUserList(queryname, queryUserRole_int, currentPageNo, pageSize);</span><br><span class="line">    req.setAttribute(<span class="string">&quot;userList&quot;</span>, userList);</span><br><span class="line"></span><br><span class="line">    roleList = roleService.getRoleList();</span><br><span class="line">    req.setAttribute(<span class="string">&quot;roleList&quot;</span>, roleList);</span><br><span class="line">    req.setAttribute(<span class="string">&quot;totalCount&quot;</span>, totalCount);</span><br><span class="line">    req.setAttribute(<span class="string">&quot;currentPageNo&quot;</span>, currentPageNo);</span><br><span class="line">    req.setAttribute(<span class="string">&quot;totalPageCount&quot;</span>, totalPageCount);</span><br><span class="line">    req.setAttribute(<span class="string">&quot;queryUserName&quot;</span>, queryname);</span><br><span class="line">    req.setAttribute(<span class="string">&quot;queryUserRole&quot;</span>,queryUserRole_int);</span><br><span class="line">    <span class="comment">//返回前端</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        req.getRequestDispatcher(<span class="string">&quot;userlist.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ServletException | IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7用户管理代码补齐"><a class="markdownIt-Anchor" href="#7用户管理代码补齐"></a> 7.用户管理代码补齐</h2><p><a href="https://github.com/Archer-Jezer/SMBMS.git">SMBMS项目下载</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">记得修改smbms\WEB-INF\classes下的db.properties文件内容，该项目只完成到用户管理，可直接在Tomcat中跑</span><br></pre></td></tr></table></figure><p><a href="https://pan.baidu.com/s/1OlhHZlx8OK-NKK138lGW0Q">SMBMS项目百度网盘下载</a>提取码rex3</p>]]></content>
      
      
      <categories>
          
          <category> 项目开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebApp </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis</title>
      <link href="/posts/da3e1361/"/>
      <url>/posts/da3e1361/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.bilibili.com/video/BV1NE411Q7Nx?from=search&amp;seid=11456117155912633742&amp;spm_id_from=333.337.0.0">视频链接</a></p><h2 id="1-简介"><a class="markdownIt-Anchor" href="#1-简介"></a> 1. 简介</h2><h3 id="11-什么是mybatis"><a class="markdownIt-Anchor" href="#11-什么是mybatis"></a> 1.1 什么是Mybatis</h3><p><img src="https://i.loli.net/2021/10/15/TAhvGu9sNS4PJ85.png" alt="image-20211015101651711" /></p><ul><li><p>MyBatis 是一款优秀的持久层框架</p></li><li><p>它支持自定义 SQL、存储过程以及高级映射。</p></li><li><p>MyBatis 免除了几乎所有的 JDBC 代码以及设置参数和获取结果集的工作。</p></li><li><p>MyBatis 可以通过简单的 XML 或注解来配置和映射原始类型、接口和 Java POJO（Plain Old Java Objects，普通老式 Java 对象）为数据库中的记录。</p></li><li><p>MyBatis 本是apache的一个开源项目iBatis, 2010年这个项目由apache software foundation 迁移到了google code，并且改名为MyBatis 。</p></li><li><p>2013年11月迁移到Github。</p></li></ul><h3 id="12-如何获得mybatis"><a class="markdownIt-Anchor" href="#12-如何获得mybatis"></a> 1.2 如何获得Mybatis</h3><ul><li><p><a href="https://mvnrepository.com/artifact/org.mybatis/mybatis">maven仓库</a></p></li><li><p><a href="https://github.com/mybatis/mybatis-3">github</a></p></li><li><p><a href="https://mybatis.org/mybatis-3/zh/index.html">官方文档</a></p></li></ul><h3 id="13-持久化"><a class="markdownIt-Anchor" href="#13-持久化"></a> 1.3 持久化</h3><ul><li><strong>持久化是将程序数据在持久状态和瞬时状态间转换的机制。</strong><ul><li>即把数据（如内存中的对象）保存到可永久保存的存储设备中（如磁盘）。持久化的主要应用是将内存中的对象存储在数据库中，或者存储在磁盘文件中、XML数据文件中等等。</li><li>JDBC就是一种持久化机制。文件IO也是一种持久化机制。</li><li>在生活中 : 将鲜肉冷藏，吃的时候再解冻的方法也是。将水果做成罐头的方法也是。</li></ul></li><li><strong>为什么需要持久化服务呢？那是由于内存本身的缺陷引起的</strong><ul><li>内存断电后数据会丢失，但有一些对象是无论如何都不能丢失的，比如银行账号等，遗憾的是，人们还无法保证内存永不掉电。</li><li>内存过于昂贵，与硬盘、光盘等外存相比，内存的价格要高2~3个数量级，而且维持成本也高，至少需要一直供电吧。所以即使对象不需要永久保存，也会因为内存的容量限制不能一直呆在内存中，需要持久化来缓存到外存。</li></ul></li></ul><h3 id="14-持久层"><a class="markdownIt-Anchor" href="#14-持久层"></a> 1.4 持久层</h3><p><strong>什么是持久层？</strong></p><ul><li>完成持久化工作的代码块 . ----&gt; dao层 【DAO (Data Access Object) 数据访问对象】</li><li>大多数情况下特别是企业级应用，数据持久化往往也就意味着将内存中的数据保存到磁盘上加以固化，而持久化的实现过程则大多通过各种<mark>关系数据库</mark>来完成。</li><li>不过这里有一个字需要特别强调，也就是所谓的“层”。对于应用系统而言，数据持久功能大多是必不可少的组成部分。也就是说，我们的系统中，已经天然的具备了“持久层”概念？也许是，但也许实际情况并非如此。之所以要独立出一个“持久层”的概念,而不是“持久模块”，“持久单元”，也就意味着，我们的系统架构中，应该有一个<mark>相对独立的逻辑层面</mark>，专注于数据持久化逻辑的实现.</li><li>与系统其他部分相对而言，这个层面应该具有一个较为清晰和严格的逻辑边界。【说白了就是用来操作数据库存在的！】</li></ul><h3 id="15-为什么需要mybatis"><a class="markdownIt-Anchor" href="#15-为什么需要mybatis"></a> 1.5 为什么需要Mybatis</h3><ul><li>Mybatis就是帮助程序猿将数据存入数据库中 , 以及从数据库中取数据。</li><li>传统的JDBC操作 , 有很多重复代码块。比如: 数据取出时的封装 , 数据库的建立连接等等… , 通过框架可以减少重复代码,提高开发效率。</li><li>MyBatis是一个半自动化的<mark>ORM框架 (Object Relationship Mapping) --&gt;对象关系映射</mark></li><li>所有的事情，不用Mybatis依旧可以做到，只是用了它，所有实现会更加简单！<mark>技术没有高低之分，只有使用这个技术的人有高低之别</mark></li><li>MyBatis的优点<ul><li>简单易学：本身就很小且简单。没有任何第三方依赖，最简单安装只要两个jar文件+配置几个sql映射文件就可以了，易于学习，易于使用，通过文档和源代码，可以比较完全的掌握它的设计思路和实现。</li><li>灵活：mybatis不会对应用程序或者数据库的现有设计强加任何影响。sql写在xml里，便于统一管理和优化。通过sql语句可以满足操作数据库的所有需求。</li><li>解除sql与程序代码的耦合：通过提供DAO层，将业务逻辑和数据访问逻辑分离，使系统的设计更清晰，更易维护，更易单元测试。sql和代码的分离，提高了可维护性。</li><li>提供xml标签，支持编写动态sql。</li><li>…</li></ul></li><li>最重要的一点，使用的人多！公司需要！</li></ul><h3 id="16-环境说明"><a class="markdownIt-Anchor" href="#16-环境说明"></a> 1.6 环境说明</h3><ul><li>jdk 8 +</li><li>MySQL 5.7.19</li><li>maven-3.6.1</li><li>IDEA</li></ul><p>学习前需要掌握：</p><ul><li>JDBC</li><li>MySQL</li><li>Java 基础</li><li>Maven</li><li>Junit</li></ul><h2 id="2-第一个mybatis程序"><a class="markdownIt-Anchor" href="#2-第一个mybatis程序"></a> 2. 第一个Mybatis程序</h2><p><strong>思路流程：搭建环境–&gt;导入Mybatis—&gt;编写代码—&gt;测试</strong></p><ol><li>新建一个普通的maven项目</li><li>删除src目录</li><li>导入maven依赖</li><li>创建模块(普通maven项目)</li><li>编写MyBatis核心配置文件</li><li>编写MyBatis工具类</li><li>编写代码</li><li>测试</li></ol><h3 id="21-搭建实验数据库"><a class="markdownIt-Anchor" href="#21-搭建实验数据库"></a> 2.1 搭建实验数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE `mybatis`;</span><br><span class="line"></span><br><span class="line">USE `mybatis`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `<span class="keyword">user</span>`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `<span class="keyword">user</span>` (</span><br><span class="line">`id` <span class="type">int</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">`name` <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">`pwd` <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span>  <span class="keyword">into</span> `<span class="keyword">user</span>`(`id`,`name`,`pwd`) <span class="keyword">values</span> (<span class="number">1</span>,<span class="string">&#x27;狂神&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>),(<span class="number">2</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;abcdef&#x27;</span>),(<span class="number">3</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;987654&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="22-导入相关jar包"><a class="markdownIt-Anchor" href="#22-导入相关jar包"></a> 2.2 导入相关jar包</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    Mybatis依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    MySQL驱动依赖，注意与自己MySQl版本配套--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.26<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    测试依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="23-编写mybatis核心配置文件"><a class="markdownIt-Anchor" href="#23-编写mybatis核心配置文件"></a> 2.3 编写MyBatis核心配置文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--configuration核心配置文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/mybatis?useUnicode = true<span class="symbol">&amp;amp;</span>characterEncoding =utf8<span class="symbol">&amp;amp;</span>useSSL= true <span class="symbol">&amp;amp;</span>serverTimezone=GMT%2B8&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;12345678&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--每一个Mapper.xml都需要在MyBatis核心配置文件中注册--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/jezer/mapper/UserMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="24-编写mybatis工具类"><a class="markdownIt-Anchor" href="#24-编写mybatis工具类"></a> 2.4 编写MyBatis工具类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jezer.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jay_Soul</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisUtils</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SqlSessionFactory sqlSessionFactory;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//使用MyBatis获取sqlSessionFactory对象</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">resource</span> <span class="operator">=</span> <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> Resources.getResourceAsStream(resource);</span><br><span class="line">            sqlSessionFactory = <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取SqlSession连接</span></span><br><span class="line"><span class="comment">     * SqlSession 提供了在数据库执行 SQL 命令所需的所有方法</span></span><br><span class="line"><span class="comment">     * 可以通过 SqlSession 实例来直接执行已映射的 SQL 语句</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title function_">getSession</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sqlSessionFactory.openSession();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="25-创建实体类"><a class="markdownIt-Anchor" href="#25-创建实体类"></a> 2.5 创建实体类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jezer.pojo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jay_Soul</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String pwd;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, pwd=&#x27;&quot;</span> + pwd + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPwd</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> pwd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPwd</span><span class="params">(String pwd)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.pwd = pwd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(<span class="type">int</span> id, String name, String pwd)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.pwd = pwd;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="26-编写mapper接口类"><a class="markdownIt-Anchor" href="#26-编写mapper接口类"></a> 2.6 编写Mapper接口类</h3><p><mark>相当于JDBC的Dao接口</mark></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jezer.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.jezer.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jay_Soul</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line">    List&lt;User&gt; <span class="title function_">getUserList</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="27-编写mapperxml配置文件"><a class="markdownIt-Anchor" href="#27-编写mapperxml配置文件"></a> 2.7 编写Mapper.xml配置文件</h3><p><mark>相当于JDBC的Dao接口实现类及DaoBase</mark></p><p>namespace 十分重要，不能写错！</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--namespace绑定一个对应的Dao/Mapper接口--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.jezer.Mapper.UserMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--select查询语句--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--id绑定重写方法的名字，resultType绑定返回的类型 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.jezer.pojo.User&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="28-编写测试类"><a class="markdownIt-Anchor" href="#28-编写测试类"></a> 2.8 编写测试类</h3><p><mark>在<code>test</code>下测试，路径与源路径最好保持一致</mark></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jezer.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.jezer.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.jezer.utils.MybatisUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperTest</span> &#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">        <span class="comment">//方法一</span></span><br><span class="line">        <span class="comment">//List&lt;User&gt; user = session.selectList(&quot;com.jezer.mapper.UserMapper.getUserList&quot;);</span></span><br><span class="line">        <span class="comment">//方法二</span></span><br><span class="line">        <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(UserMapper.class);</span><br><span class="line">        List&lt;User&gt; users = mapper.getUserList();</span><br><span class="line">        <span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">        session.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>问题说明</p></blockquote><p><strong>可能出现问题说明：</strong></p><p><strong>1. Maven静态资源过滤问题</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>2. 配置文件没有注册</strong></p><p><strong>3. 绑定接口错误</strong></p><p><strong>4. 返回类型错误</strong></p><p><strong>5. 方法名错误</strong></p><h2 id="3-crud"><a class="markdownIt-Anchor" href="#3-crud"></a> 3. CRUD</h2><h3 id="31-namespace"><a class="markdownIt-Anchor" href="#31-namespace"></a> 3.1 namespace</h3><p>配置文件中namespace中的名称为对应Mapper接口或者Dao接口的完整包名,必须一致！</p><h3 id="32-select"><a class="markdownIt-Anchor" href="#32-select"></a> 3.2 select</h3><ul><li>select标签是mybatis中最常用的标签之一</li><li>select语句有很多属性可以详细配置每一条SQL语句<ul><li>SQL语句返回值类型。【完整的类名或者别名】</li><li>传入SQL语句的参数类型。【万能的Map，可以多尝试使用】</li><li>命名空间中唯一的标识符</li><li>接口中的方法名与映射文件中的SQL语句ID 一一对应</li><li>id</li><li>parameterType</li><li>resultType</li></ul></li></ul><p><strong>需求：根据id查询用户</strong></p><blockquote><ol><li>在UserMapper中添加对应方法</li></ol></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line">    List&lt;User&gt; <span class="title function_">getUserList</span><span class="params">()</span>;</span><br><span class="line">    User <span class="title function_">getUserById</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>2、在UserMapper.xml中添加Select语句</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.jezer.pojo.User&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span>&gt;</span></span><br><span class="line">    select * from mybatis.user where  id = #&#123;id&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>3、测试类中测试</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getUserById</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">    <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(UserMapper.class);</span><br><span class="line">    <span class="type">User</span>  <span class="variable">user</span> <span class="operator">=</span> mapper.getUserById(<span class="number">1</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>课后练习</p></blockquote><p>思路一：直接在方法中传递参数</p><p>1、在接口方法的参数前加 @Param属性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User <span class="title function_">getUserByNP</span><span class="params">(<span class="meta">@Param(&quot;username&quot;)</span>String username, <span class="meta">@Param(&quot;pwd&quot;)</span>String pwd)</span>;</span><br></pre></td></tr></table></figure><p>2、Sql语句编写的时候，直接取@Param中设置的值即可，不需要单独设置参数类型</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserByNP&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.jezer.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    select * from mybatis.user where name = #&#123;username&#125; and pwd = #&#123;pwd&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getUserByNP</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">    <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(UserMapper.class);</span><br><span class="line">    <span class="type">User</span>  <span class="variable">user</span> <span class="operator">=</span> mapper.getUserByNP(<span class="string">&quot;张三&quot;</span>, <span class="string">&quot;abcdef&quot;</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>思路二：使用万能的Mapx</p><p>1、在接口方法中，参数直接传递Map；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User <span class="title function_">getUserByNP2</span><span class="params">(Map&lt;String, Object&gt; map)</span>;</span><br></pre></td></tr></table></figure><p>2、编写sql语句的时候，需要传递参数类型，参数类型为map</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserByNP2&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.jezer.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    select * from mybatis.user where name = #&#123;username&#125; and pwd = #&#123;pwd&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、在使用方法的时候，Map的 key 为 sql中取的值即可，没有顺序要求！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getUserByNP2</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">    <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(UserMapper.class);</span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Object&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;username&quot;</span>,<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    map.put(<span class="string">&quot;pwd&quot;</span>,<span class="string">&quot;abcdef&quot;</span>);</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> mapper.getUserByNP2(map);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><mark>总结：如果参数过多，我们可以考虑直接使用Map实现，如果参数比较少，直接传递参数即可</mark></p><h3 id="33-insert"><a class="markdownIt-Anchor" href="#33-insert"></a> 3.3 insert</h3><p>我们一般使用insert标签进行插入操作，它的配置和select标签差不多！</p><p><strong>需求：给数据库增加一个用户</strong></p><p>1、在UserMapper接口中添加对应的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">addUser</span><span class="params">(User user)</span>;</span><br></pre></td></tr></table></figure><p>2、在UserMapper.xml中添加insert语句</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.jezer.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    insert into mybatis.user (id,name,pwd) values (#&#123;id&#125;,#&#123;name&#125;,#&#123;pwd&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testAddUser</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">    <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(UserMapper.class);</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">4</span>,<span class="string">&quot;王五&quot;</span>,<span class="string">&quot;zxcvbn&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> mapper.addUser(user);</span><br><span class="line">    System.out.println(i);</span><br><span class="line">    session.commit(); <span class="comment">//提交事务,重点!不写的话不会提交到数据库</span></span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意点：增、删、改操作需要提交事务！</strong></p><h3 id="34-update"><a class="markdownIt-Anchor" href="#34-update"></a> 3.4 update</h3><p>我们一般使用update标签进行更新操作，它的配置和select标签差不多！</p><p><strong>需求：修改用户的信息</strong></p><p>1、同理，编写接口方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">updateUser</span><span class="params">(User user)</span>;</span><br></pre></td></tr></table></figure><p>2、编写对应的配置文件SQL</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.jezer.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    update mybatis.user set name=#&#123;name&#125;,pwd=#&#123;pwd&#125; where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUpdateUser</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">    <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(UserMapper.class);</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> mapper.getUserById(<span class="number">1</span>);</span><br><span class="line">    user.setPwd(<span class="string">&quot;asdfgh&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> mapper.updateUser(user);</span><br><span class="line">    System.out.println(i);</span><br><span class="line">    session.commit(); <span class="comment">//提交事务,重点!不写的话不会提交到数据库</span></span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="35-delete"><a class="markdownIt-Anchor" href="#35-delete"></a> 3.5 delete</h3><p>我们一般使用delete标签进行删除操作，它的配置和select标签差不多！</p><p><strong>需求：根据id删除一个用户</strong></p><p>1、同理，编写接口方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">deleteUser</span><span class="params">(<span class="type">int</span> id)</span>;</span><br></pre></td></tr></table></figure><p>2、编写对应的配置文件SQL</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span>&gt;</span></span><br><span class="line">    delete from mybatis.user where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDeleteUser</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">    <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(UserMapper.class);</span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> mapper.deleteUser(<span class="number">1</span>);</span><br><span class="line">    System.out.println(i);</span><br><span class="line">    session.commit();</span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>小结</p></blockquote><ul><li>所有的增删改操作都需要提交事务！</li><li>接口所有的普通参数，尽量都写上@Param参数，尤其是多个参数时，必须写上！</li><li>有时候根据业务的需求，可以考虑使用map传递参数！</li><li>为了规范操作，在SQL的配置文件中，我们尽量将Parameter参数和resultType都写上！</li></ul><blockquote><p>思考题</p></blockquote><p><strong>模糊查询like语句该怎么写?</strong></p><p>第1种：在Java代码中添加sql通配符。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">”selectlike”</span>&gt;</span></span><br><span class="line">select * from foo where bar like #&#123;value&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">string</span> <span class="variable">wildcardname</span> <span class="operator">=</span> “%smi%”;</span><br><span class="line">list&lt;name&gt; names = mapper.selectlike(wildcardname);</span><br></pre></td></tr></table></figure><p>第2种：在sql语句中拼接通配符，会引起sql注入(不建议)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">”selectlike”</span>&gt;</span></span><br><span class="line">    select * from foo where bar like &quot;%&quot;#&#123;value&#125;&quot;%&quot;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">string</span> <span class="variable">wildcardname</span> <span class="operator">=</span> “smi”;</span><br><span class="line">list&lt;name&gt; names = mapper.selectlike(wildcardname);</span><br></pre></td></tr></table></figure><h2 id="4-配置解析"><a class="markdownIt-Anchor" href="#4-配置解析"></a> 4. 配置解析</h2><h3 id="41-核心配置文件"><a class="markdownIt-Anchor" href="#41-核心配置文件"></a> 4.1 核心配置文件</h3><ul><li>mybatis-config.xml 系统核心配置文件</li><li>MyBatis 的配置文件包含了会深深影响 MyBatis 行为的设置和属性信息。</li><li>能配置的内容如下：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">configuration（配置）</span><br><span class="line">properties（属性）</span><br><span class="line">settings（设置）</span><br><span class="line">typeAliases（类型别名）</span><br><span class="line">typeHandlers（类型处理器）</span><br><span class="line">objectFactory（对象工厂）</span><br><span class="line">plugins（插件）</span><br><span class="line">environments（环境配置）</span><br><span class="line">environment（环境变量）</span><br><span class="line">transactionManager（事务管理器）</span><br><span class="line">dataSource（数据源）</span><br><span class="line">databaseIdProvider（数据库厂商标识）</span><br><span class="line">mappers（映射器）</span><br><span class="line">&lt;!-- 注意元素节点的顺序！顺序不对会报错 --&gt;</span><br></pre></td></tr></table></figure><p>我们可以阅读 mybatis-config.xml 上面的dtd的头文件！</p><h3 id="42-environments元素"><a class="markdownIt-Anchor" href="#42-environments元素"></a> 4.2 environments元素</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;...&quot;</span> <span class="attr">value</span>=<span class="string">&quot;...&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;url&#125;&quot;</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;username&#125;&quot;</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;password&#125;&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>配置MyBatis的多套运行环境，将SQL映射到多个不同的数据库上，必须指定其中一个为默认运行环境（通过default指定）</p></li><li><p>具体的一套环境，通过设置id进行区别，id保证唯一！</p></li><li><p>子元素节点：<strong>environment</strong></p><hr /><p>子元素节点：dataSource [数据源]</p><ul><li>dataSource 元素使用标准的 JDBC 数据源接口来配置 JDBC 连接对象的资源。</li><li>数据源是必须配置的。</li><li>有三种内建的数据源类型</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type=&quot;[UNPOOLED|POOLED|JNDI]&quot;）</span><br></pre></td></tr></table></figure><ul><li>unpooled：这个数据源的实现只是每次被请求时打开和关闭连接。</li><li><mark>pooled</mark>：这种数据源的实现利用“池”的概念将 JDBC 连接对象组织起来 , 这是一种使得并发 Web 应用快速响应请求的流行处理方式。</li><li>jndi：这个数据源的实现是为了能在如 Spring 或应用服务器这类容器中使用，容器可以集中或在外部配置数据源，然后放置一个 JNDI 上下文的引用。</li><li>数据源也有很多第三方的实现，比如dbcp，c3p0，druid等等…</li></ul><hr /><p>子元素节点：transactionManager [事务管理器]</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 语法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;[ JDBC | MANAGED ]&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="43-properties优化"><a class="markdownIt-Anchor" href="#43-properties优化"></a> 4.3 Properties优化</h3><p>数据库这些属性都是可外部配置且可动态替换的，既可以在典型的 Java 属性文件中配置，亦可通过 properties 元素的子元素来传递。</p><p>我们来优化我们的配置文件</p><p>第一步：在资源目录下新建一个db.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">driver</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://localhost:3306/mybatis?useSSL=true&amp;useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=GMT%2B8</span></span><br><span class="line"><span class="attr">username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">12345678</span></span><br></pre></td></tr></table></figure><p>第二步 : 将文件导入properties 配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--导入properties文件--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;db.properties&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;url&#125;&quot;</span>/&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;username&#125;&quot;</span>/&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;password&#125;&quot;</span>/&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/jezer/mapper/UserMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果一个属性在不只一个地方进行了配置，那么，MyBatis 将按照下面的顺序来加载：首先读取在 properties 元素体内指定的属性。然后根据 properties 元素中的 resource 属性读取类路径下属性文件，或根据 url 属性指定的路径读取属性文件，并覆盖之前读取过的同名属性。最后读取作为方法参数传递的属性，并覆盖之前读取过的同名属性。最低优先级的则是properties 元素中指定的属性。</p><h3 id="44-typealiases优化"><a class="markdownIt-Anchor" href="#44-typealiases优化"></a> 4.4 typeAliases优化</h3><p>类型别名是为 Java 类型设置一个短的名字。它只和 XML 配置有关，存在的意义仅在于用来减少类完全限定名的冗余。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置别名,注意顺序--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">&quot;com.kuang.pojo.User&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;User&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><p>当这样配置时，<code>User</code>可以用在任何使用<code>com.kuang.pojo.User</code>的地方。</p><p>也可以指定一个包名，MyBatis 会在包名下面搜索需要的 Java Bean，比如:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.kuang.pojo&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><p>每一个在包 <code>com.kuang.pojo</code> 中的 Java Bean，在没有注解的情况下，会使用 <strong>Bean 的首字母小写的非限定类名来作为它的别名。</strong></p><p>若有注解，则别名为其注解值。见下面的例子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Alias(&quot;user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="45-mappers元素"><a class="markdownIt-Anchor" href="#45-mappers元素"></a> 4.5 mappers元素</h3><p><strong>mappers</strong></p><ul><li>映射器 : 定义映射SQL语句文件</li><li>既然 MyBatis 的行为其他元素已经配置完了，我们现在就要定义 SQL 映射语句了。但是首先我们需要告诉 MyBatis 到哪里去找到这些语句。Java 在自动查找这方面没有提供一个很好的方法，所以最佳的方式是告诉 MyBatis 到哪里去找映射文件。你可以使用相对于类路径的资源引用， 或完全限定资源定位符（包括 <code>file:///</code> 的 URL），或类名和包名等。映射器是MyBatis中最核心的组件之一，在MyBatis 3之前，只支持xml映射器，即：所有的SQL语句都必须在xml文件中配置。而从MyBatis 3开始，还支持接口映射器，这种映射器方式允许以Java代码的方式注解定义SQL语句，非常简洁。</li></ul><p><strong>引入资源方式</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 使用相对于类路径的资源引用 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;org/mybatis/builder/PostMapper.xml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 使用完全限定资源定位符（URL） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">url</span>=<span class="string">&quot;file:///var/mappers/AuthorMapper.xml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">使用映射器接口实现类的完全限定类名</span></span><br><span class="line"><span class="comment">需要配置文件名称和接口名称一致，并且位于同一目录下</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.builder.AuthorMapper&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">将包内的映射器接口实现全部注册为映射器</span></span><br><span class="line"><span class="comment">但是需要配置文件名称和接口名称一致，并且位于同一目录下</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;org.mybatis.builder&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>Mapper文件</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">       <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">       <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.kuang.jezer.UserMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>namespace中文意思：命名空间，作用如下：<ul><li>namespace的命名必须跟某个接口同名</li><li>接口中的方法与映射文件中sql语句id应该一一对应</li></ul></li></ul><ol><li>namespace和子元素的id联合保证唯一 , 区别不同的mapper</li><li>绑定DAO接口</li><li>namespace命名规则 : 包名+类名</li></ol><p>MyBatis 的真正强大在于它的映射语句，这是它的魔力所在。由于它的异常强大，映射器的 XML 文件就显得相对简单。如果拿它跟具有相同功能的 JDBC 代码进行对比，你会立即发现省掉了将近 95% 的代码。MyBatis 为聚焦于 SQL 而构建，以尽可能地为你减少麻烦。</p><h3 id="46-其他配置浏览"><a class="markdownIt-Anchor" href="#46-其他配置浏览"></a> 4.6 其他配置浏览</h3><p><strong>设置</strong></p><ul><li>懒加载</li><li>日志实现</li><li>缓存开启关闭</li><li>一个配置完整的 settings 元素的示例如下：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;cacheEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;lazyLoadingEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;multipleResultSetsEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;useColumnLabel&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;useGeneratedKeys&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;autoMappingBehavior&quot;</span> <span class="attr">value</span>=<span class="string">&quot;PARTIAL&quot;</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;autoMappingUnknownColumnBehavior&quot;</span> <span class="attr">value</span>=<span class="string">&quot;WARNING&quot;</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;defaultExecutorType&quot;</span> <span class="attr">value</span>=<span class="string">&quot;SIMPLE&quot;</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;defaultStatementTimeout&quot;</span> <span class="attr">value</span>=<span class="string">&quot;25&quot;</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;defaultFetchSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;100&quot;</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;safeRowBoundsEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;mapUnderscoreToCamelCase&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;localCacheScope&quot;</span> <span class="attr">value</span>=<span class="string">&quot;SESSION&quot;</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;jdbcTypeForNull&quot;</span> <span class="attr">value</span>=<span class="string">&quot;OTHER&quot;</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;lazyLoadTriggerMethods&quot;</span> <span class="attr">value</span>=<span class="string">&quot;equals,clone,hashCode,toString&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>类型处理器</strong></p><ul><li>无论是 MyBatis 在预处理语句（PreparedStatement）中设置一个参数时，还是从结果集中取出一个值时， 都会用类型处理器将获取的值以合适的方式转换成 Java 类型。</li><li>你可以重写类型处理器或创建你自己的类型处理器来处理不支持的或非标准的类型。【了解即可】</li></ul><p><strong>对象工厂</strong></p><ul><li>MyBatis 每次创建结果对象的新实例时，它都会使用一个对象工厂（ObjectFactory）实例来完成。</li><li>默认的对象工厂需要做的仅仅是实例化目标类，要么通过默认构造方法，要么在参数映射存在的时候通过有参构造方法来实例化。</li><li>如果想覆盖对象工厂的默认行为，则可以通过创建自己的对象工厂来实现。【了解即可】</li></ul><h3 id="47-生命周期和作用域"><a class="markdownIt-Anchor" href="#47-生命周期和作用域"></a> 4.7 生命周期和作用域</h3><p><strong>作用域（Scope）和生命周期</strong></p><p>理解我们目前已经讨论过的不同作用域和生命周期类是至关重要的，因为错误的使用会导致非常严重的并发问题。</p><p><strong>作用域理解</strong></p><ul><li>SqlSessionFactoryBuilder 的作用在于创建 SqlSessionFactory，创建成功后，SqlSessionFactoryBuilder 就失去了作用，所以它只能存在于创建 SqlSessionFactory 的方法中，而不要让其长期存在。因此 <strong>SqlSessionFactoryBuilder 实例的最佳作用域是方法作用域</strong>（也就是局部方法变量）。</li><li>SqlSessionFactory 可以被认为是一个数据库连接池，它的作用是创建 SqlSession 接口对象。因为 MyBatis 的本质就是 Java 对数据库的操作，所以 SqlSessionFactory 的生命周期存在于整个 MyBatis 的应用之中，所以一旦创建了 SqlSessionFactory，就要长期保存它，直至不再使用 MyBatis 应用，所以可以认为 SqlSessionFactory 的生命周期就等同于 MyBatis 的应用周期。</li><li>由于 SqlSessionFactory 是一个对数据库的连接池，所以它占据着数据库的连接资源。如果创建多个 SqlSessionFactory，那么就存在多个数据库连接池，这样不利于对数据库资源的控制，也会导致数据库连接资源被消耗光，出现系统宕机等情况，所以尽量避免发生这样的情况。</li><li>因此在一般的应用中我们往往希望 SqlSessionFactory 作为一个单例，让它在应用中被共享。所以说 <strong>SqlSessionFactory 的最佳作用域是应用作用域。</strong></li><li>如果说 SqlSessionFactory 相当于数据库连接池，那么 SqlSession 就相当于一个数据库连接（Connection 对象），你可以在一个事务里面执行多条 SQL，然后通过它的 commit、rollback 等方法，提交或者回滚事务。所以它应该存活在一个业务请求中，处理完整个请求后，应该关闭这条连接，让它归还给 SqlSessionFactory，否则数据库资源就很快被耗费精光，系统就会瘫痪，所以用 try…catch…finally… 语句来保证其正确关闭。</li></ul><h2 id="5-resultmap"><a class="markdownIt-Anchor" href="#5-resultmap"></a> 5. ResultMap</h2><h3 id="51-查询为null问题"><a class="markdownIt-Anchor" href="#51-查询为null问题"></a> 5.1 查询为null问题</h3><p><strong>要解决的问题：属性名和字段名不一致</strong></p><p>1、查看之前的数据库的字段名</p><p><img src="https://i.loli.net/2021/10/17/54K6dPemGwOiaDv.png" alt="image-20211017120131791" /></p><p>2、Java中的实体类设计</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">   <span class="keyword">private</span> <span class="type">int</span> id;  <span class="comment">//id</span></span><br><span class="line">   <span class="keyword">private</span> String name;   <span class="comment">//姓名</span></span><br><span class="line">   <span class="keyword">private</span> String password;   <span class="comment">//密码和数据库不一样！</span></span><br><span class="line">   <span class="comment">//构造</span></span><br><span class="line">   <span class="comment">//set/get</span></span><br><span class="line">   <span class="comment">//toString()</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据id查询用户</span></span><br><span class="line">User <span class="title function_">selectUserById</span><span class="params">(<span class="type">int</span> id)</span>;</span><br></pre></td></tr></table></figure><p>4、mapper映射文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectUserById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">  select * from user where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>5、测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectUserById</span><span class="params">()</span> &#123;</span><br><span class="line">   <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();  <span class="comment">//获取SqlSession连接</span></span><br><span class="line">   <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(UserMapper.class);</span><br><span class="line">   <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> mapper.selectUserById(<span class="number">2</span>);</span><br><span class="line">   System.out.println(user);</span><br><span class="line">   session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>结果:</strong></p><ul><li>User{id=2, name=‘张三’, password=‘null’}</li><li>查询出来发现 password 为空 . 说明出现了问题！</li></ul><p><strong>分析：</strong></p><ul><li><p>select * from user where id = #{id} 可以看做 select id,name,pwd from user where id = #{id}</p></li><li><p>mybatis会根据这些查询的列名(会将列名转化为小写,数据库不区分大小写) , 去对应的实体类中查找相应列名的set方法设值 , 由于找不到setPwd() , 所以password返回null ; 【自动映射】</p></li></ul><h3 id="52-解决方案"><a class="markdownIt-Anchor" href="#52-解决方案"></a> 5.2 解决方案</h3><p>方案一：为列名指定别名 , 别名和java实体类的属性名一致</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectUserById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">  select id , name , pwd as password from user where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>方案二：使用结果集映射-&gt;ResultMap</strong> 【推荐】</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;UserMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- id为主键 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- column是数据库表的列名 , property是对应实体类的属性名 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;pwd&quot;</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectUserById&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;UserMap&quot;</span>&gt;</span></span><br><span class="line">  select id , name , pwd from user where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="53-自动映射"><a class="markdownIt-Anchor" href="#53-自动映射"></a> 5.3 自动映射</h3><ul><li><code>resultMap</code> 元素是 MyBatis 中最重要最强大的元素。它可以让你从 90% 的 JDBC <code>ResultSets</code> 数据提取代码中解放出来。</li><li>实际上，在为一些比如连接的复杂语句编写映射代码的时候，一份 <code>resultMap</code> 能够代替实现同等功能的长达数千行的代码。</li><li>ResultMap 的设计思想是，对于简单的语句根本不需要配置显式的结果映射，而对于复杂一点的语句只需要描述它们的关系就行了。</li></ul><p>你已经见过简单映射语句的示例了，但并没有显式指定 <code>resultMap</code>。比如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectUserById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line">select id , name , pwd</span><br><span class="line">  from user</span><br><span class="line">  where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上述语句只是简单地将所有的列映射到 <code>HashMap</code> 的键上，这由 <code>resultType</code> 属性指定。虽然在大部分情况下都够用，但是 HashMap 不是一个很好的模型。你的程序更可能会使用 JavaBean 或 POJO（Plain Old Java Objects，普通老式 Java 对象）作为模型。</p><p><code>ResultMap</code> 最优秀的地方在于，虽然你已经对它相当了解了，但是根本就不需要显式地用到他们。</p><h3 id="54-手动映射"><a class="markdownIt-Anchor" href="#54-手动映射"></a> 5.4 手动映射</h3><p>1、返回值类型为resultMap</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectUserById&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;UserMap&quot;</span>&gt;</span></span><br><span class="line">  select id , name , pwd from user where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、编写resultMap，实现手动映射！</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;UserMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- id为主键 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- column是数据库表的列名 , property是对应实体类的属性名 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;pwd&quot;</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果世界总是这么简单就好了。但是肯定不是的，数据库中，存在<mark>一对多，多对一</mark>的情况，我们之后会使用到一些高级的结果集映射，<mark>association</mark>，<mark>collection</mark>这些，我们将在之后讲解，今天你们需要把这些知识都消化掉才是最重要的！理解结果集映射的这个概念！</p><h2 id="6-日志"><a class="markdownIt-Anchor" href="#6-日志"></a> 6. 日志</h2><h3 id="61-日志工厂"><a class="markdownIt-Anchor" href="#61-日志工厂"></a> 6.1 日志工厂</h3><p>思考：我们在测试SQL的时候，要是能够在控制台输出 SQL 的话，是不是就能够有更快的排错效率？</p><p>如果一个 数据库相关的操作出现了问题，我们可以根据输出的SQL语句快速排查问题。</p><p>对于以往的开发过程，我们会经常使用到debug模式来调节，跟踪我们的代码执行过程。但是现在使用Mybatis是基于接口，配置文件的源代码执行过程。因此，我们必须选择日志工具来作为我们开发，调节程序的工具。</p><p>Mybatis内置的日志工厂提供日志功能，具体的日志实现有以下几种工具：</p><ul><li>SLF4J</li><li>Apache Commons Logging</li><li>Log4j 2</li><li>Log4j</li><li>JDK logging</li></ul><p>具体选择哪个日志实现工具由MyBatis的内置日志工厂确定。它会使用最先找到的（按上文列举的顺序查找）。如果一个都未找到，日志功能就会被禁用。</p><p><strong>标准日志实现</strong></p><p>指定 MyBatis 应该使用哪个日志记录实现。如果此设置不存在，则会自动发现日志记录实现。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;logImpl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;STDOUT_LOGGING&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="62-log4j"><a class="markdownIt-Anchor" href="#62-log4j"></a> 6.2 log4j</h3><p><strong>简介：</strong></p><ul><li>Log4j是Apache的一个开源项目</li><li>通过使用Log4j，我们可以控制日志信息输送的目的地：控制台，文本，GUI组件…</li><li>我们也可以控制每一条日志的输出格式；</li><li>通过定义每一条日志信息的级别，我们能够更加细致地控制日志的生成过程。最令人感兴趣的就是，这些可以通过一个配置文件来灵活地进行配置，而不需要修改应用的代码。</li></ul><p><strong>使用步骤：</strong></p><p>1、导入log4j的包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、配置文件编写(log4j.properties)</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将等级为DEBUG的日志信息输出到console和file这两个目的地，console和file的定义在下面的代码</span></span><br><span class="line"><span class="attr">log4j.rootLogger</span>=<span class="string">DEBUG,console,file</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#控制台输出的相关设置</span></span><br><span class="line"><span class="attr">log4j.appender.console</span> = <span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="attr">log4j.appender.console.Target</span> = <span class="string">System.out</span></span><br><span class="line"><span class="attr">log4j.appender.console.Threshold</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="attr">log4j.appender.console.layout</span> = <span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="attr">log4j.appender.console.layout.ConversionPattern</span>=<span class="string">[%c]-%m%n</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#文件输出的相关设置</span></span><br><span class="line"><span class="attr">log4j.appender.file</span> = <span class="string">org.apache.log4j.RollingFileAppender</span></span><br><span class="line"><span class="attr">log4j.appender.file.File</span>=<span class="string">./log/kuang.log</span></span><br><span class="line"><span class="attr">log4j.appender.file.MaxFileSize</span>=<span class="string">10mb</span></span><br><span class="line"><span class="attr">log4j.appender.file.Threshold</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="attr">log4j.appender.file.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="attr">log4j.appender.file.layout.ConversionPattern</span>=<span class="string">[%p][%d&#123;yy-MM-dd&#125;][%c]%m%n</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#日志输出级别</span></span><br><span class="line"><span class="attr">log4j.logger.org.mybatis</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="attr">log4j.logger.java.sql</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="attr">log4j.logger.java.sql.Statement</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="attr">log4j.logger.java.sql.ResultSet</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="attr">log4j.logger.java.sql.PreparedStatement</span>=<span class="string">DEBUG</span></span><br></pre></td></tr></table></figure><p>3、setting设置日志实现</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;logImpl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;LOG4J&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><p>4、在程序中使用Log4j进行输出！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注意导包：org.apache.log4j.Logger</span></span><br><span class="line"><span class="keyword">static</span> <span class="type">Logger</span> <span class="variable">logger</span> <span class="operator">=</span> Logger.getLogger(UserMapperTest.class);</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">selectUser</span><span class="params">()</span> &#123;</span><br><span class="line">    logger.info(<span class="string">&quot;info：进入selectUser方法&quot;</span>);</span><br><span class="line">    logger.debug(<span class="string">&quot;debug：进入selectUser方法&quot;</span>);</span><br><span class="line">    logger.error(<span class="string">&quot;error: 进入selectUser方法&quot;</span>);</span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">    <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(UserMapper.class);</span><br><span class="line">    List&lt;User&gt; users = mapper.getUserList();</span><br><span class="line">    <span class="keyword">for</span> (User user: users)&#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-分页"><a class="markdownIt-Anchor" href="#7-分页"></a> 7. 分页</h2><h3 id="71-limit实现分页"><a class="markdownIt-Anchor" href="#71-limit实现分页"></a> 7.1 limit实现分页</h3><p><strong>思考：为什么需要分页？</strong></p><p>在学习mybatis等持久层框架的时候，会经常对数据进行增删改查操作，使用最多的是对数据库进行查询操作，如果查询大量数据的时候，我们往往使用分页进行查询，也就是每次处理小部分数据，这样对数据库压力就在可控范围内。</p><p><strong>使用Limit实现分页</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#语法</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">table</span> LIMIT stratIndex，pageSize</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">table</span> LIMIT <span class="number">5</span>,<span class="number">10</span>; <span class="operator">/</span><span class="operator">/</span> 检索记录行 <span class="number">6</span><span class="number">-15</span></span><br><span class="line"></span><br><span class="line">#如果只给定一个参数，它表示返回最大的记录行数目：</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">table</span> LIMIT <span class="number">5</span>; <span class="operator">/</span><span class="operator">/</span>检索前 <span class="number">5</span> 个记录行</span><br><span class="line"></span><br><span class="line">#换句话说，LIMIT n 等价于 LIMIT <span class="number">0</span>,n。</span><br></pre></td></tr></table></figure><p><strong>步骤：</strong></p><p>1、修改Mapper文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">  select * from user limit #&#123;startIndex&#125;,#&#123;pageSize&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、Mapper接口，参数为map</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//选择全部用户实现分页</span><br><span class="line">List<span class="tag">&lt;<span class="name">User</span>&gt;</span> selectUser(Map&lt;String,Integer&gt; map);</span><br></pre></td></tr></table></figure><p>3、在测试类中传入参数测试</p><ul><li>推断：起始位置 = （当前页面 - 1 ） * 页面大小</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分页查询 , 两个参数startIndex , pageSize</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectUser</span><span class="params">()</span> &#123;</span><br><span class="line">   <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">   <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(UserMapper.class);</span><br><span class="line"></span><br><span class="line">   <span class="type">int</span> <span class="variable">currentPage</span> <span class="operator">=</span> <span class="number">1</span>;  <span class="comment">//第几页</span></span><br><span class="line">   <span class="type">int</span> <span class="variable">pageSize</span> <span class="operator">=</span> <span class="number">2</span>;  <span class="comment">//每页显示几个</span></span><br><span class="line">   Map&lt;String,Integer&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String,Integer&gt;();</span><br><span class="line">   map.put(<span class="string">&quot;startIndex&quot;</span>,(currentPage-<span class="number">1</span>)*pageSize);</span><br><span class="line">   map.put(<span class="string">&quot;pageSize&quot;</span>,pageSize);</span><br><span class="line"></span><br><span class="line">   List&lt;User&gt; users = mapper.selectUser(map);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">for</span> (User user: users)&#123;</span><br><span class="line">       System.out.println(user);</span><br><span class="line">  &#125;</span><br><span class="line">   session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="72-rowbounds分页"><a class="markdownIt-Anchor" href="#72-rowbounds分页"></a> 7.2 RowBounds分页</h3><p>我们除了使用Limit在SQL层面实现分页，也可以使用RowBounds在Java代码层面实现分页，当然此种方式作为了解即可。我们来看下如何实现的！</p><p><strong>步骤：</strong></p><p>1、mapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//选择全部用户RowBounds实现分页</span></span><br><span class="line">List&lt;User&gt; <span class="title function_">getUserByRowBounds</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><p>2、mapper文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserByRowBounds&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">select * from user</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、测试类</p><p>在这里，我们需要使用RowBounds类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUserByRowBounds</span><span class="params">()</span> &#123;</span><br><span class="line">   <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line"></span><br><span class="line">   <span class="type">int</span> <span class="variable">currentPage</span> <span class="operator">=</span> <span class="number">2</span>;  <span class="comment">//第几页</span></span><br><span class="line">   <span class="type">int</span> <span class="variable">pageSize</span> <span class="operator">=</span> <span class="number">2</span>;  <span class="comment">//每页显示几个</span></span><br><span class="line">   <span class="type">RowBounds</span> <span class="variable">rowBounds</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RowBounds</span>((currentPage-<span class="number">1</span>)*pageSize,pageSize);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//通过session.**方法进行传递rowBounds，[此种方式现在已经不推荐使用了]</span></span><br><span class="line">   List&lt;User&gt; users = session.selectList(<span class="string">&quot;com.kuang.mapper.UserMapper.getUserByRowBounds&quot;</span>, <span class="literal">null</span>, rowBounds);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">for</span> (User user: users)&#123;</span><br><span class="line">       System.out.println(user);</span><br><span class="line">  &#125;</span><br><span class="line">   session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="73-pagehelper"><a class="markdownIt-Anchor" href="#73-pagehelper"></a> 7.3 PageHelper</h3><p>了解即可，可以自己尝试使用</p><p><a href="https://pagehelper.github.io/">官方文档</a></p><p><img src="https://i.loli.net/2021/10/17/zo73jndEGSXlHDI.png" alt="image-20211017151255345" /></p><h2 id="8-使用注解开发"><a class="markdownIt-Anchor" href="#8-使用注解开发"></a> 8. 使用注解开发</h2><h3 id="81-面向接口编程"><a class="markdownIt-Anchor" href="#81-面向接口编程"></a> 8.1 面向接口编程</h3><ul><li>大家之前都学过面向对象编程，也学习过接口，但在真正的开发中，很多时候我们会选择面向接口编程</li><li><strong>根本原因 : 解耦 , 可拓展 , 提高复用 , 分层开发中 , 上层不用管具体的实现 , 大家都遵守共同的标准 , 使得开发变得容易 , 规范性更好</strong></li><li>在一个面向对象的系统中，系统的各种功能是由许许多多的不同对象协作完成的。在这种情况下，各个对象内部是如何实现自己的,对系统设计人员来讲就不那么重要了；</li><li>而各个对象之间的协作关系则成为系统设计的关键。小到不同类之间的通信，大到各模块之间的交互，在系统设计之初都是要着重考虑的，这也是系统设计的主要工作内容。面向接口编程就是指按照这种思想来编程。</li></ul><blockquote><p>关于接口的理解</p></blockquote><ul><li><p>接口从更深层次的理解，应是定义（规范，约束）与实现（名实分离的原则）的分离。</p></li><li><p>接口的本身反映了系统设计人员对系统的抽象理解。</p></li><li><p>接口应有两类：</p><ul><li>第一类是对一个个体的抽象，它可对应为一个抽象体(abstract class)；</li></ul><ul><li>第二类是对一个个体某一方面的抽象，即形成一个抽象面（interface）；</li></ul></li><li><p>一个体有可能有多个抽象面。抽象体与抽象面是有区别的。</p></li></ul><blockquote><p>三个面向区别</p></blockquote><ul><li>面向对象是指，我们考虑问题时，以对象为单位，考虑它的属性及方法</li><li>面向过程是指，我们考虑问题时，以一个具体的流程（事务过程）为单位，考虑它的实现 .</li><li>接口设计与非接口设计是针对复用技术而言的，与面向对象（过程）不是一个问题.更多的体现就是对系统整体的架构</li></ul><h3 id="82-利用注解开发"><a class="markdownIt-Anchor" href="#82-利用注解开发"></a> 8.2 利用注解开发</h3><p><strong>mybatis最初配置信息是基于XML，映射语句(SQL)也是定义在XML中的。而到MyBatis 3提供了新的基于注解的配置。不幸的是，Java 注解的的表达力和灵活性十分有限。最强大的 MyBatis 映射并不能用注解来构建</strong></p><p>sql 类型主要分成 :</p><ul><li>@select ()</li><li>@update ()</li><li>@Insert ()</li><li>@delete ()</li></ul><p>**注意：**利用注解开发就不需要mapper.xml映射文件了 .</p><p>1、我们在我们的接口中添加注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询全部用户</span></span><br><span class="line"><span class="meta">@Select(&quot;select id,name,pwd password from user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> List&lt;User&gt; <span class="title function_">getAllUser</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><p>2、在mybatis的核心配置文件中注入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--使用class绑定接口--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;com.jezer.mapper.UserMapper&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetAllUser</span><span class="params">()</span> &#123;</span><br><span class="line">   <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">   <span class="comment">//本质上利用了jvm的动态代理机制</span></span><br><span class="line">   <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(UserMapper.class);</span><br><span class="line">   List&lt;User&gt; users = mapper.getAllUser();</span><br><span class="line">   <span class="keyword">for</span> (User user : users)&#123;</span><br><span class="line">       System.out.println(user);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li><p>利用Debug查看本质</p><p><img src="https://i.loli.net/2021/10/17/FzmVuKNZT17eH4R.png" alt="image-20211017183745878" /></p></li></ol><p><img src="https://i.loli.net/2021/10/17/jbnYNSwOQdiDX1s.png" alt="image-20211017183950375" /></p><p>5、本质上利用了jvm的动态代理机制</p><p>6、Mybatis详细的执行流程</p><p><img src="https://i.loli.net/2021/10/17/r56UyYxGviuNACD.png" alt="image-20211017185743828" /></p><h3 id="83-注解crud"><a class="markdownIt-Anchor" href="#83-注解crud"></a> 8.3 注解CRUD</h3><p>改造MybatisUtils工具类的getSession( ) 方法，重载实现。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取SqlSession连接</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title function_">getSession</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> getSession(<span class="literal">true</span>); <span class="comment">//事务自动提交</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title function_">getSession</span><span class="params">(<span class="type">boolean</span> flag)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> sqlSessionFactory.openSession(flag);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>【注意】确保实体类和数据库字段对应</p><blockquote><p>查询</p></blockquote><p>1、编写接口方法注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据id查询用户</span></span><br><span class="line"><span class="meta">@Select(&quot;select * from user where id = #&#123;id&#125;&quot;)</span></span><br><span class="line">User <span class="title function_">selectUserById</span><span class="params">(<span class="meta">@Param(&quot;id&quot;)</span> <span class="type">int</span> id)</span>;</span><br></pre></td></tr></table></figure><p>2、测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectUserById</span><span class="params">()</span> &#123;</span><br><span class="line">   <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">   <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(UserMapper.class);</span><br><span class="line">   <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> mapper.selectUserById(<span class="number">1</span>);</span><br><span class="line">   System.out.println(user);</span><br><span class="line">   session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>新增</p></blockquote><p>1、编写接口方法注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加一个用户</span></span><br><span class="line"><span class="meta">@Insert(&quot;insert into user (id,name,pwd) values (#&#123;id&#125;,#&#123;name&#125;,#&#123;pwd&#125;)&quot;)</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">addUser</span><span class="params">(User user)</span>;</span><br></pre></td></tr></table></figure><p>2、测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testAddUser</span><span class="params">()</span> &#123;</span><br><span class="line">   <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">   <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(UserMapper.class);</span><br><span class="line">   <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">1</span>, <span class="string">&quot;jezer&quot;</span>, <span class="string">&quot;12345678&quot;</span>);</span><br><span class="line">   mapper.addUser(user);</span><br><span class="line">   session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>修改</p></blockquote><p>1、编写接口方法注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改一个用户</span></span><br><span class="line"><span class="meta">@Update(&quot;update user set name=#&#123;name&#125;,pwd=#&#123;pwd&#125; where id = #&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">updateUser</span><span class="params">(User user)</span>;</span><br></pre></td></tr></table></figure><p>2、测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUpdateUser</span><span class="params">()</span> &#123;</span><br><span class="line">   <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">   <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(UserMapper.class);</span><br><span class="line">   <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">6</span>, <span class="string">&quot;jezer&quot;</span>, <span class="string">&quot;qweqwrqr&quot;</span>);</span><br><span class="line">   mapper.updateUser(user);</span><br><span class="line">   session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>删除</p></blockquote><p>1、编写接口方法注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据id删除用</span></span><br><span class="line"><span class="meta">@Delete(&quot;delete from user where id = #&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">deleteUser</span><span class="params">(<span class="meta">@Param(&quot;id&quot;)</span><span class="type">int</span> id)</span>;</span><br></pre></td></tr></table></figure><p>2、测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDeleteUser</span><span class="params">()</span> &#123;</span><br><span class="line">   <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">   <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(UserMapper.class);</span><br><span class="line">   mapper.deleteUser(<span class="number">6</span>);</span><br><span class="line">   session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>【注意点：增删改一定记得对事务的处理】</p><h3 id="84-关于param"><a class="markdownIt-Anchor" href="#84-关于param"></a> 8.4 关于@Param</h3><p>@Param注解用于给方法参数起一个名字。以下是总结的使用原则：</p><ul><li>在方法只接受一个参数的情况下，可以不使用@Param。</li><li>在方法接受多个参数的情况下，建议一定要使用@Param注解给参数命名。</li><li>如果参数是 JavaBean ， 则不能使用@Param。</li><li>不使用@Param注解时，参数只能有一个，并且是Javabean。</li></ul><h3 id="85-与的区别"><a class="markdownIt-Anchor" href="#85-与的区别"></a> 8.5 #与$的区别</h3><ul><li><p>#{} 的作用主要是替换预编译语句(PrepareStatement)中的占位符? 【推荐使用】</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">user</span> (name) <span class="keyword">VALUES</span> (#&#123;name&#125;);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">user</span> (name) <span class="keyword">VALUES</span> (?);</span><br></pre></td></tr></table></figure></li><li><p>${} 的作用是直接进行字符串替换，会有sql语句注入问题</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">user</span> (name) <span class="keyword">VALUES</span> (<span class="string">&#x27;$&#123;name&#125;&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">user</span> (name) <span class="keyword">VALUES</span> (<span class="string">&#x27;kuangshen&#x27;</span>);</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>使用注解和配置文件协同开发，才是MyBatis的最佳实践！</p></blockquote><h2 id="9-多对一的处理"><a class="markdownIt-Anchor" href="#9-多对一的处理"></a> 9. 多对一的处理</h2><p>多对一的理解：</p><ul><li><p>多个学生对应一个老师</p></li><li><p>如果对于学生这边，就是一个多对一的现象，即从学生这边关联一个老师！</p></li></ul><h3 id="91-数据库设计"><a class="markdownIt-Anchor" href="#91-数据库设计"></a> 9.1 数据库设计</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `teacher` (</span><br><span class="line">                           `id` <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">                           `name` <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">                           <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> teacher(`id`, `name`) <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;秦老师&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `student` (</span><br><span class="line">    `id` <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    `name` <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    `tid` <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` (`id`, `name`, `tid`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;小明&#x27;</span>, <span class="string">&#x27;1&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` (`id`, `name`, `tid`) <span class="keyword">VALUES</span> (<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;小红&#x27;</span>, <span class="string">&#x27;1&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` (`id`, `name`, `tid`) <span class="keyword">VALUES</span> (<span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;小张&#x27;</span>, <span class="string">&#x27;1&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` (`id`, `name`, `tid`) <span class="keyword">VALUES</span> (<span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;小李&#x27;</span>, <span class="string">&#x27;1&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` (`id`, `name`, `tid`) <span class="keyword">VALUES</span> (<span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;小王&#x27;</span>, <span class="string">&#x27;1&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="92-lombok引入"><a class="markdownIt-Anchor" href="#92-lombok引入"></a> 9.2 Lombok引入</h3><p>1、IDEA安装Lombok插件</p><p>2、引入Maven依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.projectlombok/lombok --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.22<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、在实体类的代码中增加注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jezer.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    String name;</span><br><span class="line">    Teacher teacher;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="93-按查询嵌套处理"><a class="markdownIt-Anchor" href="#93-按查询嵌套处理"></a> 9.3 按查询嵌套处理</h3><p>1、给StudentMapper接口增加方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取所有学生及对应老师的信息</span></span><br><span class="line"><span class="keyword">public</span> List&lt;Student&gt; <span class="title function_">getStudents</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><p>2、编写对应的Mapper文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--namespace绑定一个对应的Dao/Mapper接口--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.jezer.mapper.StudentMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">   需求：获取所有学生及对应老师的信息</span></span><br><span class="line"><span class="comment">   思路：</span></span><br><span class="line"><span class="comment">       1. 获取所有学生的信息</span></span><br><span class="line"><span class="comment">       2. 根据获取的学生信息的老师ID-&gt;获取该老师的信息</span></span><br><span class="line"><span class="comment">       3. 思考问题，这样学生的结果集中应该包含老师，该如何处理呢，数据库中我们一般使用关联查询？</span></span><br><span class="line"><span class="comment">           1. 做一个结果集映射：StudentTeacher</span></span><br><span class="line"><span class="comment">           2. StudentTeacher结果集的类型为 Student</span></span><br><span class="line"><span class="comment">           3. 学生中老师的属性为teacher，对应数据库中为tid。</span></span><br><span class="line"><span class="comment">              多个 [1,...）学生关联一个老师=&gt; 一对一，一对多</span></span><br><span class="line"><span class="comment">           4. 查看官网找到：association – 一个复杂类型的关联；使用它来处理关联查询</span></span><br><span class="line"><span class="comment">   --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudents&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;StudentTeacher&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.student</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;StudentTeacher&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--association关联属性 property属性名 javaType属性类型 column在多的一方的表中的列名--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;teacher&quot;</span>  <span class="attr">column</span>=<span class="string">&quot;tid&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;Teacher&quot;</span> <span class="attr">select</span>=<span class="string">&quot;getTeacher&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    这里传递过来的id，只有一个属性的时候，下面可以写任何值</span></span><br><span class="line"><span class="comment">    association中column多参数配置：</span></span><br><span class="line"><span class="comment">        column=&quot;&#123;key=value,key=value&#125;&quot;</span></span><br><span class="line"><span class="comment">        其实就是键值对的形式，key是传给下个sql的取值名称，value是片段一中sql查询的字段名。</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getTeacher&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;teacher&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.teacher where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、编写完毕去Mybatis配置文件中，注册Mapper！</p><p>4、注意点说明：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;StudentTeacher&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Student&quot;</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--association关联属性 property属性名 javaType属性类型 column在多的一方的表中的列名--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;teacher&quot;</span>  <span class="attr">column</span>=<span class="string">&quot;&#123;id=tid,name=tid&#125;&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;Teacher&quot;</span> <span class="attr">select</span>=<span class="string">&quot;getTeacher&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">这里传递过来的id，只有一个属性的时候，下面可以写任何值association中column多参数配置：</span></span><br><span class="line"><span class="comment">   column=&quot;&#123;key=value,key=value&#125;&quot;</span></span><br><span class="line"><span class="comment">   其实就是键值对的形式，key是传给下个sql的取值名称，value是片段一中sql查询的字段名。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getTeacher&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;teacher&quot;</span>&gt;</span></span><br><span class="line">  select * from teacher where id = #&#123;id&#125; and name = #&#123;name&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>5、测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jezer.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.jezer.pojo.Student;</span><br><span class="line"><span class="keyword">import</span> com.jezer.utils.MybatisUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MapperTest</span> &#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getStudentsTest</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">        <span class="type">StudentMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(StudentMapper.class);</span><br><span class="line">        List&lt;Student&gt; students = mapper.getStudents();</span><br><span class="line">        <span class="keyword">for</span> (Student student : students) &#123;</span><br><span class="line">            System.out.println(student);</span><br><span class="line">        &#125;</span><br><span class="line">        session.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="94-按结果嵌套处理"><a class="markdownIt-Anchor" href="#94-按结果嵌套处理"></a> 9.4 按结果嵌套处理</h3><p>1、接口方法编写</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> List&lt;Student&gt; <span class="title function_">getStudents2</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><p>2、编写对应的mapper文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">按查询结果嵌套处理</span></span><br><span class="line"><span class="comment">思路：</span></span><br><span class="line"><span class="comment">   1. 直接查询出结果，进行结果集的映射</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudents2&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;StudentTeacher2&quot;</span> &gt;</span></span><br><span class="line">    select s.id sid, s.name sname , t.name tname</span><br><span class="line">    from mybatis.student s,mybatis.teacher t</span><br><span class="line">    where s.tid = t.id</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;StudentTeacher2&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sid&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sname&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--关联对象property 关联对象在Student实体类中的属性--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;teacher&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;Teacher&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;tname&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、去mybatis-config文件中注入</p><p>4、测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jezer.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.jezer.pojo.Student;</span><br><span class="line"><span class="keyword">import</span> com.jezer.utils.MybatisUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MapperTest</span> &#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getStudentsTest</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">        <span class="type">StudentMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(StudentMapper.class);</span><br><span class="line">        List&lt;Student&gt; students = mapper.getStudents2();</span><br><span class="line">        <span class="keyword">for</span> (Student student : students) &#123;</span><br><span class="line">            System.out.println(student);</span><br><span class="line">        &#125;</span><br><span class="line">        session.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="95-小结"><a class="markdownIt-Anchor" href="#95-小结"></a> 9.5 小结</h3><p>按照查询进行嵌套处理就像SQL中的子查询</p><p>按照结果进行嵌套处理就像SQL中的联表查询</p><h2 id="10-一对多的处理"><a class="markdownIt-Anchor" href="#10-一对多的处理"></a> 10. 一对多的处理</h2><p>一对多的理解：</p><ul><li>一个老师拥有多个学生</li><li>如果对于老师这边，就是一个一对多的现象，即从一个老师下面拥有一群学生（集合）！</li></ul><h3 id="101-实体类编写"><a class="markdownIt-Anchor" href="#101-实体类编写"></a> 10.1 实体类编写</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">   <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">   <span class="keyword">private</span> String name;</span><br><span class="line">   <span class="keyword">private</span> <span class="type">int</span> tid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Teacher</span> &#123;</span><br><span class="line">   <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">   <span class="keyword">private</span> String name;</span><br><span class="line">   <span class="comment">//一个老师多个学生</span></span><br><span class="line">   <span class="keyword">private</span> List&lt;Student&gt; students;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="102-按结果嵌套处理"><a class="markdownIt-Anchor" href="#102-按结果嵌套处理"></a> 10.2 按结果嵌套处理</h3><p>1、TeacherMapper接口编写方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取指定老师，及老师下的所有学生</span></span><br><span class="line"><span class="keyword">public</span> Teacher <span class="title function_">getTeacher</span><span class="params">(<span class="type">int</span> id)</span>;</span><br></pre></td></tr></table></figure><p>2、编写接口对应的Mapper配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">思路:</span></span><br><span class="line"><span class="comment">    1. 从学生表和老师表中查出学生id，学生姓名，老师姓名</span></span><br><span class="line"><span class="comment">    2. 对查询出来的操作做结果集映射</span></span><br><span class="line"><span class="comment">        1. 集合的话，使用collection！</span></span><br><span class="line"><span class="comment">            JavaType和ofType都是用来指定对象类型的</span></span><br><span class="line"><span class="comment">            JavaType是用来指定pojo中属性的类型</span></span><br><span class="line"><span class="comment">            ofType指定的是映射到list集合属性中pojo的类型。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.jezer.mapper.TeacherMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getTeacher&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;_int&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;Teacher_Students&quot;</span>&gt;</span></span><br><span class="line">        select t.name tname, t.id tid , s.id sid, s.name sname</span><br><span class="line">        from mybatis.student s,mybatis.teacher t</span><br><span class="line">        where s.tid = t.id and t.id=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;Teacher_Students&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Teacher&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;tname&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;tid&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;students&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;Student&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sid&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sname&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;tid&quot;</span> <span class="attr">column</span>=<span class="string">&quot;tid&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetTeacher</span><span class="params">()</span>&#123;</span><br><span class="line">   <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">   <span class="type">TeacherMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(TeacherMapper.class);</span><br><span class="line">   <span class="type">Teacher</span> <span class="variable">teacher</span> <span class="operator">=</span> mapper.getTeacher(<span class="number">1</span>);</span><br><span class="line">   System.out.println(teacher.getName());</span><br><span class="line">   System.out.println(teacher.getStudents());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="103-按查询嵌套处理"><a class="markdownIt-Anchor" href="#103-按查询嵌套处理"></a> 10.3 按查询嵌套处理</h3><p>1、TeacherMapper接口编写方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Teacher <span class="title function_">getTeacher2</span><span class="params">(<span class="type">int</span> id)</span>;</span><br></pre></td></tr></table></figure><p>2、编写接口对应的Mapper配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getTeacher2&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;TeacherStudent2&quot;</span>&gt;</span></span><br><span class="line">    select * from mybatis.teacher where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;TeacherStudent2&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Teacher&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--column是一对多的外键 , 写的是一的主键的列名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;students&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;ArrayList&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;Student&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">select</span>=<span class="string">&quot;getStudentByTeacherId&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudentByTeacherId&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Student&quot;</span>&gt;</span></span><br><span class="line">    select * from mybatis.student where tid = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetTeacher2</span><span class="params">()</span>&#123;</span><br><span class="line">   <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">   <span class="type">TeacherMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(TeacherMapper.class);</span><br><span class="line">   <span class="type">Teacher</span> <span class="variable">teacher</span> <span class="operator">=</span> mapper.getTeacher2(<span class="number">1</span>);</span><br><span class="line">   System.out.println(teacher.getName());</span><br><span class="line">   System.out.println(teacher.getStudents());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="104-小结"><a class="markdownIt-Anchor" href="#104-小结"></a> 10.4 小结</h3><p>1、关联-association</p><p>2、集合-collection</p><p>3、所以association是用于一对一和多对一，而collection是用于一对多的关系</p><p>4、JavaType和ofType都是用来指定对象类型的</p><ul><li>JavaType是用来指定pojo中属性的类型</li><li>ofType指定的是映射到list集合属性中pojo的类型。</li></ul><p><strong>注意说明：</strong></p><p>1、保证SQL的可读性，尽量通俗易懂</p><p>2、根据实际要求，尽量编写性能更高的SQL语句</p><p>3、注意属性名和字段不一致的问题</p><p>4、注意一对多和多对一 中：字段和属性对应的问题</p><p>5、尽量使用Log4j，通过日志来查看自己的错误</p><h2 id="11-动态sql"><a class="markdownIt-Anchor" href="#11-动态sql"></a> 11. 动态SQL</h2><h3 id="111-介绍"><a class="markdownIt-Anchor" href="#111-介绍"></a> 11.1 介绍</h3><p>什么是动态SQL：<strong>动态SQL指的是根据不同的查询条件 , 生成不同的Sql语句.</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">官网描述：</span><br><span class="line">MyBatis 的强大特性之一便是它的动态SQL。如果你有使用JDBC或其它类似框架的经验，你就能体会到根据不同条件拼接SQL语句的痛苦。例如拼接时要确保不能忘记添加必要的空格，还要注意去掉列表最后一个列名的逗号。利用动态 SQL 这一特性可以彻底摆脱这种痛苦。</span><br><span class="line">虽然在以前使用动态 SQL 并非一件易事，但正是 MyBatis 提供了可以被用在任意 SQL 映射语句中的强大的动态 SQL 语言得以改进这种情形。</span><br><span class="line">动态 SQL 元素和 JSTL 或基于类似 XML 的文本处理器相似。在 MyBatis 之前的版本中，有很多元素需要花时间了解。MyBatis3大大精简了元素种类，现在只需学习原来一半的元素便可。MyBatis 采用功能强大的基于 OGNL 的表达式来淘汰其它大部分元素。</span><br><span class="line"></span><br><span class="line">  -------------------------------</span><br><span class="line">  - if</span><br><span class="line">  - choose (when, otherwise)</span><br><span class="line">  - trim (where, set)</span><br><span class="line">  - foreach</span><br><span class="line">  -------------------------------</span><br></pre></td></tr></table></figure><p>我们之前写的 SQL 语句都比较简单，如果有比较复杂的业务，我们需要写复杂的 SQL 语句，往往需要拼接，而拼接 SQL ，稍微不注意，由于引号，空格等缺失可能都会导致错误。</p><p>那么怎么去解决这个问题呢？这就要使用mybatis动态SQL，通过 if, choose, when, otherwise, trim, where, set, foreach等标签，可组合成非常灵活的SQL语句，从而在提高 SQL 语句的准确性的同时，也大大提高了开发人员的效率。</p><h3 id="112-搭建环境"><a class="markdownIt-Anchor" href="#112-搭建环境"></a> 11.2 搭建环境</h3><p><strong>新建一个数据库表：blog</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `blog` (</span><br><span class="line">    `id` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;博客id&#x27;</span>,</span><br><span class="line">    `title` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;博客标题&#x27;</span>,</span><br><span class="line">    `author` <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;博客作者&#x27;</span>,</span><br><span class="line">    `create_time` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">    `views` <span class="type">int</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;浏览量&#x27;</span></span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br></pre></td></tr></table></figure><p><strong>UUID生成工具类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IDUtil</span>&#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getId</span><span class="params">()</span>&#123;</span><br><span class="line">       <span class="keyword">return</span> UUID.randomUUID().toString().replaceAll(<span class="string">&quot;-&quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>实体类编写</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Blog</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line">    <span class="keyword">private</span> String author;</span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> views;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>mybatis核心配置文件，下划线驼峰自动转换</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;mapUnderscoreToCamelCase&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>插入初始数据</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//新增一个博客</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">addBlog</span><span class="params">(Blog blog)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addBlog&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;blog&quot;</span>&gt;</span></span><br><span class="line">  insert into blog (id, title, author, create_time, views)</span><br><span class="line">  values (#&#123;id&#125;,#&#123;title&#125;,#&#123;author&#125;,#&#123;createTime&#125;,#&#123;views&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addInitBlog</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">    <span class="type">BlogMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(BlogMapper.class);</span><br><span class="line"></span><br><span class="line">    <span class="type">Blog</span> <span class="variable">blog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Blog</span>();</span><br><span class="line">    blog.setId(IDUtil.getId());</span><br><span class="line">    blog.setTitle(<span class="string">&quot;数据结构&quot;</span>);</span><br><span class="line">    blog.setAuthor(<span class="string">&quot;严蔚敏&quot;</span>);</span><br><span class="line">    blog.setCreateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    blog.setViews(<span class="number">9999</span>);</span><br><span class="line"></span><br><span class="line">    mapper.addBlog(blog);</span><br><span class="line"></span><br><span class="line">    blog.setId(IDUtil.getId());</span><br><span class="line">    blog.setTitle(<span class="string">&quot;网络编程&quot;</span>);</span><br><span class="line">    blog.setAuthor(<span class="string">&quot;倪天伟&quot;</span>);</span><br><span class="line">    mapper.addBlog(blog);</span><br><span class="line"></span><br><span class="line">    blog.setId(IDUtil.getId());</span><br><span class="line">    blog.setTitle(<span class="string">&quot;Spring如此简单&quot;</span>);</span><br><span class="line">    blog.setAuthor(<span class="string">&quot;Jezer&quot;</span>);</span><br><span class="line">    mapper.addBlog(blog);</span><br><span class="line"></span><br><span class="line">    blog.setId(IDUtil.getId());</span><br><span class="line">    blog.setTitle(<span class="string">&quot;微服务如此简单&quot;</span>);</span><br><span class="line">    mapper.addBlog(blog);</span><br><span class="line">    session.commit();</span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="113-if语句"><a class="markdownIt-Anchor" href="#113-if语句"></a> 11.3 if语句</h3><p><strong>需求：根据作者名字和博客名字来查询博客！如果作者名字为空，那么只根据博客名字查询，反之，则根据作者名来查询</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//需求1</span></span><br><span class="line">List&lt;Blog&gt; <span class="title function_">queryBlogIf</span><span class="params">(Map map)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--需求1：</span></span><br><span class="line"><span class="comment">根据作者名字和博客名字来查询博客！</span></span><br><span class="line"><span class="comment">如果作者名字为空，那么只根据博客名字查询，反之，则根据作者名来查询</span></span><br><span class="line"><span class="comment">select * from blog where title = #&#123;title&#125; and author = #&#123;author&#125;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryBlogIf&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;blog&quot;</span>&gt;</span></span><br><span class="line">  select * from blog where</span><br><span class="line">   <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;title != null&quot;</span>&gt;</span></span><br><span class="line">      title = #&#123;title&#125;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;author != null&quot;</span>&gt;</span></span><br><span class="line">      and author = #&#123;author&#125;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testQueryBlogIf</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">    <span class="type">BlogMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(BlogMapper.class);</span><br><span class="line"></span><br><span class="line">    HashMap&lt;String, String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;title&quot;</span>,<span class="string">&quot;数据结构&quot;</span>);</span><br><span class="line">    map.put(<span class="string">&quot;author&quot;</span>,<span class="string">&quot;Jezer&quot;</span>);</span><br><span class="line">    List&lt;Blog&gt; blogs = mapper.queryBlogIf(map);</span><br><span class="line"></span><br><span class="line">    System.out.println(blogs);</span><br><span class="line"></span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/18/Z2jq3guhUprbami.png" alt="image-20211018215918160" /></p><p>这样写我们可以看到，如果 author 等于 null，那么查询语句为 <code>select * from blog where title=#&#123;title&#125;</code>,但是如果title为空呢？那么查询语句为 <code>select * from blog where and author=#&#123;author&#125;</code>，这是错误的 SQL 语句，又或者两个均为null呢，如何解决呢？请看下面的 where 语句！</p><h3 id="114-where语句"><a class="markdownIt-Anchor" href="#114-where语句"></a> 11.4 where语句</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryBlogIf&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;blog&quot;</span>&gt;</span></span><br><span class="line">  select * from blog</span><br><span class="line">   <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;title != null&quot;</span>&gt;</span></span><br><span class="line">          title = #&#123;title&#125;</span><br><span class="line">       <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;author != null&quot;</span>&gt;</span></span><br><span class="line">          and author = #&#123;author&#125;</span><br><span class="line">       <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testQueryBlogIf</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">    <span class="type">BlogMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(BlogMapper.class);</span><br><span class="line"></span><br><span class="line">    HashMap&lt;String, String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;author&quot;</span>,<span class="string">&quot;Jezer&quot;</span>);</span><br><span class="line">    List&lt;Blog&gt; blogs = mapper.queryBlogIf(map);</span><br><span class="line"></span><br><span class="line">    System.out.println(blogs);</span><br><span class="line"></span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/18/KqYX9BMVjAinS7g.png" alt="image-20211018220741173" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testQueryBlogIf</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">    <span class="type">BlogMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(BlogMapper.class);</span><br><span class="line">    HashMap&lt;String, String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line">    List&lt;Blog&gt; blogs = mapper.queryBlogIf(map);</span><br><span class="line"></span><br><span class="line">    System.out.println(blogs);</span><br><span class="line"></span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/18/MK1jVBio8ZlGP5c.png" alt="image-20211018220837494" /></p><p>这个``where<code>标签会知道如果它包含的标签中有返回值的话，它就插入一个</code>where<code>。此外，如果标签返回的内容是以</code>AND<code>或</code>OR` 开头的，则它会剔除掉。</p><h3 id="115-set语句"><a class="markdownIt-Anchor" href="#115-set语句"></a> 11.5 Set语句</h3><p>同理，上面的对于查询 SQL 语句包含 where 关键字，如果在进行更新操作的时候，含有 set 关键词，我们怎么处理呢？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">updateBlog</span><span class="params">(Map map)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--注意set是用的逗号隔开--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateBlog&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line">  update blog</span><br><span class="line">     <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;title != null&quot;</span>&gt;</span></span><br><span class="line">            title = #&#123;title&#125;,</span><br><span class="line">         <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;author != null&quot;</span>&gt;</span></span><br><span class="line">            author = #&#123;author&#125;</span><br><span class="line">         <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">  where id = #&#123;id&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUpdateBlog</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">    <span class="type">BlogMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(BlogMapper.class);</span><br><span class="line"></span><br><span class="line">    HashMap&lt;String, String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;title&quot;</span>,<span class="string">&quot;Spring如此简单&quot;</span>);</span><br><span class="line">    map.put(<span class="string">&quot;author&quot;</span>,<span class="string">&quot;Jay&quot;</span>);</span><br><span class="line">    map.put(<span class="string">&quot;id&quot;</span>,<span class="string">&quot;2e9228bc72464881828ad4884396b09e&quot;</span>);</span><br><span class="line"></span><br><span class="line">    mapper.updateBlog(map);</span><br><span class="line">    session.commit();</span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/18/vulQbO62fTGCzeg.png" alt="image-20211018221440057" /></p><p><img src="https://i.loli.net/2021/10/18/Y4erT5QpRFBaVOJ.png" alt="image-20211018221454362" /></p><h3 id="116-choose语句"><a class="markdownIt-Anchor" href="#116-choose语句"></a> 11.6 choose语句</h3><p>有时候，我们不想用到所有的查询条件，只想选择其中的一个，查询条件有一个满足即可，使用 choose 标签可以解决此类问题，类似于 Java 的 switch 语句</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Blog&gt; <span class="title function_">queryBlogChoose</span><span class="params">(Map map)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryBlogChoose&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;blog&quot;</span>&gt;</span></span><br><span class="line">  select * from blog</span><br><span class="line">   <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;title != null &quot;</span> &gt;</span></span><br><span class="line">                title = #&#123;title&#125;</span><br><span class="line">           <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;author != null&quot;</span>&gt;</span></span><br><span class="line">              and author = #&#123;author&#125;</span><br><span class="line">           <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">otherwise</span>&gt;</span></span><br><span class="line">              and views = #&#123;views&#125;</span><br><span class="line">           <span class="tag">&lt;/<span class="name">otherwise</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testQueryBlogChoose</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">    <span class="type">BlogMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(BlogMapper.class);</span><br><span class="line"></span><br><span class="line">    HashMap&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Object&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;title&quot;</span>,<span class="string">&quot;Spring如此简单&quot;</span>);</span><br><span class="line">    map.put(<span class="string">&quot;author&quot;</span>,<span class="string">&quot;xxxx&quot;</span>);</span><br><span class="line">    map.put(<span class="string">&quot;views&quot;</span>,<span class="number">123213414</span>);</span><br><span class="line">    List&lt;Blog&gt; blogs = mapper.queryBlogChoose(map);</span><br><span class="line"></span><br><span class="line">    System.out.println(blogs);</span><br><span class="line"></span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/18/4xzhGT9rqEef8S7.png" alt="image-20211018221830179" /></p><h3 id="117-sql片段"><a class="markdownIt-Anchor" href="#117-sql片段"></a> 11.7 SQL片段</h3><p>有时候可能某个 sql 语句我们用的特别多，为了增加代码的重用性，简化代码，我们需要将这些代码抽取出来，然后使用时直接调用。</p><p><strong>提取SQL片段：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">&quot;if-title-author&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;title != null&quot;</span>&gt;</span></span><br><span class="line">      title = #&#123;title&#125;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;author != null&quot;</span>&gt;</span></span><br><span class="line">      and author = #&#123;author&#125;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>引用SQL片段：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryBlogIf&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;blog&quot;</span>&gt;</span></span><br><span class="line">  select * from blog</span><br><span class="line">   <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 引用 sql 片段，如果refid 指定的不在本文件中，那么需要在前面加上 namespace --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;if-title-author&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 在这里还可以引用其他的 sql 片段 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：</p><ul><li><p>最好基于单表来定义 sql 片段，提高片段的可重用性</p></li><li><p>在sql片段中不要包括 where</p></li></ul><h3 id="118-foreach"><a class="markdownIt-Anchor" href="#118-foreach"></a> 11.8 Foreach</h3><p>将数据库中前三个数据的id修改为1,2,3；</p><p>需求：我们需要查询 blog 表中 id 分别为1,2,3的博客信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Blog&gt; <span class="title function_">queryBlogForeach</span><span class="params">(Map map)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryBlogForeach&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;blog&quot;</span>&gt;</span></span><br><span class="line">  select * from blog</span><br><span class="line">   <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">       collection:指定输入对象中的集合属性</span></span><br><span class="line"><span class="comment">       item:每次遍历生成的对象</span></span><br><span class="line"><span class="comment">       open:开始遍历时的拼接字符串</span></span><br><span class="line"><span class="comment">       close:结束时拼接的字符串</span></span><br><span class="line"><span class="comment">       separator:遍历对象之间需要拼接的字符串</span></span><br><span class="line"><span class="comment">       select * from blog where 1=1 and (id=1 or id=2 or id=3)</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;ids&quot;</span>  <span class="attr">item</span>=<span class="string">&quot;id&quot;</span> <span class="attr">open</span>=<span class="string">&quot;(&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;or&quot;</span>&gt;</span></span><br><span class="line">          id=#&#123;id&#125;</span><br><span class="line">       <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testQueryBlogForeach</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">    <span class="type">BlogMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(BlogMapper.class);</span><br><span class="line"></span><br><span class="line">    <span class="type">HashMap</span> <span class="variable">map</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">    List&lt;String&gt; ids = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line">    ids.add(<span class="string">&quot;385c0b3df4b74cb58c55f353f9db3284&quot;</span>);</span><br><span class="line">    ids.add(<span class="string">&quot;2e9228bc72464881828ad4884396b09e&quot;</span>);</span><br><span class="line">    map.put(<span class="string">&quot;ids&quot;</span>,ids);</span><br><span class="line"></span><br><span class="line">    List&lt;Blog&gt; blogs = mapper.queryBlogForeach(map);</span><br><span class="line"></span><br><span class="line">    System.out.println(blogs);</span><br><span class="line"></span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/18/Fzq7c3ZDYxP2bAU.png" alt="image-20211018222639604" /></p><p>小结：其实动态 sql 语句的编写往往就是一个拼接的问题，为了保证拼接准确，我们最好首先要写原生的 sql 语句出来，然后在通过 mybatis 动态sql 对照着改，防止出错。多在实践中使用才是熟练掌握它的技巧。</p><p>动态SQL在开发中大量的使用，一定要熟练掌握！</p><h2 id="12-缓存"><a class="markdownIt-Anchor" href="#12-缓存"></a> 12. 缓存</h2><h3 id="121-简介"><a class="markdownIt-Anchor" href="#121-简介"></a> 12.1 简介</h3><p>1、什么是缓存 [Cache]？</p><ul><li>存在内存中的临时数据。</li><li>将用户经常查询的数据放在缓存（内存）中，用户去查询数据就不用从磁盘上(关系型数据库数据文件)查询，从缓存中查询，从而提高查询效率，解决了高并发系统的性能问题。</li></ul><p>2、为什么使用缓存？</p><ul><li>减少和数据库的交互次数，减少系统开销，提高系统效率。</li></ul><p>3、什么样的数据能使用缓存？</p><ul><li>经常查询并且不经常改变的数据。</li></ul><h3 id="122-mybatis缓存"><a class="markdownIt-Anchor" href="#122-mybatis缓存"></a> 12.2 MyBatis缓存</h3><ul><li>MyBatis包含一个非常强大的查询缓存特性，它可以非常方便地定制和配置缓存。缓存可以极大的提升查询效率。</li><li>MyBatis系统中默认定义了两级缓存：<strong>一级缓存</strong>和<strong>二级缓存</strong><ul><li>默认情况下，只有一级缓存开启。（SqlSession级别的缓存，也称为本地缓存）</li><li>二级缓存需要手动开启和配置，他是基于namespace级别的缓存。</li><li>为了提高扩展性，MyBatis定义了缓存接口Cache。我们可以通过实现Cache接口来自定义二级缓存</li></ul></li></ul><h3 id="123-一级缓存"><a class="markdownIt-Anchor" href="#123-一级缓存"></a> 12.3 一级缓存</h3><p>一级缓存也叫本地缓存：</p><ul><li>与数据库同一次会话期间查询到的数据会放在本地缓存中。</li><li>以后如果需要获取相同的数据，直接从缓存中拿，没必须再去查询数据库；</li></ul><h3 id="124-测试"><a class="markdownIt-Anchor" href="#124-测试"></a> 12.4 测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据id查询用户</span></span><br><span class="line">User <span class="title function_">queryUserById</span><span class="params">(<span class="meta">@Param(&quot;id&quot;)</span> <span class="type">int</span> id)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryUserById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">  select * from user where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getUserById</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">    <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(UserMapper.class);</span><br><span class="line">    <span class="type">User</span>  <span class="variable">user</span> <span class="operator">=</span> mapper.getUserById(<span class="number">1</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    <span class="type">User</span>  <span class="variable">user2</span> <span class="operator">=</span> mapper.getUserById(<span class="number">1</span>);</span><br><span class="line">    System.out.println(user2);</span><br><span class="line">    System.out.println(user==user2);</span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/18/2JZfrA8FsjyhVIG.png" alt="image-20211018223507355" /></p><h3 id="125-一级缓存失效的四种情况"><a class="markdownIt-Anchor" href="#125-一级缓存失效的四种情况"></a> 12.5 一级缓存失效的四种情况</h3><p>一级缓存是SqlSession级别的缓存，是一直开启的，我们关闭不了它；</p><p>一级缓存失效情况：没有使用到当前的一级缓存，效果就是，还需要再向数据库中发起一次查询请求！</p><blockquote><p>1、sqlSession不同</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testQueryUserById</span><span class="params">()</span>&#123;</span><br><span class="line">   <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">   <span class="type">SqlSession</span> <span class="variable">session2</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">   <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(UserMapper.class);</span><br><span class="line">   <span class="type">UserMapper</span> <span class="variable">mapper2</span> <span class="operator">=</span> session2.getMapper(UserMapper.class);</span><br><span class="line"></span><br><span class="line">   <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> mapper.queryUserById(<span class="number">1</span>);</span><br><span class="line">   System.out.println(user);</span><br><span class="line">   <span class="type">User</span> <span class="variable">user2</span> <span class="operator">=</span> mapper2.queryUserById(<span class="number">1</span>);</span><br><span class="line">   System.out.println(user2);</span><br><span class="line">   System.out.println(user==user2);</span><br><span class="line"></span><br><span class="line">   session.close();</span><br><span class="line">   session2.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/19/J1VbtFAdrUhqyH6.png" alt="image-20211019001518031" /></p><p>观察结果：发现发送了两条SQL语句！</p><p>结论：<strong>每个sqlSession中的缓存相互独立</strong></p><blockquote><p>2、sqlSession相同，查询条件不同</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testQueryUserById</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">    <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(UserMapper.class);</span><br><span class="line">    <span class="type">UserMapper</span> <span class="variable">mapper2</span> <span class="operator">=</span> session.getMapper(UserMapper.class);</span><br><span class="line"></span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> mapper.getUserById(<span class="number">1</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    <span class="type">User</span> <span class="variable">user2</span> <span class="operator">=</span> mapper2.getUserById(<span class="number">2</span>);</span><br><span class="line">    System.out.println(user2);</span><br><span class="line">    System.out.println(user==user2);</span><br><span class="line"></span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/19/Mt35wCcWfYmn4ds.png" alt="image-20211019001707309" /></p><p>观察结果：发现发送了两条SQL语句！很正常的理解</p><p>结论：<strong>当前缓存中，不存在这个数据</strong></p><blockquote><p>3、sqlSession相同，两次查询之间执行了增删改操作！</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改用户</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">updateUser</span><span class="params">(Map map)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line">  update user set name = #&#123;name&#125; where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testQueryUserById</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">    <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(UserMapper.class);</span><br><span class="line"></span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> mapper.getUserById(<span class="number">1</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line"></span><br><span class="line">    <span class="type">HashMap</span> <span class="variable">map</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">    map.put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;Jay&quot;</span>);</span><br><span class="line">    map.put(<span class="string">&quot;id&quot;</span>,<span class="number">2</span>);</span><br><span class="line">    mapper.updateUser(map);</span><br><span class="line"></span><br><span class="line">    <span class="type">User</span> <span class="variable">user2</span> <span class="operator">=</span> mapper.getUserById(<span class="number">1</span>);</span><br><span class="line">    System.out.println(user2);</span><br><span class="line"></span><br><span class="line">    System.out.println(user==user2);</span><br><span class="line"></span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/19/G9XvZms5JKntDoa.png" alt="image-20211019002235710" /></p><p>观察结果：查询在中间执行了增删改操作后，重新执行了</p><p>结论：<strong>因为增删改操作可能会对当前数据产生影响</strong></p><blockquote><p>4、sqlSession相同，手动清除一级缓存</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testQueryUserById</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">    <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(UserMapper.class);</span><br><span class="line"></span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> mapper.getUserById(<span class="number">1</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line"></span><br><span class="line">    session.clearCache();<span class="comment">//手动清除缓存</span></span><br><span class="line"></span><br><span class="line">    <span class="type">User</span> <span class="variable">user2</span> <span class="operator">=</span> mapper.getUserById(<span class="number">1</span>);</span><br><span class="line">    System.out.println(user2);</span><br><span class="line"></span><br><span class="line">    System.out.println(user==user2);</span><br><span class="line"></span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/19/YnIQP1JeFUvWux7.png" alt="image-20211019002357499" /></p><h3 id="126-二级缓存"><a class="markdownIt-Anchor" href="#126-二级缓存"></a> 12.6 二级缓存</h3><ul><li>二级缓存也叫全局缓存，一级缓存作用域太低了，所以诞生了二级缓存</li><li>基于namespace级别的缓存，一个名称空间，对应一个二级缓存；</li><li>工作机制<ul><li>一个会话查询一条数据，这个数据就会被放在当前会话的一级缓存中；</li><li>如果当前会话关闭了，这个会话对应的一级缓存就没了；但是我们想要的是，会话关闭了，一级缓存中的数据被保存到二级缓存中；</li><li>新的会话查询信息，就可以从二级缓存中获取内容；</li><li>不同的mapper查出的数据会放在自己对应的缓存（map）中；</li></ul></li></ul><p>使用步骤：</p><p>1、开启全局缓存 【mybatis-config.xml】</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;cacheEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>2、去每个mapper.xml中配置使用二级缓存，这个配置非常简单；【xxxMapper.xml】</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">cache</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">官方示例=====&gt;查看官方文档</span><br><span class="line"><span class="tag">&lt;<span class="name">cache</span></span></span><br><span class="line"><span class="tag"> <span class="attr">eviction</span>=<span class="string">&quot;FIFO&quot;</span></span></span><br><span class="line"><span class="tag"> <span class="attr">flushInterval</span>=<span class="string">&quot;60000&quot;</span></span></span><br><span class="line"><span class="tag"> <span class="attr">size</span>=<span class="string">&quot;512&quot;</span></span></span><br><span class="line"><span class="tag"> <span class="attr">readOnly</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">这个更高级的配置创建了一个 FIFO 缓存，每隔 60 秒刷新，最多可以存储结果对象或列表的 512 个引用，而且返回的对象被认为是只读的，因此对它们进行修改可能会在不同线程中的调用者产生冲突。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3、代码测试</p><ul><li>所有的实体类先实现序列化接口</li><li>测试代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testQueryUserById</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">session2</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line"></span><br><span class="line">    <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(UserMapper.class);</span><br><span class="line">    <span class="type">UserMapper</span> <span class="variable">mapper2</span> <span class="operator">=</span> session2.getMapper(UserMapper.class);</span><br><span class="line"></span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> mapper.getUserById(<span class="number">1</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    session.close();</span><br><span class="line"></span><br><span class="line">    <span class="type">User</span> <span class="variable">user2</span> <span class="operator">=</span> mapper2.getUserById(<span class="number">1</span>);</span><br><span class="line">    System.out.println(user2);</span><br><span class="line">    System.out.println(user==user2);</span><br><span class="line"></span><br><span class="line">    session2.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/19/F72KB8WJfnrtvbQ.png" alt="image-20211019142431244" /></p><h3 id="127-结论"><a class="markdownIt-Anchor" href="#127-结论"></a> 12.7 结论</h3><ul><li>只要开启了二级缓存，我们在同一个Mapper中的查询，可以在二级缓存中拿到数据</li><li>查出的数据都会被默认先放在一级缓存中</li><li>只有会话提交或者关闭以后，一级缓存中的数据才会转到二级缓存中</li></ul><h3 id="128-缓存原理图"><a class="markdownIt-Anchor" href="#128-缓存原理图"></a> 12.8 缓存原理图</h3><p><img src="https://i.loli.net/2021/10/19/i2zZu1frFS9meQV.png" alt="image-20211019145707140" /></p><h3 id="129-ehcache"><a class="markdownIt-Anchor" href="#129-ehcache"></a> 12.9 EhCache</h3><p><img src="https://i.loli.net/2021/10/19/qRaKUCoc4ANh6mi.png" alt="image-20211019145920513" /></p><p>第三方缓存实现–<a href="https://www.ehcache.org/">EhCache</a></p><p>Ehcache是一种广泛使用的java分布式缓存，用于通用缓存；</p><p>要在应用程序中使用Ehcache，需要引入依赖的jar包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis.caches/mybatis-ehcache --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.caches<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-ehcache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在mapper.xml中使用对应的缓存即可</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span> = <span class="string">“org.acme.FooMapper”</span> &gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">cache</span> <span class="attr">type</span> = <span class="string">“org.mybatis.caches.ehcache.EhcacheCache”</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>编写ehcache.xml文件，如果在加载时未找到/ehcache.xml资源或出现问题，则将使用默认配置。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ehcache</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xsi:noNamespaceSchemaLocation</span>=<span class="string">&quot;http://ehcache.org/ehcache.xsd&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">updateCheck</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">      diskStore：为缓存路径，ehcache分为内存和磁盘两级，此属性定义磁盘的缓存位置。参数解释如下：</span></span><br><span class="line"><span class="comment">      user.home – 用户主目录</span></span><br><span class="line"><span class="comment">      user.dir – 用户当前工作目录</span></span><br><span class="line"><span class="comment">      java.io.tmpdir – 默认临时文件路径</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">diskStore</span> <span class="attr">path</span>=<span class="string">&quot;./tmpdir/Tmp_EhCache&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">defaultCache</span></span></span><br><span class="line"><span class="tag">           <span class="attr">eternal</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxElementsInMemory</span>=<span class="string">&quot;10000&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">overflowToDisk</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">diskPersistent</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToIdleSeconds</span>=<span class="string">&quot;1800&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToLiveSeconds</span>=<span class="string">&quot;259200&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">memoryStoreEvictionPolicy</span>=<span class="string">&quot;LRU&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">cache</span></span></span><br><span class="line"><span class="tag">           <span class="attr">name</span>=<span class="string">&quot;cloud_user&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">eternal</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxElementsInMemory</span>=<span class="string">&quot;5000&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">overflowToDisk</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">diskPersistent</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToIdleSeconds</span>=<span class="string">&quot;1800&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToLiveSeconds</span>=<span class="string">&quot;1800&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">memoryStoreEvictionPolicy</span>=<span class="string">&quot;LRU&quot;</span>/&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">      defaultCache：默认缓存策略，当ehcache找不到定义的缓存时，则使用这个缓存策略。只能定义一个。</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">     name:缓存名称。</span></span><br><span class="line"><span class="comment">     maxElementsInMemory:缓存最大数目</span></span><br><span class="line"><span class="comment">     maxElementsOnDisk：硬盘最大缓存个数。</span></span><br><span class="line"><span class="comment">     eternal:对象是否永久有效，一但设置了，timeout将不起作用。</span></span><br><span class="line"><span class="comment">     overflowToDisk:是否保存到磁盘，当系统当机时</span></span><br><span class="line"><span class="comment">     timeToIdleSeconds:设置对象在失效前的允许闲置时间（单位：秒）。仅当eternal=false对象不是永久有效时使用，可选属性，默认值是0，也就是可闲置时间无穷大。</span></span><br><span class="line"><span class="comment">     timeToLiveSeconds:设置对象在失效前允许存活时间（单位：秒）。最大时间介于创建时间和失效时间之间。仅当eternal=false对象不是永久有效时使用，默认是0.，也就是对象存活时间无穷大。</span></span><br><span class="line"><span class="comment">     diskPersistent：是否缓存虚拟机重启期数据 Whether the disk store persists between restarts of the Virtual Machine. The default value is false.</span></span><br><span class="line"><span class="comment">     diskSpoolBufferSizeMB：这个参数设置DiskStore（磁盘缓存）的缓存区大小。默认是30MB。每个Cache都应该有自己的一个缓冲区。</span></span><br><span class="line"><span class="comment">     diskExpiryThreadIntervalSeconds：磁盘失效线程运行时间间隔，默认是120秒。</span></span><br><span class="line"><span class="comment">     memoryStoreEvictionPolicy：当达到maxElementsInMemory限制时，Ehcache将会根据指定的策略去清理内存。默认策略是LRU（最近最少使用）。你可以设置为FIFO（先进先出）或是LFU（较少使用）。</span></span><br><span class="line"><span class="comment">     clearOnFlush：内存数量最大时是否清除。</span></span><br><span class="line"><span class="comment">     memoryStoreEvictionPolicy:可选策略有：LRU（最近最少使用，默认策略）、FIFO（先进先出）、LFU（最少访问次数）。</span></span><br><span class="line"><span class="comment">     FIFO，first in first out，这个是大家最熟的，先进先出。</span></span><br><span class="line"><span class="comment">     LFU， Less Frequently Used，就是上面例子中使用的策略，直白一点就是讲一直以来最少被使用的。如上面所讲，缓存的元素有一个hit属性，hit值最小的将会被清出缓存。</span></span><br><span class="line"><span class="comment">     LRU，Least Recently Used，最近最少使用的，缓存的元素有一个时间戳，当缓存容量满了，而又需要腾出地方来缓存新的元素的时候，那么现有缓存元素中时间戳离当前时间最远的元素将被清出缓存。</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">ehcache</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSM框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring</title>
      <link href="/posts/6c92115f/"/>
      <url>/posts/6c92115f/</url>
      
        <content type="html"><![CDATA[<h2 id="1-spring"><a class="markdownIt-Anchor" href="#1-spring"></a> 1. Spring</h2><h3 id="11-简介"><a class="markdownIt-Anchor" href="#11-简介"></a> 1.1 简介</h3><p>Spring : 春天 —&gt;给软件行业带来了春天</p><p>2002年，Rod Jahnson首次推出了Spring框架雏形interface21框架。</p><p>2004年3月24日，Spring框架以interface21框架为基础，经过重新设计，发布了1.0正式版。</p><p>很难想象Rod Johnson的学历 , 他是悉尼大学的博士，然而他的专业不是计算机，而是音乐学。</p><p>Spring理念 : 使现有技术更加实用 . 本身就是一个大杂烩 , 整合现有的框架技术</p><p><a href="http://spring.io/">官网</a></p><p><a href="https://repo.spring.io/libs-release-local/org/springframework/spring/">官方下载地址</a></p><p><a href="https://github.com/spring-projects">GitHub</a></p><p><a href="https://mvnrepository.com/artifact/org.springframework/spring-webmvc">Maven</a></p><h3 id="12-优点"><a class="markdownIt-Anchor" href="#12-优点"></a> 1.2 优点</h3><p>1、Spring是一个开源免费的框架 , 容器 .</p><p>2、Spring是一个轻量级的框架 , 非侵入式的 .</p><p><strong>3、控制反转 IoC , 面向切面 Aop</strong></p><p>4、对事物的支持 , 对框架的支持</p><p>……</p><p><strong>概括：Spring是一个轻量级的控制反转(IoC)和面向切面(AOP)的容器（框架）。</strong></p><h3 id="13-组成"><a class="markdownIt-Anchor" href="#13-组成"></a> 1.3 组成</h3><p><img src="https://i.loli.net/2021/10/20/Bwde9oTL8nKsDkW.png" alt="image-20211020121843514" /></p><p>Spring 框架是一个分层架构，由7个定义良好的模块组成。Spring模块构建在核心容器之上，核心容器定义了创建、配置和管理 bean的方式 .</p><p><img src="https://i.loli.net/2021/10/20/limB4EWvGzwRKgr.png" alt="image-20211020123355222" /></p><p>组成 Spring 框架的每个模块（或组件）都可以单独存在，或者与其他一个或多个模块联合实现。每个模块的功能如下：</p><ul><li><strong>Spring Core</strong>：核心容器提供 Spring 框架的基本功能。核心容器的主要组件是 BeanFactory，它是工厂模式的实现。BeanFactory 使用<em>控制反转</em>（IOC） 模式将应用程序的配置和依赖性规范与实际的应用程序代码分开。</li><li><strong>Spring Context</strong>：Spring 上下文是一个配置文件，向 Spring 框架提供上下文信息。Spring 上下文包括企业服务，例如 JNDI、EJB、电子邮件、国际化、校验和调度功能。</li><li><strong>Spring AOP</strong>：通过配置管理特性，Spring AOP 模块直接将面向切面的编程功能 , 集成到了 Spring 框架中。所以，可以很容易地使 Spring 框架管理任何支持 AOP的对象。Spring AOP 模块为基于 Spring 的应用程序中的对象提供了事务管理服务。通过使用 Spring AOP，不用依赖组件，就可以将声明性事务管理集成到应用程序中。</li><li><strong>Spring DAO</strong>：JDBC DAO 抽象层提供了有意义的异常层次结构，可用该结构来管理异常处理和不同数据库供应商抛出的错误消息。异常层次结构简化了错误处理，并且极大地降低了需要编写的异常代码数量（例如打开和关闭连接）。Spring DAO 的面向 JDBC 的异常遵从通用的 DAO 异常层次结构。</li><li><strong>Spring ORM</strong>：Spring 框架插入了若干个 ORM 框架，从而提供了 ORM 的对象关系工具，其中包括 JDO、Hibernate 和 iBatis SQL Map。所有这些都遵从 Spring 的通用事务和 DAO 异常层次结构。</li><li><strong>Spring Web 模块</strong>：Web 上下文模块建立在应用程序上下文模块之上，为基于 Web 的应用程序提供了上下文。所以，Spring 框架支持与 Jakarta Struts 的集成。Web 模块还简化了处理多部分请求以及将请求参数绑定到域对象的工作。</li><li><strong>Spring MVC 框架</strong>：MVC 框架是一个全功能的构建 Web 应用程序的 MVC 实现。通过策略接口，MVC 框架变成为高度可配置的，MVC 容纳了大量视图技术，其中包括 JSP、Velocity、Tiles、iText 和 POI。</li></ul><h3 id="14-拓展"><a class="markdownIt-Anchor" href="#14-拓展"></a> 1.4 拓展</h3><p><strong>Spring Boot与Spring Cloud</strong></p><ul><li>Spring Boot 是 Spring 的一套快速配置脚手架，可以基于Spring Boot 快速开发单个微服务;</li><li>Spring Cloud是基于Spring Boot实现的；</li><li>Spring Boot专注于快速、方便集成的单个微服务个体，Spring Cloud关注全局的服务治理框架；</li><li>Spring Boot使用了<strong>约束优于配置的理念</strong>，很多集成方案已经帮你选择好了，能不配置就不配置 , Spring Cloud很大的一部分是<strong>基于Spring Boot来实现</strong>，<strong>Spring Boot可以离开Spring Cloud独立使用开发项目</strong>，<strong>但是Spring Cloud离不开Spring Boot，属于依赖的关系</strong>。</li><li>SpringBoot在SpringClound中起到了承上启下的作用，如果你要学习SpringCloud必须要学习SpringBoot。</li></ul><h2 id="2-ioc"><a class="markdownIt-Anchor" href="#2-ioc"></a> 2. IOC</h2><h3 id="21-ioc基础"><a class="markdownIt-Anchor" href="#21-ioc基础"></a> 2.1 IOC基础</h3><p>我们先用我们原来的方式写一段代码 .</p><p>1、先写一个UserDao接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getUser</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、再去写Dao的实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getUser</span><span class="params">()</span> &#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;获取用户数据&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、然后去写UserService的接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getUser</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4、最后写Service的实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">   <span class="keyword">private</span> <span class="type">UserDao</span> <span class="variable">userDao</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserDaoImpl</span>();</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getUser</span><span class="params">()</span> &#123;</span><br><span class="line">       userDao.getUser();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5、测试一下<code>(这里每次更换不同接口都需要在service层更改new的接口)</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">   <span class="type">UserService</span> <span class="variable">service</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserServiceImpl</span>();</span><br><span class="line">   service.getUser();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是我们原来的方式，那我们现在修改一下 .</p><p>把Userdao的实现类增加一个</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDaoMySqlImpl</span> <span class="keyword">implements</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getUser</span><span class="params">()</span> &#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;MySql获取用户数据&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>紧接着我们要去使用MySql的话 , 我们就需要去service实现类里面修改对应的实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">   <span class="keyword">private</span> <span class="type">UserDao</span> <span class="variable">userDao</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserDaoMySqlImpl</span>();</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getUser</span><span class="params">()</span> &#123;</span><br><span class="line">       userDao.getUser();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再假设, 我们再增加一个Userdao的实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDaoOracleImpl</span> <span class="keyword">implements</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getUser</span><span class="params">()</span> &#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;Oracle获取用户数据&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么我们要使用Oracle, 又需要去service实现类里面修改对应的实现。假设我们的这种需求非常大，这种方式就根本不适用了, 甚至反人类, 每次变动, 都需要修改大量代码。这种设计的耦合性太高了, 牵一发而动全身。</p><p><strong>那我们如何去解决呢？</strong></p><p>我们可以在需要用到他的地方, 不去实现它, 而是留出一个接口, 利用set, 我们去代码里修改下。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line">    <span class="comment">// 利用set实现</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserDao</span><span class="params">(UserDao userDao)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userDao = userDao;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getUser</span><span class="params">()</span> &#123;</span><br><span class="line">        userDao.getUser();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在去我们的测试类里, 进行测试（有了set方法就可以在调用的时候由用户选择调用的接口）`</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">   <span class="type">UserServiceImpl</span> <span class="variable">service</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserServiceImpl</span>();</span><br><span class="line">   service.setUserDao( <span class="keyword">new</span> <span class="title class_">UserDaoMySqlImpl</span>() );</span><br><span class="line">   service.getUser();</span><br><span class="line">   <span class="comment">//那我们现在又想用Oracle去实现呢</span></span><br><span class="line">   service.setUserDao( <span class="keyword">new</span> <span class="title class_">UserDaoOracleImpl</span>() );</span><br><span class="line">   service.getUser();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>他们已经发生了根本性的变化, <strong>以前所有东西都是由程序去进行控制创建</strong> , <strong>而现在是由我们自行控制创建对象 , 把主动权交给了调用者</strong> . 程序不用去管怎么创建,怎么实现了，它只负责提供一个接口 .</p><p>这种思想 , 从本质上解决了问题 , 我们程序员不再去管理对象的创建了, 更多的去关注业务的实现。耦合性大大降低，这也就是IOC的原型!</p><h3 id="22-ioc本质"><a class="markdownIt-Anchor" href="#22-ioc本质"></a> 2.2 IOC本质</h3><p><strong>控制反转IoC(Inversion of Control)，是一种设计思想，DI(依赖注入)是实现IoC的一种方法</strong>，也有人认为DI只是IoC的另一种说法。没有IoC的程序中 , 我们使用面向对象编程 , 对象的创建与对象间的依赖关系完全硬编码在程序中，对象的创建由程序自己控制，控制反转后将对象的创建转移给第三方，所谓控制反转就是：获得依赖对象的方式反转。</p><p><img src="https://i.loli.net/2021/10/20/ZvDAeyi19gM5IsO.png" alt="Ioc本质" /></p><p><strong>IoC是Spring框架的核心内容</strong>，使用多种方式完美的实现了IoC，可以使用XML配置，也可以使用注解，新版本的Spring也可以零配置实现IoC。</p><p>Spring容器在初始化时先读取配置文件，根据配置文件或元数据创建与组织对象存入容器中，程序使用时再从Ioc容器中取出需要的对象。</p><p><img src="https://i.loli.net/2021/10/20/LDJgX7fHrvkhi5G.png" alt="image-20211020204825211" /></p><p>采用XML方式配置Bean的时候，Bean的定义信息是和实现分离的，而采用注解的方式可以把两者合为一体，Bean的定义信息直接以注解的形式定义在实现类中，从而达到了零配置的目的。</p><p><strong>控制反转是一种通过描述（XML或注解）并通过第三方去生产或获取特定对象的方式。在Spring中实现控制反转的是IoC容器，其实现方法是依赖注入（Dependency Injection,DI）。</strong></p><h2 id="3-hellospring"><a class="markdownIt-Anchor" href="#3-hellospring"></a> 3. HelloSpring</h2><h3 id="31-导入jar包"><a class="markdownIt-Anchor" href="#31-导入jar包"></a> 3.1 导入jar包</h3><p>注 : spring需要导入commons-logging进行日志记录。我们利用maven，他会自动下载对应的依赖项。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="32-编写代码"><a class="markdownIt-Anchor" href="#32-编写代码"></a> 3.2 编写代码</h3><p>1、编写一个Hello实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span> &#123;</span><br><span class="line">   <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> name;</span><br><span class="line">  &#125;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">       <span class="built_in">this</span>.name = name;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span>&#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;Hello,&quot;</span>+ name );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、编写我们的spring文件 , 这里我们命名为beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!--bean就是java对象 , 由Spring创建和管理--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;hello&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.jezer.pojo.Hello&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Spring&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">   <span class="comment">//解析beans.xml文件 , 生成管理相应的Bean对象</span></span><br><span class="line">   <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;beans.xml&quot;</span>);</span><br><span class="line">   <span class="comment">//getBean : 参数即为spring配置文件中bean的id .</span></span><br><span class="line">   <span class="type">Hello</span> <span class="variable">hello</span> <span class="operator">=</span> (Hello) context.getBean(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">   hello.show();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="33-思考"><a class="markdownIt-Anchor" href="#33-思考"></a> 3.3 思考</h3><ul><li>Hello 对象是谁创建的？【hello对象是由Spring创建的】</li><li>Hello 对象的属性是怎么设置的？【hello对象的属性是由Spring容器设置的】</li></ul><p>这个过程就叫控制反转 :</p><ul><li>控制 : 谁来控制对象的创建，传统应用程序的对象是由程序本身控制创建的，使用Spring后，对象是由Spring来创建的</li><li>反转 : 程序本身不创建对象，而变成被动的接收对象。</li></ul><p>依赖注入 : 就是利用<code>set</code>方法来进行注入的。</p><p>IOC是一种编程思想，由主动的编程变成被动的接收</p><p>可以通过newClassPathXmlApplicationContext去浏览一下底层源码。</p><h3 id="34-修改案例"><a class="markdownIt-Anchor" href="#34-修改案例"></a> 3.4 修改案例</h3><p>新增一个Spring配置文件beans.xml，并修改UserService接口和实现类</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;MysqlImpl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.jezer.dao.UserDaoMySqlImpl&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;OracleImpl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.jezer.dao.UserDaoOracleImpl&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;ServiceImpl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.jezer.service.UserServiceImpl&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--注意: 这里的name并不是属性 , 而是set方法后面的那部分 , 首字母小写--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--引用另外一个bean , 不是用value 而是用 ref--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;OracleImpl&quot;</span>/&gt;</span><span class="comment">&lt;!--具体使用哪个接口这里可以直接配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getUser</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserDao</span><span class="params">(UserDao userDao)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getUser</span><span class="params">()</span> &#123;</span><br><span class="line">        userDao.getUser();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserDao</span><span class="params">(UserDao userDao)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userDao = userDao;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test2</span><span class="params">()</span>&#123;</span><br><span class="line">   <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;beans.xml&quot;</span>);</span><br><span class="line">   <span class="type">UserServiceImpl</span> <span class="variable">serviceImpl</span> <span class="operator">=</span> (UserServiceImpl) context.getBean(<span class="string">&quot;ServiceImpl&quot;</span>);<span class="comment">//这里相当于将原来的Service层也IOC了，不需要再在代码中写出调用哪个接口，只需要在配置文件中指明调用的接口即可。</span></span><br><span class="line">   serviceImpl.getUser();</span><br><span class="line">    <span class="comment">//原来的步骤</span></span><br><span class="line">    <span class="comment">//UserService userService = new UserServiceImpl();</span></span><br><span class="line">    <span class="comment">//userService.setUserDao(new UserDaoMysqlImpl());//原先需要在代码中调用特定的方法</span></span><br><span class="line"><span class="comment">//userService.getUser();</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4ioc创建对象方式"><a class="markdownIt-Anchor" href="#4ioc创建对象方式"></a> 4.Ioc创建对象方式</h2><h3 id="41-通过无参构造方法创建"><a class="markdownIt-Anchor" href="#41-通过无参构造方法创建"></a> 4.1 通过无参构造方法创建</h3><p>1、 User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span> &#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;user无参构造方法&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">       <span class="built_in">this</span>.name = name;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span>&#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;name=&quot;</span>+ name );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.jezer.pojo.User&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jezer&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">UserTest</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;beans.xml&quot;</span>);</span><br><span class="line">    <span class="comment">//在执行getBean的时候, user已经创建好了 , 通过无参构造</span></span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User) context.getBean(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">    <span class="comment">//调用对象的方法 .</span></span><br><span class="line">    user.show();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/21/vS1i6zjcetXB3xW.png" alt="image-20211021115330326" /></p><p>结果可以发现，在调用show方法之前，User对象已经通过无参构造初始化了！</p><h3 id="42-通过有参构造方法创建"><a class="markdownIt-Anchor" href="#42-通过有参构造方法创建"></a> 4.2 通过有参构造方法创建</h3><p>1、UserT.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserT</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UserT</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        System.out.println(<span class="string">&quot;userT有参构造方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;name=&quot;</span>+ name );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、beans.xml 有三种方式编写</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 第一种根据index参数下标设置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userT&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.jezer.pojo.UserT&quot;</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- index指构造方法 , 下标从0开始 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;0&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jezer02&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 第二种根据参数名字设置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userT&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.jezer.pojo.UserT&quot;</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- name指参数名 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jezer02&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 第三种根据参数类型设置(不推荐使用) --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userT&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.jezer.pojo.UserT&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jezer02&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">UserTTest</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;beans.xml&quot;</span>);</span><br><span class="line">    <span class="type">UserT</span> <span class="variable">user</span> <span class="operator">=</span> (UserT) context.getBean(<span class="string">&quot;userT&quot;</span>);</span><br><span class="line">    user.show();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/21/CZYTBqKlJaISvNb.png" alt="image-20211021120548700" /></p><p>结论：在配置文件加载的时候。其中管理的对象都已经初始化了！</p><h2 id="5-spring配置"><a class="markdownIt-Anchor" href="#5-spring配置"></a> 5. Spring配置</h2><h3 id="51-别名"><a class="markdownIt-Anchor" href="#51-别名"></a> 5.1  别名</h3><p>alias设置别名，为bean设置别名，可以设置多个别名</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--设置别名：在获取Bean的时候可以使用别名获取--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">alias</span> <span class="attr">name</span>=<span class="string">&quot;userT&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;userNew&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="52-bean的配置"><a class="markdownIt-Anchor" href="#52-bean的配置"></a> 5.2 Bean的配置</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--bean就是java对象,由Spring创建和管理--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">   id 是bean的标识符,要唯一,如果没有配置id,name就是默认标识符</span></span><br><span class="line"><span class="comment">   如果配置id,又配置了name,那么name是别名</span></span><br><span class="line"><span class="comment">   name可以设置多个别名,可以用逗号,分号,空格隔开</span></span><br><span class="line"><span class="comment">   如果不配置id和name,可以根据applicationContext.getBean(.class)获取对象;</span></span><br><span class="line"><span class="comment">class是bean的全限定名=包名+类名</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;hello&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hello2 h2,h3;h4&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kuang.pojo.Hello&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Spring&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="53-import"><a class="markdownIt-Anchor" href="#53-import"></a> 5.3 import</h3><p>团队的合作通过import来实现。</p><p>applicationContext.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">&quot;&#123;path&#125;/beans.xml&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6-di依赖注入"><a class="markdownIt-Anchor" href="#6-di依赖注入"></a> 6. DI依赖注入</h2><h3 id="61-构造器注入"><a class="markdownIt-Anchor" href="#61-构造器注入"></a> 6.1 构造器注入</h3><p>略(4.Ioc创建对象方式)</p><h3 id="62-set方式注入"><a class="markdownIt-Anchor" href="#62-set方式注入"></a> 6.2 set方式注入</h3><p>要求被注入的属性，必须有set方法，set方法的方法名由set + 属性首字母大写，如果属性是boolean类型，没有set方法，是 is。</p><p>Address.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Address</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getAddress</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAddress</span><span class="params">(String address)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Student.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Address address;</span><br><span class="line">    <span class="keyword">private</span> String[] books;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; hobbies;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,String&gt; card;</span><br><span class="line">    <span class="keyword">private</span> Set&lt;String&gt; games;</span><br><span class="line">    <span class="keyword">private</span> String wife;</span><br><span class="line">    <span class="keyword">private</span> Properties info;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAddress</span><span class="params">(Address address)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBooks</span><span class="params">(String[] books)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.books = books;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setHobbies</span><span class="params">(List&lt;String&gt; hobbies)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.hobbies = hobbies;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCard</span><span class="params">(Map&lt;String, String&gt; card)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.card = card;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setGames</span><span class="params">(Set&lt;String&gt; games)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.games = games;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setWife</span><span class="params">(String wife)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.wife = wife;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setInfo</span><span class="params">(Properties info)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.info = info;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;name=&quot;</span>+ name</span><br><span class="line">                + <span class="string">&quot;,address=&quot;</span>+ address.getAddress()</span><br><span class="line">                + <span class="string">&quot;,books=&quot;</span></span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">for</span> (String book:books)&#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;&lt;&lt;&quot;</span>+book+<span class="string">&quot;&gt;&gt;\t&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;\n爱好:&quot;</span>+ hobbies);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;card:&quot;</span>+card);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;games:&quot;</span>+games);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;wife:&quot;</span>+wife);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;info:&quot;</span>+info);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Address <span class="title function_">getAddress</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String[] getBooks() &#123;</span><br><span class="line">        <span class="keyword">return</span> books;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;String&gt; <span class="title function_">getHobbies</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> hobbies;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, String&gt; <span class="title function_">getCard</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> card;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Set&lt;String&gt; <span class="title function_">getGames</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> games;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getWife</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> wife;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Properties <span class="title function_">getInfo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> info;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1、<strong>常量注入</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.jezer.pojo.Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;小明&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test01</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;beans.xml&quot;</span>);</span><br><span class="line">    <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> (Student) context.getBean(<span class="string">&quot;student&quot;</span>);</span><br><span class="line">    System.out.println(student.getName());</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、<strong>Bean注入</strong></p><p>注意点：这里的值是一个引用，ref</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;address&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.jezer.pojo.Address&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;address&quot;</span> <span class="attr">value</span>=<span class="string">&quot;浙江&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.jezer.pojo.Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;小明&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;address&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;address&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、<strong>数组注入</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;books&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>西游记<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>红楼梦<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>水浒传<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>4、<strong>List注入</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hobbies&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>听歌<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>看电影<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>爬山<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>5、<strong>Map注入</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;card&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;中国邮政&quot;</span> <span class="attr">value</span>=<span class="string">&quot;13124213534534&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;建设&quot;</span> <span class="attr">value</span>=<span class="string">&quot;14345435&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>6、<strong>set注入</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;games&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>LOL<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>BOB<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>COC<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>7、<strong>Null注入</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;wife&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">null</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>8、<strong>Properties注入</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;学号&quot;</span>&gt;</span>20190604<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;性别&quot;</span>&gt;</span>male<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;姓名&quot;</span>&gt;</span>小明<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>9、测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test01</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;beans.xml&quot;</span>);</span><br><span class="line">    <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> (Student) context.getBean(<span class="string">&quot;student&quot;</span>);</span><br><span class="line">    student.show();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/21/zLWNOo8guGeJKDR.png" alt="image-20211021140945951" /></p><h3 id="63-其他方式注入"><a class="markdownIt-Anchor" href="#63-其他方式注入"></a> 6.3 其他方式注入</h3><blockquote><p>p命名空间注入</p></blockquote><p>User.java：【注意：这里没有有参构造器】</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>P命名空间注入：需要在头文件中加入约束文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">导入约束 : xmlns:p=&quot;http://www.springframework.org/schema/p&quot;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--P(属性: properties)命名空间 , 属性依然要设置set方法--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.jezer.pojo.User&quot;</span> <span class="attr">p:name</span>=<span class="string">&quot;jezer&quot;</span> <span class="attr">p:age</span>=<span class="string">&quot;18&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>c命名空间注入</p></blockquote><p>c命名空间注入：需要在头文件中加入约束文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">导入约束 : xmlns:c=&quot;http://www.springframework.org/schema/c&quot;</span><br><span class="line"><span class="comment">&lt;!--C(构造: Constructor)命名空间 , 属性依然要设置set方法--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kuang.jezer.User&quot;</span> <span class="attr">c:name</span>=<span class="string">&quot;jezer&quot;</span> <span class="attr">c:age</span>=<span class="string">&quot;18&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>发现问题：爆红了，刚才我们没有写有参构造！</p><p>解决：把有参构造器加上，这里也能知道，c就是所谓的构造器注入！</p><p>测试代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test02</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;applicationContext.xml&quot;</span>);</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> context.getBean(<span class="string">&quot;user&quot;</span>, User.class);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="64-bean的作用域"><a class="markdownIt-Anchor" href="#64-bean的作用域"></a> 6.4 Bean的作用域</h3><p>在Spring中，那些组成应用程序的主体及由Spring IoC容器所管理的对象，被称之为bean。简单地讲，**bean就是由IoC容器初始化、装配及管理的对象 **</p><blockquote><p>Singleton</p></blockquote><p>当一个bean的作用域为Singleton，那么Spring IoC容器中只会存在一个共享的bean实例，并且所有对bean的请求，只要id与该bean定义相匹配，则只会返回bean的同一实例。Singleton是单例类型，就是在创建起容器时就同时自动创建了一个bean的对象，不管你是否使用，他都存在了，每次获取到的对象都是同一个对象。注意，Singleton作用域是Spring中的缺省作用域。要在XML中将bean定义成singleton，可以这样配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;ServiceImpl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.csdn.service.ServiceImpl&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;singleton&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>单例模式也就是只new一次对象，之后getBean的都直接获取第一次new的对象</p><p>测试：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test03</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;applicationContext.xml&quot;</span>);</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User) context.getBean(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">    <span class="type">User</span> <span class="variable">user2</span> <span class="operator">=</span> (User) context.getBean(<span class="string">&quot;user2&quot;</span>);<span class="comment">//第二次getBean</span></span><br><span class="line">    System.out.println(user==user2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Prototype</p></blockquote><p>当一个bean的作用域为Prototype，表示一个bean定义对应多个对象实例。Prototype作用域的bean会导致在每次对该bean请求（将其注入到另一个bean中，或者以程序的方式调用容器的getBean()方法）时都会创建一个新的bean实例。Prototype是原型类型，它在我们创建容器的时候并没有实例化，而是当我们获取bean的时候才会去创建一个对象，而且我们每次获取到的对象都不是同一个对象。根据经验，对有状态的bean应该使用prototype作用域，而对无状态的bean则应该使用singleton作用域。在XML中将bean定义成prototype，可以这样配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;account&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.foo.DefaultAccount&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;prototype&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>原型模式也就是在之后的getBean时重新new一个对象</p><blockquote><p>Request</p></blockquote><p>当一个bean的作用域为Request，表示在一次HTTP请求中，一个bean定义对应一个实例；即每个HTTP请求都会有各自的bean实例，它们依据某个bean定义创建而成。该作用域仅在基于web的Spring ApplicationContext情形下有效。考虑下面bean定义：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;loginAction&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.csdn.LoginAction&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;request&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>针对每次HTTP请求，Spring容器会根据loginAction bean的定义创建一个全新的LoginAction bean实例，且该loginAction bean实例仅在当前HTTP request内有效，因此可以根据需要放心的更改所建实例的内部状态，而其他请求中根据loginAction bean定义创建的实例，将不会看到这些特定于某个请求的状态变化。当处理请求结束，request作用域的bean实例将被销毁。</p><blockquote><p>Session</p></blockquote><p>当一个bean的作用域为Session，表示在一个HTTP Session中，一个bean定义对应一个实例。该作用域仅在基于web的Spring ApplicationContext情形下有效。考虑下面bean定义：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userPreferences&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.foo.UserPreferences&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;session&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>针对某个HTTP Session，Spring容器会根据userPreferences bean定义创建一个全新的userPreferences bean实例，且该userPreferences bean仅在当前HTTP Session内有效。与request作用域一样，可以根据需要放心的更改所创建实例的内部状态，而别的HTTP Session中根据userPreferences创建的实例，将不会看到这些特定于某个HTTP Session的状态变化。当HTTP Session最终被废弃的时候，在该HTTP Session作用域内的bean也会被废弃掉。</p><h2 id="7-bean的自动装配"><a class="markdownIt-Anchor" href="#7-bean的自动装配"></a> 7. Bean的自动装配</h2><h3 id="71-自动装配说明"><a class="markdownIt-Anchor" href="#71-自动装配说明"></a> 7.1 自动装配说明</h3><ul><li>自动装配是使用spring满足bean依赖的一种方法</li><li>spring会在应用上下文中为某个bean寻找其依赖的bean。</li></ul><p>Spring中bean有三种装配机制，分别是：</p><ol><li>在xml中显式配置；</li><li>在java中显式配置；</li><li>隐式的bean发现机制和自动装配。</li></ol><p>这里我们主要讲第三种：自动化的装配bean。</p><p>Spring的自动装配需要从两个角度来实现，或者说是两个操作：</p><ol><li>组件扫描(component scanning)：spring会自动发现应用上下文中所创建的bean；</li><li>自动装配(autowiring)：spring自动满足bean之间的依赖，也就是我们说的IoC/DI；</li></ol><p>组件扫描和自动装配组合发挥巨大威力，使得显示的配置降低到最少。</p><p><mark>推荐不使用自动装配xml配置，而使用注解</mark></p><h3 id="72-测试环境搭建"><a class="markdownIt-Anchor" href="#72-测试环境搭建"></a> 7.2 测试环境搭建</h3><p>1、新建一个项目</p><p>2、新建两个实体类，Cat Dog 都有一个叫的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Cat</span> &#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shout</span><span class="params">()</span> &#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;miao~&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Dog</span> &#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shout</span><span class="params">()</span> &#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;wang~&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、新建一个用户类 User</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">   <span class="keyword">private</span> Cat cat;</span><br><span class="line">   <span class="keyword">private</span> Dog dog;</span><br><span class="line">   <span class="keyword">private</span> String str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4、编写Spring配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dog&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.jezer.pojo.Dog&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;cat&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.jezer.pojo.Cat&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.jezer.pojo.User&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cat&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;cat&quot;</span>/&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dog&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dog&quot;</span>/&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;str&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jezer&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>5、测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyTest</span> &#123;</span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testMethodAutowire</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;beans.xml&quot;</span>);</span><br><span class="line">       <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> context.getBean(<span class="string">&quot;user&quot;</span>, User.class);</span><br><span class="line">       user.getCat().shout();</span><br><span class="line">       user.getDog().shout();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="73-byname"><a class="markdownIt-Anchor" href="#73-byname"></a> 7.3 byName</h3><p><strong>autowire byName (按名称自动装配)</strong></p><p>由于在手动配置xml过程中，常常发生字母缺漏和大小写等错误，而无法对其进行检查，使得开发效率降低。</p><p>采用自动装配将避免这些错误，并且使配置简单化。</p><p>1、修改bean配置，增加一个属性 autowire=“byName”</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.jezer.pojo.User&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byName&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;str&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jezer&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、再次测试，结果依旧成功输出！</p><p>3、我们将 cat 的bean id修改为 catXXX</p><p>4、再次测试，执行时报空指针java.lang.NullPointerException。因为按byName规则找不对应set方法，真正的setCat就没执行，对象就没有初始化，所以调用时就会报空指针错误。</p><p><strong>小结：</strong></p><p>当一个bean节点带有 autowire byName的属性时。</p><ol><li>将查找其类中所有的set方法名，例如setCat，获得将set去掉并且首字母小写的字符串，即cat。</li><li>去spring容器中寻找是否有此字符串名称id的对象。</li><li>如果有，就取出注入；如果没有，就报空指针异常。</li></ol><h3 id="74-bytype"><a class="markdownIt-Anchor" href="#74-bytype"></a> 7.4 byType</h3><p><strong>autowire byType (按类型自动装配)</strong></p><p>使用autowire byType首先需要保证：同一类型的对象，在spring容器中唯一。如果不唯一，会报不唯一的异常。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NoUniqueBeanDefinitionException</span><br></pre></td></tr></table></figure><p>测试：</p><p>1、将user的bean配置修改一下 ： autowire=“byType”</p><p>2、测试，正常输出</p><p>3、在注册一个cat 的bean对象！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;bean id=<span class="string">&quot;dog&quot;</span> class=<span class="string">&quot;com.jezer.pojo.Dog&quot;</span>/&gt;</span><br><span class="line">&lt;bean id=<span class="string">&quot;cat&quot;</span> class=<span class="string">&quot;com.jezer.pojo.Cat&quot;</span>/&gt;</span><br><span class="line">&lt;bean id=<span class="string">&quot;cat2&quot;</span> class=<span class="string">&quot;com.jezer.pojo.Cat&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">&lt;bean id=<span class="string">&quot;user&quot;</span> class=<span class="string">&quot;com.jezer.pojo.User&quot;</span> autowire=<span class="string">&quot;byType&quot;</span>&gt;</span><br><span class="line">   &lt;property name=<span class="string">&quot;str&quot;</span> value=<span class="string">&quot;jezer&quot;</span>/&gt;</span><br><span class="line">&lt;/bean&gt;</span><br></pre></td></tr></table></figure><p>4、测试，报错：NoUniqueBeanDefinitionException</p><p>5、删掉cat2，将cat的bean名称改掉！测试！因为是按类型装配，所以并不会报异常，也不影响最后的结果。甚至将id属性去掉，也不影响结果。</p><h3 id="75-使用注解实现自动装配"><a class="markdownIt-Anchor" href="#75-使用注解实现自动装配"></a> 7.5 使用注解实现自动装配</h3><p>jdk1.5开始支持注解，spring2.5开始全面支持注解。</p><p>准备工作：利用注解的方式注入属性。</p><p>1、在spring配置文件中引入context文件头</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xmlns:context=&quot;http://www.springframework.org/schema/context&quot;</span><br><span class="line">http://www.springframework.org/schema/context</span><br><span class="line">http://www.springframework.org/schema/context/spring-context.xsd</span><br></pre></td></tr></table></figure><p>2、开启属性注解支持！</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>@Autowired</p></blockquote><ul><li>@Autowired是按类型自动转配的，之后根据名称查找。</li><li>需要导入 spring-aop的包！</li></ul><p>测试：</p><p>1、可以将User类中的set方法去掉，使用@Autowired注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">   <span class="meta">@Autowired</span></span><br><span class="line">   <span class="keyword">private</span> Cat cat;</span><br><span class="line">   <span class="meta">@Autowired</span></span><br><span class="line">   <span class="keyword">private</span> Dog dog;</span><br><span class="line">   <span class="keyword">private</span> String str;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> Cat <span class="title function_">getCat</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> cat;</span><br><span class="line">  &#125;</span><br><span class="line">   <span class="keyword">public</span> Dog <span class="title function_">getDog</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> dog;</span><br><span class="line">  &#125;</span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">getStr</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> str;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、此时配置文件内容</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dog&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.jezer.pojo.Dog&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;cat&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.jezer.pojo.Cat&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.jezer.pojo.User&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>3、测试，成功输出结果！</p><p>@Autowired(required=false) 说明：false，对象可以为null；true，必须存在对象，不能为null。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//如果允许对象为null，设置required = false,默认为true</span></span><br><span class="line"><span class="meta">@Autowired(required = false)</span></span><br><span class="line"><span class="keyword">private</span> Cat cat;</span><br></pre></td></tr></table></figure><p><mark>@Qualifier</mark></p><ul><li>@Autowired是先根据类型自动装配的，再根据名字自动装配，如果两者均错误，加上@Qualifier则可以根据byName以及自定义的名字自动装配</li><li>@Qualifier不能单独使用。</li></ul><p>测试实验步骤：</p><p>1、配置文件修改内容，保证类型存在对象。且名字不为类的默认名字！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;bean id=<span class="string">&quot;dog1&quot;</span> class=<span class="string">&quot;com.jezer.pojo.Dog&quot;</span>/&gt;</span><br><span class="line">&lt;bean id=<span class="string">&quot;dog2&quot;</span> class=<span class="string">&quot;com.jezer.pojo.Dog&quot;</span>/&gt;</span><br><span class="line">&lt;bean id=<span class="string">&quot;cat1&quot;</span> class=<span class="string">&quot;com.jezer.pojo.Cat&quot;</span>/&gt;</span><br><span class="line">&lt;bean id=<span class="string">&quot;cat2&quot;</span> class=<span class="string">&quot;com.jezer.pojo.Cat&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><p>2、没有加Qualifier测试，直接报错</p><p>3、在属性上添加Qualifier注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="meta">@Qualifier(value = &quot;cat2&quot;)</span></span><br><span class="line"><span class="keyword">private</span> Cat cat;</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="meta">@Qualifier(value = &quot;dog2&quot;)</span></span><br><span class="line"><span class="keyword">private</span> Dog dog;</span><br></pre></td></tr></table></figure><p>测试，成功输出！</p><blockquote><p>@Resource</p></blockquote><ul><li>@Resource如有指定的name属性，先按该属性进行byName方式查找装配；</li><li>其次再进行默认的byName方式进行装配；</li><li>如果以上都不成功，则按byType的方式自动装配。</li><li>都不成功，则报异常。</li></ul><p>实体类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">   <span class="comment">//如果允许对象为null，设置required = false,默认为true</span></span><br><span class="line">   <span class="meta">@Resource(name = &quot;cat2&quot;)</span></span><br><span class="line">   <span class="keyword">private</span> Cat cat;</span><br><span class="line">   <span class="meta">@Resource</span></span><br><span class="line">   <span class="keyword">private</span> Dog dog;</span><br><span class="line">   <span class="keyword">private</span> String str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dog&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.jezer.pojo.Dog&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;cat1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.jezer.pojo.Cat&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;cat2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.jezer.pojo.Cat&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.jezer.pojo.User&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>测试：结果OK</p><p>配置文件2：beans.xml ， 删掉cat2</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dog&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kuang.pojo.Dog&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;cat1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kuang.pojo.Cat&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>实体类上只保留注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> Cat cat;</span><br><span class="line"><span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> Dog dog;</span><br></pre></td></tr></table></figure><p>结果：OK</p><p>结论：先进行byName查找，失败；再进行byType查找，成功。</p><p><strong>小结</strong></p><p>@Autowired与@Resource异同：</p><p>1、@Autowired与@Resource都可以用来装配bean。都可以写在字段上，或写在setter方法上。</p><p>2、@Autowired默认<strong>按类型装配</strong>（属于spring规范），默认情况下必须要求依赖对象必须存在，如果要允许null 值，可以设置它的required属性为false，如：@Autowired(required=false) ，如果我们想使用名称装配可以结合@Qualifier注解进行使用</p><p>3、@Resource（属于J2EE复返），默认<strong>按照名称进行装配</strong>，名称可以通过name属性进行指定。如果没有指定name属性，当注解写在字段上时，默认取字段名进行按照名称查找，如果注解写在setter方法上默认取属性名进行装配。当找不到与名称匹配的bean时才按照类型进行装配。但是需要注意的是，如果name属性一旦指定，就只会按照名称进行装配。</p><p>它们的作用相同都是用注解方式注入对象，但执行顺序不同。@Autowired先byType，@Resource先byName。</p><h2 id="8-使用注解开发"><a class="markdownIt-Anchor" href="#8-使用注解开发"></a> 8、使用注解开发</h2><p>在spring4之后，想要使用注解形式，必须得要引入aop的包；</p><p>在配置文件当中，还得要引入一个context约束，并开启注解支持；</p><h3 id="81-bean的实现"><a class="markdownIt-Anchor" href="#81-bean的实现"></a> 8.1 Bean的实现</h3><p>我们之前都是使用 bean 的标签进行bean注入，但是实际开发中，我们一般都会使用注解！</p><p>1、配置扫描哪些包下的注解</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--指定注解扫描包--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.jezer.pojo&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>2、在指定包下编写类，增加注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component(&quot;user&quot;)</span></span><br><span class="line"><span class="comment">// 相当于配置文件中 &lt;bean id=&quot;user&quot; class=&quot;当前注解的类&quot;/&gt;</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;jezer&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">   <span class="type">ApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span></span><br><span class="line">       <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;beans.xml&quot;</span>);</span><br><span class="line">   <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User) applicationContext.getBean(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">   System.out.println(user.name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="82-属性注入"><a class="markdownIt-Anchor" href="#82-属性注入"></a> 8.2 属性注入</h3><p>使用注解注入属性</p><p>1、可以不用提供set方法，直接在直接名上添加@value(“值”)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component(&quot;user&quot;)</span></span><br><span class="line"><span class="comment">// 相当于配置文件中 &lt;bean id=&quot;user&quot; class=&quot;当前注解的类&quot;/&gt;</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">   <span class="meta">@Value(&quot;jezer&quot;)</span></span><br><span class="line">   <span class="comment">// 相当于配置文件中 &lt;property name=&quot;name&quot; value=&quot;秦疆&quot;/&gt;</span></span><br><span class="line">   <span class="keyword">public</span> String name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、如果提供了set方法，在set方法上添加@value(“值”);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component(&quot;user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> String name;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Value(&quot;jezer&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">       <span class="built_in">this</span>.name = name;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="83-衍生注解"><a class="markdownIt-Anchor" href="#83-衍生注解"></a> 8.3 衍生注解</h3><p><strong>@Component三个衍生注解</strong></p><p>为了更好的进行分层，Spring可以使用其它三个注解，功能一样，目前使用哪一个功能都一样。</p><ul><li>@Controller：web层</li><li>@Service：service层</li><li>@Repository：dao层</li></ul><p>写上这些注解，就相当于将这个类交给Spring管理装配了！</p><h3 id="84-自动装配注解"><a class="markdownIt-Anchor" href="#84-自动装配注解"></a> 8.4 自动装配注解</h3><p>略（7.Bean的自动转配）</p><h3 id="85-作用域"><a class="markdownIt-Anchor" href="#85-作用域"></a> 8.5 作用域</h3><p>@scope</p><ul><li>singleton：默认的，Spring会采用单例模式创建这个对象。关闭工厂，所有的对象都会销毁。</li><li>prototype：多例模式。关闭工厂，所有的对象不会销毁。内部的垃圾回收机制会回收</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller(&quot;user&quot;)</span></span><br><span class="line"><span class="meta">@Scope(&quot;prototype&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">   <span class="meta">@Value(&quot;jezer&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> String name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="86-小结"><a class="markdownIt-Anchor" href="#86-小结"></a> 8.6 小结</h3><p><strong>XML与注解比较</strong></p><ul><li>XML可以适用任何场景 ，结构清晰，维护方便</li><li>注解不是自己提供的类使用不了，开发简单方便</li></ul><p><strong>xml与注解整合开发</strong> ：推荐最佳实践</p><ul><li>xml管理Bean</li><li>注解完成属性注入</li><li>使用过程中，可以不用扫描，扫描是为了类上的注解</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>作用：</p><ul><li>进行注解驱动注册，从而使注解生效</li><li>用于激活那些已经在spring容器里注册过的bean上面的注解，也就是显示的向Spring注册</li><li>如果不扫描包，就需要手动配置bean</li><li>如果不加注解驱动，则注入的值为null！</li></ul><h2 id="9-使用java的方式配置spring"><a class="markdownIt-Anchor" href="#9-使用java的方式配置spring"></a> 9. 使用Java的方式配置Spring</h2><p>到目前为止，你已经看到如何使用 XML 配置文件来配置 Spring bean。如果你熟悉使用 XML 配置，那么我会说，不需要再学习如何进行基于 Java 的配置是，因为你要达到相同的结果，可以使用其他可用的配置。</p><p>基于 Java 的配置选项，可以使你在不用配置 XML 的情况下编写大多数的 Spring，但是一些有帮助的基于 Java 的注解，解释如下：</p><h3 id="91-configuration-和-bean-注解"><a class="markdownIt-Anchor" href="#91-configuration-和-bean-注解"></a> 9.1 @Configuration 和 @Bean 注解</h3><p>带有 <strong>@Configuration</strong> 的注解类表示这个类可以使用 Spring IoC 容器作为 bean 定义的来源。<strong>@Bean</strong> 注解告诉 Spring，一个带有 @Bean 的注解方法将返回一个对象，该对象应该被注册为在 Spring 应用程序上下文中的 bean。最简单可行的 @Configuration 类如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tutorialspoint;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.*;</span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorldConfig</span> &#123;</span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="keyword">public</span> HelloWorld <span class="title function_">helloWorld</span><span class="params">()</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">HelloWorld</span>();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的代码将等同于下面的 XML 配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;helloWorld&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.tutorialspoint.HelloWorld&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里是 <strong>HelloWorld.java</strong> 文件的内容：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tutorialspoint;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span> &#123;</span><br><span class="line">   <span class="keyword">private</span> String message;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMessage</span><span class="params">(String message)</span>&#123;</span><br><span class="line">      <span class="built_in">this</span>.message  = message;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getMessage</span><span class="params">()</span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;Your Message : &quot;</span> + message);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这里，带有 @Bean 注解的方法名称作为 bean 的 ID，它创建并返回实际的 bean。你的配置类可以声明多个 @Bean。一旦定义了配置类，你就可以使用 <em>AnnotationConfigApplicationContext</em> 来加载并把他们提供给Spring 容器，如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">   <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span></span><br><span class="line">   <span class="keyword">new</span> <span class="title class_">AnnotationConfigApplicationContext</span>(HelloWorldConfig.class);</span><br><span class="line">   <span class="type">HelloWorld</span> <span class="variable">helloWorld</span> <span class="operator">=</span> context.getBean(HelloWorld.class);</span><br><span class="line">   helloWorld.setMessage(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">   helloWorld.getMessage();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>你可以加载各种配置类，如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">   <span class="type">AnnotationConfigApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span></span><br><span class="line">   <span class="keyword">new</span> <span class="title class_">AnnotationConfigApplicationContext</span>();</span><br><span class="line">   context.register(AppConfig.class, OtherConfig.class);</span><br><span class="line">   context.register(AdditionalConfig.class);</span><br><span class="line">   context.refresh();</span><br><span class="line">   <span class="type">MyService</span> <span class="variable">myService</span> <span class="operator">=</span> context.getBean(MyService.class);</span><br><span class="line">   myService.doStuff();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一旦你完成了创建所有的源文件并添加所需的额外的库后，我们就可以运行该应用程序。你应该注意这里不需要配置文件。如果你的应用程序一切都正常，将输出以下信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Your Message : Hello World!</span><br></pre></td></tr></table></figure><h3 id="92-注入-bean-的依赖性"><a class="markdownIt-Anchor" href="#92-注入-bean-的依赖性"></a> 9.2 注入 Bean 的依赖性</h3><p>当 @Bean 依赖对方时，表达这种依赖性非常简单，只要有一个 bean 方法调用另一个，如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tutorialspoint;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.*;</span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AppConfig</span> &#123;</span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="keyword">public</span> Foo <span class="title function_">foo</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Foo</span>(bar());</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="keyword">public</span> Bar <span class="title function_">bar</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Bar</span>();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里，foo Bean 通过构造函数注入来接收参考基准。现在，让我们看到一个正在执行的例子：</p><p>这里是 <strong>TextEditorConfig.java</strong> 文件的内容：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tutorialspoint;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.*;</span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TextEditorConfig</span> &#123;</span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="keyword">public</span> TextEditor <span class="title function_">textEditor</span><span class="params">()</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">TextEditor</span>( spellChecker() );</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="keyword">public</span> SpellChecker <span class="title function_">spellChecker</span><span class="params">()</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">SpellChecker</span>( );</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里是 TextEditor.java 文件的内容：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tutorialspoint;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TextEditor</span> &#123;</span><br><span class="line">   <span class="keyword">private</span> SpellChecker spellChecker;</span><br><span class="line">   <span class="keyword">public</span> <span class="title function_">TextEditor</span><span class="params">(SpellChecker spellChecker)</span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;Inside TextEditor constructor.&quot;</span> );</span><br><span class="line">      <span class="built_in">this</span>.spellChecker = spellChecker;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">spellCheck</span><span class="params">()</span>&#123;</span><br><span class="line">      spellChecker.checkSpelling();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是另一个依赖的类文件 <strong>SpellChecker.java</strong> 的内容：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tutorialspoint;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpellChecker</span> &#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="title function_">SpellChecker</span><span class="params">()</span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;Inside SpellChecker constructor.&quot;</span> );</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">checkSpelling</span><span class="params">()</span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;Inside checkSpelling.&quot;</span> );</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是 <strong>MainApp.java</strong> 文件的内容：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tutorialspoint;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainApp</span> &#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">      <span class="type">ApplicationContext</span> <span class="variable">ctx</span> <span class="operator">=</span></span><br><span class="line">      <span class="keyword">new</span> <span class="title class_">AnnotationConfigApplicationContext</span>(TextEditorConfig.class);</span><br><span class="line"></span><br><span class="line">      <span class="type">TextEditor</span> <span class="variable">te</span> <span class="operator">=</span> ctx.getBean(TextEditor.class);</span><br><span class="line"></span><br><span class="line">      te.spellCheck();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一旦你完成了创建所有的源文件并添加所需的额外的库后，我们就可以运行该应用程序。你应该注意这里不需要配置文件。如果你的应用程序一切都正常，将输出以下信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Inside SpellChecker constructor.</span><br><span class="line">Inside TextEditor constructor.</span><br><span class="line">Inside checkSpelling.</span><br></pre></td></tr></table></figure><h3 id="93-import-注解"><a class="markdownIt-Anchor" href="#93-import-注解"></a> 9.3 @Import 注解</h3><p><strong>@import</strong> 注解允许从另一个配置类中加载 @Bean 定义。考虑 ConfigA 类，如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConfigA</span> &#123;</span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="keyword">public</span> A <span class="title function_">a</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>你可以在另一个 Bean 声明中导入上述 Bean 声明，如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@Import(ConfigA.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConfigB</span> &#123;</span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="keyword">public</span> B <span class="title function_">b</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">B</span>();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在，当实例化上下文时，不需要同时指定 ConfigA.class 和 ConfigB.class，只有 ConfigB 类需要提供，如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">   <span class="type">ApplicationContext</span> <span class="variable">ctx</span> <span class="operator">=</span></span><br><span class="line">   <span class="keyword">new</span> <span class="title class_">AnnotationConfigApplicationContext</span>(ConfigB.class);</span><br><span class="line">   <span class="comment">// now both beans A and B will be available...</span></span><br><span class="line">   <span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> ctx.getBean(A.class);</span><br><span class="line">   <span class="type">B</span> <span class="variable">b</span> <span class="operator">=</span> ctx.getBean(B.class);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="94-生命周期回调"><a class="markdownIt-Anchor" href="#94-生命周期回调"></a> 9.4 生命周期回调</h3><p>@Bean 注解支持指定任意的初始化和销毁的回调方法，就像在 bean 元素中 Spring 的 XML 的初始化方法和销毁方法的属性：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Foo</span> &#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="comment">// initialization logic</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">cleanup</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="comment">// destruction logic</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AppConfig</span> &#123;</span><br><span class="line">   <span class="meta">@Bean(initMethod = &quot;init&quot;, destroyMethod = &quot;cleanup&quot; )</span></span><br><span class="line">   <span class="keyword">public</span> Foo <span class="title function_">foo</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Foo</span>();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>指定 Bean 的范围：</p><p>默认范围是单实例，但是你可以重写带有 @Scope 注解的该方法，如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AppConfig</span> &#123;</span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="meta">@Scope(&quot;prototype&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> Foo <span class="title function_">foo</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Foo</span>();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10-代理模式"><a class="markdownIt-Anchor" href="#10-代理模式"></a> 10. 代理模式</h2><p>为什么要学习代理模式，因为AOP的底层机制就是动态代理！【SpringAOP和SpringMVC】</p><p>代理模式：</p><ul><li>静态代理</li><li>动态代理</li></ul><p>学习AOP之前 , 我们要先了解一下代理模式！</p><p><img src="https://i.loli.net/2021/10/22/qZnLok6WtPiamMF.png" alt="image-20211022161948481" /></p><h3 id="101-静态代理"><a class="markdownIt-Anchor" href="#101-静态代理"></a> 10.1 静态代理</h3><p><strong>静态代理角色分析</strong></p><ul><li>抽象角色：一般使用接口或者抽象类来实现。</li><li>真实角色：被代理的角色。</li><li>代理角色：代理真实角色 ; 代理真实角色后，一般会做一些附属的操作。</li><li>客户：使用代理角色来进行一些操作。</li></ul><p><strong>代码实现</strong></p><p>Rent.java 即抽象角色</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//抽象角色：租房</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Rent</span> &#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">rent</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Host.java 即真实角色</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//真实角色: 房东，房东要出租房子</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Host</span> <span class="keyword">implements</span> <span class="title class_">Rent</span>&#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">rent</span><span class="params">()</span> &#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;房屋出租&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Proxy.java 即代理角色</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//代理角色：中介</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Proxy</span> <span class="keyword">implements</span> <span class="title class_">Rent</span> &#123;</span><br><span class="line">   <span class="keyword">private</span> Host host;</span><br><span class="line">   <span class="keyword">public</span> <span class="title function_">Proxy</span><span class="params">()</span> &#123; &#125;</span><br><span class="line">   <span class="keyword">public</span> <span class="title function_">Proxy</span><span class="params">(Host host)</span> &#123;</span><br><span class="line">       <span class="built_in">this</span>.host = host;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//租房</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">rent</span><span class="params">()</span>&#123;</span><br><span class="line">       seeHouse();</span><br><span class="line">       host.rent();</span><br><span class="line">       fare();</span><br><span class="line">  &#125;</span><br><span class="line">   <span class="comment">//看房</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">seeHouse</span><span class="params">()</span>&#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;带房客看房&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">   <span class="comment">//收中介费</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">fare</span><span class="params">()</span>&#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;收中介费&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Client.java 即客户</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//客户类，一般客户都会去找代理！</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Client</span> &#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       <span class="comment">//房东要租房</span></span><br><span class="line">       <span class="type">Host</span> <span class="variable">host</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Host</span>();</span><br><span class="line">       <span class="comment">//中介帮助房东</span></span><br><span class="line">       <span class="type">Proxy</span> <span class="variable">proxy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Proxy</span>(host);</span><br><span class="line"></span><br><span class="line">       <span class="comment">//你去找中介！</span></span><br><span class="line">       proxy.rent();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分析：在这个过程中，你直接接触的就是中介，就如同现实生活中的样子，你看不到房东，但是你依旧租到了房东的房子通过代理，这就是所谓的代理模式，程序源自于生活，所以学编程的人，一般能够更加抽象的看待生活中发生的事情。</p><p><strong>静态代理的好处:</strong></p><ul><li>可以使得我们的真实角色更加纯粹，不再去关注一些公共的事情。</li><li>公共的业务由代理来完成，实现了业务的分工。</li><li>公共业务发生扩展时变得更加集中和方便。</li></ul><p>缺点 :</p><ul><li>类多了，多了代理类，工作量变大了，开发效率降低。</li></ul><p>我们想要静态代理的好处，又不想要静态代理的缺点，所以 , 就有了动态代理 !</p><h3 id="102-加深理解"><a class="markdownIt-Anchor" href="#102-加深理解"></a> 10.2 加深理解</h3><p>1、创建一个抽象角色，比如咋们平时做的用户业务，抽象起来就是增删改查！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//抽象角色：增删改查业务</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">   <span class="keyword">void</span> <span class="title function_">add</span><span class="params">()</span>;</span><br><span class="line">   <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">()</span>;</span><br><span class="line">   <span class="keyword">void</span> <span class="title function_">update</span><span class="params">()</span>;</span><br><span class="line">   <span class="keyword">void</span> <span class="title function_">query</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、我们需要一个真实对象来完成这些增删改查操作</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//真实对象，完成增删改查操作的人</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">()</span> &#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;增加了一个用户&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">()</span> &#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;删除了一个用户&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">()</span> &#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;更新了一个用户&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">query</span><span class="params">()</span> &#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;查询了一个用户&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、需求来了，现在我们需要增加一个日志功能，怎么实现！</p><ul><li>思路1 ：在实现类上增加代码 【麻烦！】</li><li>思路2：使用代理来做，能够不改变原来的业务情况下，实现此功能就是最好的了！</li></ul><p>4、设置一个代理类来处理日志！代理角色</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//代理角色，在这里面增加日志的实现</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceProxy</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">   <span class="keyword">private</span> UserServiceImpl userService;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserService</span><span class="params">(UserServiceImpl userService)</span> &#123;</span><br><span class="line">       <span class="built_in">this</span>.userService = userService;</span><br><span class="line">  &#125;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">()</span> &#123;</span><br><span class="line">       log(<span class="string">&quot;add&quot;</span>);</span><br><span class="line">       userService.add();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">()</span> &#123;</span><br><span class="line">       log(<span class="string">&quot;delete&quot;</span>);</span><br><span class="line">       userService.delete();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">()</span> &#123;</span><br><span class="line">       log(<span class="string">&quot;update&quot;</span>);</span><br><span class="line">       userService.update();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">query</span><span class="params">()</span> &#123;</span><br><span class="line">       log(<span class="string">&quot;query&quot;</span>);</span><br><span class="line">       userService.query();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">log</span><span class="params">(String msg)</span>&#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;执行了&quot;</span>+msg+<span class="string">&quot;方法&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5、测试访问类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Client</span> &#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       <span class="comment">//真实业务</span></span><br><span class="line">       <span class="type">UserServiceImpl</span> <span class="variable">userService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserServiceImpl</span>();</span><br><span class="line">       <span class="comment">//代理类</span></span><br><span class="line">       <span class="type">UserServiceProxy</span> <span class="variable">proxy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserServiceProxy</span>();</span><br><span class="line">       <span class="comment">//使用代理类实现日志功能！</span></span><br><span class="line">       proxy.setUserService(userService);</span><br><span class="line">       proxy.add();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们在不改变原来的代码的情况下，实现了对原有功能的增强，这是AOP中最核心的思想</p><p>聊聊AOP：纵向开发，横向开发</p><p><img src="https://i.loli.net/2021/10/22/K8A2NVDzr3oh9cJ.png" alt="image-20211022182751244" /></p><h3 id="103-动态代理"><a class="markdownIt-Anchor" href="#103-动态代理"></a> 10.3 动态代理</h3><ul><li>动态代理的角色和静态代理的一样。</li><li>动态代理的代理类是动态生成的。静态代理的代理类是我们提前写好的</li><li>动态代理分为两类：一类是基于接口动态代理，一类是基于类的动态代理<ul><li>基于接口的动态代理----JDK动态代理</li><li>基于类的动态代理–cglib</li></ul></li><li>现在用的比较多的是 javasist 来生成动态代理。</li><li>我们这里使用JDK的原生代码来实现，其余的道理都是一样的！</li></ul><p><strong>JDK的动态代理需要了解两个类</strong></p><p>核心 : InvocationHandler 和 Proxy ，打开JDK帮助文档看看</p><p><a href="https://pan.baidu.com/s/1IkF8DlucJv2oOrHIOZqTfA">百度网盘下载地址</a>提取码：nb7l</p><blockquote><p>【InvocationHandler：调用处理程序】</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">InvocationHandler</span></span><br></pre></td></tr></table></figure><p><code>InvocationHandler</code>是由代理实例的<em>调用处理程序</em>实现的<em>接口</em>。</p><p>每个代理实例都有一个关联的调用处理程序。当在代理实例上调用方法时，方法调用将被编码并分派到其调用处理程序的<code>invoke</code>方法。</p><p>invoke</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Object <span class="title function_">invoke</span><span class="params">(Object proxy, method, Object[] args)</span> <span class="keyword">throws</span> Throwable</span><br></pre></td></tr></table></figure><p>处理代理实例上的方法调用并返回结果。</p><p><mark>当在与之关联的代理实例上调用方法时，将在调用处理程序中调用此方法。</mark></p><ul><li><p>参数</p><p><code>proxy</code> - 调用该方法的代理实例</p><p><code>method</code>-所述<code>方法</code>对应于调用代理实例上的接口方法的实例。<code>方法</code>对象的声明类将是该方法声明的接口，<mark>它可以是代理类继承该方法的代理接口的超级接口</mark>。</p><p><code>args</code>  -包含的方法调用传递代理实例的参数值的对象的阵列，或<code>null</code>如果接口方法没有参数。  原始类型的参数包含在适当的原始包装器类的实例中，例如<code>java.lang.Integer</code>或<code>java.lang.Boolean</code>  。</p></li><li><p>结果</p><p>从代理实例上的方法调用返回的值。如果接口方法的声明返回类型是原始类型，则此方法返回的值必须是对应的基本包装类的实例；否则，它必须是可声明返回类型的类型。如果此方法返回的值是<code>null</code>和接口方法的返回类型是基本类型，那么<code>NullPointerException</code>将由代理实例的方法调用抛出。如上所述，如果此方法返回的值，否则不会与接口方法的声明的返回类型兼容，一个<code>ClassCastException</code>将代理实例的方法调用将抛出。</p></li></ul><blockquote><p>【Proxy：代理】</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Proxy</span> <span class="keyword">extends</span> <span class="title class_">Object</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span></span><br></pre></td></tr></table></figure><p><code>Proxy</code>提供了创建动态代理类和实例的静态方法，它也是由这些方法创建的所有动态代理类的超类。</p><p><em>动态代理类</em>（以下简称为<em>代理类</em>）是一个实现在类创建时在运行时指定的接口列表的类，具有如下所述的行为。</p><ul><li><em>代理接口</em>是由代理类实现的接口。</li><li><em>代理实例</em>是代理类的一个实例。</li><li>每个代理实例都有一个关联的<em>调用处理程序</em>对象，它实现了接口<code>InvocationHandler</code> 。通过其代理接口之一的代理实例上的方法调用将被分派到实例调用处理程序的<a href="../../../java/lang/reflect/InvocationHandler.html#invoke-java.lang.Object-java.lang.reflect.Method-java.lang.Object:A-"><code>invoke</code></a>方法，传递代理实例。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">newProxyInstance</span><span class="params">(ClassLoader loader, interfaces, InvocationHandler h)</span> <span class="keyword">throws</span> IllegalArgumentException</span><br></pre></td></tr></table></figure><p>返回指定接口的代理类的实例，该接口将方法调用分派给指定的调用处理程序。</p><ul><li><p>参数</p><p><code>loader</code> - 类加载器来定义代理类</p><p><code>interfaces</code> - 代理类实现的接口列表</p><p><code>h</code> - 调度方法调用的调用处理函数</p></li><li><p>结果<br />具有由指定的类加载器定义并实现指定接口的代理类的指定调用处理程序的代理实例</p></li></ul><p>//生成代理类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Object <span class="title function_">getProxy</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> Proxy.newProxyInstance(<span class="built_in">this</span>.getClass().getClassLoader(), rent.getClass().getInterfaces(),<span class="built_in">this</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>代码实现</strong></p><p>抽象角色和真实角色和之前的一样！</p><p>Rent.java 即抽象角色</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//抽象角色：租房</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Rent</span> &#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">rent</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Host.java 即真实角色</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//真实角色: 房东，房东要出租房子</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Host</span> <span class="keyword">implements</span> <span class="title class_">Rent</span>&#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">rent</span><span class="params">()</span> &#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;房屋出租&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ProxyInvocationHandler.java 即代理角色</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProxyInvocationHandler</span> <span class="keyword">implements</span> <span class="title class_">InvocationHandler</span> &#123;</span><br><span class="line">   <span class="keyword">private</span> Rent rent;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setRent</span><span class="params">(Rent rent)</span> &#123;</span><br><span class="line">       <span class="built_in">this</span>.rent = rent;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//生成代理类，重点是第二个参数，获取要代理的抽象角色！之前都是一个角色，现在可以代理一类角色</span></span><br><span class="line">   <span class="keyword">public</span> Object <span class="title function_">getProxy</span><span class="params">()</span>&#123;</span><br><span class="line">       <span class="keyword">return</span> Proxy.newProxyInstance(<span class="built_in">this</span>.getClass().getClassLoader(),</span><br><span class="line">               rent.getClass().getInterfaces(),<span class="built_in">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// proxy : 代理类 method : 代理类的调用处理程序的方法对象.</span></span><br><span class="line">   <span class="comment">// 处理代理实例上的方法调用并返回结果</span></span><br><span class="line">   <span class="comment">//当在与之关联的代理实例上调用方法时，将在调用处理程序中调用此方法。</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> Object <span class="title function_">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">       seeHouse();</span><br><span class="line">       <span class="comment">//核心：本质利用反射实现！</span></span><br><span class="line">       <span class="type">Object</span> <span class="variable">result</span> <span class="operator">=</span> method.invoke(rent, args);</span><br><span class="line">       fare();</span><br><span class="line">       <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//看房</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">seeHouse</span><span class="params">()</span>&#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;带房客看房&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">   <span class="comment">//收中介费</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">fare</span><span class="params">()</span>&#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;收中介费&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Client.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//租客</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Client</span> &#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       <span class="comment">//真实角色</span></span><br><span class="line">       <span class="type">Host</span> <span class="variable">host</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Host</span>();</span><br><span class="line">       <span class="comment">//代理实例的调用处理程序</span></span><br><span class="line">       <span class="type">ProxyInvocationHandler</span> <span class="variable">pih</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProxyInvocationHandler</span>();</span><br><span class="line">       pih.setRent(host); <span class="comment">//将真实角色放置进去！</span></span><br><span class="line">       <span class="type">Rent</span> <span class="variable">proxy</span> <span class="operator">=</span> (Rent)pih.getProxy(); <span class="comment">//动态生成对应的代理类！</span></span><br><span class="line">       proxy.rent();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>核心：<strong>一个动态代理，一般代理某一类业务，一个动态代理可以代理多个类，代理的是接口！</strong></p><h3 id="104-深化理解"><a class="markdownIt-Anchor" href="#104-深化理解"></a> 10.4 深化理解</h3><p>我们来使用动态代理实现代理我们后面写的UserService！</p><p>我们也可以编写一个通用的动态代理实现的类！所有的代理对象设置为Object即可！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProxyInvocationHandler</span> <span class="keyword">implements</span> <span class="title class_">InvocationHandler</span> &#123;</span><br><span class="line">   <span class="keyword">private</span> Object target;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTarget</span><span class="params">(Object target)</span> &#123;</span><br><span class="line">       <span class="built_in">this</span>.target = target;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//生成代理类</span></span><br><span class="line">   <span class="keyword">public</span> Object <span class="title function_">getProxy</span><span class="params">()</span>&#123;</span><br><span class="line">       <span class="keyword">return</span> Proxy.newProxyInstance(<span class="built_in">this</span>.getClass().getClassLoader(),</span><br><span class="line">               target.getClass().getInterfaces(),<span class="built_in">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// proxy : 代理类</span></span><br><span class="line">   <span class="comment">// method : 代理类的调用处理程序的方法对象.</span></span><br><span class="line">    <span class="comment">//当在与之关联的代理实例上调用方法时，将在调用处理程序中调用此方法。</span></span><br><span class="line">   <span class="keyword">public</span> Object <span class="title function_">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">       log(method.getName());</span><br><span class="line">       <span class="type">Object</span> <span class="variable">result</span> <span class="operator">=</span> method.invoke(target, args);</span><br><span class="line">       <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">log</span><span class="params">(String methodName)</span>&#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;执行了&quot;</span>+methodName+<span class="string">&quot;方法&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       <span class="comment">//真实对象</span></span><br><span class="line">       <span class="type">UserServiceImpl</span> <span class="variable">userService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserServiceImpl</span>();</span><br><span class="line">       <span class="comment">//代理对象的调用处理程序</span></span><br><span class="line">       <span class="type">ProxyInvocationHandler</span> <span class="variable">pih</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProxyInvocationHandler</span>();</span><br><span class="line">       pih.setTarget(userService); <span class="comment">//设置要代理的对象</span></span><br><span class="line">       <span class="type">UserService</span> <span class="variable">proxy</span> <span class="operator">=</span> (UserService)pih.getProxy(); <span class="comment">//动态生成代理类！</span></span><br><span class="line">       proxy.delete();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="11-aop"><a class="markdownIt-Anchor" href="#11-aop"></a> 11. AOP</h2><h3 id="111-什么是aop"><a class="markdownIt-Anchor" href="#111-什么是aop"></a> 11.1 什么是AOP</h3><p>AOP（Aspect Oriented Programming）意为：面向切面编程，通过预编译方式和运行期动态代理实现程序功能的统一维护的一种技术。AOP是OOP的延续，是软件开发中的一个热点，也是Spring框架中的一个重要内容，是函数式编程的一种衍生范型。利用AOP可以对业务逻辑的各个部分进行隔离，从而使得业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发的效率。</p><p><img src="https://i.loli.net/2021/10/23/V6cHKNSuxIAbvJn.png" alt="image-20211023191911092" /></p><h3 id="112-aop在spring中的作用"><a class="markdownIt-Anchor" href="#112-aop在spring中的作用"></a> 11.2 AOP在Spring中的作用</h3><p>提供声明式事务；允许用户自定义切面</p><p>以下名词需要了解下：</p><ul><li>横切关注点：跨越应用程序多个模块的方法或功能。即是，与我们业务逻辑无关的，但是我们需要关注的部分，就是横切关注点。如日志 , 安全 , 缓存 , 事务等等 …</li><li>切面（ASPECT）：横切关注点 被模块化 的特殊对象。即，它是一个类。</li><li>通知（Advice）：切面必须要完成的工作。即，它是类中的一个方法。</li><li>目标（Target）：被通知对象。</li><li>代理（Proxy）：向目标对象应用通知之后创建的对象。</li><li>切入点（PointCut）：切面通知 执行的 “地点”的定义。</li><li>连接点（JointPoint）：与切入点匹配的执行点。</li></ul><p><img src="https://i.loli.net/2021/10/23/7ui6qnMVOH8lrk3.png" alt="image-20211023221023693" /></p><p>SpringAOP中，通过Advice定义横切逻辑，Spring中支持5种类型的Advice:</p><table><thead><tr><th style="text-align:center">通知类型</th><th style="text-align:center">连接点</th><th style="text-align:center">实现接口</th></tr></thead><tbody><tr><td style="text-align:center">前置通知</td><td style="text-align:center">方法前</td><td style="text-align:center">org.springframework.aop.MethodBeforeAdvice</td></tr><tr><td style="text-align:center">后置通知</td><td style="text-align:center">方法后</td><td style="text-align:center">org.springframework.aop.AfterReturningAdvice</td></tr><tr><td style="text-align:center">环绕通知</td><td style="text-align:center">方法前后</td><td style="text-align:center">org.aopalliance.intercept.MethodInterceptor</td></tr><tr><td style="text-align:center">异常抛出通知</td><td style="text-align:center">方法抛出异常</td><td style="text-align:center">org.springframework.aop.ThrowsAdvice</td></tr><tr><td style="text-align:center">引介通知</td><td style="text-align:center">类中增加新的方法属性</td><td style="text-align:center">org.springframework.aop.IntroductionInterceptor</td></tr></tbody></table><p>即Aop在不改变原有代码的情况下，去增加新的功能。</p><h3 id="113-使用spring实现aop"><a class="markdownIt-Anchor" href="#113-使用spring实现aop"></a> 11.3 使用Spring实现AOP</h3><p>【重点】使用AOP织入，需要导入一个依赖包！</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>方式一</p></blockquote><p><strong>通过 Spring API 实现</strong></p><p>首先编写我们的业务接口和实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">search</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">()</span> &#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;增加用户&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">()</span> &#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;删除用户&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">()</span> &#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;更新用户&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">search</span><span class="params">()</span> &#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;查询用户&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后去写我们的增强类，我们编写两个，一个前置增强，一个后置增强</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Log</span> <span class="keyword">implements</span> <span class="title class_">MethodBeforeAdvice</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * method : 要执行的目标对象的方法</span></span><br><span class="line"><span class="comment">     * objects : 被调用的方法的参数</span></span><br><span class="line"><span class="comment">     * Object : 目标对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">(Method method, Object[] args, Object target)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        <span class="keyword">if</span> (target != <span class="literal">null</span>) &#123;</span><br><span class="line">            System.out.println(target.getClass().getName() + <span class="string">&quot;的&quot;</span> + method.getName() + <span class="string">&quot;方法被执行了&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AfterLog</span> <span class="keyword">implements</span> <span class="title class_">AfterReturningAdvice</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterReturning</span><span class="params">(Object returnValue, Method method, Object[] args, Object target)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        <span class="keyword">if</span> (target != <span class="literal">null</span>) &#123;</span><br><span class="line">            System.out.println(target.getClass().getName() + <span class="string">&quot;的&quot;</span> + method.getName() + <span class="string">&quot;方法被执行了&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最后去spring的文件中注册，并实现aop切入实现，注意导入约束。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="string"><span class="tag">       https://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--注册bean--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span> = <span class="string">&quot;userService&quot;</span> <span class="attr">class</span> = <span class="string">&quot;com.jezer.service.UserServiceImpl&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span> = <span class="string">&quot;log&quot;</span> <span class="attr">class</span> = <span class="string">&quot;com.jezer.log.Log&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span> = <span class="string">&quot;afterLog&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.jezer.log.AfterLog&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--aop的配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--切入点 expression:表达式匹配要执行的方法--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;pointcut&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.jezer.service.UserServiceImpl.*(..))&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--执行环绕; advice-ref执行方法 . pointcut-ref切入点--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">&quot;log&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;pointcut&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">&quot;afterLog&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;pointcut&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyTest</span> &#123;</span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">       <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;beans.xml&quot;</span>);</span><br><span class="line">       <span class="type">UserService</span> <span class="variable">userService</span> <span class="operator">=</span> (UserService) context.getBean(<span class="string">&quot;userService&quot;</span>);</span><br><span class="line">       userService.search();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Aop的重要性：很重要，一定要理解其中的思路，主要是思想的理解这一块。</p><p>Spring的Aop就是将公共的业务 (日志，安全等) 和领域业务结合起来，当执行领域业务时，将会把公共业务加进来 。实现公共业务的重复利用，领域业务更纯粹，程序猿专注领域业务，其本质还是动态代理。</p><blockquote><p>第二种方式</p></blockquote><p><strong>自定义类来实现Aop</strong></p><p>目标业务类不变依旧是userServiceImpl</p><p>第一步 : 写我们自己的一个切入类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DiyPointcut</span> &#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">()</span>&#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;---------方法执行前---------&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">after</span><span class="params">()</span>&#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;---------方法执行后---------&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>去spring中配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--第二种方式自定义实现--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--注册bean--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;diy&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.jezer.config.DiyPointcut&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--aop的配置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--第二种方式：使用AOP的标签实现--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">&quot;diy&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;diyPonitcut&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.jezer.service.UserServiceImpl.*(..))&quot;</span>/&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;diyPonitcut&quot;</span> <span class="attr">method</span>=<span class="string">&quot;before&quot;</span>/&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">aop:after</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;diyPonitcut&quot;</span> <span class="attr">method</span>=<span class="string">&quot;after&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServiceTest</span> &#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">UserTest</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;beans.xml&quot;</span>);</span><br><span class="line">        <span class="type">UserService</span> <span class="variable">userService</span> <span class="operator">=</span> context.getBean(<span class="string">&quot;userService&quot;</span>, UserService.class);</span><br><span class="line">        userService.search();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>第三种方法</p></blockquote><p><strong>使用注解实现</strong></p><p>第一步：编写一个注解实现的增强类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jezer.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.After;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Around;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Before;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AnnotationPointcut</span> &#123;</span><br><span class="line">   <span class="meta">@Before(&quot;execution(* com.jezer.service.UserServiceImpl.*(..))&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">()</span>&#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;---------方法执行前---------&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@After(&quot;execution(* com.jezer.service.UserServiceImpl.*(..))&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">after</span><span class="params">()</span>&#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;---------方法执行后---------&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Around(&quot;execution(* com.jezer.service.UserServiceImpl.*(..))&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">around</span><span class="params">(ProceedingJoinPoint jp)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;环绕前&quot;</span>);</span><br><span class="line">       System.out.println(<span class="string">&quot;签名:&quot;</span>+jp.getSignature());</span><br><span class="line">       <span class="comment">//执行目标方法proceed</span></span><br><span class="line">       <span class="type">Object</span> <span class="variable">proceed</span> <span class="operator">=</span> jp.proceed();</span><br><span class="line">       System.out.println(<span class="string">&quot;环绕后&quot;</span>);</span><br><span class="line">       System.out.println(proceed);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二步：在Spring配置文件中，注册bean，并增加支持注解的配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--第三种方式:注解实现--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;annotationPointcut&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.jezer.config.AnnotationPointcut&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span>/&gt;</span></span><br></pre></td></tr></table></figure><p><code>aop:aspectj-autoproxy</code></p><ul><li>通过aop命名空间的<code>&lt;aop:aspectj-autoproxy /&gt;</code>声明自动为spring容器中那些配置<code>@aspect</code>切面的bean创建代理，织入切面。当然，spring 在内部依旧采用<code>AnnotationAwareAspectJAutoProxyCreator</code>进行自动代理的创建工作，但具体实现的细节已经被<code>&lt;aop:aspectj-autoproxy /&gt;</code>隐藏起来了</li><li><code>&lt;aop:aspectj-autoproxy /&gt;</code>有一个proxy-target-class属性，默认为false，表示使用jdk动态代理织入增强，当配为<code>&lt;aop:aspectj-autoproxy poxy-target-class=&quot;true&quot;/&gt;</code>时，表示使用CGLib动态代理技术织入增强。不过即使proxy-target-class设置为false，如果目标类没有声明接口，则spring将自动使用CGLib动态代理。</li></ul><h2 id="12-mybatis-spring"><a class="markdownIt-Anchor" href="#12-mybatis-spring"></a> 12. MyBatis-Spring</h2><h3 id="121-简介"><a class="markdownIt-Anchor" href="#121-简介"></a> 12.1 简介</h3><p><a href="http://mybatis.org/spring/zh/index.html">官方文档</a></p><p>MyBatis-Spring 会帮助你将 MyBatis 代码无缝地整合到 Spring 中。它将允许 MyBatis 参与到 Spring 的事务管理之中，创建映射器 mapper 和 <code>SqlSession</code> 并注入到 bean 中，以及将 Mybatis 的异常转换为 Spring 的 <code>DataAccessException</code>。 最终，可以做到应用代码不依赖于 MyBatis，Spring 或 MyBatis-Spring。</p><blockquote><p>安装</p></blockquote><p>要使用 MyBatis-Spring 模块，只需要在类路径下包含 <code>mybatis-spring-2.0.6.jar</code> 文件和相关依赖即可。</p><p>如果使用 Maven 作为构建工具，仅需要在 pom.xml 中加入以下代码即可：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>快速上手</p></blockquote><p>要和 Spring 一起使用 MyBatis，需要在 Spring 应用上下文中定义至少两样东西：一个 SqlSessionFactory 和至少一个数据映射器类。</p><p>在 MyBatis-Spring 中，可使用SqlSessionFactoryBean来创建 SqlSessionFactory。要配置这个工厂 bean，只需要把下面代码放在 Spring 的 XML 配置文件中：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：SqlSessionFactory需要一个 DataSource（数据源）。这可以是任意的 DataSource，只需要和配置其它 Spring 数据库连接一样配置它就可以了。</p><ul><li><p>在基础的 MyBatis 用法中，是通过 SqlSessionFactoryBuilder 来创建 SqlSessionFactory 的。而在 MyBatis-Spring 中，则使用 SqlSessionFactoryBean 来创建。</p></li><li><p>在 MyBatis 中，你可以使用 SqlSessionFactory 来创建 SqlSession。一旦你获得一个 session 之后，你可以使用它来执行映射了的语句，提交或回滚连接，最后，当不再需要它的时候，你可以关闭 session。</p></li><li><p>SqlSessionFactory有一个唯一的必要属性：用于 JDBC 的 DataSource。这可以是任意的 DataSource 对象，它的配置方法和其它 Spring 数据库连接是一样的。</p></li><li><p>一个常用的属性是 configLocation，它用来指定 MyBatis 的 XML 配置文件路径。它在需要修改 MyBatis 的基础配置非常有用。通常，基础配置指的是 &lt; settings&gt; 或 &lt; typeAliases&gt;元素。</p></li><li><p>需要注意的是，这个配置文件并不需要是一个完整的 MyBatis 配置。确切地说，任何环境配置，数据源和 MyBatis 的事务管理器都会被忽略。SqlSessionFactoryBean 会创建它自有的 MyBatis 环境配置（Environment），并按要求设置自定义环境的值。</p></li><li><p>SqlSessionTemplate 是 MyBatis-Spring 的核心。作为 SqlSession 的一个实现，这意味着可以使用它无缝代替你代码中已经在使用的 SqlSession。</p></li><li><p>模板可以参与到 Spring 的事务管理中，并且由于其是线程安全的，可以供多个映射器类使用，你应该总是用 SqlSessionTemplate 来替换 MyBatis 默认的 DefaultSqlSession 实现。在同一应用程序中的不同类之间混杂使用可能会引起数据一致性的问题。</p></li></ul><p>可以使用 SqlSessionFactory 作为构造方法的参数来创建 SqlSessionTemplate 对象。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSession&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionTemplate&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;0&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>现在，这个 bean 就可以直接注入到你的 Mapper bean 中了。你需要在你的 bean 中添加一个 SqlSession 属性，就像下面这样：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperImpl</span> <span class="keyword">implements</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">private</span> SqlSession sqlSession;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSqlSession</span><span class="params">(SqlSession sqlSession)</span> &#123;</span><br><span class="line">       <span class="built_in">this</span>.sqlSession = sqlSession;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">public</span> User <span class="title function_">getUser</span><span class="params">(String userId)</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> sqlSession.getMapper...;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>按下面这样，注入 SqlSessionTemplate：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userMapper&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.sample.mapper.UserMapperImpl&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sqlSession&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;sqlSession&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="122-整合实现一"><a class="markdownIt-Anchor" href="#122-整合实现一"></a> 12.2 整合实现一</h3><p>1、引入Spring配置文件spring-mapper.xml和mybatis-config.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、配置数据源替换mybaits的数据源</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置数据源：数据源有非常多，可以使用第三方的，也可使使用Spring的--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DriverManagerDataSource&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/mybatis?useUnicode = true<span class="symbol">&amp;amp;</span>characterEncoding =utf8<span class="symbol">&amp;amp;</span>useSSL= true <span class="symbol">&amp;amp;</span>serverTimezone=GMT%2B8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;12345678&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">       <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">       <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.jezer.pojo&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、配置SqlSessionFactory，关联MyBatis</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置SqlSessionFactory--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--关联Mybatis--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configLocation&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mybatis-config.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;mapperLocations&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath*:com/jezer/mapper/*.xml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>4、注册sqlSessionTemplate，关联sqlSessionFactory；</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--注册sqlSessionTemplate , 关联sqlSessionFactory--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSession&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionTemplate&quot;</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--利用构造器注入--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;0&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;sqlSessionFactory&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>5、增加Mapper接口的实现类；私有化sqlSessionTemplate</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperImpl</span> <span class="keyword">implements</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//sqlSession不用我们自己创建了，Spring来管理</span></span><br><span class="line">    <span class="keyword">private</span> SqlSessionTemplate sqlSession;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSqlSession</span><span class="params">(SqlSessionTemplate sqlSession)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sqlSession = sqlSession;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">selectUser</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        <span class="keyword">return</span> mapper.selectUser();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>注册bean实现</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userMapper&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.jezer.mapper.UserMapperImpl&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sqlSession&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;sqlSession&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>7、测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getUserList</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-mapper.xml&quot;</span>);</span><br><span class="line">    <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> context.getBean(<span class="string">&quot;userMapper&quot;</span>, UserMapper.class);</span><br><span class="line">    List&lt;User&gt; userList = mapper.getUserList();</span><br><span class="line">    <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="123-整合实现二"><a class="markdownIt-Anchor" href="#123-整合实现二"></a> 12.3 整合实现二</h3><p>mybatis-spring1.2.3版以上的才有这个。</p><p>dao继承Support类 , 直接利用 getSqlSession() 获得 , 然后直接注入SqlSessionFactory。比起方式一, 不需要管理，而且对事务的支持更加友好。</p><p><img src="https://i.loli.net/2021/10/25/vtKUfjD7GAJhCoa.png" alt="image-20211025105731103" /></p><p>测试：</p><p>1、将我们上面写的UserDaoImpl修改一下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperImpl</span> <span class="keyword">extends</span> <span class="title class_">SqlSessionDaoSupport</span> <span class="keyword">implements</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">getUserList</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> getSqlSession().getMapper(UserMapper.class);</span><br><span class="line">        <span class="keyword">return</span> mapper.getUserList();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、修改bean的配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userMapper&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.jezer.mapper.UserMapperImpl&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getUserList</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-mapper.xml&quot;</span>);</span><br><span class="line">    <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> context.getBean(<span class="string">&quot;userMapper&quot;</span>, UserMapper.class);</span><br><span class="line">    List&lt;User&gt; userList = mapper.getUserList();</span><br><span class="line">    <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>总结 : 整合到spring以后可以完全不要mybatis的配置文件，除了这些方式可以实现整合之外，我们还可以使用注解来实现，这个等我们后面学习SpringBoot的时候还会测试整合！</strong></p><h2 id="13-声明式事务"><a class="markdownIt-Anchor" href="#13-声明式事务"></a> 13. 声明式事务</h2><h3 id="131-事务回顾"><a class="markdownIt-Anchor" href="#131-事务回顾"></a> 13.1 事务回顾</h3><ul><li>事务在项目开发过程非常重要，涉及到数据的一致性的问题，不容马虎！</li><li>事务管理是企业级应用程序开发中必备技术，用来确保数据的完整性和一致性。</li></ul><p>事务就是把一系列的动作当成一个独立的工作单元，这些动作要么全部完成，要么全部不起作用。</p><p><strong>事务四个属性ACID</strong></p><ol><li>原子性（atomicity）</li></ol><ul><li>事务是原子性操作，由一系列动作组成，事务的原子性确保动作要么全部完成，要么完全不起作用</li></ul><ol><li>一致性（consistency）</li></ol><ul><li>一旦所有事务动作完成，事务就要被提交。数据和资源处于一种满足业务规则的一致性状态中</li></ul><ol start="3"><li>隔离性（isolation）</li></ol><ul><li>可能多个事务会同时处理相同的数据，因此每个事务都应该与其他事务隔离开来，防止数据损坏</li></ul><ol start="4"><li>持久性（durability）</li></ol><ul><li>事务一旦完成，无论系统发生什么错误，结果都不会受到影响。通常情况下，事务的结果被写到持久化存储器中</li></ul><h3 id="132-测试环境搭建"><a class="markdownIt-Anchor" href="#132-测试环境搭建"></a> 13.2 测试环境搭建</h3><p>将上面的代码拷贝到一个新项目中</p><p>在之前的案例中，我们给userMapper接口新增两个方法，删除和增加用户；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加一个用户</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">addUser</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//根据id删除用户</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">deleteUser</span><span class="params">(<span class="type">int</span> id)</span>;</span><br></pre></td></tr></table></figure><p>mapper文件，我们故意把 deletes 写错，测试！</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">insert into user (id,name,pwd) values (#&#123;id&#125;,#&#123;name&#125;,#&#123;pwd&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span>&gt;</span></span><br><span class="line">deletes from user where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure><p>编写接口的实现类，在实现类中，我们去操作一波</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperImpl</span> <span class="keyword">extends</span> <span class="title class_">SqlSessionDaoSupport</span> <span class="keyword">implements</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">getUserList</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">5</span>,<span class="string">&quot;小明&quot;</span>,<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">        <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> getSqlSession().getMapper(UserMapper.class);</span><br><span class="line">        mapper.addUser(user);</span><br><span class="line">        mapper.deleteUser(<span class="number">5</span>);</span><br><span class="line">        <span class="keyword">return</span> mapper.getUserList();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">addUser</span><span class="params">(User user)</span> &#123;</span><br><span class="line">        <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> getSqlSession().getMapper(UserMapper.class);</span><br><span class="line">        <span class="keyword">return</span> mapper.addUser(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">deleteUser</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> getSqlSession().getMapper(UserMapper.class);</span><br><span class="line">        <span class="keyword">return</span> mapper.deleteUser(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getUserList</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-mapper.xml&quot;</span>);</span><br><span class="line">    <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> context.getBean(<span class="string">&quot;userMapper&quot;</span>, UserMapper.class);</span><br><span class="line">    List&lt;User&gt; userList = mapper.getUserList();</span><br><span class="line">    <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>报错：sql异常，delete写错了</p><p>结果 ：插入成功！</p><p>没有进行事务的管理；我们想让他们都成功才成功，有一个失败，就都失败，我们就应该需要<strong>事务！</strong></p><p>以前我们都需要自己手动管理事务，十分麻烦！</p><p>但是Spring给我们提供了事务管理，我们只需要配置即可；</p><h3 id="133-spring中的事务管理"><a class="markdownIt-Anchor" href="#133-spring中的事务管理"></a> 13.3 Spring中的事务管理</h3><p>Spring在不同的事务管理API之上定义了一个抽象层，使得开发人员不必了解底层的事务管理API就可以使用Spring的事务管理机制。Spring支持编程式事务管理和声明式的事务管理。</p><p><strong>编程式事务管理</strong></p><ul><li>将事务管理代码嵌到业务方法中来控制事务的提交和回滚</li><li>缺点：必须在每个事务操作业务逻辑中包含额外的事务管理代码</li></ul><p><strong>声明式事务管理</strong></p><ul><li>一般情况下比编程式事务好用。</li><li>将事务管理代码从业务方法中分离出来，以声明的方式来实现事务管理。</li><li>将事务管理作为横切关注点，通过aop方法模块化。Spring中通过Spring AOP框架支持声明式事务管理。</li></ul><p><strong>使用Spring管理事务，注意头文件的约束导入 : tx</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">xmlns:tx=&quot;http://www.springframework.org/schema/tx&quot;</span><br><span class="line"></span><br><span class="line">http://www.springframework.org/schema/tx</span><br><span class="line">http://www.springframework.org/schema/tx/spring-tx.xsd&quot;&gt;</span><br></pre></td></tr></table></figure><p><strong>事务管理器</strong></p><ul><li>无论使用Spring的哪种事务管理策略（编程式或者声明式）事务管理器都是必须的。</li><li>就是 Spring的核心事务管理抽象，管理封装了一组独立于技术的方法。</li></ul><p><strong>JDBC事务</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>配置好事务管理器后我们需要去配置事务的通知</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置事务通知--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">&quot;txAdvice&quot;</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--配置哪些方法使用什么样的事务,配置事务的传播特性--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;add&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span>/&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;delete&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span>/&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;update&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span>/&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;search*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span>/&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;get&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>spring事务传播特性：</strong></p><p>事务传播行为就是多个事务方法相互调用时，事务如何在这些方法间传播。spring支持7种事务传播行为：</p><ul><li>propagation_requierd：如果当前没有事务，就新建一个事务，如果已存在一个事务中，加入到这个事务中，这是最常见的选择。</li><li>propagation_supports：支持当前事务，如果没有当前事务，就以非事务方法执行。</li><li>propagation_mandatory：使用当前事务，如果没有当前事务，就抛出异常。</li><li>propagation_required_new：新建事务，如果当前存在事务，把当前事务挂起。</li><li>propagation_not_supported：以非事务方式执行操作，如果当前存在事务，就把当前事务挂起。</li><li>propagation_never：以非事务方式执行操作，如果当前事务存在则抛出异常。</li><li>propagation_nested：如果当前存在事务，则在嵌套事务内执行。如果当前没有事务，则执行与propagation_required类似的操作</li></ul><p>Spring 默认的事务传播行为是 <code>PROPAGATION_REQUIRED</code>，它适合于绝大多数的情况。</p><p>假设 ServiveX#methodX() 都工作在事务环境下（即都被 Spring 事务增强了），假设程序中存在如下的调用链：Service1#method1()-&gt;Service2#method2()-&gt;Service3#method3()，那么这 3 个服务类的 3 个方法通过 Spring 的事务传播机制都工作在<mark>同一个事务</mark>中。</p><p>就好比，我们刚才的几个方法存在调用，所以会被放在一组事务当中！</p><p><strong>配置AOP</strong></p><p>导入aop的头文件！</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;txPointcut&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.jezer.mapper.*.*(..))&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">&quot;txAdvice&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;txPointcut&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>进行测试</strong></p><p>删掉刚才插入的数据，再次测试！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getUserList</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-mapper.xml&quot;</span>);</span><br><span class="line">    <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> context.getBean(<span class="string">&quot;userMapper&quot;</span>, UserMapper.class);</span><br><span class="line">    List&lt;User&gt; userList = mapper.getUserList();</span><br><span class="line">    <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为什么需要配置事务？</p><ul><li>如果不配置，就需要我们手动提交控制事务；</li><li>事务在项目开发过程非常重要，涉及到数据的一致性的问题，不容马虎！</li></ul>]]></content>
      
      
      <categories>
          
          <category> Web基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSM框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我思故我在</title>
      <link href="/posts/7e98a734/"/>
      <url>/posts/7e98a734/</url>
      
        <content type="html"><![CDATA[<div class="timeline  blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2021-01-02</p></div></div><div class='timeline-item-content'><ol><li>望浩瀚星空，思须臾之梦。</li><li>挚友难觅，知己难寻；寻之根本，久之不得。</li><li>寻一方净土，问初心何处。</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2021-01-03</p></div></div><div class='timeline-item-content'><ol><li>对于大多数人而言，或许肉体的住所并不是灵魂的休憩地。</li><li>活着，难道仅是出于本能吗？</li><li>自己便是最大的敌人。</li></ol></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 碎碎念 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库概述</title>
      <link href="/posts/787cbc62/"/>
      <url>/posts/787cbc62/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.bilibili.com/video/BV1NJ411J79W?share_source=copy_web">视频链接</a></p><h2 id="1-初识mysql"><a class="markdownIt-Anchor" href="#1-初识mysql"></a> 1. 初识MySQL</h2><p>前端（页面：展示，数据）<br />后台（连接点：连接数据库JDBC，控制前端）<br />数据库（存数据）</p><h3 id="11-学习目的"><a class="markdownIt-Anchor" href="#11-学习目的"></a> 1.1 学习目的</h3><ol><li>岗位需求</li><li>大数据时代</li><li>数据存取需求</li><li>数据库是所有软件体系中最核心的存在</li></ol><h3 id="12-概念"><a class="markdownIt-Anchor" href="#12-概念"></a> 1.2 概念</h3><p>数据库(DB，DateBase)<br />概念：数据仓库，软件，安装在操作系统上。SQL是语句<br />作用：数据存取和管理</p><h3 id="13-数据库分类"><a class="markdownIt-Anchor" href="#13-数据库分类"></a> 1.3 数据库分类</h3><ul><li>关系型数据库：Excel （SQL）<ul><li>MySQL，Oracle，SQL Server，DB2，SQLlite</li><li>通过表和表之间、行和列之间的关进行数据的存储    学员表，考勤表…</li></ul></li><li>非关系型数据库：{key: value}  （NoSQL）<ul><li>Redis，MongDB</li><li>对象存储，通过对象的自身属性来决定</li></ul></li></ul><blockquote><p>DBMS（数据库管理系统）</p></blockquote><p><mark>数据库管理软件，通过可视化操作，科学有效的管理和操作数据</mark></p><p><img src="https://i.loli.net/2021/09/23/3RweD6qFO8CUx9r.png" alt="image-20210923233855238" /></p><h3 id="14-mysql简介"><a class="markdownIt-Anchor" href="#14-mysql简介"></a> 1.4 MySQL简介</h3><p><a href="https://www.mysql.com/">官网</a></p><ol><li>open-source relational database management system (RDBMS)</li><li>MySQL was owned and sponsored by the Swedish company MySQL AB, which was bought by Sun Microsystems (now Oracle Corporation).</li><li>MySQL is a component of the LAMP web application software stack (and others), which is an acronym for Linux, Apache, MySQL, Perl/PHP/Python.</li></ol><h3 id="15-安装mysql"><a class="markdownIt-Anchor" href="#15-安装mysql"></a> 1.5 安装MySQL</h3><p><a href="https://blog.csdn.net/weixin_43579015/article/details/117228159?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163148962816780271561681%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=163148962816780271561681&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-117228159.pc_search_insert_download&amp;utm_term=mysql%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B&amp;spm=1018.2226.3001.4187">MySQL安装教程</a><br /><a href="https://blog.csdn.net/qq_31910669/article/details/109739111?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163163728916780269843633%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=163163728916780269843633&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-3-109739111.pc_search_insert_download&amp;utm_term=Navicat&amp;spm=1018.2226.3001.4187">Navicat安装教程</a></p><h3 id="16-sql基础语句"><a class="markdownIt-Anchor" href="#16-sql基础语句"></a> 1.6 SQL基础语句</h3><p><code>mysql -uroot -p</code> 命令行连接数据库！</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">flush privileges; <span class="comment">-- 刷新权限</span></span><br><span class="line"><span class="keyword">show</span> databases; <span class="comment">--查看所有数据库</span></span><br><span class="line">use test  <span class="comment">-- test是数据库名 切换数据库（命令）</span></span><br><span class="line"><span class="keyword">show</span> tables; <span class="comment">--查看表</span></span><br><span class="line"><span class="keyword">describe</span> 图书管理系统; <span class="comment">--查看表中字段信息</span></span><br><span class="line"><span class="keyword">create</span> database student; <span class="comment">--创建数据库</span></span><br><span class="line">exit; <span class="comment">--退出连接</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">多行注释</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>数据库语言</p></blockquote><p>DDL：数据库定义语言<br />DML：数据库操作管理语言<br />DQL：数据库查询语言<br />DCL：数据库控制语言</p><p>CRUD程序猿<br />CV程序猿<br />API程序猿</p><h2 id="2-操作数据库"><a class="markdownIt-Anchor" href="#2-操作数据库"></a> 2. 操作数据库</h2><p><mark>SQL关键字不区分大小写</mark><br />操作数据库 &gt; 操作数据库的表 &gt; 操作数据库的表的数据</p><blockquote><p>创建数据库</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> DATAbase if <span class="keyword">not</span> <span class="keyword">exists</span> test; <span class="comment">--创建test数据库</span></span><br></pre></td></tr></table></figure><blockquote><p>删除数据库</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Drop</span> DATABASE if <span class="keyword">EXISTS</span> test; <span class="comment">--删除test数据库</span></span><br></pre></td></tr></table></figure><blockquote><p>使用数据库</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use test --使用test数据库</span><br><span class="line">select `user` from student; --如果表名或者字段名是特殊字符段，就需要使用``包裹</span><br></pre></td></tr></table></figure><blockquote><p>查看数据库</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> databases;</span><br></pre></td></tr></table></figure><h3 id="21-mysql-数据类型"><a class="markdownIt-Anchor" href="#21-mysql-数据类型"></a> 2.1 MySQL 数据类型</h3><blockquote><p>数值类型</p></blockquote><ul><li><p>tinyint 1字节</p></li><li><p>smallint 2字节</p></li><li><p><mark>int 4字节（常用）</mark></p></li><li><p>bigint 8字节</p></li><li><p>float 4字节</p></li><li><p>double 8字节</p></li><li><p>decimal 字符串形式的浮点数（精度问题，金融常用）</p></li></ul><blockquote><p>字符串</p></blockquote><ul><li><p>char 0~255</p></li><li><p><mark>varchar 0~65535 常用的变量</mark></p></li><li><p>tinytext 255</p></li><li><p><mark>text 65535 储存大文章</mark></p></li></ul><blockquote><p>日期</p></blockquote><ul><li><p>date YY-MM-DD</p></li><li><p>time HH-mm-ss</p></li><li><p><mark>datetime YYYY-MM-DD-HH-mm-ss 最常用的时间格式</mark></p></li><li><p><mark>imestamp 时间戳（1970-01-01 00:00:00到现在的时间）</mark></p></li><li><p>year</p></li></ul><blockquote><p>null</p></blockquote><p>不要使用null进行运算，结果始终为null</p><h3 id="22-数据库的字段属性"><a class="markdownIt-Anchor" href="#22-数据库的字段属性"></a> 2.2 数据库的字段属性</h3><ul><li><p>Unsigned：无符号整数</p></li><li><p>zerofill：0填充</p></li><li><p>自增：</p><ul><li>自动在上一条记录的基础上+1</li><li>通常用来设置唯一的主键，必须是整数类型</li><li>可以自定义自增的起始值和步长</li></ul></li><li><p>非空：如果不赋值，会报错</p></li><li><p>默认default：设置默认的值</p></li></ul><p><mark>拓展</mark></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*每一个表都必须包含以下5个字段</span></span><br><span class="line"><span class="comment">id 主键</span></span><br><span class="line"><span class="comment">`version`  乐观锁</span></span><br><span class="line"><span class="comment">is_delete 伪删除</span></span><br><span class="line"><span class="comment">gmt_create 创建时间</span></span><br><span class="line"><span class="comment">gmt_update 修改时间</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="23-创建数据库表"><a class="markdownIt-Anchor" href="#23-创建数据库表"></a> 2.3 创建数据库表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 表的名称和字段尽量使用``括起来 ，避免被识别为关键字</span></span><br><span class="line"><span class="comment">-- AUTO_INCREMENT自增</span></span><br><span class="line"><span class="comment">-- 字符串用单引号括起来</span></span><br><span class="line"><span class="comment">-- 所有的语句用逗号隔开，最后一个字段不用加</span></span><br><span class="line"><span class="comment">-- primary key 主键， 一般只有一个</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> `student`(</span><br><span class="line">`id` <span class="type">int</span>(<span class="number">4</span>) <span class="keyword">not</span> <span class="keyword">null</span> auto_increment COMMENT <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">`name` <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">default</span> <span class="string">&#x27;匿名&#x27;</span> comment <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">`pwd` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">default</span> <span class="string">&#x27;123456&#x27;</span> comment <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">`sex` <span class="type">varchar</span>(<span class="number">2</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">default</span> <span class="string">&#x27;男&#x27;</span> comment <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">`birthday` <span class="type">date</span> <span class="keyword">DEFAULT</span> <span class="keyword">null</span> comment <span class="string">&#x27;出生日期&#x27;</span>,</span><br><span class="line">`address` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">default</span> <span class="keyword">null</span> comment <span class="string">&#x27;家庭地址&#x27;</span>,</span><br><span class="line">`email` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">default</span> <span class="keyword">null</span> comment <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line"><span class="keyword">primary</span> key(`id`)</span><br><span class="line">)engine<span class="operator">=</span>innodb <span class="keyword">default</span> charset<span class="operator">=</span>utf8</span><br><span class="line"></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> database school <span class="comment">--  查看创建数据库的语句</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> student <span class="comment">-- 查看student表的定义语句</span></span><br></pre></td></tr></table></figure><h3 id="24-数据库表的类型"><a class="markdownIt-Anchor" href="#24-数据库表的类型"></a> 2.4 数据库表的类型</h3><blockquote><p>MYISAM与INNODB区别</p></blockquote><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">MYISAM</th><th style="text-align:center">INNODB</th></tr></thead><tbody><tr><td style="text-align:center">事务支持</td><td style="text-align:center">不支持</td><td style="text-align:center">支持</td></tr><tr><td style="text-align:center">数据行锁定</td><td style="text-align:center">不支持</td><td style="text-align:center">支持</td></tr><tr><td style="text-align:center">外键约束</td><td style="text-align:center">不支持</td><td style="text-align:center">支持</td></tr><tr><td style="text-align:center">全文索引</td><td style="text-align:center">支持</td><td style="text-align:center">5.6.4后支持</td></tr><tr><td style="text-align:center">表空间的大小</td><td style="text-align:center">较小</td><td style="text-align:center">较大，2倍</td></tr></tbody></table><p>常规使用操作：</p><ul><li>MYISAM：节约空间，速度较快</li><li>INNODB：安全性高，事务的处理，多表多用户操作</li></ul><blockquote><p>在物理空间的存储位置</p></blockquote><p>所有的数据库文件都存在<mark>data</mark>目录下，一个文件夹对应一个数据库</p><p>本质还是文件的存储！</p><p>MYSQL引擎在物理文件上的区别</p><ul><li>INNODB在数据库表中只有一个*.frm文件，以及上级目录下的ibdata1文件</li><li>MYISAM对应的文件<ul><li>*.frm 表结构的定义文件</li><li>*.MYD 数据文件(data)</li><li>*.MYI 索引文件 (index)</li></ul></li></ul><blockquote><p>设置数据库的字符集编码</p></blockquote><p>MySQL默认编码是Latin1，不支持中文</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">charset<span class="operator">=</span>utf8mb4</span><br></pre></td></tr></table></figure><p>也可以在my.ini添加下述代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">default</span>-character-set=utf8</span><br></pre></td></tr></table></figure><h3 id="25-修改删除表"><a class="markdownIt-Anchor" href="#25-修改删除表"></a> 2.5 修改删除表</h3><blockquote><p>修改</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 修改表名</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> `student` rename <span class="keyword">as</span> student01;</span><br><span class="line"><span class="comment">-- 增加表的字段</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> `student01` <span class="keyword">add</span> age <span class="type">int</span>(<span class="number">11</span>);</span><br><span class="line"><span class="comment">-- 修改表的字段（重命名、修改约束）</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> `student01` modify age <span class="type">varchar</span>(<span class="number">11</span>);<span class="comment">-- 修改约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> `student01` change age age01 <span class="type">int</span>(<span class="number">1</span>);<span class="comment">-- 重命名</span></span><br><span class="line"><span class="comment">-- 删除表的字段</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> `student01` <span class="keyword">drop</span> age01;</span><br></pre></td></tr></table></figure><blockquote><p>删除</p></blockquote><p><mark>所有的创建和删除操作尽量加上判断，以免报错</mark></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除表</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> if <span class="keyword">exists</span> `student01`;</span><br></pre></td></tr></table></figure><p>注意点：</p><ul><li>反引号<kbd>`</kbd>包裹字段名，避免被系统识别为关键字</li><li>sql关键字大小写不敏感，建议小写</li></ul><h2 id="3-mysql的数据管理"><a class="markdownIt-Anchor" href="#3-mysql的数据管理"></a> 3. MySQL的数据管理</h2><h3 id="31-外键"><a class="markdownIt-Anchor" href="#31-外键"></a> 3.1 外键</h3><p>表与表的约束</p><p><mark>数据库只是单纯的表，只用来存数据</mark></p><p><mark>不建议使用</mark>现在大多不用物理外键，都通过代码逻辑去限制</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `grade`(</span><br><span class="line">`id` <span class="type">int</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="keyword">null</span> auto_increment comment <span class="string">&#x27;年级id&#x27;</span>,</span><br><span class="line">`name` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;年级名称&#x27;</span>,</span><br><span class="line"><span class="keyword">primary</span> key(`id`)</span><br><span class="line">)engine<span class="operator">=</span>innodb <span class="keyword">default</span> charset<span class="operator">=</span>utf8;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> `student`(</span><br><span class="line">`id` <span class="type">int</span>(<span class="number">4</span>) <span class="keyword">not</span> <span class="keyword">null</span> auto_increment COMMENT <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">`name` <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">default</span> <span class="string">&#x27;匿名&#x27;</span> comment <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">`gradeid` <span class="type">int</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;学生年级&#x27;</span>,</span><br><span class="line">`pwd` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">default</span> <span class="string">&#x27;123456&#x27;</span> comment <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">`sex` <span class="type">varchar</span>(<span class="number">2</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">default</span> <span class="string">&#x27;男&#x27;</span> comment <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">`birthday` <span class="type">date</span> <span class="keyword">DEFAULT</span> <span class="keyword">null</span> comment <span class="string">&#x27;出生日期&#x27;</span>,</span><br><span class="line">`address` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">default</span> <span class="keyword">null</span> comment <span class="string">&#x27;家庭地址&#x27;</span>,</span><br><span class="line">`email` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">default</span> <span class="keyword">null</span> comment <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line"><span class="keyword">primary</span> key(`id`),</span><br><span class="line">key `FK_gradeid`(`gradeid`),</span><br><span class="line"><span class="keyword">constraint</span> `FK_gradeid` <span class="keyword">foreign</span> key (`gradeid`) <span class="keyword">references</span> `grade`(`id`)</span><br><span class="line">)engine<span class="operator">=</span>innodb <span class="keyword">default</span> charset<span class="operator">=</span>utf8</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `grade`(</span><br><span class="line">`id` <span class="type">int</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="keyword">null</span> auto_increment comment <span class="string">&#x27;年级id&#x27;</span>,</span><br><span class="line">`name` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;年级名称&#x27;</span>,</span><br><span class="line"><span class="keyword">primary</span> key(`id`)</span><br><span class="line">)engine<span class="operator">=</span>innodb <span class="keyword">default</span> charset<span class="operator">=</span>utf8;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> `student`(</span><br><span class="line">`id` <span class="type">int</span>(<span class="number">4</span>) <span class="keyword">not</span> <span class="keyword">null</span> auto_increment COMMENT <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">`name` <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">default</span> <span class="string">&#x27;匿名&#x27;</span> comment <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">`gradeid` <span class="type">int</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;学生年级&#x27;</span>,</span><br><span class="line">`pwd` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">default</span> <span class="string">&#x27;123456&#x27;</span> comment <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">`sex` <span class="type">varchar</span>(<span class="number">2</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">default</span> <span class="string">&#x27;男&#x27;</span> comment <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">`birthday` <span class="type">date</span> <span class="keyword">DEFAULT</span> <span class="keyword">null</span> comment <span class="string">&#x27;出生日期&#x27;</span>,</span><br><span class="line">`address` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">default</span> <span class="keyword">null</span> comment <span class="string">&#x27;家庭地址&#x27;</span>,</span><br><span class="line">`email` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">default</span> <span class="keyword">null</span> comment <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line"><span class="keyword">primary</span> key(`id`)</span><br><span class="line">)engine<span class="operator">=</span>innodb <span class="keyword">default</span> charset<span class="operator">=</span>utf8</span><br><span class="line"><span class="comment">-- 创建表的时候没有外键的约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> `student`</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> `FK_gradeid` <span class="keyword">foreign</span> key(`gradeid`) <span class="keyword">references</span> `grade`(`id`);</span><br></pre></td></tr></table></figure><p>注意点：</p><ul><li>要设置外键的字段不能为主键</li><li>改建所参考的字段必须为主键</li><li>两个字段必须具有相同的数据类型和约束</li></ul><h3 id="32-dml语言"><a class="markdownIt-Anchor" href="#32-dml语言"></a> 3.2 DML语言</h3><ul><li>insert</li><li>update</li><li>delete</li></ul><h3 id="33-添加"><a class="markdownIt-Anchor" href="#33-添加"></a> 3.3 添加</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- insert into `表名`(`字段1`, `字段2`, `字段3`) values(&#x27;值1&#x27;), (&#x27;值2&#x27;), (&#x27;值3&#x27;)</span></span><br><span class="line"><span class="comment">-- 数据要一一对应</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `grade`(`name`) <span class="keyword">values</span>(<span class="string">&#x27;大四&#x27;</span>), (<span class="string">&#x27;大三&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `student`(`name`, `pwd`,`gradeid`) <span class="keyword">values</span>(<span class="string">&#x27;张三&#x27;</span>, <span class="string">&#x27;aaaaaa&#x27;</span>,<span class="string">&#x27;4&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="34-修改"><a class="markdownIt-Anchor" href="#34-修改"></a> 3.4 修改</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> `student` <span class="keyword">set</span> `name`<span class="operator">=</span><span class="string">&#x27;Jezer&#x27;</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span>; <span class="comment">-- 指定条件</span></span><br><span class="line"><span class="keyword">update</span> `student` <span class="keyword">set</span> `name`<span class="operator">=</span><span class="string">&#x27;Jezer&#x27;</span> <span class="comment">-- 改动整个库</span></span><br><span class="line"><span class="keyword">update</span> `student` <span class="keyword">set</span> `name`<span class="operator">=</span><span class="string">&#x27;Jezer&#x27;</span>, `email` <span class="operator">=</span> <span class="string">&#x27;jezer05@qq.com&#x27;</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span>; <span class="comment">-- 修改多个字段</span></span><br></pre></td></tr></table></figure><p>条件语句：=，&lt;&gt;或!=，between…and…，and，or</p><h3 id="35-删除"><a class="markdownIt-Anchor" href="#35-删除"></a> 3.5 删除</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> `student` <span class="keyword">where</span>  id <span class="operator">=</span> <span class="number">1</span>; <span class="comment">-- 删除指定数据</span></span><br><span class="line"><span class="keyword">truncate</span> `student`; <span class="comment">-- 完全清空一张表的数据，表的结构和索引不变</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> `student`; <span class="comment">-- 完全清空一张表的数据，表的结构和索引不变</span></span><br></pre></td></tr></table></figure><blockquote><p>delete和truncate的区别</p></blockquote><ul><li><p>truncate重新设置自增列，计数器会归零，不会影响事务</p></li><li><p><code>delete</code>删除的问题</p><ul><li><p>INNODB 自增列会从1开始（存在内存当中，断电即失）</p></li><li><p>MYISAM 继续从上一个自增量开始（存在文件当中，不会丢失）</p></li></ul></li></ul><p><mark>mysql版本不一样,新版的已经修复内存问题了</mark></p><h2 id="4-mysql的数据查询"><a class="markdownIt-Anchor" href="#4-mysql的数据查询"></a> 4. MySQL的数据查询</h2><p><img src="https://i.loli.net/2021/09/26/YjCgVSWcJDiALvq.png" alt="image-20210926114951312" /></p><h3 id="41-查询字段信息"><a class="markdownIt-Anchor" href="#41-查询字段信息"></a> 4.1 查询字段信息</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询所有的学生信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> `student`</span><br><span class="line"><span class="comment">-- 查询指定字段</span></span><br><span class="line"><span class="keyword">select</span> `studentno` <span class="keyword">from</span> `student`</span><br><span class="line"><span class="comment">-- 别名，给结果起一个名字 as</span></span><br><span class="line"><span class="keyword">select</span> `studentno` <span class="keyword">as</span> <span class="string">&#x27;学号&#x27;</span> <span class="keyword">from</span> `student`</span><br><span class="line"><span class="comment">-- 函数 concat(a, b) 拼接</span></span><br><span class="line"><span class="keyword">select</span> concat(<span class="string">&#x27;姓名：&#x27;</span>, studentname) <span class="keyword">as</span> <span class="string">&#x27;新名字&#x27;</span> <span class="keyword">from</span> `student`</span><br><span class="line"><span class="comment">-- 去重</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> `studentno` <span class="keyword">from</span> `<span class="keyword">result</span>`</span><br><span class="line"><span class="comment">-- 查询系统版本</span></span><br><span class="line"><span class="keyword">select</span> version()</span><br><span class="line"><span class="comment">-- 用来计算</span></span><br><span class="line"><span class="keyword">select</span> <span class="number">100</span> <span class="operator">*</span><span class="number">3</span> <span class="operator">-</span> <span class="number">10</span> <span class="keyword">as</span> <span class="string">&#x27;计算结果&#x27;</span></span><br><span class="line"><span class="comment">-- 查询自增的步长</span></span><br><span class="line"><span class="keyword">select</span> auto_increment_increment <span class="keyword">as</span> <span class="string">&#x27;自增的步长&#x27;</span></span><br><span class="line"><span class="comment">-- 对字段的所有数据进行修改，只是修改显示值，原值不会发生变化</span></span><br><span class="line"><span class="keyword">select</span> `studentno`, `studentresult` <span class="operator">+</span> <span class="number">1</span> <span class="keyword">from</span> `<span class="keyword">result</span>`</span><br></pre></td></tr></table></figure><h3 id="42-where-条件子句"><a class="markdownIt-Anchor" href="#42-where-条件子句"></a> 4.2 where 条件子句</h3><blockquote><p>逻辑运算符</p></blockquote><p>add 、&amp;&amp;</p><p>or 、 ||</p><p>not、 ！</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> `studentno`, `studentresult` <span class="keyword">from</span> `<span class="keyword">result</span>` <span class="keyword">where</span> `studentresult` <span class="operator">&gt;=</span> <span class="number">90</span> <span class="keyword">and</span> `studentresult` <span class="operator">&lt;=</span> <span class="number">100</span></span><br><span class="line"><span class="keyword">select</span> `studentno`, `studentresult` <span class="keyword">from</span> `<span class="keyword">result</span>` <span class="keyword">where</span> `studentresult` <span class="keyword">between</span> <span class="number">90</span> <span class="keyword">and</span> <span class="number">100</span></span><br></pre></td></tr></table></figure><blockquote><p>模糊查询：比较运算符</p></blockquote><p>is null<br />is not null<br />a between … and …<br />a like b<br />a in(a1, a2, a3, …)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询‘高’开头的课程</span></span><br><span class="line"><span class="comment">-- like 结合 %(代表0到任意字符) _（一个字符）</span></span><br><span class="line"><span class="keyword">select</span> `subjectName` <span class="keyword">from</span> `subject` <span class="keyword">where</span> `subjectName` <span class="keyword">like</span> <span class="string">&#x27;高%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询 classhour为110，120, 130的数据, in要求精确匹配</span></span><br><span class="line"><span class="keyword">select</span> `subjectName` <span class="keyword">from</span> `subject` <span class="keyword">where</span> `classhour` <span class="keyword">in</span>(<span class="number">110</span>, <span class="number">120</span>, <span class="number">130</span>)</span><br></pre></td></tr></table></figure><h3 id="43-连表查询"><a class="markdownIt-Anchor" href="#43-连表查询"></a> 4.3 连表查询</h3><blockquote><p>①确定需要输出的数据内容,并分析数据来源</p><p>②确定交叉点，用于连接两个表</p><p>③join on连接查询，where 等值查询</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> `s.studentno`, `studentname`, `subjectno`, `studentresult`</span><br><span class="line"><span class="keyword">from</span> `student` <span class="keyword">as</span> s <span class="comment">-- 左表</span></span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> `<span class="keyword">result</span>` <span class="keyword">as</span> r <span class="comment">-- 右表</span></span><br><span class="line"><span class="keyword">on</span> s.studentno <span class="operator">=</span> r.studentno</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> `s.studentno`, `studentname`, `subjectno`, `studentresult`</span><br><span class="line"><span class="keyword">from</span> `student` <span class="keyword">as</span> s <span class="comment">-- 左表</span></span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> `<span class="keyword">result</span>` <span class="keyword">as</span> r <span class="comment">-- 右表</span></span><br><span class="line"><span class="keyword">where</span> s.studentno <span class="operator">=</span> r.studentno</span><br></pre></td></tr></table></figure><p><mark>on条件是在生成临时表时使用的条件，它不管on中的条件是否为真，都会返回左边表中的记录，还会返回on条件为真的记录</mark></p><p><mark>假设存在多张表连接查询，先进行两张表连接查询</mark></p><h3 id="44-自连接"><a class="markdownIt-Anchor" href="#44-自连接"></a> 4.4 自连接</h3><p><mark>核心：一张表拆为两张表</mark></p><p><mark>树形结构</mark></p><table><thead><tr><th style="text-align:center">categoryId</th><th style="text-align:center">pId</th><th style="text-align:center">categoryName</th></tr></thead><tbody><tr><td style="text-align:center">2</td><td style="text-align:center">1</td><td style="text-align:center">信息技术</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">1</td><td style="text-align:center">软件开发</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">3</td><td style="text-align:center">数据库</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">1</td><td style="text-align:center">美术设计</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">3</td><td style="text-align:center">web开发</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">5</td><td style="text-align:center">ps技术</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">2</td><td style="text-align:center">办公信息</td></tr></tbody></table><p><img src="https://i.loli.net/2021/09/26/A1gM4jXofuLDYB2.png" alt="image-20210926114101592" /></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询父子信息</span></span><br><span class="line"><span class="keyword">select</span> a.`categoryName` <span class="keyword">as</span> <span class="string">&#x27;父栏目&#x27;</span>, b. `categoryName` <span class="keyword">as</span> <span class="string">&#x27;子栏目&#x27;</span></span><br><span class="line"><span class="keyword">from</span> `catagory` <span class="keyword">as</span> a, `category` <span class="keyword">as</span> b</span><br><span class="line"><span class="keyword">where</span> a.`categoryid` <span class="operator">=</span> b.`pid`</span><br></pre></td></tr></table></figure><h3 id="45-分页和排序"><a class="markdownIt-Anchor" href="#45-分页和排序"></a> 4.5 分页和排序</h3><blockquote><p>排序</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> `s.studentno`, `studentname`, `subjectno`, `studentresult`</span><br><span class="line"><span class="keyword">from</span> `student` <span class="keyword">as</span> s</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> `<span class="keyword">result</span>` <span class="keyword">as</span> r</span><br><span class="line"><span class="keyword">where</span> s.studentno <span class="operator">=</span> r.studentno</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span>  studentresult <span class="keyword">desc</span> <span class="comment">-- 升序ASC 降序DESC</span></span><br></pre></td></tr></table></figure><blockquote><p>分页</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> `s.studentno`, `studentname`, `subjectno`, `studentresult`</span><br><span class="line"><span class="keyword">from</span> `student` <span class="keyword">as</span> s</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> `<span class="keyword">result</span>` <span class="keyword">as</span> r</span><br><span class="line"><span class="keyword">where</span> s.studentno <span class="operator">=</span> r.studentno</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span>  studentresult <span class="keyword">desc</span></span><br><span class="line">limit <span class="number">0</span>， <span class="number">5</span> <span class="comment">-- 语法：limit起始数据，页面大小</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询 JAVA第一学年课程成绩排名前十的学生，并且分数要大于80的学生信息（学号，姓名，课程名称，分数）</span></span><br><span class="line"><span class="keyword">select</span> s.`studentNo`, `studentName`, `subjectName`, `StudentResult`</span><br><span class="line"><span class="keyword">from</span> `student` s</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> `<span class="keyword">result</span>` r</span><br><span class="line"><span class="keyword">on</span> s.studentNo <span class="operator">=</span> r.studentNo</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> `subject` sub</span><br><span class="line"><span class="keyword">on</span> sub.`subjectNo` <span class="operator">=</span> r.`SubjectNo`</span><br><span class="line"><span class="keyword">where</span> subjectName <span class="operator">=</span> <span class="string">&#x27;JAVA第一学年&#x27;</span>  <span class="keyword">and</span> `studentResult` <span class="operator">&gt;=</span> <span class="number">80</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> `studentResult` <span class="keyword">DESC</span></span><br><span class="line">limit <span class="number">0</span>, <span class="number">10</span></span><br></pre></td></tr></table></figure><h3 id="46-子查询"><a class="markdownIt-Anchor" href="#46-子查询"></a> 4.6 子查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询 数据库结构-1 的所有考试结果（学号，科目编号，成绩），降序排列</span></span><br><span class="line"><span class="comment">-- 方式一：使用连接查询</span></span><br><span class="line"><span class="keyword">select</span> `studentNo`, r.`subjectNo`, `studentResult`</span><br><span class="line"><span class="keyword">from</span> `<span class="keyword">result</span>` r</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> `subject` sub</span><br><span class="line"><span class="keyword">on</span> r.`subjectNo` <span class="operator">=</span> sub.`subjectNo`</span><br><span class="line"><span class="keyword">where</span> `subjectName` <span class="operator">=</span> <span class="string">&#x27;数据库结构-1&#x27;</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> `studentresult` <span class="keyword">Desc</span></span><br><span class="line"><span class="comment">-- 方式二：使用子查询（由里及外）</span></span><br><span class="line"><span class="keyword">select</span> `studentNo`, r.`subjectNo`, `studentResult`</span><br><span class="line"><span class="keyword">from</span> `<span class="keyword">result</span>`</span><br><span class="line"><span class="keyword">where</span> `subjectNo` <span class="operator">=</span> (<span class="comment">-- 交集</span></span><br><span class="line"><span class="keyword">select</span> `SubjectNo` <span class="keyword">from</span> `subject`</span><br><span class="line">    <span class="keyword">where</span> `subjectName` <span class="operator">=</span> <span class="string">&#x27;数据库结构-1&#x27;</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询课程为高等数学-2且分数不小于80的同学的学号和姓名</span></span><br><span class="line"><span class="comment">-- 方式一：</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> s.`studentNo`, `StudentName`</span><br><span class="line"><span class="keyword">from</span> `student` s</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">on</span> r.`studentNo` <span class="operator">=</span> s.`studentNo`</span><br><span class="line"><span class="keyword">where</span> `studentResult` <span class="operator">&gt;=</span> <span class="number">80</span> <span class="keyword">and</span> `subjectNo` <span class="operator">=</span> (</span><br><span class="line"><span class="keyword">select</span> `subjectNo` <span class="keyword">from</span> `subject`</span><br><span class="line">    <span class="keyword">where</span> `subjectName`  <span class="operator">=</span> <span class="string">&#x27;高等数学-2&#x27;</span></span><br><span class="line">)</span><br><span class="line"><span class="comment">-- 方式二：</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> s.`studentNo`, `StudentName`</span><br><span class="line"><span class="keyword">from</span> `student` s</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">on</span> r.`studentNo` <span class="operator">=</span> s.`studentNo`</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> `subject` sub</span><br><span class="line"><span class="keyword">on</span> r.`studentNo`<span class="operator">=</span> sub.`studentNo`</span><br><span class="line"><span class="keyword">where</span> `subjectName` <span class="operator">=</span> <span class="string">&#x27;高等数学-2&#x27;</span> <span class="keyword">and</span> `studentResult` <span class="operator">&gt;=</span> <span class="number">80</span></span><br><span class="line"><span class="comment">-- 方式三</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> `studentNo`, `StudentName` <span class="keyword">from</span> `student`</span><br><span class="line"><span class="keyword">where</span> `studentNo` <span class="keyword">in</span> (</span><br><span class="line"><span class="keyword">select</span> `studentNo` <span class="keyword">from</span> `<span class="keyword">result</span>` <span class="keyword">where</span> `studentResult` <span class="operator">&gt;=</span> <span class="number">80</span> <span class="keyword">and</span> `subjectNo` <span class="operator">=</span>(</span><br><span class="line">        <span class="keyword">select</span> `subjectNo` <span class="keyword">from</span> `subject` <span class="keyword">where</span> `subjectName` <span class="operator">=</span> <span class="string">&#x27;高等数学-2&#x27;</span></span><br><span class="line">    )</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="47-分组与过滤"><a class="markdownIt-Anchor" href="#47-分组与过滤"></a> 4.7 分组与过滤</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询不同课程的平均分，最高分，最低分, 平均分大于等于80</span></span><br><span class="line"><span class="keyword">select</span> `subjectName`, <span class="built_in">avg</span>(`studentresult`) <span class="keyword">as</span> <span class="string">&#x27;平均分&#x27;</span>,  <span class="built_in">max</span>(`studentresult`), <span class="built_in">min</span>(`studentresult`)</span><br><span class="line"><span class="keyword">from</span> `<span class="keyword">result</span>` r</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> `subject` sub</span><br><span class="line"><span class="keyword">on</span> r.`subjectNo` <span class="operator">=</span> sub.`subjectNo`</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> r.`subjectNo`</span><br><span class="line"><span class="keyword">having</span> 平均分 <span class="operator">&gt;=</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><h2 id="5-mysql函数"><a class="markdownIt-Anchor" href="#5-mysql函数"></a> 5. MySQL函数</h2><p><a href="https://dev.mysql.com/doc/refman/8.0/en/">帮助文档</a></p><h3 id="51-基础函数"><a class="markdownIt-Anchor" href="#51-基础函数"></a> 5.1 基础函数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 数学运算</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">abs</span>(<span class="number">-23</span>) <span class="comment">-- 绝对值</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">ceiling</span>(<span class="number">9.4</span>) <span class="comment">-- 向上取整</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">floor</span>(<span class="number">9.4</span>) <span class="comment">-- 向下取整</span></span><br><span class="line"><span class="keyword">select</span> rand() <span class="comment">-- 随机数0~1</span></span><br><span class="line"><span class="keyword">select</span> sign(<span class="number">-10</span>) <span class="comment">-- 返回一个数的符号 0-0 负数 -1 正数 1</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 字符串函数</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">char_length</span>(<span class="string">&#x27;学无止境&#x27;</span>) <span class="comment">-- 返回字符串长度</span></span><br><span class="line"><span class="keyword">select</span> concat(<span class="string">&#x27;hello&#x27;</span>, <span class="string">&#x27;world&#x27;</span>) <span class="comment">-- 拼接字符串</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">insert</span>(<span class="string">&#x27;我爱学习&#x27;</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="string">&#x27;超级热爱&#x27;</span>) <span class="comment">-- 替换</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">lower</span>(<span class="string">&#x27;HELLO&#x27;</span>) <span class="comment">-- 转化为小写字母</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">upper</span>(<span class="string">&#x27;hello&#x27;</span>) <span class="comment">-- 转化为大写字母</span></span><br><span class="line"><span class="keyword">select</span> instr(<span class="string">&#x27;hello&#x27;</span>, <span class="string">&#x27;l&#x27;</span>) <span class="comment">-- 某个字符出现的第一个位置</span></span><br><span class="line"><span class="keyword">select</span> replace(<span class="string">&#x27;坚持就能成功&#x27;</span>, <span class="string">&#x27;坚持&#x27;</span>, <span class="string">&#x27;努力&#x27;</span>) <span class="comment">-- 替换</span></span><br><span class="line"><span class="keyword">select</span> substr(<span class="string">&#x27;坚持就能成功&#x27;</span>, <span class="number">2</span>, <span class="number">2</span>) <span class="comment">-- 返回子字符串第二个开始，截取两个长度</span></span><br><span class="line"><span class="keyword">select</span> reverse(<span class="string">&#x27;坚持就能成功&#x27;</span>) <span class="comment">-- 反转</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询姓周的同学，并替换为邹</span></span><br><span class="line"><span class="keyword">select</span> replace (`studentName`, <span class="string">&#x27;周&#x27;</span>, <span class="string">&#x27;邹&#x27;</span>) <span class="keyword">from</span> `student`</span><br><span class="line"><span class="keyword">where</span> `studentName` <span class="keyword">like</span> <span class="string">&#x27;周%&#x27;</span> <span class="comment">-- 不会对数据库进行修改</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 时间和日期函数（记住）</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">current_date</span>() <span class="comment">-- 当前日期</span></span><br><span class="line"><span class="keyword">select</span> now() <span class="comment">-- 当前时间</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">localtime</span>() <span class="comment">-- 本地时间</span></span><br><span class="line"><span class="keyword">select</span> sysdate() <span class="comment">-- 系统时间</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">year</span>(now()) <span class="comment">-- 年</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--  系统</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">system_user</span>() <span class="comment">-- 系统用户</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">user</span>() <span class="comment">-- 系统用户</span></span><br><span class="line"><span class="keyword">select</span> version() <span class="comment">-- 系统版本</span></span><br></pre></td></tr></table></figure><h3 id="52-聚合函数"><a class="markdownIt-Anchor" href="#52-聚合函数"></a> 5.2 聚合函数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 统计个数</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(`studentName`) <span class="keyword">from</span> `student` <span class="comment">-- 统计指定字段的记录个数，会忽略所有的null值</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> `student` <span class="comment">-- 本质计算行数，不会忽略null值</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">from</span> `student` <span class="comment">-- 本质计算行数，不会忽略null值</span></span><br><span class="line"><span class="comment">-- 求和</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(`studentResult`) <span class="keyword">as</span> <span class="string">&#x27;总和&#x27;</span> <span class="keyword">from</span> `<span class="keyword">result</span>`</span><br><span class="line"><span class="comment">-- 平均分</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(`studentResult`) <span class="keyword">as</span> <span class="string">&#x27;平均分&#x27;</span> <span class="keyword">from</span> `<span class="keyword">result</span>`</span><br><span class="line"><span class="comment">-- 最高分</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(`studentResult`) <span class="keyword">as</span> <span class="string">&#x27;max&#x27;</span> <span class="keyword">from</span> `<span class="keyword">result</span>`</span><br><span class="line"><span class="comment">-- 最低分</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">min</span>(`studentResult`) <span class="keyword">as</span> <span class="string">&#x27;min&#x27;</span> <span class="keyword">from</span> `<span class="keyword">result</span>`</span><br></pre></td></tr></table></figure><h3 id="53-数据库级别的md5加密"><a class="markdownIt-Anchor" href="#53-数据库级别的md5加密"></a> 5.3 数据库级别的MD5加密</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `testmd5` (</span><br><span class="line">    `id` <span class="type">int</span>(<span class="number">4</span>) <span class="keyword">not</span> <span class="keyword">null</span> auto_increment comment <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">    `name` <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">    `pwd` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27; 密码&#x27;</span>, <span class="comment">-- 需要长一点，不然无法加密</span></span><br><span class="line">    <span class="keyword">primary</span> key(`id`)</span><br><span class="line">)engine <span class="operator">=</span> innoDB <span class="keyword">default</span> charset <span class="operator">=</span> utf8mb4</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `testmd5` <span class="keyword">values</span>(<span class="number">1</span>, <span class="string">&#x27;张三&#x27;</span>, <span class="string">&#x27;123456&#x27;</span>), (<span class="number">2</span>, <span class="string">&#x27;李四&#x27;</span>, <span class="string">&#x27;123456&#x27;</span>), (<span class="number">3</span>, <span class="string">&#x27;王五&#x27;</span>, <span class="string">&#x27;123456&#x27;</span>)</span><br><span class="line"><span class="comment">-- 加密</span></span><br><span class="line"><span class="keyword">update</span> `testmd5` <span class="keyword">set</span> `pwd` <span class="operator">=</span> md5(pwd)</span><br><span class="line"><span class="comment">-- 插入的时候加密</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `testmd5` <span class="keyword">values</span>(<span class="number">4</span>, <span class="string">&#x27;赵六&#x27;</span>, md5(<span class="string">&#x27;123456&#x27;</span>))</span><br><span class="line"><span class="comment">-- 如何校验：将用户传递进来的密码，进行MD5加密比对</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> `testmd5` <span class="keyword">where</span> `pwd` <span class="operator">=</span> md5(<span class="string">&#x27;123456&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="6-事务"><a class="markdownIt-Anchor" href="#6-事务"></a> 6. 事务</h2><h3 id="61-事务的概念"><a class="markdownIt-Anchor" href="#61-事务的概念"></a> 6.1 事务的概念</h3><p><mark>要么都成功，要么都失败</mark></p><p>将一组SQL放在一个批次中执行</p><p>ACID原则：原子性 一致性 隔离性 持久性</p><blockquote><p>原子性</p></blockquote><p><img src="https://i.loli.net/2021/09/27/gpAv23Q7tnZ1XTl.png" alt="image-20210927135836046" /></p><p>这个过程包含两个步骤</p><p>A： 800 - 200 = 600<br />B:  200 + 200 = 400</p><p><mark>原子性表示，这两个步骤一起成功，或者一起失败，不能只发生其中一个动作</mark></p><blockquote><p>一致性</p></blockquote><p><mark>针对一个事务操作前与操作后的状态一致</mark></p><p>操作前A：800，B：200<br />操作后A：600，B：400</p><p><mark>一致性表示事务完成后，符合逻辑运算</mark></p><blockquote><p>持久性</p></blockquote><p><mark>表示事务结束后的数据不随着外界原因导致数据丢失</mark></p><p>操作前A：800，B：200<br />操作后A：600，B：400<br />如果在操作前（事务还没有提交）服务器宕机或者断电，那么重启数据库以后，数据状态应该为<br />A：800，B：200<br />如果在操作后（事务已经提交）服务器宕机或者断电，那么重启数据库以后，数据状态应该为<br />A：600，B：400</p><blockquote><p>隔离性</p></blockquote><p><mark>针对多个用户同时操作，主要是排除其他事务对本次事务的影响</mark></p><blockquote><p>隔离级别</p></blockquote><p><strong>脏读</strong>：指一个事务读取了另外一个事务未提交的数据。</p><p><strong>不可重复读</strong>：在一个事务内读取表中的某一行数据，多次读取结果不同。（这个不一定是错误，只是某些场合不对）</p><p><strong>虚读（幻读）</strong>：是指在一个事务内读取到了别的事务插入的数据，导致前后读取数量总量不一致。</p><h3 id="62-执行事务"><a class="markdownIt-Anchor" href="#62-执行事务"></a> 6.2 执行事务</h3><p><img src="https://i.loli.net/2021/09/27/twVzgpIyPWMf9QC.png" alt="image-20210927143451414" /></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- mysql是默认开启事务自动提交的</span></span><br><span class="line"><span class="keyword">set</span> autocommit <span class="operator">=</span> <span class="number">1</span> <span class="comment">-- 开启自动提交（默认）</span></span><br><span class="line"><span class="comment">-- 手动处理事务</span></span><br><span class="line"><span class="keyword">set</span> autocommit   <span class="number">0</span> <span class="comment">-- 关闭自动提交</span></span><br><span class="line"><span class="comment">-- 事务开启</span></span><br><span class="line"><span class="keyword">start</span> transaction <span class="comment">-- 标记一个事务的开启，将之后的sql绑定在一个事务中</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">操作语句</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">-- 提交：持久化</span></span><br><span class="line"><span class="keyword">commit</span></span><br><span class="line"><span class="comment">-- 回滚：回到原来的样子（if失败）</span></span><br><span class="line"><span class="keyword">rollback</span></span><br><span class="line"><span class="comment">-- 事务结束，开启自动提交</span></span><br><span class="line"><span class="keyword">set</span> autocommit <span class="operator">=</span> <span class="number">1</span></span><br><span class="line"><span class="comment">-- ==================================拓展=========================</span></span><br><span class="line"><span class="keyword">savepoint</span> <span class="string">&#x27;保存点名&#x27;</span><span class="comment">-- 设置一个事务的保存点</span></span><br><span class="line"><span class="keyword">rollback</span> <span class="keyword">to</span> <span class="string">&#x27;保存点名&#x27;</span><span class="comment">-- 回滚到保存点</span></span><br><span class="line"><span class="keyword">release</span> <span class="keyword">savepoint</span> <span class="string">&#x27;保存点&#x27;</span> <span class="comment">-- 撤销保存点</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>模拟场景</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 转账</span></span><br><span class="line"><span class="keyword">create</span> database `shop` <span class="type">character</span> <span class="keyword">set</span> utf8mb4 <span class="keyword">collate</span> utf8mb4_bin</span><br><span class="line">use `shop`</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `account`(</span><br><span class="line">`id` <span class="type">int</span>(<span class="number">3</span>) <span class="keyword">not</span> <span class="keyword">null</span> auto_increment,</span><br><span class="line">    `name` <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    `money` <span class="type">decimal</span>(<span class="number">9</span>, <span class="number">2</span>) <span class="keyword">not</span> <span class="keyword">null</span>, <span class="comment">-- decimal(a, b) a为定点精度，b为小数位数</span></span><br><span class="line">    <span class="keyword">primary</span> key(`id`)</span><br><span class="line">)engine <span class="operator">=</span> innoDB <span class="keyword">default</span> charset <span class="operator">=</span> utf8mb4</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `account`(`name`, `money`)</span><br><span class="line"><span class="keyword">values</span> (<span class="string">&#x27;A&#x27;</span>, <span class="number">2000.00</span>), (<span class="string">&#x27;B&#x27;</span>, <span class="number">10000.00</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 模拟转账</span></span><br><span class="line"><span class="keyword">set</span> autocommit <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">start</span> transaction; <span class="comment">-- 开启一个事务</span></span><br><span class="line"><span class="keyword">update</span> `account` <span class="keyword">set</span> `money` <span class="operator">=</span> `money` <span class="operator">-</span> <span class="number">500</span> <span class="keyword">where</span> `name` <span class="operator">=</span> <span class="string">&#x27;A&#x27;</span>; <span class="comment">--  A减500</span></span><br><span class="line"><span class="keyword">update</span> `account` <span class="keyword">set</span> `money` <span class="operator">=</span> `money` <span class="operator">+</span> <span class="number">500</span> <span class="keyword">where</span> `name` <span class="operator">=</span> <span class="string">&#x27;B&#x27;</span>; <span class="comment">--  B加500</span></span><br><span class="line"><span class="keyword">commit</span>;<span class="comment">-- 提交事务,一旦提交，就会持久化</span></span><br><span class="line"><span class="keyword">rollback</span>; <span class="comment">-- 回滚</span></span><br><span class="line"><span class="keyword">set</span> autocommit <span class="operator">=</span> <span class="number">1</span>; <span class="comment">-- 恢复默认值</span></span><br></pre></td></tr></table></figure><h2 id="7-索引"><a class="markdownIt-Anchor" href="#7-索引"></a> 7. 索引</h2><p><mark>索引是对数据库表中一列或多列的值进行排序的一种结构，使用索引可快速访问数据库表中的特定信息。</mark></p><h3 id="71-索引的分类"><a class="markdownIt-Anchor" href="#71-索引的分类"></a> 7.1 索引的分类</h3><ul><li>主键索引（primary key）<ul><li>唯一标识，主键不可重复，只能有一个</li></ul></li><li>唯一索引（unique key）<ul><li>避免重复的列出现，，多个列可以标识为唯一索引</li></ul></li><li>常规索引（key/index)<ul><li>默认的，index、key关键字来设置</li></ul></li><li>全文索引（fulltext）<ul><li>在特定的数据库引擎下才有，MYISAX</li><li>快速定位数据</li></ul></li></ul><h3 id="72-测试索引"><a class="markdownIt-Anchor" href="#72-测试索引"></a> 7.2 测试索引</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 显示所有的索引信息</span></span><br><span class="line"><span class="keyword">show</span> index <span class="keyword">from</span> `student`</span><br><span class="line"><span class="comment">-- 修改表结构的方式添加索引</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> `student` <span class="keyword">add</span> fulltext index `studentName`(`studentName`);</span><br><span class="line"><span class="comment">-- explain 分析sql执行的状况</span></span><br><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> `student`; <span class="comment">-- 非全文索引</span></span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/jiadajing267/article/details/81269067">MySQL优化-explain</a></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 生成数据</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `app_user` (</span><br><span class="line">    `id` <span class="type">BIGINT</span>(<span class="number">20</span>) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">    `name` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span><span class="string">&#x27;&#x27;</span> COMMENT<span class="string">&#x27;用户昵称&#x27;</span>,</span><br><span class="line">    `email` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT<span class="string">&#x27;用户邮箱&#x27;</span>,</span><br><span class="line">    `phone` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span><span class="string">&#x27;&#x27;</span> COMMENT<span class="string">&#x27;手机号&#x27;</span>,</span><br><span class="line">    `gender` TINYINT(<span class="number">4</span>) UNSIGNED <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span>COMMENT <span class="string">&#x27;性别（0：男;1:女）&#x27;</span>,</span><br><span class="line">    `password` <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">default</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">    `age` TINYINT(<span class="number">4</span>) <span class="keyword">DEFAULT</span><span class="string">&#x27;0&#x27;</span>  COMMENT <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">    `create_time` DATETIME <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line">`update_time` <span class="type">TIMESTAMP</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 COMMENT <span class="operator">=</span> <span class="string">&#x27;app用户表&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入1000000条数据  41.181s</span></span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">GLOBAL</span> log_bin_trust_function_creators<span class="operator">=</span><span class="number">1</span>; <span class="comment">-- 开启创建函数功能</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  第一个语句 delimiter 将 mysql 解释器命令行的结束符由”;” 改成了”$$”，</span></span><br><span class="line"><span class="comment">  让存储过程内的命令遇到”;” 不执行</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">set</span> autocommit <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">start</span> transaction;</span><br><span class="line"></span><br><span class="line">delimiter $$ <span class="comment">-- 写函数前必须写（标志）</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">function</span> mock_data()</span><br><span class="line"><span class="keyword">returns</span> <span class="type">int</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">declare</span> num <span class="type">int</span> <span class="keyword">default</span> <span class="number">1000000</span>;</span><br><span class="line"><span class="keyword">declare</span> i <span class="type">int</span> <span class="keyword">default</span> <span class="number">0</span>;</span><br><span class="line">while i<span class="operator">&lt;</span>num do</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `app_user`(`name`,`email`,`phone`,`gender`, `password`, `age`)</span><br><span class="line"><span class="keyword">VALUES</span>(CONCAT(<span class="string">&#x27;用户&#x27;</span>,i),<span class="string">&#x27;19224305@qq.com&#x27;</span>, concat(<span class="string">&#x27;&#x27;</span>, <span class="built_in">floor</span>(rand() <span class="operator">*</span> <span class="number">9999999999</span> <span class="operator">+</span> <span class="number">10000000000</span>)),<span class="built_in">FLOOR</span>(RAND()<span class="operator">*</span><span class="number">2</span>),</span><br><span class="line">              UUID(), <span class="built_in">floor</span>(rand() <span class="operator">*</span> <span class="number">100</span>));</span><br><span class="line">    <span class="keyword">set</span> i <span class="operator">=</span> i <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">end</span> while;</span><br><span class="line">    <span class="keyword">return</span> i;</span><br><span class="line"><span class="keyword">end</span>;$$</span><br><span class="line"></span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"><span class="keyword">rollback</span>;</span><br><span class="line"><span class="keyword">set</span> autocommit <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> mock_data();</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 测试</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> `app_user` <span class="keyword">where</span> `name` <span class="operator">=</span> <span class="string">&#x27;用户9999&#x27;</span>; <span class="comment">-- 0.605s</span></span><br><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> `app_user` <span class="keyword">where</span> `name` <span class="operator">=</span> <span class="string">&#x27;用户9999&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/09/27/oRM1CWDYrs2t9bg.png" alt="image-20210927181718292" /></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建索引 id_表名_字段名</span></span><br><span class="line"><span class="keyword">create</span> [fulltext]index id_app_user_name <span class="keyword">on</span> `app_user`(`name`); <span class="comment">-- 5.252s</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> `app_user` <span class="keyword">where</span> `name` <span class="operator">=</span> <span class="string">&#x27;用户9999&#x27;</span>; <span class="comment">-- 0.023s</span></span><br><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> `app_user` <span class="keyword">where</span> `name` <span class="operator">=</span> <span class="string">&#x27;用户9999&#x27;</span>;</span><br><span class="line"><span class="keyword">drop</span> index  id_app_user_name <span class="keyword">on</span> `app_user`; <span class="comment">-- 删除索引</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/09/27/GlW5V9xfnEuethH.png" alt="image-20210927182133308" /></p><h3 id="73-索引原则"><a class="markdownIt-Anchor" href="#73-索引原则"></a> 7.3 索引原则</h3><ul><li>索引不是越多越好</li><li>不要对进程变动数据加索引</li><li>小数据量的表不需要加索引</li><li>索引一般加到常用在查询的字段上</li></ul><blockquote><p>索引的数据结构</p></blockquote><p><a href="http://blog.codinglabs.org/articles/theory-of-mysql-index.html">[MySQL索引背后的数据结构及算法原理]</a></p><h2 id="8-权限管理和备份"><a class="markdownIt-Anchor" href="#8-权限管理和备份"></a> 8. 权限管理和备份</h2><h3 id="81-用户管理"><a class="markdownIt-Anchor" href="#81-用户管理"></a> 8.1 用户管理</h3><blockquote><p>SQL命令操作</p></blockquote><p>用户表：mysql.user</p><p>**本质：**表的增删改查</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建用户</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> Jezer identified <span class="keyword">by</span> <span class="string">&#x27;123456&#x27;</span></span><br><span class="line"><span class="comment">-- 修改密码（修改当前用户密码）</span></span><br><span class="line"><span class="keyword">set</span> password <span class="operator">=</span> password(<span class="string">&#x27;12345678&#x27;</span>) <span class="comment">-- 新版已经淘汰</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;IP地址&#x27;</span> identified <span class="keyword">with</span> mysql_native_password <span class="keyword">by</span> <span class="string">&#x27;123456789&#x27;</span>;<span class="comment">-- 8.0之后</span></span><br><span class="line">flush privileges;   <span class="comment">-- 刷新MySQL的系统权限相关表</span></span><br><span class="line"><span class="comment">-- 修改密码（修改指定用户密码）</span></span><br><span class="line"><span class="keyword">set</span> password <span class="keyword">for</span> Jezer <span class="operator">=</span> password(<span class="string">&#x27;12345678&#x27;</span>)</span><br><span class="line"><span class="comment">-- 重命名</span></span><br><span class="line">rename <span class="keyword">user</span> Jezer <span class="keyword">to</span> Jezer05</span><br><span class="line"><span class="comment">-- 用户授权</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> privileges <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> Jezer05<span class="comment">-- [with grant option]</span></span><br><span class="line"><span class="comment">-- 查看权限</span></span><br><span class="line"><span class="keyword">show</span> grants <span class="keyword">for</span> Jezer05</span><br><span class="line"><span class="comment">-- 撤销权限</span></span><br><span class="line"><span class="keyword">revoke</span> <span class="keyword">all</span> privileges <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">from</span> Jezer05</span><br><span class="line"><span class="comment">-- 删除用户</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">user</span> Jezer05</span><br></pre></td></tr></table></figure><h3 id="82-mysql备份"><a class="markdownIt-Anchor" href="#82-mysql备份"></a> 8.2 MySQL备份</h3><ul><li><p>直接拷贝物理文件</p></li><li><p>在可视化工具中手动导出</p><ul><li><img src="https://i.loli.net/2021/09/27/bFE8qVKDSwXPxc3.png" alt="image-20210927222649705" /></li></ul></li><li><p>cmd命令</p></li></ul><p>导出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -hlocalhost -uroot -p12345678 school student &gt;D:/a.sql</span><br></pre></td></tr></table></figure><p>导入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p12345678</span><br><span class="line">use school;</span><br><span class="line">source d:/a.sql</span><br></pre></td></tr></table></figure><h2 id="9-规范数据库设计"><a class="markdownIt-Anchor" href="#9-规范数据库设计"></a> 9. 规范数据库设计</h2><h3 id="91-数据库设计"><a class="markdownIt-Anchor" href="#91-数据库设计"></a> 9.1 数据库设计</h3><blockquote><p>糟糕的数据库设计</p></blockquote><ul><li>数据库冗余，造成空间浪费</li><li>数据库插入和删除麻烦、异常【物理外键】</li><li>程序的性能差</li></ul><blockquote><p>良好的数据库设计</p></blockquote><ul><li>节省内存空间</li><li>保证数据库的完整性</li><li>方便系统开发</li></ul><blockquote><p>数据库设计</p></blockquote><ul><li>分析需求：分析业务需求和需要处理的数据库</li><li>概要设计：设计关系图E-R图</li></ul><blockquote><p>个人博客</p></blockquote><ul><li>收集信息，分析需求<ul><li>用户表（登录注销，个人信息，博客内容，分类）</li><li>分类表（文章内容分类，创作者）</li><li>文章表</li><li>评论表</li><li>友链表（友链信息）</li><li>自定义表 key：value （标题等）</li></ul></li><li>标识实体（把要求落地到每个字段）</li><li>标识实体之间的关系<ul><li>写博客：user --&gt; blog</li><li>创建分类：user --&gt; category</li><li>关注：user --&gt; user</li></ul></li></ul><h3 id="92-三大范式"><a class="markdownIt-Anchor" href="#92-三大范式"></a> 9.2 三大范式</h3><p><a href="https://www.cnblogs.com/wsg25/p/9615100.html">三大范式的通俗理解</a></p><p>数据库常见问题</p><ul><li>信息重复</li><li>更新异常</li><li>插入异常</li><li>删除异常</li></ul><blockquote><p>第一范式（1NF）</p></blockquote><p><mark>要求数据库表的每一列都是不可分割的原子数据项。</mark></p><p><img src="https://s2.loli.net/2021/12/23/ZqL2g3hQwTrSMaP.png" alt="image-20211223223922340" /></p><p><strong>在上面的表中，“家庭信息”和“学校信息”列均不满足原子性的要求，故不满足第一范式，调整如下：</strong></p><p><img src="https://s2.loli.net/2021/12/23/doQNZewtLEDa4MF.png" alt="image-20211223224007377" /></p><p><strong>可见，调整后的每一列都是不可再分的，因此满足第一范式（1NF）</strong></p><blockquote><p>第二范式（2NF）</p></blockquote><p><mark>在1NF的基础上第二范式需要确保数据库表中的每一列都和主键相关，而不能只与主键的某一部分相关（主要针对联合主键而言）</mark></p><p><img src="https://s2.loli.net/2021/12/23/I9FZJXViTlbmYBx.png" alt="image-20211223224021538" /></p><p>在上图所示的情况中，同一个订单中可能包含不同的产品，因此主键必须是“订单号”和“产品号”联合组成，但可以发现，产品数量、产品折扣、产品价格与“订单号”和“产品号”都相关，但是订单金额和订单时间仅与“订单号”相关，与“产品号”无关，这样就不满足第二范式的要求，调整如下，需分成两个表：</p><p><img src="https://s2.loli.net/2021/12/23/pwL7anV2ZUKqiF9.png" alt="image-20211223224032577" /></p><p><img src="https://s2.loli.net/2021/12/23/Y3VlFc64qCJmxnp.png" alt="image-20211223224044784" /></p><blockquote><p>第三范式（3NF）</p></blockquote><p><mark>在2NF基础上，第三范式需要确保数据表中的每一列数据都和主键直接相关，而不能间接相关。</mark></p><p><img src="https://s2.loli.net/2021/12/23/NrPAlvHbkwUR8CJ.png" alt="image-20211223224108832" /></p><p>上表中，所有属性都完全依赖于学号，所以满足第二范式，但是“班主任性别”和“班主任年龄”直接依赖的是“班主任姓名”，</p><p>而不是主键“学号”，所以需做如下调整：</p><p><img src="https://s2.loli.net/2021/12/23/EAsFZV1k7Tn3W6f.png" alt="image-20211223224119097" /></p><p><img src="https://i.loli.net/2021/09/28/1XVoebvBNgDfJlR.png" alt="image-20210928163233126" /></p><h3 id="93-规范性与性能"><a class="markdownIt-Anchor" href="#93-规范性与性能"></a> 9.3 规范性与性能</h3><ol><li><p>关联查询的表不能超过三张</p></li><li><p>考虑商业化的需求和目标，数据库的性能更加重要（成本，用户体验）</p></li><li><p>有时故意给某些表增加一些冗余的字段（从多表查询变成单表查询）</p></li><li><p>故意增加一些计算列（从大数据量降低为小数据量的查询：索引）</p></li></ol><h2 id="10-jdbc"><a class="markdownIt-Anchor" href="#10-jdbc"></a> 10. JDBC</h2><h3 id="101-数据库驱动"><a class="markdownIt-Anchor" href="#101-数据库驱动"></a> 10.1 数据库驱动</h3><p><img src="https://i.loli.net/2021/09/28/ZjxIlqaD6inSw47.png" alt="image-20210928175037123" /></p><h3 id="102-jdbc"><a class="markdownIt-Anchor" href="#102-jdbc"></a> 10.2 JDBC</h3><p>sun公司为了简化开发人员的操作（对数据库的统一），提供了一个规范（Java操作数据库），俗称JDBC。这些规范的实现由具体厂商去做</p><p>对于开发人员来说，只需要学习JDBC</p><p><img src="https://i.loli.net/2021/09/28/lgUxoqjXwuMiC5p.png" alt="image-20210928175613222" /></p><p><a href="https://blog.csdn.net/pan_junbiao/article/details/86626741">JDBC数据库驱动的下载、安装与连接</a></p><h3 id="103-第一个jdbc程序"><a class="markdownIt-Anchor" href="#103-第一个jdbc程序"></a> 10.3 第一个JDBC程序</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE `jdbcStudy` <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci;</span><br><span class="line"></span><br><span class="line">USE `jdbcStudy`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `users`(</span><br><span class="line"> `id` <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line"> `NAME` <span class="type">VARCHAR</span>(<span class="number">40</span>),</span><br><span class="line"> `PASSWORD` <span class="type">VARCHAR</span>(<span class="number">40</span>),</span><br><span class="line"> `email` <span class="type">VARCHAR</span>(<span class="number">60</span>),</span><br><span class="line"> birthday <span class="type">DATE</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `users`(`id`,`NAME`,`PASSWORD`,`email`,`birthday`)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;zhangsan&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;zs@sina.com&#x27;</span>,<span class="string">&#x27;1980-12-04&#x27;</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="string">&#x27;lisi&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;lisi@sina.com&#x27;</span>,<span class="string">&#x27;1981-12-04&#x27;</span>),</span><br><span class="line">(<span class="number">3</span>,<span class="string">&#x27;wangwu&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;wangwu@sina.com&#x27;</span>,<span class="string">&#x27;1979-12-04&#x27;</span>)</span><br></pre></td></tr></table></figure><ol><li><p>创建一个普通项目</p></li><li><p>导入数据库驱动</p><p><img src="https://i.loli.net/2021/09/28/8Ve9WmMQ3gnlxHO.png" alt="image-20210928184116758" /></p></li><li><p>代码编写</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, SQLException &#123;</span><br><span class="line">        <span class="comment">//1.加载驱动，8.0以上</span></span><br><span class="line">        <span class="comment">//DriverManager.registerDriver(new com.mysql.cj.jdbc.Driver())</span></span><br><span class="line">        Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">        <span class="comment">//2.用户信息和URL</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://localhost:3306/jdbcStudy?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true&amp;serverTimezone=GMT%2B8&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;12345678&quot;</span>;</span><br><span class="line">        <span class="comment">//3.连接成功，返回数据库对象 connection 代表数据库</span></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> DriverManager.getConnection(url, username, password);</span><br><span class="line">        <span class="comment">//4.执行SQL的对象  statement执行sql的对象</span></span><br><span class="line">        <span class="type">Statement</span> <span class="variable">statement</span> <span class="operator">=</span> connection.createStatement();</span><br><span class="line">        <span class="comment">//5.执行SQL</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select  * from `users`&quot;</span>;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            结果集中封装了全部查询结果</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> statement.executeQuery(sql);</span><br><span class="line">        <span class="keyword">while</span> (resultSet.next())&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;id = &quot;</span> + resultSet.getObject(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;name =&quot;</span> + resultSet.getObject(<span class="string">&quot;NAME&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;pwd = &quot;</span> + resultSet.getObject(<span class="string">&quot;PASSWORD&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;email = &quot;</span> + resultSet.getObject(<span class="string">&quot;email&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;birthday = &quot;</span> + resultSet.getObject(<span class="string">&quot;birthday&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//6.释放连接</span></span><br><span class="line">        connection.close();</span><br><span class="line">        statement.close();</span><br><span class="line">        resultSet.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>DriverManager</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//DriverManager.registerDriver(new com.mysql.cj.jdbc.Driver())</span></span><br><span class="line">Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);<span class="comment">//推荐使用这种</span></span><br></pre></td></tr></table></figure><blockquote><p>URL</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://localhost:3306/jdbcStudy?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true&amp;serverTimezone=GMT%2B8&quot;</span>;</span><br><span class="line"><span class="comment">//mysql -- 3306</span></span><br><span class="line"><span class="comment">//jdbc:mysql//主机地址:端口号/数据库名?参数1&amp;参数2&amp;......</span></span><br><span class="line"><span class="comment">//oralce -- 1521</span></span><br><span class="line"><span class="comment">//jdbc:oracle:thin:@localhost:</span></span><br></pre></td></tr></table></figure><blockquote><p>Statement</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from `users`&quot;</span>;<span class="comment">//SQL语句</span></span><br><span class="line">statement.executeQuery(sql);<span class="comment">//查询操作，返回结果集ResultSet</span></span><br><span class="line">statement.execute(sql);<span class="comment">//执行任何SQL，效率相对较低</span></span><br><span class="line">statement.executeUpdate(sql);<span class="comment">//更新、插入、删除，返回一个受影响的行数</span></span><br><span class="line">statement.executeBatch(sql);<span class="comment">//批量处理sql语句，一般不使用</span></span><br></pre></td></tr></table></figure><blockquote><p>ResultSet</p></blockquote><p>封装了所有数据查询结果</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取数据内容</span></span><br><span class="line"><span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> statement.executeQuery(sql);</span><br><span class="line">resultSet.getObject(<span class="string">&quot;id&quot;</span>)<span class="comment">//在不知道数据类型的情况下使用</span></span><br><span class="line">resultSet.getInt(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">resultSet.getString(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">resultSet.getFloat(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">resultSet.getDouble(<span class="string">&quot;id&quot;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//遍历，指针</span></span><br><span class="line">resultSet.beforeFirst();<span class="comment">//移动到最前面</span></span><br><span class="line">resultSet.afterLast();<span class="comment">//移动到最后</span></span><br><span class="line">resultSet.next();<span class="comment">//下移一条数据</span></span><br><span class="line">resultSet.previous();<span class="comment">//上移</span></span><br><span class="line">resultSet.absolute(<span class="number">2</span>); <span class="comment">//移动到指定行</span></span><br></pre></td></tr></table></figure><blockquote><p>释放资源</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">connection.close();</span><br><span class="line">statement.close();</span><br><span class="line">resultSet.close();</span><br></pre></td></tr></table></figure><h3 id="104-statement对象"><a class="markdownIt-Anchor" href="#104-statement对象"></a> 10.4 Statement对象</h3><blockquote><p>配置文件</p></blockquote><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#配置文件</span></span><br><span class="line"><span class="attr">driver</span> = <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span> = <span class="string">jdbc:mysql://localhost:3306/jdbcStudy?useUnicode = true&amp;characterEncoding =utf8&amp;useSSL= true &amp;serverTimezone=GMT%2B8</span></span><br><span class="line"><span class="attr">username</span> = <span class="string">root</span></span><br><span class="line"><span class="attr">password</span> = <span class="string">12345678</span></span><br></pre></td></tr></table></figure><blockquote><p>封装</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//函数封装</span></span><br><span class="line"><span class="keyword">package</span> utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jay_Soul</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JdbcUtils</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">driver</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="comment">//加载驱动，只需要加载一次</span></span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">in</span> <span class="operator">=</span> JdbcUtils.class.getClassLoader().getResourceAsStream(<span class="string">&quot;db.properties&quot;</span>);</span><br><span class="line">            <span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">            properties.load(in);</span><br><span class="line">            driver = properties.getProperty(<span class="string">&quot;driver&quot;</span>);</span><br><span class="line">            url = properties.getProperty(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">            username = properties.getProperty(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">            password = properties.getProperty(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">             Class.forName(driver);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException | ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title function_">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">        <span class="keyword">return</span>  DriverManager.getConnection(url, username, password);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">release</span><span class="params">(Connection connection, Statement statement, ResultSet resultSet)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">        <span class="keyword">if</span>  (resultSet!=<span class="literal">null</span>)&#123;</span><br><span class="line">            resultSet.close();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (statement!= <span class="literal">null</span>)&#123;</span><br><span class="line">            statement.close();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="literal">null</span>)&#123;</span><br><span class="line">            connection.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>SQL操作</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//插入操作</span></span><br><span class="line"><span class="keyword">import</span> utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jay_Soul</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestInsert</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Statement</span> <span class="variable">statement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//获取数据库连接</span></span><br><span class="line">            connection = JdbcUtils.getConnection();</span><br><span class="line">            <span class="comment">//获得SQL的执行对象</span></span><br><span class="line">            statement = connection.createStatement();</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span>  <span class="operator">=</span> <span class="string">&quot;insert into `users`(`id`, `name`, `password`, `email`, `birthday`)\n&quot;</span> +</span><br><span class="line">                    <span class="string">&quot;values(4, &#x27;Jezer&#x27;, &#x27;123456&#x27;, &#x27;jezer05@qq.com&#x27;, &#x27;2021-09-29&#x27;)&quot;</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> statement.executeUpdate(sql);</span><br><span class="line">            <span class="keyword">if</span> (res &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;插入成功！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                JdbcUtils.release(connection, statement, resultSet);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除操作</span></span><br><span class="line"><span class="keyword">import</span> utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestDelete</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Statement</span> <span class="variable">statement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//获取数据库连接</span></span><br><span class="line">            connection = JdbcUtils.getConnection();</span><br><span class="line">            <span class="comment">//获得SQL的执行对象</span></span><br><span class="line">            statement = connection.createStatement();</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span>  <span class="operator">=</span> <span class="string">&quot;delete from `users` where `id` = 4&quot;</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> statement.executeUpdate(sql);</span><br><span class="line">            <span class="keyword">if</span> (res &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;删除成功！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                JdbcUtils.release(connection, statement, resultSet);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//更新操作</span></span><br><span class="line"><span class="keyword">import</span> utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestUpdate</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Statement</span> <span class="variable">statement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//获取数据库连接</span></span><br><span class="line">            connection = JdbcUtils.getConnection();</span><br><span class="line">            <span class="comment">//获得SQL的执行对象</span></span><br><span class="line">            statement = connection.createStatement();</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span>  <span class="operator">=</span> <span class="string">&quot;update `users` set `name` = &#x27;Jay&#x27; where `name` = &#x27;Jezer&#x27;&quot;</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> statement.executeUpdate(sql);</span><br><span class="line">            <span class="keyword">if</span> (res &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;修改成功！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                JdbcUtils.release(connection, statement, resultSet);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestSelect</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Statement</span> <span class="variable">statement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">           connection = JdbcUtils.getConnection();</span><br><span class="line">           statement = connection.createStatement();</span><br><span class="line">           <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from `users` where `id` = 2&quot;</span>;</span><br><span class="line">           resultSet = statement.executeQuery(sql);</span><br><span class="line">           <span class="keyword">while</span> (resultSet.next())&#123;</span><br><span class="line">               System.out.println(resultSet.getString(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils.release(connection, statement, resultSet);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>SQL注入问题</p></blockquote><p>sql存在漏洞，会被攻击导致数据泄露</p><p>原因：sql语句会被拼接,只要判断结果为true，就可调出sql数据</p><p>解决 —&gt; PreparedStatement</p><h3 id="105-preparedstatement-对象"><a class="markdownIt-Anchor" href="#105-preparedstatement-对象"></a> 10.5 PreparedStatement 对象</h3><p><mark>可以防止SQL注入，并且效率最高</mark></p><blockquote><p>插入</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jay_Soul</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestInsert</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">preparedStatement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//获取数据库连接</span></span><br><span class="line">            connection = JdbcUtils.getConnection();</span><br><span class="line">            <span class="comment">//需要预编译SQL</span></span><br><span class="line">            <span class="comment">//使用？占位符代替参数</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span>  <span class="operator">=</span> <span class="string">&quot;insert into `users`(`id`, `name`, `password`, `email`, `birthday`) values(?, ?, ?, ?, ?)&quot;</span>;</span><br><span class="line">            preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">            <span class="comment">//手动给参数赋值(参数下标， 值)</span></span><br><span class="line">            preparedStatement.setInt(<span class="number">1</span>, <span class="number">4</span>);</span><br><span class="line">            preparedStatement.setString(<span class="number">2</span>, <span class="string">&quot;Jezer&quot;</span>);</span><br><span class="line">            preparedStatement.setString(<span class="number">3</span>, <span class="string">&quot;123456&quot;</span>);</span><br><span class="line">            preparedStatement.setString(<span class="number">4</span>, <span class="string">&quot;jezer05@qq.com&quot;</span>);</span><br><span class="line">            <span class="comment">//注意点：sql.Date 不是 util.Date</span></span><br><span class="line">            preparedStatement.setDate(<span class="number">5</span>,<span class="keyword">new</span> <span class="title class_">java</span>.sql.Date(System.currentTimeMillis()));</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> preparedStatement.executeUpdate();</span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;插入成功&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                JdbcUtils.release(connection,preparedStatement , resultSet);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>删除</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestDelete</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">preparedStatement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//获取数据库连接</span></span><br><span class="line">            connection = JdbcUtils.getConnection();</span><br><span class="line">            <span class="comment">//需要预编译SQL</span></span><br><span class="line">            <span class="comment">//使用？占位符代替参数</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span>  <span class="operator">=</span> <span class="string">&quot;delete from `users` where `id` = ?&quot;</span>;</span><br><span class="line">            preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">            <span class="comment">//手动给参数赋值(参数下标， 值)</span></span><br><span class="line">            preparedStatement.setInt(<span class="number">1</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> preparedStatement.executeUpdate();</span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;删除成功&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                JdbcUtils.release(connection,preparedStatement , resultSet);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>更新</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestUpdate</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">preparedStatement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//获取数据库连接</span></span><br><span class="line">            connection = JdbcUtils.getConnection();</span><br><span class="line">            <span class="comment">//需要预编译SQL</span></span><br><span class="line">            <span class="comment">//使用？占位符代替参数</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span>  <span class="operator">=</span> <span class="string">&quot;update `users` set `name` = ? where `id` = ?&quot;</span>;</span><br><span class="line">            preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">            <span class="comment">//手动给参数赋值(参数下标， 值)</span></span><br><span class="line">            preparedStatement.setString(<span class="number">1</span>, <span class="string">&quot;Jezer&quot;</span>);</span><br><span class="line">            preparedStatement.setInt(<span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> preparedStatement.executeUpdate();</span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;更新成功&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                JdbcUtils.release(connection,preparedStatement , resultSet);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>查询</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">import utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line">import java.sql.<span class="operator">*</span>;</span><br><span class="line"></span><br><span class="line">public class TestSelect &#123;</span><br><span class="line">    public <span class="keyword">static</span> void main(String[] args) &#123;</span><br><span class="line">        Connection connection <span class="operator">=</span> <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement preparedStatement <span class="operator">=</span> <span class="keyword">null</span>;</span><br><span class="line">        ResultSet resultSet <span class="operator">=</span> <span class="keyword">null</span>;</span><br><span class="line">        try &#123;</span><br><span class="line">            <span class="operator">/</span><span class="operator">/</span>获取数据库连接</span><br><span class="line">            connection <span class="operator">=</span> JdbcUtils.getConnection();</span><br><span class="line">            <span class="operator">/</span><span class="operator">/</span>需要预编译<span class="keyword">SQL</span></span><br><span class="line">            <span class="operator">/</span><span class="operator">/</span>使用？占位符代替参数</span><br><span class="line">            String <span class="keyword">sql</span>  <span class="operator">=</span> &quot;select * from `users` where `id` = ?&quot;;</span><br><span class="line">            preparedStatement <span class="operator">=</span> connection.prepareStatement(<span class="keyword">sql</span>);</span><br><span class="line">            <span class="operator">/</span><span class="operator">/</span>手动给参数赋值(参数下标， 值)</span><br><span class="line">            preparedStatement.setInt(<span class="number">1</span>, <span class="number">3</span>);</span><br><span class="line">            resultSet <span class="operator">=</span> preparedStatement.executeQuery();</span><br><span class="line">            if (resultSet.next()) &#123;</span><br><span class="line">                System.out.println(resultSet.getString(&quot;name&quot;));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (<span class="keyword">SQLException</span> e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;finally &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                JdbcUtils.release(connection,preparedStatement , resultSet);</span><br><span class="line">            &#125; catch (<span class="keyword">SQLException</span> e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><mark>PreparedStatement防止注入的本质：将传递的参数当做字符，假设其中存在转义字符，比如说’'会被直接忽略</mark></p><h3 id="106-idea连接数据库"><a class="markdownIt-Anchor" href="#106-idea连接数据库"></a> 10.6 IDEA连接数据库</h3><p><a href="https://www.bilibili.com/video/BV1NJ411J79W?p=43&amp;share_source=copy_web">视频地址</a></p><p><img src="https://i.loli.net/2021/09/29/UNDx4r8jnuikysT.png" alt="image-20210929153753338" /></p><p><img src="https://i.loli.net/2021/09/29/zWOIQKdZfN9Ugqy.png" alt="image-20210929154556490" /></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jdbc:mysql://localhost:3306/ssmbuild?serverTimezone=Asia/Shanghai&amp;useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/09/29/SguBw2MmQTWKqxz.png" alt="image-20210929155359479" /></p><h3 id="107-jdbc处理事务"><a class="markdownIt-Anchor" href="#107-jdbc处理事务"></a> 10.7 JDBC处理事务</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestTransation01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">preparedStatement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            connection = JdbcUtils.getConnection();</span><br><span class="line">            <span class="comment">//关闭数据库自动提交，开启事务</span></span><br><span class="line">            connection.setAutoCommit(<span class="literal">false</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql1</span> <span class="operator">=</span> <span class="string">&quot;update `account` set `money` = `money` - 500 where `name` = &#x27;A&#x27;&quot;</span>;</span><br><span class="line">            preparedStatement= connection.prepareStatement(sql1);</span><br><span class="line">            preparedStatement.executeUpdate();</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql2</span> <span class="operator">=</span> <span class="string">&quot;update `account` set `money` = `money` + 500 where `name` = &#x27;B&#x27;&quot;</span>;</span><br><span class="line">            preparedStatement= connection.prepareStatement(sql2);</span><br><span class="line">            preparedStatement.executeUpdate();</span><br><span class="line">            <span class="comment">//业务完毕，提交事务</span></span><br><span class="line">            connection.commit();</span><br><span class="line">            System.out.println(<span class="string">&quot;操作成功！&quot;</span>);</span><br><span class="line">            <span class="comment">//恢复自动提交</span></span><br><span class="line">            connection.setAutoCommit(<span class="literal">true</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            <span class="comment">//此处没有回滚语句，一旦失败也会默认回滚</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.rollback();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                JdbcUtils.release(connection, preparedStatement, resultSet);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="108-数据库连接池"><a class="markdownIt-Anchor" href="#108-数据库连接池"></a> 10.8 数据库连接池</h3><blockquote><p>著名连接池</p></blockquote><p>DBCP</p><p>C3P0</p><p>Druid：阿里巴巴</p><p><mark>编写连接池，实现一个接口 DataSource</mark></p><blockquote><p>DBCP</p></blockquote><p><a href="https://blog.csdn.net/a805814077/article/details/100545928?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163291260916780264048614%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=163291260916780264048614&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-100545928.pc_search_ecpm_flag&amp;utm_term=maven%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE&amp;spm=1018.2226.3001.4187">Maven安装与配置</a></p><p><a href="https://blog.csdn.net/weixin_43232955/article/details/97840767?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163291523116780366539813%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=163291523116780366539813&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-97840767.pc_search_ecpm_flag&amp;utm_term=maven%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AEidea&amp;spm=1018.2226.3001.4187">Maven安装配置及在idea中配置</a></p><p>需要用到的jar包</p><ul><li><p>mysql-connector-java.jar（JDBC驱动包）</p></li><li><p>commons-dbcp-1.4.jar</p></li><li><p>commons-pool-1.6.jar</p></li></ul><p>在pom.xml中下载依赖项</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.26<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-dbcp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-dbcp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-pool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-pool<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>创建</strong><code>dbcpconfig.properties</code></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># dbcpconfig.properties</span></span><br><span class="line"><span class="comment">#连接设置 这里的名字是DBCP数据源中定义好的</span></span><br><span class="line"><span class="attr">driverClassName</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://localhost:3306/jdbcstudy?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true&amp;serverTimezone=GMT%2B8</span></span><br><span class="line"><span class="attr">username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">12345678</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#!-- 初始化连接 --</span></span><br><span class="line"><span class="attr">initialSize</span>=<span class="string">10</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#最大连接数量</span></span><br><span class="line"><span class="attr">maxActive</span>=<span class="string">50</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#!-- 最大空闲连接 --</span></span><br><span class="line"><span class="attr">maxIdle</span>=<span class="string">20</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#!-- 最小空闲连接 --</span></span><br><span class="line"><span class="attr">minIdle</span>=<span class="string">5</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#!-- 超时等待时间以毫秒为单位 6000毫秒/1000等于60秒 --</span></span><br><span class="line"><span class="attr">maxWait</span>=<span class="string">60000</span></span><br><span class="line"><span class="comment">#JDBC驱动建立连接时附带的连接属性属性的格式必须为这样：【属性名=property;】</span></span><br><span class="line"><span class="comment">#注意：user 与 password 两个属性会被明确地传递，因此这里不需要包含他们。</span></span><br><span class="line"><span class="attr">connectionProperties</span>=<span class="string">useUnicode=true;characterEncoding=UTF8</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#指定由连接池所创建的连接的自动提交（auto-commit）状态。</span></span><br><span class="line"><span class="attr">defaultAutoCommit</span>=<span class="string">true</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#driver default 指定由连接池所创建的连接的只读（read-only）状态。</span></span><br><span class="line"><span class="comment">#如果没有设置该值，则“setReadOnly”方法将不被调用。（某些驱动并不支持只读模式，如：Informix）</span></span><br><span class="line"><span class="attr">defaultReadOnly</span>=<span class="string"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#driver default 指定由连接池所创建的连接的事务级别（TransactionIsolation）。</span></span><br><span class="line"><span class="comment">#可用值为下列之一：（详情可见javadoc。）NONE,READ_UNCOMMITTED, READ_COMMITTED, REPEATABLE_READ, SERIALIZABLE</span></span><br><span class="line"><span class="attr">defaultTransactionIsolation</span>=<span class="string">READ_UNCOMMITTED</span></span><br></pre></td></tr></table></figure><p><strong>在utils下创建</strong><code>JdbcUtils_DBCP</code>配置文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbcp.BasicDataSource;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbcp.BasicDataSourceFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> javax.swing.plaf.nimbus.State;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jay_Soul</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JdbcUtils_DBCP</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">DataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">in</span>  <span class="operator">=</span> JdbcUtils_DBCP.class.getClassLoader().getResourceAsStream(<span class="string">&quot;dbcpconfig.properties&quot;</span>);</span><br><span class="line">            <span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">            properties.load(in);</span><br><span class="line">            <span class="comment">//创建数据源 工厂模式 ---&gt; 创建对象</span></span><br><span class="line">            dataSource = BasicDataSourceFactory.createDataSource(properties);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取连接</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title function_">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">        <span class="keyword">return</span> dataSource.getConnection();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//释放链接</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">release</span><span class="params">(Connection connection, Statement statement, ResultSet resultSet)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (resultSet!=<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resultSet.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (statement != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                statement.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>实现代码</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> utils.JdbcUtils_DBCP;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jay_Soul</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestDBCP</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Statement</span> <span class="variable">statement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            connection = JdbcUtils_DBCP.getConnection();</span><br><span class="line">            statement = connection.createStatement();</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from `users` where `id` = 2&quot;</span>;</span><br><span class="line">            resultSet = statement.executeQuery(sql);</span><br><span class="line">            <span class="keyword">while</span> (resultSet.next())&#123;</span><br><span class="line">                System.out.println(resultSet.getString(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils_DBCP.release(connection, statement, resultSet);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>C3P0</p></blockquote><p><strong>在</strong><code>pom.xml</code>导入外部库</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-dbutils<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-dbutils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mchange<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.26<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>创建<code>c3p0-config.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c3p0-config</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--默认配置。详细配置可查阅在线文档：https://tool.oschina.net/apidocs/apidoc?api=c3p0 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">default-config</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initialPoolSize&quot;</span>&gt;</span>10<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxIdleTime&quot;</span>&gt;</span>30<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxPoolSize&quot;</span>&gt;</span>100<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minPoolSize&quot;</span>&gt;</span>10<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxStatements&quot;</span>&gt;</span>200<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">default-config</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置连接池mysql--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">named-config</span> <span class="attr">name</span>=<span class="string">&quot;MySQL&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span>&gt;</span>com.mysql.cj.jdbc.Driver<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span>&gt;</span>jdbc:mysql://localhost:3306/jdbcStudy?serverTimezone=GMT%2b8<span class="symbol">&amp;amp;</span>useUnicode=true<span class="symbol">&amp;amp;</span>characterEncoding=utf8<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>12345678<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initialPoolSize&quot;</span>&gt;</span>10<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxIdleTime&quot;</span>&gt;</span>30<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxPoolSize&quot;</span>&gt;</span>100<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minPoolSize&quot;</span>&gt;</span>10<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxStatements&quot;</span>&gt;</span>200<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">named-config</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">c3p0-config</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>在utils下创建</strong><code>JdbcUtils_C3P0.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mchange.v2.c3p0.ComboPooledDataSource;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbcp.BasicDataSourceFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.CommonDataSource;</span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jay_Soul</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JdbcUtils_C3P0</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">ComboPooledDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="comment">/*代码配置,一般不用</span></span><br><span class="line"><span class="comment">            dataSource = new ComboPooledDataSource(&quot;MySQL&quot;);</span></span><br><span class="line"><span class="comment">            dataSource.setDriverClass(&quot;driverClass&quot;);</span></span><br><span class="line"><span class="comment">            dataSource.setJdbcUrl(&quot;jdbcUrl&quot;);</span></span><br><span class="line"><span class="comment">            dataSource.setUser(&quot;user&quot;);</span></span><br><span class="line"><span class="comment">            dataSource.setPassword(&quot;password&quot;);</span></span><br><span class="line"><span class="comment">            dataSource.setMaxPoolSize();</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">            <span class="comment">//配置文件写法</span></span><br><span class="line">            dataSource = <span class="keyword">new</span> <span class="title class_">ComboPooledDataSource</span>(<span class="string">&quot;MySQL&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取连接</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title function_">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">        <span class="keyword">return</span> dataSource.getConnection();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//释放链接</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">release</span><span class="params">(Connection connection, Statement statement, ResultSet resultSet)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (resultSet!=<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resultSet.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (statement != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                statement.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> utils.JdbcUtils_C3P0;</span><br><span class="line"><span class="keyword">import</span> utils.JdbcUtils_DBCP;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jay_Soul</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestC3P0</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Statement</span> <span class="variable">statement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            connection = JdbcUtils_C3P0.getConnection();</span><br><span class="line">            statement = connection.createStatement();</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from `users` where `id` = 2&quot;</span>;</span><br><span class="line">            resultSet = statement.executeQuery(sql);</span><br><span class="line">            <span class="keyword">while</span> (resultSet.next())&#123;</span><br><span class="line">                System.out.println(resultSet.getString(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils_C3P0.release(connection, statement, resultSet);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>结论</p></blockquote><p>无论使用什么数据源，本质还是一样，DataSource接口不会变</p><p><a href="https://www.apache.org/">Apache</a></p>]]></content>
      
      
      <categories>
          
          <category> 拓展知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简易图书管理系统</title>
      <link href="/posts/a292bab1/"/>
      <url>/posts/a292bab1/</url>
      
        <content type="html"><![CDATA[<div class="tip home faa-horizontal animated"><p>该文主要阐述如何用C++实现简易图书管理系统，实现算法较为暴力，但各功能齐全，适合新手编写</p></div><details class="folding-tag" ><summary> 点击查看源码 </summary>              <div class='content'>              <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> MAXSIZE = <span class="number">10</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OK  1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR  0</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Status;</span><br><span class="line"><span class="keyword">typedef</span>  <span class="keyword">struct</span> <span class="title class_">Book</span>&#123;</span><br><span class="line">    string id; <span class="comment">//图书编号</span></span><br><span class="line">    string name;  <span class="comment">//图书名称</span></span><br><span class="line">    string press;  <span class="comment">//出版社</span></span><br><span class="line">    <span class="type">int</span>  count;  <span class="comment">//图书数量</span></span><br><span class="line">    string author;  <span class="comment">//图书作者</span></span><br><span class="line">    <span class="type">double</span> price;  <span class="comment">//图书价格</span></span><br><span class="line">&#125; Book; <span class="comment">// 书籍结点</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> &#123;</span><br><span class="line">    Book *books;</span><br><span class="line">    <span class="type">int</span> length; <span class="comment">//图书种类数</span></span><br><span class="line">&#125;BookList; <span class="comment">//图书类别信息</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">readFile</span><span class="params">(BookList &amp; bookList)</span></span>;</span><br><span class="line"><span class="function">Status <span class="title">save</span><span class="params">(<span class="type">const</span> BookList &amp; bookList)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">queryBook</span><span class="params">(<span class="type">const</span> BookList &amp; bookList, string value, <span class="type">int</span> flag, <span class="type">bool</span> isNeedPrint)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printOne</span><span class="params">(<span class="type">const</span> Book &amp; book)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printAll</span><span class="params">(<span class="type">const</span> BookList &amp;bookList)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">deleteBook</span><span class="params">(BookList &amp; bookList, string id)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">addBook</span><span class="params">(BookList &amp; bookList)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">modifyBook</span><span class="params">(BookList &amp; bookList)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insertSort</span><span class="params">(BookList &amp; bookList, <span class="type">int</span> flag)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">classify</span><span class="params">(<span class="type">const</span> BookList &amp; bookList)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">extend</span><span class="params">(BookList &amp; bookList)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">menu</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">readFile</span><span class="params">(BookList &amp; bookList)</span></span>&#123;</span><br><span class="line">    string filename;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入需要读入的文件名：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; filename;</span><br><span class="line">    <span class="function">ifstream <span class="title">infile</span><span class="params">(filename)</span></span>;</span><br><span class="line">    <span class="keyword">if</span> (!infile.<span class="built_in">is_open</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;文件读入失败，请重试！&quot;</span>  &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> length = bookList.length;</span><br><span class="line">    <span class="comment">//数据预读入，可能会遇到空间不足问题</span></span><br><span class="line">    <span class="keyword">while</span> (!infile.<span class="built_in">eof</span>() &amp;&amp; length &lt; MAXSIZE)</span><br><span class="line">    &#123;</span><br><span class="line">        infile &gt;&gt; bookList.books[length].id &gt;&gt; bookList.books[length].name &gt;&gt; bookList.books[length].press &gt;&gt; bookList.books[length].count</span><br><span class="line">        &gt;&gt; bookList.books[length].author &gt;&gt; bookList.books[length].price;</span><br><span class="line">        ++length;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!infile.<span class="built_in">eof</span>())</span><br><span class="line">        <span class="comment">//无需删除元素，因为之后所有的操作都是根据bookList.length为索引，只要该值不变，内容就可理解为无变化</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;空间不足，读入失败！请先扩充空间！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        bookList.length = length;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;文件读入成功&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    infile.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">save</span><span class="params">(<span class="type">const</span> BookList &amp; bookList)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string filename;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入需要保存到的文件名：&quot;</span>;</span><br><span class="line">    cin &gt;&gt; filename;</span><br><span class="line">    <span class="function">ofstream <span class="title">outfile</span><span class="params">(filename)</span></span>;</span><br><span class="line">    <span class="keyword">if</span> (!outfile.<span class="built_in">is_open</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;文件保存失败，是否退出（Y/N)：&quot;</span>;</span><br><span class="line">        <span class="type">char</span> choice;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&#x27;Y&#x27;</span> == choice || <span class="string">&#x27;y&#x27;</span> == choice)</span><br><span class="line">            <span class="keyword">return</span> OK;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> length = bookList.length;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; length; ++i)</span><br><span class="line">            outfile &lt;&lt; bookList.books[i].id &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; bookList.books[i].name &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; bookList.books[i].press &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; bookList.books[i].count &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">            &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; bookList.books[i].author &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; bookList.books[i].price &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;文件保存成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> OK;</span><br><span class="line">    &#125;</span><br><span class="line">    outfile.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// flag = 0, 表示根据id查询；</span></span><br><span class="line"><span class="comment">// flag = 1, 表示根据图书名字查询；</span></span><br><span class="line"><span class="comment">// isNeedPrint, true表示需要打印信息;</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">queryBook</span><span class="params">(<span class="type">const</span> BookList &amp; bookList, string value, <span class="type">int</span> flag, <span class="type">bool</span> isNeedPrint)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> length = bookList.length;</span><br><span class="line">    <span class="comment">//id查询不可能重复</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="number">0</span> == flag)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">            <span class="keyword">if</span> (value == bookList.books[i].id)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (isNeedPrint)</span><br><span class="line">                    <span class="built_in">printOne</span>(bookList.books[i]);</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">if</span> (isNeedPrint)</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;对不起，查无此书!&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//书名查询可能重复</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">1</span> == flag)</span><br><span class="line">    &#123;</span><br><span class="line">        Book temp[bookList.length];</span><br><span class="line">        <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">            <span class="keyword">if</span> (value == bookList.books[i].name)</span><br><span class="line">            &#123;</span><br><span class="line">                temp[count] = bookList.books[i];</span><br><span class="line">                count ++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> == count)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (isNeedPrint)</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;对不起，查无此书!&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (isNeedPrint)</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; count; i++)</span><br><span class="line">                    <span class="built_in">printOne</span>(temp[i]);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printAll</span><span class="params">(<span class="type">const</span> BookList &amp;bookList)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> length = bookList.length;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; length; ++i)</span><br><span class="line">        <span class="built_in">printOne</span>(bookList.books[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printOne</span><span class="params">(<span class="type">const</span> Book &amp; book)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;书籍ID：&quot;</span> &lt;&lt; book.id &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;书籍名称：&quot;</span> &lt;&lt; book.name &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;书籍出版社：&quot;</span> &lt;&lt; book.press &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;书籍数量：&quot;</span> &lt;&lt; book.count &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;书籍作者：&quot;</span> &lt;&lt; book.author &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;书籍价格：&quot;</span> &lt;&lt; book.price &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">deleteBook</span><span class="params">(BookList &amp; bookList, string id)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> position = <span class="built_in">queryBook</span>(bookList, id, <span class="number">0</span>, <span class="literal">false</span>);</span><br><span class="line">    <span class="type">int</span> length = bookList.length;</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">-1</span> != position)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = position; i &lt; length - <span class="number">1</span>; i++)</span><br><span class="line">            bookList.books[i] = bookList.books[i + <span class="number">1</span>];</span><br><span class="line">        bookList.length --;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;文件删除成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;对不起， 查无此书！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">addBook</span><span class="params">(BookList &amp; bookList)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> length = bookList.length;</span><br><span class="line">    <span class="keyword">if</span> (length &gt;= MAXSIZE)</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;空间已满，请先开拓空间！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请依次输入id、书名、出版社、数量、作者、价格&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; bookList.books[length].id &gt;&gt; bookList.books[length].name &gt;&gt; bookList.books[length].press</span><br><span class="line">        &gt;&gt; bookList.books[length].count &gt;&gt; bookList.books[length].author &gt;&gt; bookList.books[length].price;</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">-1</span> != <span class="built_in">queryBook</span>(bookList, bookList.books[length].id, <span class="number">0</span>, <span class="literal">false</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;信息添加失败，已存在同id书籍&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        bookList.length ++;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;书籍添加成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">modifyBook</span><span class="params">(BookList &amp; bookList)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string id;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入需要修改的书籍id：&quot;</span>;</span><br><span class="line">    cin &gt;&gt; id;</span><br><span class="line">    <span class="type">int</span> position = <span class="built_in">queryBook</span>(bookList, id , <span class="number">0</span>, <span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">if</span> (position == <span class="number">-1</span>)</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;对不起，查无此书&quot;</span> &lt;&lt;endl;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">char</span> choice;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;当前书籍名为：&quot;</span> &lt;&lt; bookList.books[position].name &lt;&lt; <span class="string">&quot;，是否要修改(Y/N): &quot;</span>;</span><br><span class="line">        cin &gt;&gt; choice;</span><br><span class="line">        <span class="keyword">if</span> (choice == <span class="string">&#x27;Y&#x27;</span> || choice == <span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;请输入新书名：&quot;</span>;</span><br><span class="line">            cin &gt;&gt; bookList.books[position].name;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;当前书籍出版社为：&quot;</span> &lt;&lt; bookList.books[position].press &lt;&lt; <span class="string">&quot;，是否要修改(Y/N): &quot;</span>;</span><br><span class="line">        cin &gt;&gt; choice;</span><br><span class="line">        <span class="keyword">if</span> (choice == <span class="string">&#x27;Y&#x27;</span> || choice == <span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;请输入新出版社：&quot;</span>;</span><br><span class="line">            cin &gt;&gt; bookList.books[position].press;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;当前书籍数量为：&quot;</span> &lt;&lt; bookList.books[position].count &lt;&lt; <span class="string">&quot;，是否要修改(Y/N): &quot;</span>;</span><br><span class="line">        cin &gt;&gt; choice;</span><br><span class="line">        <span class="keyword">if</span> (choice == <span class="string">&#x27;Y&#x27;</span> || choice == <span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;请输入新数量：&quot;</span>;</span><br><span class="line">            cin &gt;&gt; bookList.books[position].count;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;当前书籍作者为：&quot;</span> &lt;&lt; bookList.books[position].author &lt;&lt; <span class="string">&quot;，是否要修改(Y/N): &quot;</span>;</span><br><span class="line">        cin &gt;&gt; choice;</span><br><span class="line">        <span class="keyword">if</span> (choice == <span class="string">&#x27;Y&#x27;</span> || choice == <span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;请输入新作者：&quot;</span>;</span><br><span class="line">            cin &gt;&gt; bookList.books[position].author;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;当前书籍价格为：&quot;</span> &lt;&lt; bookList.books[position].price &lt;&lt; <span class="string">&quot;，是否要修改(Y/N): &quot;</span>;</span><br><span class="line">        cin &gt;&gt; choice;</span><br><span class="line">        <span class="keyword">if</span> (choice == <span class="string">&#x27;Y&#x27;</span> || choice == <span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;请输入新价格：&quot;</span>;</span><br><span class="line">            cin &gt;&gt; bookList.books[position].price;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;信息修改完毕！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;修改后内容为：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">printOne</span>(bookList.books[position]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//flag = 0, 代表按照ID排序</span></span><br><span class="line"><span class="comment">//flag = 1，代表按照价格排序</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insertSort</span><span class="params">(BookList &amp; bookList, <span class="type">int</span> flag)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (bookList.length == <span class="number">0</span>)</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;当前数据为空&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (bookList.length == <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> length = bookList.length;</span><br><span class="line">        <span class="keyword">if</span> (flag == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> i, j;</span><br><span class="line">            <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; length; ++i)</span><br><span class="line">                <span class="keyword">if</span> (bookList.books[i].id &lt; bookList.books[i - <span class="number">1</span>].id)</span><br><span class="line">                &#123;</span><br><span class="line">                    Book temp = bookList.books[i];</span><br><span class="line">                    <span class="keyword">for</span> (j = i - <span class="number">1</span>; j &gt;= <span class="number">0</span> &amp;&amp; temp.id &lt; bookList.books[j].id; --j)</span><br><span class="line">                        bookList.books[j + <span class="number">1</span>] = bookList.books[j];</span><br><span class="line">                    bookList.books[j + <span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;已经按照ID升序完成排序！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (flag == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> i, j;</span><br><span class="line">            <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; length; ++i)</span><br><span class="line">                <span class="keyword">if</span> (bookList.books[i].price &lt; bookList.books[i - <span class="number">1</span>].price)</span><br><span class="line">                &#123;</span><br><span class="line">                    Book temp = bookList.books[i];</span><br><span class="line">                    <span class="keyword">for</span> (j = i - <span class="number">1</span>; j &gt;= <span class="number">0</span> &amp;&amp; temp.price &lt; bookList.books[j].price; --j)</span><br><span class="line">                        bookList.books[j + <span class="number">1</span>] = bookList.books[j];</span><br><span class="line">                    bookList.books[j + <span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;已按照价格升序完成排序！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">classify</span><span class="params">(<span class="type">const</span> BookList &amp; bookList)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> length = bookList.length;</span><br><span class="line">    <span class="keyword">if</span> (bookList.length == <span class="number">0</span>)</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;当前数据为空&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> i ,j;</span><br><span class="line">        Book *books = <span class="keyword">new</span> Book[length];</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; length; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            books[i] = bookList.books[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; length; ++i)</span><br><span class="line">            <span class="keyword">if</span> (books[i].press &lt; books[i - <span class="number">1</span>].press)</span><br><span class="line">            &#123;</span><br><span class="line">                Book temp = books[i];</span><br><span class="line">                <span class="keyword">for</span> (j = i - <span class="number">1</span>; j &gt;= <span class="number">0</span> &amp;&amp; temp.press &lt; books[j].press; --j)</span><br><span class="line">                    books[j + <span class="number">1</span>] = books[j];</span><br><span class="line">                books[j + <span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; books[<span class="number">0</span>].press &lt;&lt; <span class="string">&quot;：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">printOne</span>(books[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; length; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (books[i - <span class="number">1</span>].press != books[i].press)</span><br><span class="line">                cout &lt;&lt; books[i].press &lt;&lt; <span class="string">&quot;：&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="built_in">printOne</span>(books[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">delete</span>[] books;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">extend</span><span class="params">(BookList &amp; bookList)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    MAXSIZE *= <span class="number">2</span>;</span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> length = bookList.length;</span><br><span class="line">    Book *books = <span class="keyword">new</span> Book[length];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; length; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        books[i] = bookList.books[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">delete</span>[] bookList.books;</span><br><span class="line">    bookList.books = <span class="keyword">new</span> Book[MAXSIZE];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; length; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        bookList.books[i] = books[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">delete</span>[] books;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;空间已扩大两倍&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">menu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;============1. 文件读入================&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;============2. 根据ID查询==============&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;============3. 根据书名查询=============&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;============4. 添加书籍================&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;============5. 删除书籍================&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;============6. 修改书籍================&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;============7. 根据ID排序==============&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;============8. 根据价格排序=============&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;============9. 分类打印=================&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;============10. 打印全部信息=============&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;============11. 保存====================&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;============12. 扩容====================&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;============0. 退出====================&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请选择：&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    BookList  bookList;</span><br><span class="line">    bookList.length = <span class="number">0</span>;</span><br><span class="line">    bookList.books = <span class="keyword">new</span> Book[MAXSIZE];</span><br><span class="line">    <span class="built_in">readFile</span>(bookList);</span><br><span class="line">    <span class="type">int</span> choice = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (choice)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">menu</span>();</span><br><span class="line">        cin &gt;&gt; choice;</span><br><span class="line">        <span class="keyword">switch</span> (choice) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:&#123;</span><br><span class="line">                <span class="built_in">readFile</span>(bookList);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:&#123;</span><br><span class="line">                string value;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;请输入ID：&quot;</span>;</span><br><span class="line">                cin &gt;&gt; value;</span><br><span class="line">                <span class="built_in">queryBook</span>(bookList, value, <span class="number">0</span>, <span class="literal">true</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:&#123;</span><br><span class="line">                string value;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;请输入书名：&quot;</span>;</span><br><span class="line">                cin &gt;&gt; value;</span><br><span class="line">                <span class="built_in">queryBook</span>(bookList, value, <span class="number">1</span>, <span class="literal">true</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:&#123;</span><br><span class="line">                <span class="built_in">addBook</span>(bookList);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:&#123;</span><br><span class="line">                string id;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;请输入需要删除的书籍ID：&quot;</span>;</span><br><span class="line">                cin &gt;&gt; id;</span><br><span class="line">                <span class="built_in">deleteBook</span>(bookList, id);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:&#123;</span><br><span class="line">                <span class="built_in">modifyBook</span>(bookList);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:&#123;</span><br><span class="line">                <span class="built_in">insertSort</span>(bookList, <span class="number">0</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:&#123;</span><br><span class="line">                <span class="built_in">insertSort</span>(bookList, <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:&#123;</span><br><span class="line">                <span class="built_in">classify</span>(bookList);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">10</span>:&#123;</span><br><span class="line">                <span class="built_in">printAll</span>(bookList);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">11</span>:&#123;</span><br><span class="line">                <span class="built_in">save</span>(bookList);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">12</span>:&#123;</span><br><span class="line">                <span class="built_in">extend</span>(bookList);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:&#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">save</span>(bookList))</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">default</span>:&#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;请输入正确指令!&quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>              </div>            </details><h2 id="写在前面"><a class="markdownIt-Anchor" href="#写在前面"></a> 写在前面</h2><div class="tabs" id="head"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#head-1">数据结构</button></li><li class="tab"><button type="button" data-href="#head-2">测试数据</button></li><li class="tab"><button type="button" data-href="#head-3">设计要求</button></li><li class="tab"><button type="button" data-href="#head-4">功能菜单</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="head-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span>  <span class="keyword">struct</span> <span class="title class_">Book</span>&#123;</span><br><span class="line">    string id; <span class="comment">//图书编号</span></span><br><span class="line">    string name;  <span class="comment">//图书名称</span></span><br><span class="line">    string press;  <span class="comment">//出版社</span></span><br><span class="line">    <span class="type">int</span>  count;  <span class="comment">//图书数量</span></span><br><span class="line">    string author;  <span class="comment">//图书作者</span></span><br><span class="line">    <span class="type">double</span> price;  <span class="comment">//图书价格</span></span><br><span class="line">&#125; Book; <span class="comment">// 书籍结点</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> &#123;</span><br><span class="line">    Book *books;</span><br><span class="line">    <span class="type">int</span> length; <span class="comment">//图书种类数</span></span><br><span class="line">&#125;BookList; <span class="comment">//图书类别信息</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="head-2"><p>9787302257646 程序设计基础 清华大学出版社 100 李冬梅 86.7<br />9787302219972 单片机技术及应用 清华大学出版社 23 张琪 76.4<br />9787302203513 编译原理 人民邮电出版社 322 尹建新 43.6<br />9787811234923 汇编语言程序设计教程 清华大学出版社 99 易晓梅 74.2<br />9787811234927 汇编语言程序设计教程 人民邮电出版社 70 张云云 45.4<br />9787512100831 计算机操作系统 人民邮电出版社23423 严蔚敏 67.5<br />9787302265436 计算机导论实验指导 电子工业出版社967 李冬梅 78.9<br />9787302180630 实用数据结构 清华大学出版社 13243吴伟明 23.8<br />9787302225065 数据结构（C语言版） 清华大学出版社 23434 郑丽 89.7<br />9787302171676 C#面向对象程序设计 人民邮电出版社1234 董源 83.3<br />9787302250692 C语言程序设计 电子工业出版社 99 耿素宇 23.45<br />9787302150664 数据库原理 电子工业出版社 678 屈婉玲 90.5<br />9787302260806 ava编程与实践 西安电子科技大学 90 张量 76.32<br />9787302252887 Java程序设计与应用教程 西安电子科技大学 88 唐晓丹 56.4<br />9787302198505 嵌入式操作系统及编程西安电子科技大学 1234 梁红兵 87.1<br />9787302169666 软件测试 电子工业出版社 675 魈 99.2<br />9787811231557 Eclipse基础与应用 西安电子科技大学 9344 钟离 64.2</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="head-3"><p>请设计一个图书馆信息管理系统。通过该系统，可以方便查询图书馆中的图书信息（ID 号（图 书编号），图书名字，出版社，图书数量，图书作者，图书价格等）。<br />1、 基本要求<br />(1). 根据 ID 号查询图书信息；<br />(2). 根据图书名字查询图书信息；<br />(3). 显示系统中所有图书信息；<br />(4). 往系统中添加一个图书信息；<br />(5). 从系统中删除一个图书信息；<br />(6). 程序退出时将系统中所有图书信息保存到文件中；<br />(7). 程序启动时将文件中所有图书信息读入程序中。<br />2、 扩展要求<br />(1). 系统中所有图书按 ID 号排序；<br />(2). 系统中所有图书按价格排序；<br />(3). 按图书出版社，分类显示系统中的图书信息；<br />(4). 修改书籍信息。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="head-4"><p><img src="https://pic.imgdb.cn/item/61ca824e2ab3f51d9194127d.png" alt="功能菜单" /></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="功能模块一文件读入"><a class="markdownIt-Anchor" href="#功能模块一文件读入"></a> 功能模块一：文件读入</h2><div class="tip success"><p>功能模块一：文件读入</p></div><div class="tabs" id="readfile"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#readfile-1">源码</button></li><li class="tab"><button type="button" data-href="#readfile-2">功能分析</button></li><li class="tab"><button type="button" data-href="#readfile-3">运行演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="readfile-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">readFile</span><span class="params">(BookList &amp; bookList)</span></span>&#123;</span><br><span class="line">    string filename;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入需要读入的文件名：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; filename;</span><br><span class="line">    <span class="function">ifstream <span class="title">infile</span><span class="params">(filename)</span></span>;</span><br><span class="line">    <span class="keyword">if</span> (!infile.<span class="built_in">is_open</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;文件读入失败，请重试！&quot;</span>  &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> length = bookList.length;</span><br><span class="line">    <span class="comment">//数据预读入，可能会遇到空间不足问题</span></span><br><span class="line">    <span class="keyword">while</span> (!infile.<span class="built_in">eof</span>() &amp;&amp; length &lt; MAXSIZE)</span><br><span class="line">    &#123;</span><br><span class="line">        infile &gt;&gt; bookList.books[length].id &gt;&gt; bookList.books[length].name &gt;&gt; bookList.books[length].press &gt;&gt; bookList.books[length].count</span><br><span class="line">        &gt;&gt; bookList.books[length].author &gt;&gt; bookList.books[length].price;</span><br><span class="line">        ++length;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!infile.<span class="built_in">eof</span>())</span><br><span class="line">        <span class="comment">//无需删除元素，因为之后所有的操作都是根据bookList.length为索引，只要该值不变，内容就可理解为无变化</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;空间不足，读入失败！请先扩充空间！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        bookList.length = length;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;文件读入成功&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    infile.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="readfile-2"><p>采用ifstream读入二进制文本，系统开启时默认会动态分配MAXSIZE空间用来存储数据信息，如果分配空间不足以读入该文件，<span class='p red'>bookList.length</span>并不会发生变化，可以简单理解为没有读入信息(注意length和bookList.length的区别)。当然，空间不足可以通过<u>功能菜单12</u>进行扩容。之后的所有操作都是以<span class='p red'>bookList.length</span>为索引进行的，原理类似于<span class='p green'>bookList.length</span>的top指针。那可能会问了，这不是浪费空间吗？其实在一开始就已经<span class='p cyan'>浪费</span>了，因为系统开机就已经动态分配默认大小的空间了，当然这也是一个可以优化的点。这里是从bookList.length进行填加，并不会覆盖之前的数据。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="readfile-3"><p><img src="https://pic.imgdb.cn/item/61ca75442ab3f51d9189e62e.png" alt="文件读入运行截图" /></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="功能模块二数据保存"><a class="markdownIt-Anchor" href="#功能模块二数据保存"></a> 功能模块二：数据保存</h2><div class="tip success"><p>功能模块二：数据保存</p></div><div class="tabs" id="save"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#save-1">源码</button></li><li class="tab"><button type="button" data-href="#save-2">功能分析</button></li><li class="tab"><button type="button" data-href="#save-3">运行展示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="save-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Status <span class="title">save</span><span class="params">(<span class="type">const</span> BookList &amp; bookList)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string filename;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入需要保存到的文件名：&quot;</span>;</span><br><span class="line">    cin &gt;&gt; filename;</span><br><span class="line">    <span class="function">ofstream <span class="title">outfile</span><span class="params">(filename)</span></span>;</span><br><span class="line">    <span class="keyword">if</span> (!outfile.<span class="built_in">is_open</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;文件保存失败，是否退出（Y/N)：&quot;</span>;</span><br><span class="line">        <span class="type">char</span> choice;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&#x27;Y&#x27;</span> == choice || <span class="string">&#x27;y&#x27;</span> == choice)</span><br><span class="line">            <span class="keyword">return</span> OK;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> length = bookList.length;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; length; ++i)</span><br><span class="line">            outfile &lt;&lt; bookList.books[i].id &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; bookList.books[i].name &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; bookList.books[i].press &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; bookList.books[i].count &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">            &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; bookList.books[i].author &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; bookList.books[i].price &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;文件保存成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        outfile.<span class="built_in">close</span>();</span><br><span class="line">        <span class="keyword">return</span> OK;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="save-2"><p>该模块处理了文件书写失败的情况，当无法打开文件时，会询问用户是否要强制退出，避免数据意外丢失。<emp>文件读取操作结束后一定要close</emp>。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="save-3"><p><img src="https://pic.imgdb.cn/item/61ca85392ab3f51d919650cc.png" alt="数据保存运行截图" /><br /><img src="https://pic.imgdb.cn/item/61ca85672ab3f51d91967517.png" alt="数据保存运行截图" /></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="功能模块三书籍查询"><a class="markdownIt-Anchor" href="#功能模块三书籍查询"></a> 功能模块三：书籍查询</h2><div class="tip success"><p>功能模块三：书籍查询</p></div><div class="tabs" id="query"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#query-1">源码</button></li><li class="tab"><button type="button" data-href="#query-2">功能分析</button></li><li class="tab"><button type="button" data-href="#query-3">运行展示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="query-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// flag = 0, 表示根据id查询；</span></span><br><span class="line"><span class="comment">// flag = 1, 表示根据图书名字查询；</span></span><br><span class="line"><span class="comment">// isNeedPrint, true表示需要打印信息;</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">queryBook</span><span class="params">(<span class="type">const</span> BookList &amp; bookList, string value, <span class="type">int</span> flag, <span class="type">bool</span> isNeedPrint)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> length = bookList.length;</span><br><span class="line">    <span class="comment">//id查询不可能重复</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="number">0</span> == flag)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">            <span class="keyword">if</span> (value == bookList.books[i].id)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (isNeedPrint)</span><br><span class="line">                    <span class="built_in">printOne</span>(bookList.books[i]);</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">if</span> (isNeedPrint)</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;对不起，查无此书!&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//书名查询可能重复</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">1</span> == flag)</span><br><span class="line">    &#123;</span><br><span class="line">        Book temp[bookList.length];</span><br><span class="line">        <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">            <span class="keyword">if</span> (value == bookList.books[i].name)</span><br><span class="line">            &#123;</span><br><span class="line">                temp[count] = bookList.books[i];</span><br><span class="line">                count ++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> == count)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (isNeedPrint)</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;对不起，查无此书!&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (isNeedPrint)</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; count; i++)</span><br><span class="line">                    <span class="built_in">printOne</span>(temp[i]);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="query-2"><p>搜索功能用暴力实现，暂且没有算法优化。<span class='p red'>flag</span>用来告知函数以哪种方式进行查询，0代表根据id查询，1代表根据书名查询。有个注意点，同名书籍可能存在，但id是唯一标识符。<span class='p red'>isNeedPrint</span>如英文表示的一样，这样设计是为了方便添加书籍、删除书籍、修改书籍信息时调用该接口。同时该模块还有功能待扩充，仔细看可以注意到只写到<span class='p red'>else if</span>，还可以根据其他关键字进行查询，这里就暂时不实现了。如果根据ID查询到该书籍，这直接返回元素下标，如果查不到，则返回-1。这里发现，return类型只支持返回int类型，如果根据其他关键字查询查找，返回值会有点问题，这个问题暂且搁置，不影响程序运行。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="query-3"><p><img src="https://pic.imgdb.cn/item/61ca88bc2ab3f51d9198abfb.png" alt="查询操作截图" /><br /><img src="https://pic.imgdb.cn/item/61ca88ce2ab3f51d9198b557.png" alt="查询操作截图" /><br /><img src="https://pic.imgdb.cn/item/61ca88dc2ab3f51d9198bdac.png" alt="查询操作截图" /><br /><img src="https://pic.imgdb.cn/item/61ca88f42ab3f51d9198cbc3.png" alt="查询操作截图" /><br /><img src="https://pic.imgdb.cn/item/61ca88ff2ab3f51d9198d45c.png" alt="查询操作截图" /></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="功能模块四信息打印"><a class="markdownIt-Anchor" href="#功能模块四信息打印"></a> 功能模块四：信息打印</h2><div class="tip success"><p>功能模块四：信息打印</p></div><div class="tabs" id="print"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#print-1">源码</button></li><li class="tab"><button type="button" data-href="#print-2">功能分析</button></li><li class="tab"><button type="button" data-href="#print-3">运行展示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="print-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">printAll</span><span class="params">(<span class="type">const</span> BookList &amp;bookList)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> length = bookList.length;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; length; ++i)</span><br><span class="line">        <span class="built_in">printOne</span>(bookList.books[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printOne</span><span class="params">(<span class="type">const</span> Book &amp; book)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;书籍ID：&quot;</span> &lt;&lt; book.id &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;书籍名称：&quot;</span> &lt;&lt; book.name &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;书籍出版社：&quot;</span> &lt;&lt; book.press &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;书籍数量：&quot;</span> &lt;&lt; book.count &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;书籍作者：&quot;</span> &lt;&lt; book.author &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;书籍价格：&quot;</span> &lt;&lt; book.price &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="print-2"><p>该模块分为打印全部信息和打印单个信息，方便其他函数调用该接口。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="print-3"><p><img src="https://pic.imgdb.cn/item/61ca8bfb2ab3f51d919ae1b2.png" alt="打印功能截图" /></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="功能模块五删除书籍"><a class="markdownIt-Anchor" href="#功能模块五删除书籍"></a> 功能模块五：删除书籍</h2><div class="tip success"><p>功能模块五：删除书籍</p></div><div class="tabs" id="delete"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#delete-1">源码</button></li><li class="tab"><button type="button" data-href="#delete-2">功能分析</button></li><li class="tab"><button type="button" data-href="#delete-3">运行展示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="delete-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">deleteBook</span><span class="params">(BookList &amp; bookList, string id)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> position = <span class="built_in">queryBook</span>(bookList, id, <span class="number">0</span>, <span class="literal">false</span>);</span><br><span class="line">    <span class="type">int</span> length = bookList.length;</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">-1</span> != position)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = position; i &lt; length - <span class="number">1</span>; i++)</span><br><span class="line">            bookList.books[i] = bookList.books[i + <span class="number">1</span>];</span><br><span class="line">        bookList.length --;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;文件删除成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;对不起， 查无此书！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="delete-2"><p>在删除前会先根据ID进行查询，调用<span class='p red'>queryBook</span>接口。之前设置<span class='p green'>isNeedPrint</span>的作用就这样体现出来了。<span class='p red'>queryBook</span>的返回值就可以直接定位需要删除的元素，直达病根。这里在删除前就不进行判空处理，因为queryBook函数会直接返回-1，不存在越界问题。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="delete-3"><p><img src="https://pic.imgdb.cn/item/61ca91c62ab3f51d919ea071.png" alt="删除功能截图" /><br /><img src="https://pic.imgdb.cn/item/61ca91ea2ab3f51d919eb500.png" alt="删除功能截图" /></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="功能模块六添加书籍"><a class="markdownIt-Anchor" href="#功能模块六添加书籍"></a> 功能模块六：添加书籍</h2><div class="tip success"><p>功能模块六：添加书籍</p></div><div class="tabs" id="add"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#add-1">源码</button></li><li class="tab"><button type="button" data-href="#add-2">功能分析</button></li><li class="tab"><button type="button" data-href="#add-3">运行展示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="add-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">addBook</span><span class="params">(BookList &amp; bookList)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> length = bookList.length;</span><br><span class="line">    <span class="keyword">if</span> (length &gt;= MAXSIZE)</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;空间已满，请先开拓空间！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请依次输入id、书名、出版社、数量、作者、价格&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; bookList.books[length].id &gt;&gt; bookList.books[length].name &gt;&gt; bookList.books[length].press</span><br><span class="line">        &gt;&gt; bookList.books[length].count &gt;&gt; bookList.books[length].author &gt;&gt; bookList.books[length].price;</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">-1</span> != <span class="built_in">queryBook</span>(bookList, bookList.books[length].id, <span class="number">0</span>, <span class="literal">false</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;信息添加失败，已存在同id书籍&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        bookList.length ++;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;书籍添加成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="add-2"><p>在添加书籍之前，会根据ID进行查询，避免数据重复，因为ID是唯一标识符，可以移至修改操作。运行之前还会判断空间是否已满。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="add-3"><p><img src="https://pic.imgdb.cn/item/61ca94ce2ab3f51d91a090d3.png" alt="添加操作截图" /></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="功能模块七修改书籍信息"><a class="markdownIt-Anchor" href="#功能模块七修改书籍信息"></a> 功能模块七：修改书籍信息</h2><div class="tip success"><p>功能模块七：修改书籍信息</p></div><div class="tabs" id="modify"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#modify-1">源码</button></li><li class="tab"><button type="button" data-href="#modify-2">功能分析</button></li><li class="tab"><button type="button" data-href="#modify-3">运行展示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="modify-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">modifyBook</span><span class="params">(BookList &amp; bookList)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string id;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入需要修改的书籍id：&quot;</span>;</span><br><span class="line">    cin &gt;&gt; id;</span><br><span class="line">    <span class="type">int</span> position = <span class="built_in">queryBook</span>(bookList, id , <span class="number">0</span>, <span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">if</span> (position == <span class="number">-1</span>)</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;对不起，查无此书&quot;</span> &lt;&lt;endl;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">char</span> choice;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;当前书籍名为：&quot;</span> &lt;&lt; bookList.books[position].name &lt;&lt; <span class="string">&quot;，是否要修改(Y/N): &quot;</span>;</span><br><span class="line">        cin &gt;&gt; choice;</span><br><span class="line">        <span class="keyword">if</span> (choice == <span class="string">&#x27;Y&#x27;</span> || choice == <span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;请输入新书名：&quot;</span>;</span><br><span class="line">            cin &gt;&gt; bookList.books[position].name;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;当前书籍出版社为：&quot;</span> &lt;&lt; bookList.books[position].press &lt;&lt; <span class="string">&quot;，是否要修改(Y/N): &quot;</span>;</span><br><span class="line">        cin &gt;&gt; choice;</span><br><span class="line">        <span class="keyword">if</span> (choice == <span class="string">&#x27;Y&#x27;</span> || choice == <span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;请输入新出版社：&quot;</span>;</span><br><span class="line">            cin &gt;&gt; bookList.books[position].press;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;当前书籍数量为：&quot;</span> &lt;&lt; bookList.books[position].count &lt;&lt; <span class="string">&quot;，是否要修改(Y/N): &quot;</span>;</span><br><span class="line">        cin &gt;&gt; choice;</span><br><span class="line">        <span class="keyword">if</span> (choice == <span class="string">&#x27;Y&#x27;</span> || choice == <span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;请输入新数量：&quot;</span>;</span><br><span class="line">            cin &gt;&gt; bookList.books[position].count;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;当前书籍作者为：&quot;</span> &lt;&lt; bookList.books[position].author &lt;&lt; <span class="string">&quot;，是否要修改(Y/N): &quot;</span>;</span><br><span class="line">        cin &gt;&gt; choice;</span><br><span class="line">        <span class="keyword">if</span> (choice == <span class="string">&#x27;Y&#x27;</span> || choice == <span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;请输入新作者：&quot;</span>;</span><br><span class="line">            cin &gt;&gt; bookList.books[position].author;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;当前书籍价格为：&quot;</span> &lt;&lt; bookList.books[position].price &lt;&lt; <span class="string">&quot;，是否要修改(Y/N): &quot;</span>;</span><br><span class="line">        cin &gt;&gt; choice;</span><br><span class="line">        <span class="keyword">if</span> (choice == <span class="string">&#x27;Y&#x27;</span> || choice == <span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;请输入新价格：&quot;</span>;</span><br><span class="line">            cin &gt;&gt; bookList.books[position].price;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;信息修改完毕！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;修改后内容为：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">printOne</span>(bookList.books[position]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="modify-2"><p>这里同样不需要判空处理，程序会根据提供的id定位到书籍，如果定位不到，则打印错误信息。如果定位到，会依次打印各项信息，并询问是否需要修改。这里同样可以优化，但先放着（因为每项询问可能会影响部分用户体现，可以试着开放两种修改方式，可供用户自由选择）。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="modify-3"><p><img src="https://pic.imgdb.cn/item/61ca97352ab3f51d91a210cc.png" alt="修改操作截图" /></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="功能模块八书籍排序"><a class="markdownIt-Anchor" href="#功能模块八书籍排序"></a> 功能模块八：书籍排序</h2><div class="tip success"><p>功能模块八：书籍排序</p></div><div class="tabs" id="sort"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#sort-1">源码</button></li><li class="tab"><button type="button" data-href="#sort-2">功能分析</button></li><li class="tab"><button type="button" data-href="#sort-3">运行展示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="sort-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//flag = 0, 代表按照ID排序</span></span><br><span class="line"><span class="comment">//flag = 1，代表按照价格排序</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insertSort</span><span class="params">(BookList &amp; bookList, <span class="type">int</span> flag)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (bookList.length == <span class="number">0</span>)</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;当前数据为空&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (bookList.length == <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> length = bookList.length;</span><br><span class="line">        <span class="keyword">if</span> (flag == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> i, j;</span><br><span class="line">            <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; length; ++i)</span><br><span class="line">                <span class="keyword">if</span> (bookList.books[i].id &lt; bookList.books[i - <span class="number">1</span>].id)</span><br><span class="line">                &#123;</span><br><span class="line">                    Book temp = bookList.books[i];</span><br><span class="line">                    <span class="keyword">for</span> (j = i - <span class="number">1</span>; j &gt;= <span class="number">0</span> &amp;&amp; temp.id &lt; bookList.books[j].id; --j)</span><br><span class="line">                        bookList.books[j + <span class="number">1</span>] = bookList.books[j];</span><br><span class="line">                    bookList.books[j + <span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;已经按照ID升序完成排序！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (flag == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> i, j;</span><br><span class="line">            <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; length; ++i)</span><br><span class="line">                <span class="keyword">if</span> (bookList.books[i].price &lt; bookList.books[i - <span class="number">1</span>].price)</span><br><span class="line">                &#123;</span><br><span class="line">                    Book temp = bookList.books[i];</span><br><span class="line">                    <span class="keyword">for</span> (j = i - <span class="number">1</span>; j &gt;= <span class="number">0</span> &amp;&amp; temp.price &lt; bookList.books[j].price; --j)</span><br><span class="line">                        bookList.books[j + <span class="number">1</span>] = bookList.books[j];</span><br><span class="line">                    bookList.books[j + <span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;已按照价格升序完成排序！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="sort-2"><p><span class='p red'>flag</span>用来告知函数接口按照何种关键字进行排序，此处也可以优化，比如增加关键字种类，选择升序或者降序。此处采用了性能较差的插入排序，有待后续优化。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="sort-3"><p><img src="https://pic.imgdb.cn/item/61ca9d772ab3f51d91a69601.png" alt="排序操作截图" /><br /><img src="https://pic.imgdb.cn/item/61ca9da52ab3f51d91a6b98c.png" alt="排序操作截图" /></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="功能模块九按照类别打印"><a class="markdownIt-Anchor" href="#功能模块九按照类别打印"></a> 功能模块九：按照类别打印</h2><div class="tip success"><p>功能模块九：按照出版社类别打印</p></div><div class="tabs" id="classify"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#classify-1">源码</button></li><li class="tab"><button type="button" data-href="#classify-2">功能分析</button></li><li class="tab"><button type="button" data-href="#classify-3">运行展示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="classify-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">classify</span><span class="params">(<span class="type">const</span> BookList &amp; bookList)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> length = bookList.length;</span><br><span class="line">    <span class="keyword">if</span> (bookList.length == <span class="number">0</span>)</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;当前数据为空&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> i ,j;</span><br><span class="line">        Book *books = <span class="keyword">new</span> Book[length];</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; length; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            books[i] = bookList.books[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; length; ++i)</span><br><span class="line">            <span class="keyword">if</span> (books[i].press &lt; books[i - <span class="number">1</span>].press)</span><br><span class="line">            &#123;</span><br><span class="line">                Book temp = books[i];</span><br><span class="line">                <span class="keyword">for</span> (j = i - <span class="number">1</span>; j &gt;= <span class="number">0</span> &amp;&amp; temp.press &lt; books[j].press; --j)</span><br><span class="line">                    books[j + <span class="number">1</span>] = books[j];</span><br><span class="line">                books[j + <span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; books[<span class="number">0</span>].press &lt;&lt; <span class="string">&quot;：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">printOne</span>(books[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; length; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (books[i - <span class="number">1</span>].press != books[i].press)</span><br><span class="line">                cout &lt;&lt; books[i].press &lt;&lt; <span class="string">&quot;：&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="built_in">printOne</span>(books[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">delete</span>[] books;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="classify-2"><p>该模块采用先将数据根据出版社进行排序，这样就便于按照出版社打印信息。有点需要注意，此处要将数据进行拷贝,避免对原始数据进行修改（你想修改也没法修改，因为我这里加了const，程序会报错）。处理结束后记得delete，按其他类别打印信息的原理一样，就不重复编写了。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="classify-3"><p><img src="https://pic.imgdb.cn/item/61ca9f752ab3f51d91a7f461.png" alt="分类打印截图" /></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="功能模块十扩容"><a class="markdownIt-Anchor" href="#功能模块十扩容"></a> 功能模块十：扩容</h2><div class="tabs" id="extend"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#extend-1">源码</button></li><li class="tab"><button type="button" data-href="#extend-2">功能分析</button></li><li class="tab"><button type="button" data-href="#extend-3">运行展示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="extend-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">extend</span><span class="params">(BookList &amp; bookList)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    MAXSIZE *= <span class="number">2</span>;</span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> length = bookList.length;</span><br><span class="line">    Book *books = <span class="keyword">new</span> Book[length];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; length; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        books[i] = bookList.books[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">delete</span>[] bookList.books;</span><br><span class="line">    bookList.books = <span class="keyword">new</span> Book[MAXSIZE];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; length; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        bookList.books[i] = books[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">delete</span>[] books;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;空间已扩大两倍&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="extend-2"><p>这里按照2倍进行扩容，原因参考vector容器扩容策略，有兴趣的可以了解一下，这里不加赘述。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="extend-3"><p>这里便于展示，我先将MAXSIZE修改为10再打开程序。<br /><img src="https://pic.imgdb.cn/item/61caa2c12ab3f51d91aa3e30.png" alt="扩容操作截图" /><br /><img src="https://pic.imgdb.cn/item/61caa2d62ab3f51d91aa4fb9.png" alt="扩容操作截图" /><br /><img src="https://pic.imgdb.cn/item/61caa2ef2ab3f51d91aa6612.png" alt="扩容操作截图" /></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="main函数呈现"><a class="markdownIt-Anchor" href="#main函数呈现"></a> main函数呈现</h2><details class="folding-tag" cyan><summary> main函数 </summary>              <div class='content'>              <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    BookList  bookList;</span><br><span class="line">    bookList.length = <span class="number">0</span>;</span><br><span class="line">    bookList.books = <span class="keyword">new</span> Book[MAXSIZE];</span><br><span class="line">    <span class="built_in">readFile</span>(bookList);</span><br><span class="line">    <span class="type">int</span> choice = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (choice)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">menu</span>();</span><br><span class="line">        cin &gt;&gt; choice;</span><br><span class="line">        <span class="keyword">switch</span> (choice) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:&#123;</span><br><span class="line">                <span class="built_in">readFile</span>(bookList);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:&#123;</span><br><span class="line">                string value;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;请输入ID：&quot;</span>;</span><br><span class="line">                cin &gt;&gt; value;</span><br><span class="line">                <span class="built_in">queryBook</span>(bookList, value, <span class="number">0</span>, <span class="literal">true</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:&#123;</span><br><span class="line">                string value;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;请输入书名：&quot;</span>;</span><br><span class="line">                cin &gt;&gt; value;</span><br><span class="line">                <span class="built_in">queryBook</span>(bookList, value, <span class="number">1</span>, <span class="literal">true</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:&#123;</span><br><span class="line">                <span class="built_in">addBook</span>(bookList);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:&#123;</span><br><span class="line">                string id;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;请输入需要删除的书籍ID：&quot;</span>;</span><br><span class="line">                cin &gt;&gt; id;</span><br><span class="line">                <span class="built_in">deleteBook</span>(bookList, id);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:&#123;</span><br><span class="line">                <span class="built_in">modifyBook</span>(bookList);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:&#123;</span><br><span class="line">                <span class="built_in">insertSort</span>(bookList, <span class="number">0</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:&#123;</span><br><span class="line">                <span class="built_in">insertSort</span>(bookList, <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:&#123;</span><br><span class="line">                <span class="built_in">classify</span>(bookList);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">10</span>:&#123;</span><br><span class="line">                <span class="built_in">printAll</span>(bookList);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">11</span>:&#123;</span><br><span class="line">                <span class="built_in">save</span>(bookList);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">12</span>:&#123;</span><br><span class="line">                <span class="built_in">extend</span>(bookList);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:&#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">save</span>(bookList))</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">default</span>:&#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;请输入正确指令!&quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>              </div>            </details>]]></content>
      
      
      <categories>
          
          <category> 项目开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 课设 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>离散数学</title>
      <link href="/posts/3fb56f9d/"/>
      <url>/posts/3fb56f9d/</url>
      
        <content type="html"><![CDATA[<div class='checkbox checked green'><input type="checkbox" checked="checked"/>            <p>第一章：命题逻辑</p>            </div><div class='checkbox checked yellow'><input type="checkbox" checked="checked"/>            <p>第二章：一阶逻辑</p>            </div><div class='checkbox checked red'><input type="checkbox" checked="checked"/>            <p>第三章：集合的基本概念和运算</p>            </div><div class='checkbox checked cyan'><input type="checkbox" checked="checked"/>            <p>第四章：二元关系</p>            </div><div class='checkbox checked cyan'><input type="checkbox" checked="checked"/>            <p>第五章：函数</p>            </div><div class='checkbox blue'><input type="checkbox" />            <p>第六章：图的基本概念</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>第七章：特殊的图</p>            </div><div class='checkbox cyan'><input type="checkbox" />            <p>第八章：树</p>            </div><div class="note orange icon-padding flat"><i class="note-icon fas fa-exclamation-circle"></i><p>Deadline：2022-01-03</p></div><h2 id="命题逻辑"><a class="markdownIt-Anchor" href="#命题逻辑"></a> 命题逻辑</h2><h3 id="命题符号化及联结词"><a class="markdownIt-Anchor" href="#命题符号化及联结词"></a> 命题符号化及联结词</h3><blockquote><p>具有唯一真值的陈述句称为<strong>命题</strong></p></blockquote><ol><li>x + y &gt; 5.(×)</li><li>这朵花多好看呀(×)</li><li>明天下午有会吗？(×)</li><li>请关上门！(×)</li><li>除地球外，其他星球上也有生命（√）</li></ol><blockquote><p>不能再分解为更为简单句子的命题为<strong>简单命题</strong>或<strong>原子命题</strong></p></blockquote><p>简单命题可以用<em>p</em> , <em>q</em>  , <em>r</em>  , … , <em>p<sub>i</sub></em>  , <em>q<sub>i</sub></em> , <em>r<sub>i</sub></em> , … 表示，称为<span class='p cyan'>命题符号化</span>.</p><p>对于简单命题来说，它的真值是确定的，因而又称为<span class='p cyan'>命题常项</span>或<span class='p cyan'>命题常元</span></p><p>真值可以变化的简单陈述句称为<span class='p cyan'>命题变项</span>或 <span class='p cyan'>命题变元</span>，也可以用<em>p</em> , <em>q</em>  , <em>r</em>  , … , <em>p<sub>i</sub></em>  , <em>q<sub>i</sub></em> , <em>r<sub>i</sub></em> , …表示</p><blockquote><p>由简单命题用联结词联结而成的命题称为<strong>复合命题</strong></p></blockquote><p>这些简单命题之间是通过如“或者”、“并且”、“不”、“如果…则…”、“当且仅当”等这样的关联词和标点符号复合而成。</p><p>联结词“或”，又是具有相容性，有时具有排斥性，可是在数理逻辑中不允许这种<span class='p cyan'>二义性</span>的存在，因而对联结词必须给出精确的定义，<span class='p cyan'>联结词符号化</span>很好的解决了这个问题</p><blockquote><p>真值联结词（逻辑联结词）</p></blockquote><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>我们关心的是复合命题中命题之间的真值关系，而不关心命题的内容。</p></div><ol><li><p><mark>否定式</mark>: 设<em>p</em>为一命题，复合命题“非<em>p</em>”(或“<em>p</em>的否定”)称为<em>p</em>的否定式，记作<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> <em>p</em>。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> 为否定联结词，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> <em>p</em>为真当且仅当<em>p</em>为假</p><ul><li>关键词：不是、没有</li></ul></li><li><p><mark>合取式</mark>: 设<em>p</em>、<em>q</em>为两命题，复合命题“<em>p</em>并且<em>q</em>”(或“<em>p</em>和<em>q</em>”)称为<em>p</em>与<em>q</em>的合取式，记作<em>p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> q</em>。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> 称作合取联结词，<em>p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> q</em>为真有且仅当<em>p</em>与<em>q</em>同时为真</p><ul><li>关键词：“既<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>…</mo></mrow><annotation encoding="application/x-tex">\ldots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.12em;vertical-align:0em;"></span><span class="minner">…</span></span></span></span>又<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>…</mo></mrow><annotation encoding="application/x-tex">\ldots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.12em;vertical-align:0em;"></span><span class="minner">…</span></span></span></span>”，“不仅<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>…</mo></mrow><annotation encoding="application/x-tex">\ldots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.12em;vertical-align:0em;"></span><span class="minner">…</span></span></span></span>而且<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>…</mo></mrow><annotation encoding="application/x-tex">\ldots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.12em;vertical-align:0em;"></span><span class="minner">…</span></span></span></span>”，“虽然<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>…</mo></mrow><annotation encoding="application/x-tex">\ldots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.12em;vertical-align:0em;"></span><span class="minner">…</span></span></span></span>但是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>…</mo></mrow><annotation encoding="application/x-tex">\ldots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.12em;vertical-align:0em;"></span><span class="minner">…</span></span></span></span>”</li><li>用<em>p</em>表示“李平聪明”，<em>q</em>表示“李平用功”，“李平不是不聪明，而是不用功” <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇒</mo></mrow><annotation encoding="application/x-tex">\Rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇒</span></span></span></span> <em><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> ( <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> p) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> q</em></li><li>&quot;李文和李武是好朋友&quot;此命题虽出现“和”，但它是简单命题，而不是复合命题</li></ul></li><li><p><mark>析取式</mark>: 设<em>p</em>、<em>q</em>为两命题，复合命题“<em>p</em>或<em>q</em>”称作<em>p</em>与<em>q</em>的析取式，记作<em>p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> q</em>。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> 称作析取联结词，<em>p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> q</em>为假有且仅当<em>p</em>与<em>q</em>同时为假</p></p><ul><li>关键词：相容或</li><li><em>p</em>表示”王燕学过英语“，<em>q</em>表示“王燕学过法语”，“王燕学过英语和法语” <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇒</mo></mrow><annotation encoding="application/x-tex">\Rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇒</span></span></span></span> <em>p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> q</em></li><li><em>p</em>表示“派小王开会”，<em>q</em>表示“派小李去开会”， “派小王或者小李去开会” <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇒</mo></mrow><annotation encoding="application/x-tex">\Rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇒</span></span></span></span> <em>(p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> q) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> (p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> q)</em>, <em>(p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> q) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> (<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> q)</em></li></ul> <details class="folding-tag" cyan open><summary> 例题 </summary>              <div class='content'>              <ol><li>张晓静爱唱歌或爱听音乐。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇒</mo></mrow><annotation encoding="application/x-tex">\Rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇒</span></span></span></span> 设 p：张晓静爱唱歌，q：张晓静爱听音乐。 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇒</mo></mrow><annotation encoding="application/x-tex">\Rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇒</span></span></span></span> p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> q</li><li>他昨天做了二十或三十道习题。 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇒</mo></mrow><annotation encoding="application/x-tex">\Rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇒</span></span></span></span>  原子命题，因为“或”只表示了习题的近似数目。</li></ol>              </div>            </details></li><li><p><mark>蕴涵式</mark>: 设<em>p</em>、<em>q</em>为两命题，复合命题“如果<em>p</em>，则<em>q</em>”称作<em>p</em>与<em>q</em>的蕴涵式，记作<em>p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> q</em>，称<em>q</em>为蕴涵式式的前件，<em>q</em>为蕴涵式的后件。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> 称作蕴涵联结词，<em>p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> q</em>为假当且仅当<em>p</em>为真<em>q</em>为假</p><ul><li>关键词：“只要<em>p</em>就<em>q</em>”, “<em>p</em>仅当<em>q</em>”, “因为<em>p</em>，所以<em>q</em>”, “只有<em>q</em>才<em>p</em>”, “除非<em>q</em>才<em>p</em>”, “除非<em>q</em>，否则非<em>p</em>”</li><li><em>q</em>是<em>p</em>的必要条件，或<em>p</em>是<em>q</em>的充分条件</li><li>在数理逻辑中<em>p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> q</em>中的<em>p</em>与<em>q</em>不一定有什么内在联系</li></ul> <details class="folding-tag" cyan open><summary> 例题 </summary>              <div class='content'>              <ol><li>a能被4整除，仅当a能被2整除。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇒</mo></mrow><annotation encoding="application/x-tex">\Rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇒</span></span></span></span> 设 p: a能被4整除 q: a能被2整除 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇒</mo></mrow><annotation encoding="application/x-tex">\Rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇒</span></span></span></span> p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> q</li></ol>              </div>            </details> <details class="folding-tag" cyan open><summary> 扩展 </summary>              <div class='content'>              <p>作为一种规定，当p为假时，无论q是真是假，p→q均为真。也就是说，只有p为真q为假这一种情况使得复合命题p→q为假。称为<span class='p cyan'>实质蕴含</span>。</p>              </div>            </details></li><li><p><mark>等价式</mark>: 设<em>p</em>、<em>q</em>为两命题，复合命题“<em>p</em>当且仅当<em>q</em>”称作<em>p</em>与<em>q</em>的等价式，记作<em>p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>↔</mo></mrow><annotation encoding="application/x-tex">\leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">↔</span></span></span></span> q</em>。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>↔</mo></mrow><annotation encoding="application/x-tex">\leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">↔</span></span></span></span> 称作等价联结词，<em>p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>↔</mo></mrow><annotation encoding="application/x-tex">\leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">↔</span></span></span></span> q</em>为真当且仅当<em>p</em>与<em>q</em>的真值相同</p><ul><li>关键词：“当且仅当”</li><li><em>p</em>与<em>q</em>互为充分必要条件</li><li>(<em>p</em> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> <em>q</em>) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> (<em>q</em> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> <em>p</em>) 与 <em>p</em> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>↔</mo></mrow><annotation encoding="application/x-tex">\leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">↔</span></span></span></span> <em>q</em> 的逻辑关系完全一致</li><li>在数理逻辑中<em>p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>↔</mo></mrow><annotation encoding="application/x-tex">\leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">↔</span></span></span></span> q</em>中的<em>p</em>与<em>q</em>不一定有什么内在联系</li></ul></li></ol><h3 id="命题公式及分类"><a class="markdownIt-Anchor" href="#命题公式及分类"></a> 命题公式及分类</h3><blockquote><p>命题常项和命题变项</p></blockquote><ol><li>简单命题是真值唯一确定的命题逻辑中最基本的研究单位，所以也称简单命题为<span class='p cyan'>命题常项</span>或<span class='p cyan'>命题常元</span>。</li><li>称真值可以变化的陈述句为<span class='p cyan'>命题变项</span>或<span class='p cyan'>命题变元</span>,当p,q,r,…表示命题变项时，它们就成了取值0或1的变项，因而命题变项已不是命题。</li></ol><blockquote><p>命题公式</p></blockquote><p>若在复合命题中，<em>p</em> , <em>q</em>  , <em>r</em>  , … , <em>p<sub>i</sub></em>  , <em>q<sub>i</sub></em> , <em>r<sub>i</sub></em> , …不仅可以代表命题常项，还可以代表命题变项，这样组成的复合命题形式称为<span class='p cyan'>命题公式</span>，也称<span class='p cyan'>合式公式</span>，简称<span class='p cyan'>公式</span></p><ol><li>单个命题变项 <em>p</em> , <em>q</em>  , <em>r</em>  , … , <em>p<sub>i</sub></em>  , <em>q<sub>i</sub></em> , <em>r<sub>i</sub></em> , …是合式公式，并称为<span class='p cyan'>原子命题公式</span>。</li><li>如果A是合式公式，则(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> A)也是合式公式。</li><li>如果A、B是合式公式，则(A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> B)、(A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> B)、(A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> B)、(A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>↔</mo></mrow><annotation encoding="application/x-tex">\leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">↔</span></span></span></span> B) 也是合式公式。</li><li>只有有限次地应用1~3组成的符号串才是合式公式。</li></ol><div class="note icon-padding simple"><i class="note-icon fas fa-thumbs-up"></i><ol><li>为方便起见，(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> A)、(A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> B)等的外层括号可以省去。</li><li>设A为合式公式，B为A中一部分，若B也是合式公式，则称B为A的<span class='p cyan'>子公式</span>。</li><li>给出的合式公式的定义方式称为<span class='p cyan'>归纳定义</span>或<span class='p cyan'>递归定义</span>方式。</li><li>定义中引进了A,B等符号，用它们表示任意的合式公式，而不是某个具体的公式。</li><li>A,B等符号被称作元语言符号。p,q等被称作对象语言符号。</li><li><span class='p cyan'>对象语言</span>是指用来描述研究对象的语言，而<span class='p cyan'>元语言</span>是指用来描述对象的语言，这两种语言是不同层次的语言。例如中国人学习英语时，英语为对象语言，而用来学习英语的汉语则是元语言。</li></ol></div><blockquote><p>公式的层次</p></blockquote><ol><li><p>若A是单个命题（常项或变项），则称A为0层公式</p></li><li><p>称A是n + 1（n≥0）层公式是指下列诸情况之一</p><p>​1. A= <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> B，B为n层公式<br />​2. A=B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> C，其中B、C分别为i层和j层公式，且n=max（i，j）<br />​3. A=B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> C，其中B、C分别为i层和j层公式，且n=max（i，j）<br />​4. A=B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> C，其中B、C分别为i层和j层公式，且n=max（i，j）<br />​5. A=B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>↔</mo></mrow><annotation encoding="application/x-tex">\leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">↔</span></span></span></span> C，其中B、C分别为i层和j层公式，且n=max（i，j）</p></li><li><p>若A的层次为k，则称A为k层公式</p><ul><li>一个含有命题变项的命题公式的真值是不确定的，只有对它的每个命题变项用指定的命题常项代替后，命题公式才变成命题，其真值也就唯一确定了</li></ul></li></ol><blockquote><p>赋值（解释）</p></blockquote><ol><li>设A为一命题公式，<em>p<sub>1</sub></em>, <em>p<sub>2</sub></em> , <em>p<sub>3</sub></em> , … , <em>p<sub>n</sub></em> 为出现在A中的所有的命题变项，给 <em>p<sub>1</sub></em>, <em>p<sub>2</sub></em> , <em>p<sub>3</sub></em> , … , <i>p<sub>n</sub></i> 指定一组真值，称为对A的一个<span class='p cyan'>赋值或解释</span>。若指定的一组值使A的值为真，则称这组值为A的<span class='p cyan'>成真赋值</span>；若使A的值为假，则称这组值为A的<span class='p cyan'>成假赋值</span></li><li>含n(n <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≥</mo></mrow><annotation encoding="application/x-tex">\geq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≥</span></span></span></span> 1)个命题变项的公式共有2<sup>n</sup>个不同的赋值。</li></ol><blockquote><p>真值表</p></blockquote><p>设公式A含有n（n≥1）个命题变项，将A在2<sup>n</sup>个赋值下的取值情况列成表，称为A的<span class='p cyan'>真值表</span></p><p>构造真值表的具体步骤：</p><ol><li>找出命题公式中所含的所有命题变项<em>p<sub>1</sub> , p<sub>2</sub> , p<sub>3</sub> , … , p<sub>n</sub></em>（按照字典序和下标数字大小给出）</li><li>按从低到高的顺序写出各层次</li><li>列出所有可能的赋值。从00……0（n位，二进制）开始，每次加1（十进制），直到11……1为止</li><li>对应每个赋值，计算命题公式各层次的值，直到最后计算成命题公式的值</li></ol><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>公式A与B具有相同的或不同的真值表，是指真值表的最后一列是否相同，而不考虑构造真值表的中间过程。</p></div><details class="folding-tag" cyan><summary> 示例 </summary>              <div class='content'>              <table><thead><tr><th style="text-align:center">p</th><th style="text-align:center">q</th><th style="text-align:center">r</th><th style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> r</th><th style="text-align:center">q <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> r</th><th style="text-align:center">p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> ( q <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span>  <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> r )</th></tr></thead><tbody><tr><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">1</td></tr></tbody></table>              </div>            </details><blockquote><p>公式分类</p></blockquote><p>设A为一个公式</p><ol><li>若A无成假赋值，则称A为重言式或永真式</li><li>若A无成真赋值，则称A为矛盾式或永假式</li><li>若A至少有一个成真赋值，则称A为可满足式</li><li>若A至少有一个成真赋值，又至少有一个成假赋值，则称A为非重言式的可满足式</li></ol><blockquote><p>n元真值函数</p></blockquote><p>一个n（n <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≥</mo></mrow><annotation encoding="application/x-tex">\geq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≥</span></span></span></span> 1）阶笛卡尔积 {0,1}<sup>n</sup> 到 {0,1} 的函数称为一个n元真值函数。n元真值函数F记为F：{0,1}<sup>n</sup> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> {0,1}</p><p>n个命题变项，共有2<sup>n</sup>个可能的赋值。对于每个赋值，真值函数的函数值非0即1。于是n个命题变元共可以形成4<sup>n</sup>个不同的真值函数。<span class='p cyan'>每个真值函数对应一个真值表</span>，也对应无穷多个命题公式，这些公式彼此都是等值的，它们中的每一个都是这个真值函数的一个表达形式。</p><details class="folding-tag" cyan><summary> 示例 </summary>              <div class='content'>              <table><thead><tr><th style="text-align:center">p  q</th><th style="text-align:center">F<sub>1</sub></th><th style="text-align:center">F<sub>2</sub></th><th style="text-align:center">F<sub>3</sub></th><th style="text-align:center">F<sub>4</sub></th><th style="text-align:center">F<sub>5</sub></th><th style="text-align:center">F<sub>6</sub></th><th style="text-align:center">F<sub>7</sub></th><th style="text-align:center">F<sub>8</sub></th></tr></thead><tbody><tr><td style="text-align:center">0       0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">0       1</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">1       0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">1       1</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">1</td></tr></tbody></table><table><thead><tr><th style="text-align:center">p      q</th><th style="text-align:center">F<sub>9</sub></th><th style="text-align:center">F<sub>10</sub></th><th style="text-align:center">F<sub>11</sub></th><th style="text-align:center">F<sub>12</sub></th><th style="text-align:center">F<sub>13</sub></th><th style="text-align:center">F<sub>14</sub></th><th style="text-align:center">F<sub>15</sub></th><th style="text-align:center">F<sub>16</sub></th></tr></thead><tbody><tr><td style="text-align:center">0       0</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">0       1</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">1       0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">1       1</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">1</td></tr></tbody></table>              </div>            </details><div class="note green icon-padding simple"><i class="note-icon fas fa-check-circle"></i><ol><li>F<sub>1</sub>对应的命题公式都是矛盾式，F<sub>16</sub>对应的命题公式都是重言式</li><li>n个命题变项共产生2<sup>n</sup>个不同赋值</li><li>含n个命题变项的公式的真值表只有2<sup>2<sup>n</sup></sup>种不同情况</li></ol></div><blockquote><p>哑元</p></blockquote><p>设公式A,B中共含有命题变项<i>p<sub>1</sub>, p<sub>2</sub>, … , p<sub>n</sub></i>，而A或 B不全含有这些命题变项，比如A中不含<i>p<sub>i</sub>, p<sub>i+1</sub>, … , p<sub>n</sub></i> ,称这些命题变项为A的<span class='p cyan'>哑元</span>，A的取值与哑元的变化无关，因而在讨论A与B是否有相等的真值表时，将A,B都看成<i>p<sub>1</sub>, p<sub>2</sub>, … , p<sub>n</sub></i>的命题公式。</p><details class="folding-tag" cyan><summary> 举个栗子 </summary>              <div class='content'>              <p>(1) p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> q<br />(2) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> q <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> r</p><p>r是公式(1)的哑元,P是公式(2)的哑元,讨论它们是否有相同的真值表时,均按3个命题变项写出它们的真值表</p>              </div>            </details><details class="folding-tag" red><summary> 易错集 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61ceaf422ab3f51d91a01aef.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61ceaf552ab3f51d91a031e2.png" alt="" /></p>              </div>            </details><h3 id="等值演算"><a class="markdownIt-Anchor" href="#等值演算"></a> 等值演算</h3><blockquote><p>基本等值式</p></blockquote><p>判断A与B是否等值等价于判断A、B的真值表是否相同。</p><p>设A、B为两命题公式，若等价式A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>↔</mo></mrow><annotation encoding="application/x-tex">\leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">↔</span></span></span></span> B是重言式，则称A与B是等值的，记作A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> B。A或B中可能有哑元出现.</p><details class="folding-tag" cyan open><summary> 基本等值式 </summary>              <div class='content'>              <table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">公式</th></tr></thead><tbody><tr><td style="text-align:center">双重否定率</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span>  A</td></tr><tr><td style="text-align:center">等幂律</td><td style="text-align:center">A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> A<br> A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> A</td></tr><tr><td style="text-align:center">交换律</td><td style="text-align:center">A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> A<br>A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> A</td></tr><tr><td style="text-align:center">结合律</td><td style="text-align:center">(A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> B) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> C <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> (B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> C)<br> (A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> B) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> C <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> (B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> C)</td></tr><tr><td style="text-align:center">分配律</td><td style="text-align:center">A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> (B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> C) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span>  (A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> B) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> (A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> C)<br>A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> (B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> C) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> (A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> B) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> (A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> C )</td></tr><tr><td style="text-align:center">德 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋅</mo></mrow><annotation encoding="application/x-tex">\cdot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">⋅</span></span></span></span> 摩根律</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> (A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> B) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> B<br><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> (A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> B) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> B</td></tr><tr><td style="text-align:center">吸收律</td><td style="text-align:center">A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> (A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> B) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> A<br>A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> (A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> B) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> A</td></tr><tr><td style="text-align:center">零律</td><td style="text-align:center">A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> 1 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> 1<br>A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> 0 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span>  0</td></tr><tr><td style="text-align:center">同一律</td><td style="text-align:center">A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> 0 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> A<br>A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> 1 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> A</td></tr><tr><td style="text-align:center">排中律</td><td style="text-align:center">A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> 1</td></tr><tr><td style="text-align:center">矛盾律</td><td style="text-align:center">A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> 0</td></tr><tr><td style="text-align:center">蕴涵等值式</td><td style="text-align:center">A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> B</td></tr><tr><td style="text-align:center">等价等值式</td><td style="text-align:center">A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>↔</mo></mrow><annotation encoding="application/x-tex">\leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">↔</span></span></span></span> B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> (A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> B) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> (B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> A)</td></tr><tr><td style="text-align:center">假言易位</td><td style="text-align:center">A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> A</td></tr><tr><td style="text-align:center">等价否定等值式</td><td style="text-align:center">A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>↔</mo></mrow><annotation encoding="application/x-tex">\leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">↔</span></span></span></span> B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>↔</mo></mrow><annotation encoding="application/x-tex">\leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">↔</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> B</td></tr><tr><td style="text-align:center">归谬论</td><td style="text-align:center">(A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> B) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> (A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> B) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> A</td></tr></tbody></table>              </div>            </details><div class="note green icon-padding simple"><i class="note-icon fas fa-check-circle"></i><ol><li>以上等值式都不难用真值表证明</li><li>由于A、B、C代表的是任意的命题公式，因而每个公式都是一个模式，他可代表无数多个同类型的命题公式</li><li>由已知等值式推演出与给定公式等值的公式的过程为<span class='p cyan'>等值演算</span></li><li>对偶原理：一个逻辑<span class='p cyan'>等值式</span>，如果只含有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span>、0、1那么同时把<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo><mi mathvariant="normal">和</mi></mrow><annotation encoding="application/x-tex">\lor和</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span><span class="mord cjk_fallback">和</span></span></span></span>\land$互换把0和1互换得到的还是等值式。</li><li>各等值式都是用元语言符号书写的，其中A,B,C可以代表任意的公式，称这样的等值式为<span class='p blue'>等值式模式</span>。</li><li>具体的等值式都被称为原来的等值式模式的<span class='p blue'>代入实例</span></li></ol></div><blockquote><p>置换规则</p></blockquote><p>设 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Φ</mi></mrow><annotation encoding="application/x-tex">\Phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Φ</span></span></span></span> (A)是含公式A的命题公式，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Φ</mi></mrow><annotation encoding="application/x-tex">\Phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Φ</span></span></span></span> (B) 是用B置换 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Φ</mi></mrow><annotation encoding="application/x-tex">\Phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Φ</span></span></span></span> (A) 中的A之后得到的公式，若A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> B，则 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Φ</mi></mrow><annotation encoding="application/x-tex">\Phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Φ</span></span></span></span> (A) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Φ</mi></mrow><annotation encoding="application/x-tex">\Phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Φ</span></span></span></span> (B)</p><blockquote><p>等值演算</p></blockquote><p>由已知的等值式推演出另外一些等值式的过程为等值演算</p><details class="folding-tag" blue><summary> 等值演算的相关说明 </summary>              <div class='content'>              <div class="tabs" id="等值演算"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#等值演算-1">基础</button></li><li class="tab"><button type="button" data-href="#等值演算-2">应用</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="等值演算-1"><ol><li>等值关系的性质：<ul><li>自反性：A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> A。</li><li>对称性：若A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> B，则B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> A。</li><li>传递性：若A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> B 且 B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> C，则A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> C。</li></ul></li><li>基本的等值式</li><li>置换规则</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="等值演算-2"><ol><li>证明两个公式等值</li><li>判断公式类型</li><li>解判定问题</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>              </div>            </details><details class="folding-tag" green><summary> 例题 </summary>              <div class='content'>              <div class="tabs" id="例题"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#例题-1">公式等值</button></li><li class="tab"><button type="button" data-href="#例题-2">判断公式类型</button></li><li class="tab"><button type="button" data-href="#例题-3">解判定问题</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="例题-1"><p><img src="https://pic.imgdb.cn/item/61ced6aa2ab3f51d91c385f0.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61ced6c02ab3f51d91c39b0e.png" alt="" /></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="例题-2"><p><img src="https://pic.imgdb.cn/item/61ced7692ab3f51d91c43b35.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61ced79a2ab3f51d91c46cd5.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61ced7a52ab3f51d91c47a09.png" alt="" /></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="例题-3"><p>在某次研讨会的中间休息时间，3名与会者根据王教授的口音对他是哪个省市的人进行了判断：<br />甲说王教授不是苏州人，是上海人。<br />乙说王教授不是上海人，是苏州人。<br />丙说王教授既不是上海人，也不是杭州人。<br />听完以上3人的判断后，王教授笑着说，他们3人中有一人说的全对，有一人说对了一半，另一人说的全不对。试用逻辑演算法分析王教授到底是哪里人？</p><p>设命题 p：王教授是苏州人。q：王教授是上海人。 r：王教授是杭州人。p,q,r中必有一个真命题，两个假命题，要通过逻辑演算将真命题找出来。<br />甲的判断为A<sub>1</sub>= <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> q<br />乙的判断为A<sub>2</sub>= p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> q<br />丙的判断为A<sub>3</sub>= <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> q <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> r<br /><img src="https://pic.imgdb.cn/item/61ced94e2ab3f51d91c5b684.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61ced9612ab3f51d91c5c343.png" alt="" /><br />过程简化；王教授只可能是其中一个城市的人或者三个城市都不是。所以，丙至少说对了一半。因此，可得甲或乙必有一人全错了。又因为，若甲全错了，则有p∧┐q，因此乙全对。同理，乙全错则甲全对。所以丙必是一对一错。根据上述推理，可对公式E进行简化，方便等值演算。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>              </div>            </details><h3 id="范式"><a class="markdownIt-Anchor" href="#范式"></a> 范式</h3><blockquote><p>简单析取式和简单合取式</p></blockquote><p>命题变项及其否定统称作<span class='p cyan'>文字</span><br />仅由有限个命题变项或其否定构成的析取式称为<span class='p cyan'>简单析取式</span><br />仅由有限个命题变项或其否定构成的合取式为<span class='p cyan'>简单合取式</span></p><ol><li>一个简单析取式是重言式，当且仅当它同时含有一个命题变项及其否定</li><li>一个简单合取式是矛盾式，当且仅当它同时含有一个命题变项及其否定</li></ol><p>例如，简单析取式<em>p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span>p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> q</em>是重言式</p><blockquote><p>析取范式和合取范式</p></blockquote><p>仅由有限个简单合取式构成的析取式称为<span class='p cyan'>析取范式</span><br />仅由有限个简单析取式构成的合取式称为<span class='p cyan'>合取范式</span></p><ol><li>一个析取范式是矛盾式，当且仅当它的每个简单合取式是矛盾式</li><li>一个合取范式是重言式，当且仅当它的每个简单析取式是重言式</li></ol><div class="note icon-padding simple"><i class="note-icon fas fa-thumbs-up"></i><ol><li>形如 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> q <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> r的公式既是一个简单合取式构成的析取范式，又是由三个简单析取式构成的合取范式。</li><li>形如 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> q <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> r的公式既是含三个简单合取式的析取范式，又是含一个简单析取式的合取范式。</li><li>研究范式的目的在于，将给定公式化成与之等值的析取范式或合取范式，进而将公式化成与之等值的主析取范式或主合取范式。</li></ol></div><blockquote><p>范式存在定理</p></blockquote><p>范式存在定理：任一命题公式都存在与之等值的析取范式和合取范式，且不是唯一的</p><div class="note orange icon-padding simple"><i class="note-icon fas fa-exclamation-circle"></i><ol><li>在范式中不会出现联结词 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> 与 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>↔</mo></mrow><annotation encoding="application/x-tex">\leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">↔</span></span></span></span> ，否则可使用等值式消除</li><li>在范式中不会出现形如<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> A, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> (A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> B), <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span>(A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> B)的公式</li><li>在析取范式中不会出现形如A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> (B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> C)的公式</li><li>在合取范式中不出现形A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> (B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> C)的公式</li></ol></div><details class="folding-tag" blue><summary> 例题 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61ceea872ab3f51d91d2ece7.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61ceea972ab3f51d91d2fc26.png" alt="" /></p>              </div>            </details><p>由于与某一命题公式等值的析取范式与合取范式的不唯一性，因而析取范式与合取范式不能作为同一真值函数所对应的命题公式的标准形式</p><blockquote><p>极小项</p></blockquote><p>设有n个命题变项，若在简单合取式中每个命题变项与其否定<span class='p cyan'>出现且仅出现一次</span>，则称这样的简单合取式为极小项。在极小项中，命题变项与其否定通常按下角标和字典顺序排列。</p><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><ul><li>将命题变项看成1，命题变项的否定看成0，则每个极小项对应一个二进制数。这个二进制数正好是该极小项的<span class='p cyan'>成真赋值</span>。用这个二进制数对应的十进制数作为该极小项符号的角码</li><li>n个命题变项共可产生 2<sup>n</sup> 个不同的极小项，分别记为 m<sub>0</sub> ， m<sub>1</sub> ， …… ， m<sub>2<sup>n</sup>-1</sub></li></ul></div><blockquote><p>主析取范式</p></blockquote><p>如果公式A的析取范式中的简单合取式全是极小项，则称该析取范式为A的<span class='p cyan'>主析取范式</span></p><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>任何命题公式都有<span class='p cyan'>唯一</span>的主析取范式</p><ul><li>只要知道一个命题公式A的主析取范式，即可写出真值表</li><li>反之，若知道了A的真值表，找出所有的成真赋值，以对应的十进制数作为角码的极小项，从而可立即写出A的主析取范式</li><li>由于任何命题公式的主析取范式都是唯一的，因而若A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> B，说明A与B有相同的主析取范式。反之，若A，B有相同的主析取范式，必有A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> B</li><li>判断命题公式的类型<ul><li>A为<span class='p cyan'>重言式</span>，当且仅当A的主析取范式中含全部2<sup>n</sup> 个极小项</li><li>A为<span class='p cyan'>矛盾式</span> ，当且仅当A的主析取范式不含任何极小项，此时记A的主析取范式为0</li></ul></li></ul></div><details class="folding-tag" red open><summary> 举例 </summary>              <div class='content'>              <table><thead><tr><th style="text-align:center">极小项</th><th style="text-align:center">二进制</th><th style="text-align:center">写法</th></tr></thead><tbody><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> q <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> r</td><td style="text-align:center">000</td><td style="text-align:center">m<sub>0</sub></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> q <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> r</td><td style="text-align:center">001</td><td style="text-align:center">m<sub>1</sub></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> q <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> r</td><td style="text-align:center">010</td><td style="text-align:center">m<sub>2</sub></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> q <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> r</td><td style="text-align:center">011</td><td style="text-align:center">m<sub>3</sub></td></tr><tr><td style="text-align:center">p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> q <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> r</td><td style="text-align:center">100</td><td style="text-align:center">m<sub>4</sub></td></tr><tr><td style="text-align:center">p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> q <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> r</td><td style="text-align:center">101</td><td style="text-align:center">m<sub>5</sub></td></tr><tr><td style="text-align:center">p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> q <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> r</td><td style="text-align:center">110</td><td style="text-align:center">m<sub>6</sub></td></tr><tr><td style="text-align:center">p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> q <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> r</td><td style="text-align:center">111</td><td style="text-align:center">m<sub>7</sub></td></tr></tbody></table>              </div>            </details><blockquote><p>极大项</p></blockquote><p>设有n个命题变项，若在简单析取式中每个命题变项与其否定<span class='p cyan'>出现且仅出现一次</span>，则称这样的简单析取式为极大项。在极大项中，命题变项与其否定通常按下角标和字典顺序排列。</p><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><ul><li>将命题变项看成0，命题变项的否定看成1，则每个极大项对应一个二进制数。这个二进制数正好是该极大项的<span class='p cyan'>成假赋值</span>。用这个二进制数对应的十进制数作为该极大项符号的角码</li><li>n个命题变项共可产生 2<sup>n</sup> 个不同的极大项，分别记为 M<sub>0</sub> ， M<sub>1</sub> ， …… ， M<sub>2<sup>n</sup>-1</sub></li></ul></div><blockquote><p>主合取范式</p></blockquote><p>如果公式A的合取范式中的简单析取式全是极大项，则称该析取范式为A的<span class='p cyan'>主合取范式</span></p><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><ul><li>任何命题公式都有<span class='p cyan'>唯一</span>的主析取范式</li><li>主析取范式和主合取范式互为对偶</li><li>设mi与Mi是命题变项<i>p<sub>1</sub>, p<sub>2</sub>, … , p<sub>n</sub> </i> 形成的极小项和极大项，则 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> m<sub>i</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> M<sub>i</sub>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> M<sub>i</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> m<sub>i</sub></li></ul></div><details class="folding-tag" blue open><summary> 应用 </summary>              <div class='content'>              <ol><li>求公式的成真赋值与成假赋值</li><li>判断公式的类型</li><li>判断两个命题公式是否等值</li><li>应用主析取范式分析和解决实际问题</li></ol>              </div>            </details><details class="folding-tag" cyan><summary> 例题 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61cef5092ab3f51d91dc1b39.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61cef5d32ab3f51d91dcbb2a.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61cef5de2ab3f51d91dcc32a.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61cef6f92ab3f51d91dd8e92.png" alt="" /></p>              </div>            </details><h3 id="联结词全功能集"><a class="markdownIt-Anchor" href="#联结词全功能集"></a> 联结词全功能集</h3><blockquote><p>全功能集</p></blockquote><p>一般来说，在自然推理系统中，联结词集中的联结词越少越好，但必须具备表示所有真值函数的能力。</p><p>设S是一个联结词集合，如果任一真值函数都可以用仅含S中的联结词的命题公式表示，则称S为<span class='p cyan'>全功能集</span></p><p>{ <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> , <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> , <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> }、{<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> , <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> } 、{<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> , <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> }、{<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> , <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span>}都是联结词全功能集</p><blockquote><p>与非联结词</p></blockquote><p>设<em>p</em> 、<em>q</em> 为两命题，复合命题&quot;<em>p</em> 与 <em>q</em> 的否定&quot;称为<em>p</em> 与 <em>q</em>的与非式，记作 <em>p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>↑</mo></mrow><annotation encoding="application/x-tex">\uparrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel">↑</span></span></span></span> q</em> ，即 p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>↑</mo></mrow><annotation encoding="application/x-tex">\uparrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel">↑</span></span></span></span> q <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> (p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> q) ,  <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>↑</mo></mrow><annotation encoding="application/x-tex">\uparrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel">↑</span></span></span></span> 称作<span class='p cyan'>与非联结词</span></p><blockquote><p>或非联结词</p></blockquote><p>设<em>p</em> 、<em>q</em> 为两命题，复合命题&quot;<em>p</em> 或 <em>q</em> 的否定&quot;称为<em>p</em> 或 <em>q</em>的与非式，记作 <em>p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>↓</mo></mrow><annotation encoding="application/x-tex">\downarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel">↓</span></span></span></span> q</em> ，即 p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>↓</mo></mrow><annotation encoding="application/x-tex">\downarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel">↓</span></span></span></span> q <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> (p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> q) ,  <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>↑</mo></mrow><annotation encoding="application/x-tex">\uparrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel">↑</span></span></span></span> 称作<span class='p cyan'>或非联结词</span></p><pre><code>* &#123;$\uparrow$&#125;、&#123;$\downarrow$&#125;是联结词全功能集* 除此之外，还有许多联结词全功能集</code></pre><h3 id="组合电路"><a class="markdownIt-Anchor" href="#组合电路"></a> 组合电路</h3><p>略</p><h3 id="推理理论"><a class="markdownIt-Anchor" href="#推理理论"></a> 推理理论</h3><blockquote><p>推理、前提、结论、证明</p></blockquote><ol><li><span class='p cyan'>推理</span>是从前提推出结论的思维工程</li><li><span class='p cyan'>前提</span>是指已知的命题公式</li><li><span class='p cyan'>结论</span>是指从前提出发应用推理规则推出的命题公式</li><li><span class='p cyan'>证明</span>是一个描述推理过程的命题公式序列，其中每个命题公式或者是已知的前提，或者是由前面的命题公式应用推理规则得到的结论</li></ol><blockquote><p>推理正确、逻辑结论、推理的形式结构</p></blockquote><p>若(A<sub>1</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> A<sub>2</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> A<sub>k</sub>) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> B 为重言式，则称(A<sub>1</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> A<sub>2</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> A<sub>k</sub>) 推出结论B的<span class='p cyan'>推理正确</span>， B是 A<sub>1</sub> , A<sub>2</sub> , <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span></span></span></span> , A<sub>k</sub> 的<span class='p cyan'>逻辑结论</span>或<span class='p cyan'>有效结论</span>。称(A<sub>1</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> A<sub>2</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> A<sub>k</sub>) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> B 为由前提 A<sub>1</sub> , A<sub>2</sub> , <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span></span></span></span> , A<sub>k</sub> 推出结论B的<span class='p cyan'>推理的形式结构</span></p><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><ul><li>用 A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> B 表示 A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>↔</mo></mrow><annotation encoding="application/x-tex">\leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">↔</span></span></span></span> B 是重言式类似，用 A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇒</mo></mrow><annotation encoding="application/x-tex">\Rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇒</span></span></span></span> B 表示 A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> B 是重言式</li><li>判断推理是否正确就是判断一个蕴涵式是否为重言式（等值演算）</li></ul></div><blockquote><p>推理定律</p></blockquote><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">定律</th></tr></thead><tbody><tr><td style="text-align:center">附加</td><td style="text-align:center">A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇒</mo></mrow><annotation encoding="application/x-tex">\Rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇒</span></span></span></span> (A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> B)</td></tr><tr><td style="text-align:center">化简</td><td style="text-align:center">(A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> B) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇒</mo></mrow><annotation encoding="application/x-tex">\Rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇒</span></span></span></span> A</td></tr><tr><td style="text-align:center">假言推理</td><td style="text-align:center">((A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> B) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span>  A) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇒</mo></mrow><annotation encoding="application/x-tex">\Rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇒</span></span></span></span> B</td></tr><tr><td style="text-align:center">拒取式</td><td style="text-align:center">((A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> B) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span>  <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> B) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇒</mo></mrow><annotation encoding="application/x-tex">\Rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇒</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> A</td></tr><tr><td style="text-align:center">析取三段论</td><td style="text-align:center">((A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> B) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> A) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇒</mo></mrow><annotation encoding="application/x-tex">\Rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇒</span></span></span></span> B</td></tr><tr><td style="text-align:center">假言三段论</td><td style="text-align:center">((A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> B) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> (B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> C)) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇒</mo></mrow><annotation encoding="application/x-tex">\Rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇒</span></span></span></span> (A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> C)</td></tr><tr><td style="text-align:center">等价三段论</td><td style="text-align:center">((A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>↔</mo></mrow><annotation encoding="application/x-tex">\leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">↔</span></span></span></span> B) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> (B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>↔</mo></mrow><annotation encoding="application/x-tex">\leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">↔</span></span></span></span> C)) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> (A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>↔</mo></mrow><annotation encoding="application/x-tex">\leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">↔</span></span></span></span> C)</td></tr><tr><td style="text-align:center">构造性二难</td><td style="text-align:center">(A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> B) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> (C <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> D) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> (A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> C) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> (B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> D)</td></tr><tr><td style="text-align:center">构造性二难(特殊形式)</td><td style="text-align:center">(A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> B) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> (<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> B) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> (A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> A) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> B</td></tr><tr><td style="text-align:center">破坏性二难</td><td style="text-align:center">(A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> B) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> (C <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> D) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> (<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span>  <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> D) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> (<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span>  <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> C)</td></tr></tbody></table><blockquote><p>推理规则</p></blockquote><p>在以下推理规则中，用 A<sub>1</sub> , A<sub>2</sub> , … , A<sub>k</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊨</mo></mrow><annotation encoding="application/x-tex">\vDash</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">⊨</span></span></span></span>  B 表示 B 是 A<sub>1</sub> , A<sub>2</sub> , … , A<sub>k</sub> 的逻辑结论，在证明的序列中，若已有A<sub>1</sub> , A<sub>2</sub> , … , A<sub>k</sub> ，则可引入B</p><ol><li>前提引入规则：在证明的任何一步，都可以引入前提</li><li>结论引入规则：在证明的任何一步，前面已经证明的结论都可作为后续证明的前提</li><li>置换规则：在证明的任何步骤上，命题公式中的任何子命题公式给都可以用与之等值的命题公式置换</li><li>假言推理规则：A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> B, A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊨</mo></mrow><annotation encoding="application/x-tex">\vDash</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">⊨</span></span></span></span> B</li><li>附加规则：A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊨</mo></mrow><annotation encoding="application/x-tex">\vDash</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">⊨</span></span></span></span> A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> B</li><li>化简规则：A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊨</mo></mrow><annotation encoding="application/x-tex">\vDash</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">⊨</span></span></span></span> A</li><li>拒取式规则：A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> B, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊨</mo></mrow><annotation encoding="application/x-tex">\vDash</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">⊨</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> A</li><li>假言三段论规则：A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> B, B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> C <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊨</mo></mrow><annotation encoding="application/x-tex">\vDash</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">⊨</span></span></span></span> A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> C</li><li>析取三段论规则：A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> B , <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊨</mo></mrow><annotation encoding="application/x-tex">\vDash</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">⊨</span></span></span></span> A</li><li>构造性二难规则：A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> B, C <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> D, A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> C <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊨</mo></mrow><annotation encoding="application/x-tex">\vDash</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">⊨</span></span></span></span> B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> D</li><li>破坏性二难规则：A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> B, C <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> D, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span>  <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> D <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊨</mo></mrow><annotation encoding="application/x-tex">\vDash</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">⊨</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span>  <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> C</li><li>合取引入规则：A, B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊨</mo></mrow><annotation encoding="application/x-tex">\vDash</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">⊨</span></span></span></span> A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> B</li></ol><blockquote><p>附加前提证明法</p></blockquote><p>(A<sub>1</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> A<sub>2</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> A<sub>k</sub>) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> (A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> B)</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> (A<sub>1</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> A<sub>2</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> A<sub>k</sub>) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> (<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> B)</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> (A<sub>1</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> A<sub>2</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> A<sub>k</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> A)  <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> B</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> (A<sub>1</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> A<sub>2</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> A<sub>k</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> A) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> B</p><p>原来结论中的前件A已经变成前提了，称A为<span class='p cyan'>附加前提</span>。</p><details class="folding-tag" red><summary> 例题 </summary>              <div class='content'>              <ul><li>前提：p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> (q <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> r), <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> s <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> p, q</li><li>结论：s <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> r</li><li>证明：<ol><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> s <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> p</li><li>s</li><li>p</li><li>p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> (q <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> r)</li><li>q <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> r</li><li>q</li><li>r</li></ol></li></ul>              </div>            </details><blockquote><p>归谬法</p></blockquote><p>若 A<sub>1</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> A<sub>2</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> A<sub>k</sub> 是可满足式， 则称 A<sub>1</sub> , A<sub>2</sub> , … , A<sub>k</sub> 是<span class='p cyan'>相容的</span>， 否则是<span class='p cyan'>不相容的</span></p><p>（A<sub>1</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> A<sub>2</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> A<sub>k</sub>）<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> B</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> （A<sub>1</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> A<sub>2</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> A<sub>k</sub>）<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> B</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> (A<sub>1</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> A<sub>2</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> A<sub>k</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> B)</p><p>若 A<sub>1</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> A<sub>2</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> A<sub>k</sub> 与 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> B 不相容， 则说明 B 是 A<sub>1</sub> , A<sub>2</sub> , … , A<sub>k</sub>的<span class='p cyan'>逻辑结论</span>。</p><p>这种将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> B 作为附加前提推出矛盾的证明方法称为<span class='p cyan'>归谬法</span></p><details class="folding-tag" red><summary> 例题 </summary>              <div class='content'>              <ul><li>前提：p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> (<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> (r <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> s) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> q), p, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> s</li><li>结论：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> q</li><li>证明；<br />1. p <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> (<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> (r <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> s) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> q）<br />2. p<br />3. <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> (r <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> s) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> q<br />4. <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> (<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> q)<br />5. q<br />6. r <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> s<br />7. <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> s<br />8. s<br />9. s <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> s<br />10. 矛盾式</li></ul>              </div>            </details><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><ol><li>若一个推理的形式结构与某条推理定律对应的蕴涵式一致，则不用证明就可断定这个推理是正确的。</li><li>等值式中的每一个都派生出两条推理定律。</li><li>由九条推理定律可以产生九条推理规则,它们构成了推理系统中的推理规则。</li><li>判断推理是否正确的三种方法：真值表法、等值演算法和主析取范式法。</li><li>对于正确的推理，在推理系统中构造证明的方法：推理系统的定义、推理规则、附加前提证明法、归谬法</li></ol></div><details class="folding-tag" cyan><summary> 易错集 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61cfef662ab3f51d91742596.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61cfef702ab3f51d91742ddd.png" alt="" /></p>              </div>            </details><h2 id="一阶逻辑"><a class="markdownIt-Anchor" href="#一阶逻辑"></a> 一阶逻辑</h2><h3 id="一阶逻辑基本概念"><a class="markdownIt-Anchor" href="#一阶逻辑基本概念"></a> 一阶逻辑基本概念</h3><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><ul><li>在命题逻辑中，研究的基本单位是简单命题，对简单命题不再进行分解，并且不考虑命题之间的内在联系和数量关系。所有的人都是要死的，苏格拉底是人，所以苏格拉底是要死的。这个简单而有名的苏格拉底三段论，却无法用命题逻辑予以证明。</li><li>一阶逻辑所研究的内容: 为了克服命题逻辑的局限性，将简单命题再细分，分析出个体词、谓词和量词，以期达到<span class='p blue'>表达出个体与总体的内在联系和数量关系</span>。</li></ul></div><blockquote><p>个体词</p></blockquote><span class='p cyan'></span>个体词<span class='p cyan'></span>是指可以独立存在的客体，它可以是一个具体的事物，也可以是一个抽象的概念。<blockquote><p>个体常项</p></blockquote><p>表示具体的或特定的个体的词称为<span class='p cyan'>个体常项</span>，一般用小写的英文字母 <em>a, b, c, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span></span></span></span></em> 表示。</p><blockquote><p>个体变项</p></blockquote><p>表示抽象的，或泛指的个体的词称为<span class='p cyan'>个体变项</span>，常用小写字母 <em>x, y, z, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span></span></span></span></em> 表示。</p><blockquote><p>个体域（论域）</p></blockquote><p>个体变项的取值范围称为<span class='p cyan'>个体域（或论域）</span></p><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>个体域可以是有限的集合，也可以是无限的集合。当无特殊声明时，个体域有宇宙间的一切事物组成，称为<span class='p cyan'>全总个体域</span></p></div><blockquote><p>谓词</p></blockquote><span class='p cyan'>谓词</span>是用来刻画个体词的性质或个体词之间关系的词<blockquote><p>谓词常项、谓词变项</p></blockquote><p>称表示具体性质或关系的谓词为<span class='p cyan'>谓词常项</span>，表示抽象的或泛指的谓词称为<span class='p cyan'>谓词变项</span>，均用大写英文字母 *F, G, H, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span></span></span></span>*表示。</p><div class="note icon-padding flat"><i class="note-icon fas fa-thumbs-up"></i><ul><li>个体变项 x 具有性质 F， 记作F（x）</li><li>个体变项 x, y 具有性质L， 记作L（x, y)</li></ul></div><blockquote><p>元数、n元谓词</p></blockquote><p>谓词中包含的个体变项数称为<span class='p cyan'>元数</span></p><p>含 n (n <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≥</mo></mrow><annotation encoding="application/x-tex">\geq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≥</span></span></span></span> 1)个个体变项的谓词称为 <span class='p cyan'>n元谓词</span></p><span class='p cyan'>一元谓词</span>表示性质<span class='p cyan'>多元谓词</span>表示事物之间的关系<span class='p cyan'>0元谓词</span> 不含个体变项的谓词，0元谓词都是命题。<details class="folding-tag" blue><summary> 例题 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61cffc002ab3f51d917e1190.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61cffc1f2ab3f51d917e2c19.png" alt="" /></p>              </div>            </details><blockquote><p>量词</p></blockquote><p>表示个体常项或变项之间数量关系的词为<span class='p cyan'>量词</span></p><ol><li><mark>全称量词</mark>对应日常语言中的“一切”，“所有的”，“任意的”等词，用符号 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span> 表示。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span> x F(x) 表示个体域里的所有个体都有性质F。</li><li><mark>存在量词</mark>对应日常语言中的”存在着“，“有一个”，“至少有一个”等词，用符号 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span> 表示。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span> x F(x) 表示存在着个体域中的个体具有性质F。</li></ol><blockquote><p>特性谓词</p></blockquote><p>在考虑符号化时必须先明确个体域</p><div class="note icon-padding flat"><i class="note-icon fas fa-thumbs-up"></i><p>个人理解：特性谓词的目的是从个体域中分离出一阶逻辑的范围条件</p></div><details class="folding-tag" red><summary> 例题 </summary>              <div class='content'>              <ul><li>(1) 所有人都要死的</li><li>(2) 有的人活百岁以上<ul><li>第一种情况，个体域D为人类集合<ul><li>(1) <em><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span> x F(x)</em>，其中 <em>F(x)</em>：x是要死的</li><li>(2) <em><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span> x F(x)</em>，其中 <em>F(x)</em>：x活百岁以上</li></ul></li><li>第二种情况，个体域D为全总个体域 M(x) 为特性谓词<ul><li>(1) <em><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span> x (M(x) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> F(x)</em> ，其中M(x) ：x是人</li><li>(2) <em><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span> x (M(x) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> G(x))</em> , 其中M(x) ：x是人</li></ul></li></ul></li></ul><div class="note orange icon-padding flat"><i class="note-icon fas fa-exclamation-circle"></i><p>思考：在全总个体域中，能否将(1)符号化为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span> x(M(x) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> F(x))？ 能否将(2)符号化为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span> x(M(x) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> G(x))?</p><div class="hide-block"><button type="button" class="hide-button" style="">查看答案    </button><div class="hide-content"><p>不可以，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span> x(M(x) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> F(x))表示表示宇宙中的万物都是人并且会呼吸显然是个假命题。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span> x(M(x) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> G(x))表示在宇宙万物中存在某个个体x,“如果X是人则X会用左手写字”,显然只要x不是人，上述论述就为真，因而它是个真命题。</p></div></div></div>              </div>            </details><div class="note green icon-padding flat"><i class="note-icon fas fa-check-circle"></i><ul><li>如果事先没有给出个体域，都应以全总个体域为个体域</li><li>在引入特性谓词后，使用全称量词与存在量词符号化的形式是不同的</li><li>个体域和谓词的含义确定之后，n元谓词要转化为命题至少需要n个量词</li><li>当个体域为有限集时，如D= {a<sub>1</sub> , a<sub>2</sub>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span></span></span></span> , a<sub>n</sub> } ,对于任意的谓词 A(x) ，都有<ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span> x A(x) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> A(a<sub>1</sub>) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> A(a<sub>2</sub>) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> A(a<sub>n</sub>)</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span> x A(x) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> A(a<sub>1</sub>) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> A(a<sub>2</sub>) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> A(a<sub>n</sub>)<br />这实际上就是将一阶逻辑中命题公式转化为命题逻辑中的命题公式</li></ul></li><li>多个量词同时出现时，不能随意颠倒他们的顺序</li><li>有些命题的符号化形式可不止一种</li></ul></div><details class="folding-tag" blue><summary> 例题 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d0039c2ab3f51d91849c07.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d003a92ab3f51d9184a6f0.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d003ce2ab3f51d9184c242.png" alt="" /></p>              </div>            </details><h3 id="一阶逻辑合式公式及解析"><a class="markdownIt-Anchor" href="#一阶逻辑合式公式及解析"></a> 一阶逻辑合式公式及解析</h3><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p><span class='p cyan'>一阶语言</span>是用于一阶逻辑的形式语言，而一阶逻辑就是建立在一阶语言基础上的逻辑体系，一阶语言本身不具备任何意义，但可以根据需要被解释成具有某种含义。</p></div><blockquote><p>符号表</p></blockquote><ol><li>个体常项：<em>a, b, c, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span></span></span></span> , a<sub>i</sub> , b<sub>i</sub> , c<sub>i</sub> , <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span></span></span></span> , i <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≥</mo></mrow><annotation encoding="application/x-tex">\geq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≥</span></span></span></span> 1</em>;</li><li>个体变项：<em>x, y, z, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span></span></span></span> , x<sub>i</sub> , y<sub>i</sub> , z<sub>i</sub> , <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span></span></span></span> , i <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≥</mo></mrow><annotation encoding="application/x-tex">\geq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≥</span></span></span></span> 1</em>;</li><li>函数符号：<em>f, g, h, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span></span></span></span> , f<sub>i</sub> , g<sub>i</sub> , h<sub>i</sub> , <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span></span></span></span> , i <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≥</mo></mrow><annotation encoding="application/x-tex">\geq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≥</span></span></span></span> 1</em>;</li><li>谓词符号：<em>F, G, H, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span></span></span></span> , F<sub>i</sub> , G<sub>i</sub> , H<sub>i</sub> , <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span></span></span></span> , i <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≥</mo></mrow><annotation encoding="application/x-tex">\geq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≥</span></span></span></span> 1</em>;</li><li>量词符号：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>;</li><li>联结词符号：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>↔</mo></mrow><annotation encoding="application/x-tex">\leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">↔</span></span></span></span>;</li><li>括号和逗号</li></ol><blockquote><p>项</p></blockquote><p>项的递归定义：</p><ol><li>个体常项和个体变项是项</li><li>若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Φ</mi></mrow><annotation encoding="application/x-tex">\Phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Φ</span></span></span></span> (x<sub>1</sub>, x<sub>2</sub>, …, x<sub>n</sub>)是任意的n元函数，t<sub>1</sub> , t<sub>2</sub>, …, t<sub>n</sub>是任意的n个项，则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Φ</mi></mrow><annotation encoding="application/x-tex">\Phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Φ</span></span></span></span> (t<sub>1</sub>, t<sub>2</sub>, …, t<sub>n</sub>)是<span class='p cyan'>项</span>。</li><li>只有有限次地使用1、2生成的符号串才是项。</li></ol><blockquote><p>原子公式</p></blockquote><p>设R(x<sub>1</sub>, x<sub>2</sub>, … , x<sub>n</sub>)是任意n元谓词， t<sub>1</sub>, t<sub>2</sub>, … , t<sub>n</sub>是项，则称R(t<sub>1</sub>, t<sub>2</sub>, … , t<sub>n</sub>)是<span class='p cyan'>原子公式</span>。</p><blockquote><p>合式公式</p></blockquote><p>合式公式的递归定义：</p><ol><li>原子公式是合式公式。</li><li>如果A是合式公式，则(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span> A)也是合式公式。</li><li>如果A、B是合式公式，则(A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> B)、(A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span> B)、(A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> B)、(A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>↔</mo></mrow><annotation encoding="application/x-tex">\leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">↔</span></span></span></span> B) 也是合式公式。</li><li>如果A、B是合式公式，则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span> xA、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span> xA也是合式公式</li><li>只有有限次地应用1~4组成的符号串才是合式公式。<br />在一阶逻辑中合式公式又称为<span class='p cyan'>谓词公式</span>，简称<span class='p cyan'>公式</span>。</li></ol><blockquote><p>指导变元（项）、辖域、约束出现、自由出现</p></blockquote><ul><li>在公式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span> xA和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span> xA中，称x为<span class='p cyan'>指导变元</span>。</li><li>在公式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span> xA和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span> xA中，A为相应量词的<span class='p cyan'>辖域</span>。</li><li>在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span> x和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span> x的辖域中，x的所有出现都称为<span class='p cyan'>约束出现</span>。</li><li>A中不是约束出现的其他变项均称为是<span class='p cyan'>自由出现</span>的。</li></ul><details class="folding-tag" green><summary> 例题 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d00d2c2ab3f51d918c751d.png" alt="" /></p>              </div>            </details><div class="note icon-padding flat"><i class="note-icon fas fa-thumbs-up"></i><p>特殊记法：</p><ol><li>用A(x<sub>1</sub>, x<sub>2</sub>, …, x<sub>n</sub>)表示含x<sub>1</sub>, x<sub>2</sub>, …, x<sub>n</sub>自由出现的公式。</li><li>用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Δ</mi></mrow><annotation encoding="application/x-tex">\Delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span></span></span></span>表示任意的量词<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>或<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Δ</mi></mrow><annotation encoding="application/x-tex">\Delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span></span></span></span> x<sub>1</sub>A(x<sub>1</sub>, x<sub>2</sub>, …, x<sub>n</sub>)是含有x<sub>2</sub>, x<sub>3</sub>, …, x<sub>n</sub>自由出现的公式，可记为A<sub>1</sub>(x<sub>2</sub>, x<sub>3</sub>, …, x<sub>n</sub>)。</li></ol></div><blockquote><p>闭式</p></blockquote><p>设A是任意的公式，若A中不含有自由出现的个体变项，则称A为封闭的公式，简称<span class='p cyan'>闭式</span>。</p><blockquote><p>换名规则</p></blockquote><p>将一个指导变项及其在辖域中所有约束出现替换成公式中没有出现的个体变项符号。</p><blockquote><p>一阶公式的解释</p></blockquote><p>一阶公式没有确定的意义，一旦将其中的变项（项的变项、谓词变项）用指定的常项代替后，所得公式就具备一定的意义，有时就变成命题了。</p><details class="folding-tag" green><summary> 例题 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d0212d2ab3f51d919c3d17.png" alt="" /></p><div class="hide-block"><button type="button" class="hide-button" style="">点击有惊喜    </button><div class="hide-content"><p>有同学要问了，x,y也是变项，它不是还存在吗。其实这里用到了整体的思想，我们把整个函数看成项，x,y只是函数项的组成部分，这样看，是不是就是把项的变项变成了常项呢。当然不是绝对的，看情况而定。</p></div></div>              </div>            </details><p>一个<span class='p cyan'>解释I</span>由下面4个部分组成</p><ol><li>非空个体域D；</li><li>结论集的每一个个体变项符号指定一个D中的元素；</li><li>结论集的每一个函数变项符号指定一个D中的函数；</li><li>结论集的每一个谓词变项符号指定一个D中的谓词；</li></ol><details class="folding-tag" cyan><summary> 例题 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d02d232ab3f51d91a56d73.jpg" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d02d232ab3f51d91a56d6c.jpg" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d02d232ab3f51d91a56d3b.jpg" alt="" /></p>              </div>            </details><div class="note orange icon-padding flat"><i class="note-icon fas fa-exclamation-circle"></i><p>被解释的公式不一定全部包含解释中的四部分。<br />封闭的公式在任何解释下都变成命题。<br />不是闭式的公式在某些解释下也可能变为命题。比如知道前件为假，但不知道后件结果，如此也是命题。</p></div><blockquote><p>永真式、永假式、可满足式</p></blockquote><ul><li>设A为一个公式，若A在任何解释下均为真，则称A为<span class='p cyan'>永真式</span>(或称逻辑有效式)。</li><li>设A为一个公式，若A在任何解释下均为假，则称A为<span class='p cyan'>矛盾式</span>(或永假式)。</li><li>设A为一个公式，若至少存在一个解释使A为真，则称A为<span class='p cyan'>可满足式</span>。</li></ul><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><ol><li>永真式一定是可满足式，但可满足式不一定是永真式。</li><li>在一阶逻辑中，到目前为止，还没有找到一种可行的算法，用来判断任意一个公式是否是可满足的，这与命题逻辑的情况是完全不同的。</li><li>但对某些特殊的公式还是可以判断的。</li></ol></div><blockquote><p>代换实例</p></blockquote><p>设A<sub>0</sub>是含有命题变项p<sub>1</sub>, p<sub>2</sub>, …, p<sub>n</sub>的命题公式，A<sub>1</sub>, A<sub>2</sub>, …, A<sub>n</sub>是n个谓词公式，用A<sub>i</sub>(1 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span></span></span></span> i <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span></span></span></span> n)处处代替A<sub>0</sub>中的p<sub>i</sub>，所得公式A称为A<sub>0</sub>的<span class='p cyan'>代换实例</span>。</p><p>重言式的代换实例都是永真式，矛盾式的代换实例都是矛盾式。</p><div class="note green icon-padding flat"><i class="note-icon fas fa-check-circle"></i><p>判断公式类型的方法：</p><ol><li>举例验证可满足式</li><li>代换实例求证</li></ol></div><h3 id="一阶逻辑等值式"><a class="markdownIt-Anchor" href="#一阶逻辑等值式"></a> 一阶逻辑等值式</h3><blockquote><p>等值式</p></blockquote><p>设A，B是一阶逻辑中任意两个公式，若 A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>↔</mo></mrow><annotation encoding="application/x-tex">\leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">↔</span></span></span></span> B是永真式，则称A与B是等值的, 记做A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> B，称 A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> B 是<span class='p cyan'>等值式</span>。</p><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><ol><li>由于重言式都是逻辑有效式，因而1.3中给出的24个等值式及其代换实例都是一阶逻辑中的等值式。</li><li>判断公式A与B是否等值，等价于判断公式A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>↔</mo></mrow><annotation encoding="application/x-tex">\leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">↔</span></span></span></span> B是否为永真式。</li><li>重要等值式:<ul><li>代换实例</li><li>消去量词等值式</li><li>量词否定等值式</li><li>量词辖域收缩与扩张等值式</li><li>量词分配等值式</li></ul></li></ol></div><blockquote><p>消去量词等值式</p></blockquote><ol><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>xA(x) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> A(a<sub>1</sub>)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span>A(a<sub>2</sub>)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span>…<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span>A(a<sub>n</sub>)</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span>xA(x) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> A(a<sub>1</sub>)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span>A(a<sub>2</sub>)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span>…<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span>A(a<sub>n</sub>)</li></ol><div class="note blue icon-padding simple"><i class="note-icon fas-bullhorn"></i><p>当辖域前面有多个量词，在演算中先消去离辖域近的量词</p></div><details class="folding-tag" cyan><summary> 例题 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d1476a2ab3f51d915d6f1b.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d147852ab3f51d915d8cc3.png" alt="" /></p>              </div>            </details><blockquote><p>量词否定等值式</p></blockquote><ol><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>xA(x) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span>x<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span>A(x)</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span>xA(x) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>x<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span>A(x)</li></ol><div class="note blue icon-padding simple"><i class="note-icon fas-bullhorn"></i><p>当辖域前面有多个量词，可以一步一步往辖域内靠近</p></div><details class="folding-tag" cyan><summary> 例题 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d147ac2ab3f51d915db128.png" alt="" /></p>              </div>            </details><blockquote><p>量词辖域收缩与扩张等值式</p></blockquote><ol><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>x(A(x)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span>B) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>xA(x)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span>B</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>x(A(x)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span>B) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>xA(x)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span>B</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>x(A(x)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span>B) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span>xA(x)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span>B</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>x(B<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span>A(x)) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> B<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>xA(x)</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span>x(A(x)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span>B) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span>xA(x)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span>B</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span>x(A(x)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span>B) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span>xA(x)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span>B</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span>x(A(x)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span>B) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>xA(x)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span>B</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span>x(B<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span>A(x)) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> B<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span>xA(x)</li></ol><blockquote><p>量词分配等值式</p></blockquote><ol><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>x(A(x)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span>B(x)) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>xA(x)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>xB(x)</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span>x(A(x)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span>B(x)) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span>xA(x)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span>xB(x)</li></ol><div class="note orange icon-padding simple"><i class="note-icon fas fa-exclamation-circle"></i><p>全称量词“<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>”对“<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span>”无分配律。<br />存在量词“<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span>”对“<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span>”无分配律。</p></div><blockquote><p>一阶逻辑等值演算规则</p></blockquote><ol><li><mark>置换规则</mark>：设<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Φ</mi></mrow><annotation encoding="application/x-tex">\Phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Φ</span></span></span></span>(A)是含公式A的公式，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Φ</mi></mrow><annotation encoding="application/x-tex">\Phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Φ</span></span></span></span>(B)是用公式B取代<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Φ</mi></mrow><annotation encoding="application/x-tex">\Phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Φ</span></span></span></span>(A)中所有的A之后的公式，若A<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span>B，则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Φ</mi></mrow><annotation encoding="application/x-tex">\Phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Φ</span></span></span></span>(A)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Φ</mi></mrow><annotation encoding="application/x-tex">\Phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Φ</span></span></span></span>(B)。</li><li><mark>换名规则</mark>：设A为一公式，将A中某量词辖域中某约束变项的所有出现及相应的指导变元改成该量词辖域中未曾出现过的某个体变项符号，公式的其余部分不变，设所得公式为A’，则A’<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span>A。</li><li><mark>代替规则</mark>：设A为一公式，将A中某个自由出现的个体变项的所有出现用A中未曾出现过的个体变项符号代替，A中其余部分不变，设所得公式为A’，则A’<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span>A。</li></ol><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>一阶逻辑中的置换规则与命题逻辑中的置换规则形式上完全相同，只是在这里A，B是一阶逻辑公式。</p></div><h3 id="一阶逻辑前束范式"><a class="markdownIt-Anchor" href="#一阶逻辑前束范式"></a> 一阶逻辑前束范式</h3><blockquote><p>一阶逻辑前束范式</p></blockquote><p>设A为一个一阶逻辑公式，若A具有如下形式<br />Q<sub>1</sub>x<sub>1</sub>Q<sub>2</sub>x<sub>2</sub> … Q<sub>k</sub>x<sub>k</sub>B<br />则称A为<span class='p cyan'>前束范式</span>，其中Q<sub>i</sub>(1<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span></span></span></span>i<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span></span></span></span>k)为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>或<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span>，B为不含量词的公式。</p><div class="note orange icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><ol><li>求前束范式的过程，就是制造量词辖域可以扩大的条件，进行量词辖域扩大。</li><li>任何公式的前束范式都是存在的，但一般说来，并不唯一。</li><li>利用一阶逻辑等值式以及三条变换规则（置换规则、换名规则、代替规则）就可以求出与公式等值的前束范式。</li></ol></div><details class="folding-tag" cyan><summary> 例题 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d14dea2ab3f51d91635cd1.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d14ea72ab3f51d9163f4ba.png" alt="" /></p>              </div>            </details><div class="note blue icon-padding simple"><i class="note-icon fas fa-thumbs-up"></i><p>当存在多个量词时，辖域扩张顺序是从右往左，也就是先提取出来的量词放到最右边。</p></div><h3 id="一阶逻辑推理理论"><a class="markdownIt-Anchor" href="#一阶逻辑推理理论"></a> 一阶逻辑推理理论</h3><blockquote><p>推理正确、推理定律</p></blockquote><ul><li>在一阶逻辑中，从前提A<sub>1</sub>, A<sub>2</sub>, …A<sub>k</sub>出发推结论B的推理形式结构，依然采用如下的蕴涵式形式A<sub>1</sub> , A<sub>2</sub> ,… , A<sub>k</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> B。若为永真式，则称<span class='p cyan'>推理正确</span>，否则称推理不正确。</li><li>在一阶逻辑中称永真式的蕴涵式为<span class='p cyan'>推理定律</span>，若一个推理的形式结构正是某条推理定律，则这个推理显然是正确的。</li></ul><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>在一阶逻辑的推理中，某些前提与结论可能是受量词限制，为了使用命题逻辑中的等值式和推理定律，必须在推理过程中有消去和添加量词的规则，以便使谓词演算公式的推理过程可类似于命题演算中推理理论那样进行。</p></div><blockquote><p>推理定律来源</p></blockquote><ol><li>命题逻辑推理定律的代换实例</li><li>由基本等值式生成的推理定律</li><li>量词分配等值式</li><li>推理规则—量词消去和引入规则</li></ol><blockquote><p>推理规则</p></blockquote><p>为了构造推理系统，还要给出4条重要的推理规则,即消去量词和引入量词的规则：</p><ol><li>全称量词消去规则(简记为UI规则或UI)</li><li>全称量词引入规则(简记为UG规则或UG)</li><li>存在量词引入规则(简称EG规则或EG)</li><li>存在量词消去规则(简记为EI规则或EI)</li></ol><blockquote><p>全称量词消去规则</p></blockquote><p>如果个体域的所有元素都具有性质A，则个体域中的任一元素具有性质A。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∵</mo><mi mathvariant="normal">∀</mi><mi>x</mi><mi>A</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>∴</mo><mi>A</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\because \forall x A ( x ) \therefore A ( y ) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">∵</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∀</span><span class="mord mathdefault">x</span><span class="mord mathdefault">A</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel amsrm">∴</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∵</mo><mi mathvariant="normal">∀</mi><mi>x</mi><mi>A</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>∴</mo><mi>A</mi><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\because \forall x A ( x ) \therefore A ( c ) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">∵</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∀</span><span class="mord mathdefault">x</span><span class="mord mathdefault">A</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel amsrm">∴</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span></span></p><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>用y或c去取代A(x)中自由出现的x时，一定要在x自由出现的一切地方进行取代，且y在其他地方未约束出现过。</p></div><details class="folding-tag" cyan><summary> 举例 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d158132ab3f51d916c8e16.png" alt="" /></p>              </div>            </details><blockquote><p>全称量词引入规则</p></blockquote><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∵</mo><mi>A</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo><mo>∴</mo><mi mathvariant="normal">∀</mi><mi>x</mi><mi>A</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\because A ( y )  \therefore \forall x A ( x )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">∵</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel amsrm">∴</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∀</span><span class="mord mathdefault">x</span><span class="mord mathdefault">A</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span></span></p><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><ol><li>无论A(y)中自由出现的个体变项y取何值，A(y)应该均为真。</li><li>取代自由出现的y的x也不能在A(y)中约束出现。</li></ol></div><details class="folding-tag" cyan><summary> 举例 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d1582b2ab3f51d916ca574.png" alt="" /></p>              </div>            </details><blockquote><p>存在量词引入规则</p></blockquote><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∵</mo><mi>A</mi><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo><mo>∴</mo><mi mathvariant="normal">∃</mi><mi>x</mi><mi>A</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\because A ( c )  \therefore \exists x A ( x )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">∵</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel amsrm">∴</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∃</span><span class="mord mathdefault">x</span><span class="mord mathdefault">A</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span></span></p><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><ol><li>c是特定的个体常项</li><li>取代c的x不能在A©中出现过。</li></ol></div><details class="folding-tag" cyan><summary> 举例 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d158562ab3f51d916ccd69.png" alt="" /></p>              </div>            </details><blockquote><p>存在量词消去规则</p></blockquote><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∵</mo><mi mathvariant="normal">∃</mi><mi>x</mi><mi>A</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>∴</mo><mi>A</mi><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\because \exists x A ( x ) \therefore A ( c ) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">∵</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∃</span><span class="mord mathdefault">x</span><span class="mord mathdefault">A</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel amsrm">∴</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span></span></p><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><ol><li>c是使A为真的特定的个体常项。</li><li>c不在A(x)中出现。</li><li>若A(x)中除自由出现的x外，还有其它自由出现的个体变项，此规则不能使用。</li></ol></div><details class="folding-tag" cyan><summary> 举例 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d159962ab3f51d916dfbf0.png" alt="" /></p>              </div>            </details><blockquote><p>推理规则</p></blockquote><ol><li>前提引入规则</li><li>结论引入规则</li><li>置换规则</li><li>假言推理规则</li><li>附加规则</li><li>化简规则</li><li>拒取式规则</li><li>假言三段论规则</li><li>析取三段论规则</li><li>构造性二难推理规则</li><li>合取引入规则</li><li>UI规则</li><li>UG规则</li><li>EG规则</li><li>EI规则</li></ol><details class="folding-tag" cyan><summary> 例题 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d15ed22ab3f51d917248b0.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d15f7b2ab3f51d9172cf85.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d15f872ab3f51d9172d966.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d1608b2ab3f51d9173aa09.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d16e662ab3f51d917f95e2.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d16e722ab3f51d917f9f78.png" alt="" /></p>              </div>            </details><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>在证明序列中先引进带存在量词的前提。</p></div><h2 id="集合的基本概念和运算"><a class="markdownIt-Anchor" href="#集合的基本概念和运算"></a> 集合的基本概念和运算</h2><h3 id="集合的基本概念"><a class="markdownIt-Anchor" href="#集合的基本概念"></a> 集合的基本概念</h3><blockquote><p>集合、元素</p></blockquote><p>集合(Set)是不能精确定义的基本概念。直观地说，把一些事物汇集到一起组成一个整体就叫集合，而这些事物就是这个集合的元素或成员。集合通常用大写的英文字母来标记。</p><blockquote><p>常见的数的集合</p></blockquote><ul><li>N—自然数集合</li><li>Z—整数集合</li><li>Q—有理数集合</li><li>R—实数集合</li><li>C—复数集合</li></ul><blockquote><p>集合的表示方法</p></blockquote><ol><li>列元素法(列出集合的所有元素，元素之间用逗号隔开，并把它们用花括号括起来) <details class="folding-tag" cyan><summary> 举例 </summary>              <div class='content'>              <p>A＝{a，b，c，…，z}<br />Z＝{0，±1，±2，…}<br />C＝{桌子,灯泡,老虎,自然数}</p>              </div>            </details></li><li>谓词表示法(用谓词来概括集合中元素的属性) <details class="folding-tag" cyan><summary> 举例 </summary>              <div class='content'>              <p>B＝{x|x∈R∧x<sup>2</sup>－1＝0}</p>              </div>            </details></li></ol><blockquote><p>集合的元素</p></blockquote><ol><li>集合的元素是彼此不同的，如果同一个元素在集合中多次出现应该认为是一个元素。</li><li>集合的元素是无序的。</li><li>一般来说，集合的元素可以是任何类型的事物，一个集合也可以作为另一个集合的元素。</li></ol><blockquote><p>元素和集合之间的关系</p></blockquote><p>元素和集合之间的关系是隶属关系，即属于或不属于，属于记作<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo></mrow><annotation encoding="application/x-tex">\in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∈</span></span></span></span>，不属于记作∉</p><details class="folding-tag" cyan><summary> 举例 </summary>              <div class='content'>              <p>例如：A＝{a，{b，c}，d，}中，a∈A，{b，c}∈A，d∈A，∈A，b∉A，{d}∉A。b和{d}是A的元素的元素。<br /><img src="https://pic.imgdb.cn/item/61d19ab32ab3f51d91a2df36.png" alt="" /></p>              </div>            </details><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><ol><li>隶属关系可以看作是处在不同层次上的集合之间的关系。</li><li>规定：对任何集合A都有A∉A。</li></ol></div><blockquote><p>集合间关系</p></blockquote><ul><li>设A，B为集合，如果B中的每个元素都是A中的元素，则称B是A的子集合，简称<span class='p cyan'>子集</span>。这时也称B被A<span class='p cyan'>包含</span>，或A包含B，记作 B<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>A，不包含记作<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊊</mo></mrow><annotation encoding="application/x-tex">\subsetneq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel amsrm">⊊</span></span></span></span>。</li></ul><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><ol><li>显然对任何集合A都有A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span> A。</li><li>隶属关系和包含关系都是两个集合之间的关系，对于某些集合可以同时成立这两种关系。例如 A＝{a，{a}}和{a}既有{a}∈A，又有{a}∉A。前者把它们看成是不同层次上的两个集合，后者把它们看成是同一层次上的两个集合。</li></ol></div><ul><li>设A，B为集合，如果 A<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>B 且 B<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>A，则称A与B<span class='p cyan'>相等</span>，记作A＝B。如果A与B不相等，则记作A≠B。相等的符号化表示为：A＝B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> A<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> B<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>A</li><li>设A，B为集合，如果 B<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>A 且 B≠A，则称B是A的<span class='p cyan'>真子集</span>，记作B<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊂</mo></mrow><annotation encoding="application/x-tex">\subset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">⊂</span></span></span></span>A。</li><li>不含任何元素的集合叫做<span class='p cyan'>空集</span>，记作<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span>。空集的符号化表示为：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span> ＝{x|x≠x}。由定义可知，空集并不是集合的元素。</li></ul><blockquote><p>空集的性质</p></blockquote><ol><li>空集是一切集合的子集。</li><li>空集是唯一的。</li></ol><blockquote><p>n元集</p></blockquote><p>含有n个元素的集合简称<span class='p cyan'>n元集</span>，它的含有m(m≤n)个元素的子集叫做它的<span class='p cyan'>m元子集</span>。</p><blockquote><p>幂集</p></blockquote><p>一般地说，对于n元集A，它的0元子集有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>C</mi><mi>n</mi><mn>0</mn></msubsup></mrow><annotation encoding="application/x-tex">C_{n}^{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.061108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span> 个，1元子集有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>C</mi><mi>n</mi><mn>1</mn></msubsup></mrow><annotation encoding="application/x-tex">C_{n}^{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.061108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span> 个，…，m元子集有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>C</mi><mi>n</mi><mi>m</mi></msubsup></mrow><annotation encoding="application/x-tex">C_{n}^{m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.93033em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span> 个，…，n元子集有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>C</mi><mi>n</mi><mi>n</mi></msubsup></mrow><annotation encoding="application/x-tex">C_{n}^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.93033em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>  个。子集总数为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>C</mi><mi>n</mi><mn>0</mn></msubsup><mo>+</mo><msubsup><mi>C</mi><mi>n</mi><mn>1</mn></msubsup><mo>+</mo><msubsup><mi>C</mi><mi>n</mi><mn>2</mn></msubsup><mo>+</mo><mo>⋯</mo><mo>+</mo><msubsup><mi>C</mi><mi>n</mi><mi>n</mi></msubsup><mo>=</mo><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">C _ { n } ^ { 0 } + C _ { n } ^ { 1 } + C _ { n } ^ { 2 } + \cdots + C _ { n } ^ { n } = 2 ^ { n }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1111079999999998em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1111079999999998em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1111079999999998em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9613919999999999em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7143919999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>设A为集合，把A的全部子集构成的集合叫做A的<span class='p cyan'>幂集</span>，记作P(A)(或PA，2<sup>A</sup>)。</p><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><ul><li>幂集的符号化表示为P(A)＝{x | x<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>A}</li><li>若A是n元集，则P(A)有 2<sup>n</sup> 个元素。</li></ul></div><blockquote><p>全集</p></blockquote><p>在一个具体问题中，如果所涉及的集合都是某个集合的子集，则称这个集合为<span class='p cyan'>全集</span>，记作E。</p><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><ul><li>全集是有相对性的，不同的问题有不同的全集，即使是同一个问题也可以取不同的全集。</li><li>例如，在研究整数的问题时，可以把整数集Z取作全集</li><li>一般地说，全集取得小一些，问题的描述和处理会简单些。</li></ul></div><h3 id="集合的基本运算"><a class="markdownIt-Anchor" href="#集合的基本运算"></a> 集合的基本运算</h3><blockquote><p>并集、交集、相对补集</p></blockquote><p>设A，B为集合，A与B的并集A<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∪</mo></mrow><annotation encoding="application/x-tex">\cup</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∪</span></span></span></span>B，交集A<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∩</span></span></span></span>B ，B对A的相对补集A－B分别定义如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>∪</mo><mi>B</mi><mo>=</mo><mo stretchy="false">{</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo>∈</mo><mi>A</mi><mo>∨</mo><mi>x</mi><mo>∈</mo><mi>B</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">A \cup B = \{ x | x \in A \lor x \in B \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">}</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>∩</mo><mi>B</mi><mo>=</mo><mo stretchy="false">{</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo>∈</mo><mi>A</mi><mo>∧</mo><mi>x</mi><mo>∈</mo><mi>B</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">A \cap B = \{ x | x \in A \land x \in B \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">}</span></span></span></span></span></p><p><img src="https://pic.imgdb.cn/item/61d1ca9e2ab3f51d91c93095.png" alt="" /></p><ul><li>如果两个集合的交集为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span>，则称这两个集合是<span class='p cyan'>不相交</span></li><li>两个集合的并和交运算可以推广成n个集合的并和交：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mn>1</mn></msub><mo>∪</mo><msub><mi>A</mi><mn>2</mn></msub><mo>∪</mo><mo>…</mo><mo>∪</mo><msub><mi>A</mi><mi>n</mi></msub><mo>=</mo><mo stretchy="false">{</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo>∈</mo><msub><mi>A</mi><mn>1</mn></msub><mo>∨</mo><mi>x</mi><mo>∈</mo><msub><mi>A</mi><mn>2</mn></msub><mo>∨</mo><mo>…</mo><mo>∨</mo><mi>x</mi><mo>∈</mo><msub><mi>A</mi><mi>n</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">A _ { 1 } \cup A _ { 2 } \cup \ldots \cup A _ { n } = \{ x | x \in A _ { 1 } \lor x \in A _ { 2 } \lor \ldots \lor x \in A _ { n } \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mn>1</mn></msub><mo>∩</mo><msub><mi>A</mi><mn>2</mn></msub><mo>∩</mo><mo>…</mo><mo>∩</mo><msub><mi>A</mi><mi>n</mi></msub><mo>=</mo><mo stretchy="false">{</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo>∈</mo><msub><mi>A</mi><mn>1</mn></msub><mo>∧</mo><mi>x</mi><mo>∈</mo><msub><mi>A</mi><mn>2</mn></msub><mo>∧</mo><mo>…</mo><mo>∧</mo><mi>x</mi><mo>∈</mo><msub><mi>A</mi><mi>n</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">A _ { 1 } \cap A _ { 2 } \cap \ldots \cap A _ { n } = \{ x | x \in A _ { 1 } \land x \in A _ { 2 } \land \ldots \land x \in A _ { n } \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></span></p><ul><li>两个集合的并和交运算可以推广到无穷多个集合的情况：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mo>∪</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant="normal">∞</mi></msubsup><msub><mi>A</mi><mi>i</mi></msub><mo>=</mo><msub><mi>A</mi><mn>1</mn></msub><mo>∪</mo><msub><mi>A</mi><mn>2</mn></msub><msub><mo>∪</mo><mo>…</mo></msub></mrow><annotation encoding="application/x-tex">\cup _ { i = 1 } ^ { \infty } A _ { i } = A _ { 1 } \cup A _ { 2 } \cup _ { \ldots }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9613919999999999em;vertical-align:-0.247em;"></span><span class="mord"><span class="mbin">∪</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mbin">∪</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.066em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight">…</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mo>∩</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant="normal">∞</mi></msubsup><msub><mi>A</mi><mi>i</mi></msub><mo>=</mo><msub><mi>A</mi><mn>1</mn></msub><mo>∩</mo><msub><mi>A</mi><mn>2</mn></msub><msub><mo>∩</mo><mo>…</mo></msub></mrow><annotation encoding="application/x-tex">\cap _ { i = 1 } ^ { \infty } A _ { i } = A _ { 1 } \cap A _ { 2 } \cap _ { \ldots }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9613919999999999em;vertical-align:-0.247em;"></span><span class="mord"><span class="mbin">∩</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mbin">∩</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.066em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight">…</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>对称差集</p></blockquote><p>设A，B为集合，A与B的对称差集 A<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⨁</mo></mrow><annotation encoding="application/x-tex">\bigoplus</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⨁</span></span></span></span>B定义为：A<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⨁</mo></mrow><annotation encoding="application/x-tex">\bigoplus</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⨁</span></span></span></span>B＝(A－B)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∪</mo></mrow><annotation encoding="application/x-tex">\cup</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∪</span></span></span></span>(B－A) 或者 A<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⨁</mo></mrow><annotation encoding="application/x-tex">\bigoplus</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⨁</span></span></span></span>B＝(A<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∪</mo></mrow><annotation encoding="application/x-tex">\cup</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∪</span></span></span></span>B)-(A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∩</span></span></span></span> B)</p><blockquote><p>绝对补集</p></blockquote><p>设E为全集，A <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span> E，则称A对E的相对补集为A的<span class='p cyan'>绝对补集</span>，记作<sub>A，即</sub>A = E - A</p><blockquote><p>文氏图</p></blockquote><ul><li>集合之间的关系和运算可以用文氏图给予形象的描述。</li><li>文氏图的构造方法如下：<ol><li>画一个大矩形表示全集E(有时为简单起见可将全集省略)。</li><li>在矩形内画一些圆(或任何其它的适当的闭曲线)，用圆的内部表示集合。</li><li>不同的圆代表不同的集合。如果没有关于集合不交的说明，任何两个圆彼此相交。</li><li>图中阴影的区域表示新组成的集合。</li><li>可以用实心点代表集合中的元素。</li></ol></li></ul><blockquote><p>有穷集的计数问题</p></blockquote><p>使用文氏图可以很方便地解决有穷集的计数问题:<br />1. 首先根据已知条件把对应的文氏图画出来。一般地说，每一条性质决定一个集合。有多少条性质，就有多少个集合。如果没有特殊说明，任何两个集合都画成相交的<br />2. 然后将已知集合的元素数填入表示该集合的区域内。通常从n个集合的交集填起，根据计算的结果将数字逐步填入所有的空白区域。如果交集的数字是未知的，可以设为x。<br />3. 根据题目中的条件，列出一次方程或方程组，就可以求得所需要的结果。</p><details class="folding-tag" red><summary> 例题 </summary>              <div class='content'>              <p>题目：对24名会外语的科技人员进行掌握外语情况的调查。其统计结果如下：会英、日、德和法语的人分别为13，5，10和9人，其中同时会英语和日语的有2人，会英、德和法语中任两种语言的都是4人。已知会日语的人既不懂法语也不懂德语，分别求只会一种语言(英、德、法、日)的人数和会三种语言的人数。<br />解：令A，B，C，D分别表示会英、法、德、日语的人的集合。根据题意画出文氏图。设同时会三种语言的有x人，只会英、法或德语一种语言的分别为y1，y2和y3人。将x和y1，y2，y3填入图中相应的区域，然后依次填入其它区域的人数。<br /><img src="https://pic.imgdb.cn/item/61d1d2132ab3f51d91cee360.png" alt="" /></p>              </div>            </details>、<blockquote><p>包含排斥原理</p></blockquote><p>设S为有穷集，P<sub>1</sub>,P<sub>2</sub>,…,P<sub>m</sub>是m个性质。S中的任何元素x或者具有性质P<sub>i</sub>，或者不具有性质P<sub>i</sub>(i=1,2,…m),两种情况必居其一。令A<sub>i</sub>表示S中具有性质P<sub>k</sub>的元素构成的子集，则S中不具有性质P<sub>1</sub>,P<sub>2</sub>,…,P<sub>m</sub>的元素为<br /><img src="https://pic.imgdb.cn/item/61d1d57c2ab3f51d91d1ae28.png" alt="" /></p><p>推论：S中至少具有一条性质的元素数为<br /><img src="https://pic.imgdb.cn/item/61d1d59a2ab3f51d91d1c410.png" alt="" /></p><details class="folding-tag" cyan><summary> 例题 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d1d6be2ab3f51d91d28eac.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d1d6c72ab3f51d91d294ef.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d1d6cf2ab3f51d91d29a21.png" alt="" /></p>              </div>            </details><blockquote><p>广义并和广义交</p></blockquote><ul><li>设A为集合，A的元素的元素构成的集合称为A的广义并，记为∪A。符号化表示为∪A＝{x | <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span>z(z∈A∧x∈z)}</li><li>设A为非空集合，A的所有元素的公共元素构成的集合称为A的广义交，记为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∩</span></span></span></span>A。符号化表示为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∩</span></span></span></span>A＝{x | <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>z(z∈A<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span>x∈z)}</li></ul><details class="folding-tag" cyan><summary> 举例 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d25f412ab3f51d9112cffc.png" alt="" /></p>              </div>            </details><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><ul><li>若A＝{A<sub>1</sub>,A<sub>2</sub>,…,A<sub>n</sub>}，则∪A＝A<sub>1</sub>∪A<sub>2</sub>∪…∪A<sub>n</sub></li><li>若A＝{A<sub>1</sub>,A<sub>2</sub>,…,A<sub>n</sub>}，则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∩</span></span></span></span>A＝A<sub>1</sub><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∩</span></span></span></span>A<sub>2</sub><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∩</span></span></span></span>…<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∩</span></span></span></span>A<sub>n</sub></li><li>在后面的叙述中，若只说并或交，则这都是指集合的初级并或初级交；如果在并或交前边冠以“广义”两个字，则指集合的广义并或广义交。</li><li>为了使得集合表达式更为简洁，我们对集合运算的优先顺序做如下规定：<ol><li>称广义并、广义交、幂集、绝对补运算为一类运算</li><li>并、交、相对补、对称差运算为二类运算。</li><li>一类运算优先于二类运算</li><li>一类运算之间由右向左顺序进行</li><li>二类运算之间由括号决定先后顺序。</li></ol></li></ul></div><details class="folding-tag" cyan><summary> 举例 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d2611f2ab3f51d91140e20.png" alt="" /></p>              </div>            </details><h3 id="集合恒等式"><a class="markdownIt-Anchor" href="#集合恒等式"></a> 集合恒等式</h3><details class="folding-tag" cyan><summary> 集合恒等式 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d286892ab3f51d912f68d5.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d2763d2ab3f51d91239375.png" alt="" /></p>              </div>            </details><details class="folding-tag" cyan><summary> 集合运算性质 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d2813f2ab3f51d912b6fac.png" alt="" /></p>              </div>            </details><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>对偶式：一个集合表达式，如果只含有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∩</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∪</mo></mrow><annotation encoding="application/x-tex">\cup</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∪</span></span></span></span>、～、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span>、E、＝、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊇</mo></mrow><annotation encoding="application/x-tex">\supseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊇</span></span></span></span>，那么同时把<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∩</span></span></span></span>与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∪</mo></mrow><annotation encoding="application/x-tex">\cup</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∪</span></span></span></span>互换，把<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span>与E互换，把<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊇</mo></mrow><annotation encoding="application/x-tex">\supseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊇</span></span></span></span>互换，得到式子称为原式的<span class='p cyan'>对偶式</span>。<br />对欧原理：对偶式同真假。或者说，集合恒等式的对偶式还是恒等式。</p></div><blockquote><p>集合恒等式的证明方法</p></blockquote><ol><li>逻辑演算法：利用逻辑等值式和推理规则。</li><li>集合演算法：利用集合恒等式和已知结论。</li></ol><details class="folding-tag" green><summary> 逻辑演算法的格式 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d2841f2ab3f51d912db38e.png" alt="" /></p>              </div>            </details><details class="folding-tag" green><summary> 集合演算法的格式 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d284b22ab3f51d912e0f0f.png" alt="" /></p>              </div>            </details><details class="folding-tag" cyan><summary> 举例 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d285482ab3f51d912e7f8e.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d285c92ab3f51d912edb63.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d286012ab3f51d912f046f.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d28aee2ab3f51d9132ab34.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d28b0f2ab3f51d9132c5b5.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d28bc62ab3f51d91336041.png" alt="" /></p>              </div>            </details><h2 id="二元关系"><a class="markdownIt-Anchor" href="#二元关系"></a> 二元关系</h2><h3 id="有序对与笛卡尔积"><a class="markdownIt-Anchor" href="#有序对与笛卡尔积"></a> 有序对与笛卡尔积</h3><blockquote><p>有序对</p></blockquote><p>由两个元素x和y（允许x=y）按一定顺序排列成的二元组叫做一个<span class='p cyan'>有序对</span>(ordered pair)或<span class='p cyan'>序偶</span>，记作&lt;x,y&gt;，其中x是它的第一元素，y是它的第二元素。</p><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>有序对&lt;x,y&gt;具有以下性质：<br />1. 当x≠y时，&lt;x,y&gt;≠&lt;y,x&gt;。<br />2. &lt;x,y&gt;＝&lt;u,v&gt;的充分必要条件是x＝u且y＝v。</p></div><blockquote><p>笛卡尔积</p></blockquote><ul><li>设A，B为集合,用A中元素为第一元素，B中元素为第二元素构成有序对。所有这样的有序对组成的集合叫做A和B的<span class='p cyan'>笛卡儿积</span>(Cartesian product)，记作A×B。</li><li>笛卡儿积的符号化表示为A×B＝{&lt;x,y&gt;|x∈A∧y∈B}</li><li>如果|A|=m,|B|=n,则|A×B|=mn。</li></ul><details class="folding-tag" blue><summary> 举例 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d291862ab3f51d9138bdd9.png" alt="" /></p>              </div>            </details><blockquote><p>笛卡儿积的运算性质</p></blockquote><ol><li>对任意集合A，根据定义有A×<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span>＝<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span>×A＝<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span></li><li>一般的说，笛卡儿积运算不满足交换律，即A×B≠B×A (当 A≠<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span> ∧ B≠<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span> ∧ A≠B 时)</li><li>笛卡儿积运算不满足结合律，即(A×B)×C≠A×(B×C)(当 A≠<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span> ∧ B≠<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span> ∧ C≠<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span> 时)</li><li>笛卡儿积运算对并和交运算满足分配律，即<br />A×(B∪C)=(A×B)∪(A×C)<br />(B∪C)×A=(B×A)∪(C×A)<br />A×(B<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∩</span></span></span></span>C)=(A×B)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∩</span></span></span></span>(A×C)<br />(B<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∩</span></span></span></span>C)×A=(B×A)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∩</span></span></span></span>(C×A)</li><li>A<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>C <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span> B<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>D <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇒</mo></mrow><annotation encoding="application/x-tex">\Rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇒</span></span></span></span> A×B <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span> C×D</li></ol><details class="folding-tag" cyan><summary> 证明 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d2933c2ab3f51d913a204b.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d293732ab3f51d913a49e8.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d2988b2ab3f51d913e80d4.png" alt="" /></p>              </div>            </details><h3 id="二元关系-2"><a class="markdownIt-Anchor" href="#二元关系-2"></a> 二元关系</h3><p>如果一个集合满足以下条件之一：<br />（1）集合非空，且它的元素都是有序对<br />（2）集合是空集<br />则称该集合为一个<span class='p cyan'>二元关系</span>，记作R。二元关系也可简称为关系。对于二元关系R，如果&lt;x,y&gt;∈R，可记作xRy；</p><blockquote><p>A上的二元关系</p></blockquote><p>设A，B为集合，A×B的任何子集所定义的二元关系叫做从<span class='p cyan'>A到B的二元关系</span>；特别当A=B时，则叫做<span class='p cyan'>A上的二元关系</span>。</p><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>集合A上的二元关系的数目依赖于A中的元素数。如果|A|=n，那么|A×A|=n<sup>2</sup>， A×A的子集就有2<sup>n<sup>2</sup></sup> 个。每一个子集代表一个A上的二元关系，所以A上有2<sup>n<sup>2</sup></sup> 个不同的二元关系。例如|A|=3，则A上有2<sup>3<sup>2</sup></sup> 个不同的二元关系。</p></div><blockquote><p>常用的关系</p></blockquote><p>对任意集合A，定义</p><ol><li>全域关系 E<sub>A</sub>={&lt;x,y&gt;|x∈A∧y∈A}=A×A</li><li>恒等关系 I<sub>A</sub>={&lt;x,x&gt;|x∈A}</li><li>空关系   <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span></li><li>小于或等于关系：L<sub>A</sub>={&lt;x,y&gt;|x,y∈A∧x≤y}，其中 A<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>R。</li><li>整除关系：D<sub>B</sub>={&lt;x,y&gt;|x,y∈B∧x整除y}，其中 A<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>Z*，Z*是非零整数集</li><li>包含关系：R<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>＝{&lt;x,y&gt;|x,y∈A∧x<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>y}，其中 A是集合族。</li></ol><details class="folding-tag" cyan><summary> 举例 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d2a1fe2ab3f51d9149b68f.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d2a27e2ab3f51d914a1f9b.png" alt="" /></p>              </div>            </details><blockquote><p>关系表示法</p></blockquote><ol><li>集合表达式</li><li>关系矩阵</li><li>关系图</li></ol><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>关系矩阵和关系图可以表示有穷集上的关系。</p></div><details class="folding-tag" blue><summary> 定义 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d2a3522ab3f51d914ace61.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d2a35f2ab3f51d914ad915.png" alt="" /></p>              </div>            </details><details class="folding-tag" blue><summary> 举例 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d2a3802ab3f51d914af7a7.png" alt="" /></p>              </div>            </details><h3 id="二元关系的运算"><a class="markdownIt-Anchor" href="#二元关系的运算"></a> 二元关系的运算</h3><blockquote><p>定义域、值域、域</p></blockquote><p>设R是二元关系。</p><ol><li>R中所有有序对的第一元素构成的集合称为R的<span class='p cyan'>定义域</span>(domain)，记为dom R。形式化表示为：dom R ＝ {x | <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span>y(&lt;x,y&gt;∈R )}</li><li>R中所有有序对的第二元素构成的集合称为R的<span class='p cyan'>值域</span>(range) ，记作ran R。形式化表示为：ran R＝{y | <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span> x(&lt;x,y&gt;∈R)}</li><li>R的定义域和值域的并集称为R的<span class='p cyan'>域</span>(field)，记作fld R。形式化表示为；fld R＝dom R ∪ ran R</li></ol><blockquote><p>关系的逆和右复合</p></blockquote><ul><li>设R为二元关系，R的逆关系，简称R的<span class='p cyan'>逆</span>(inverse)，记作R<sup>-1</sup>,其中R<sup>-1</sup>＝{&lt;x,y&gt;|&lt;y,x&gt;∈R}</li><li>设F,G为二元关系，G对F的<span class='p cyan'>右复合</span>(composite)记作F<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>G，其中F<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>G＝{&lt;x,y&gt; | <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span>t(&lt;x,t&gt;∈F∧&lt;t,y&gt;∈G)}</li></ul><blockquote><p>关系的限制和像</p></blockquote><p>设R为二元关系，A是集合</p><ol><li>R在A上的<span class='p cyan'>限制</span>(restriction)记作R↑A，其中R↑A={&lt;x,y&gt;|xRy∧x∈A}</li><li>A在R下的<span class='p cyan'>像</span>(image)记作R[A]，其中R[A]=ran(R↑A)</li></ol><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><ol><li>R在A上的限制R↑A是R的子关系。</li><li>A在R下的像R[A]是ran R的子集。</li></ol></div><blockquote><p>关系与集合</p></blockquote><ol><li>关系是集合，集合运算对于关系也是适用的。</li><li>规定：<ul><li>关系运算中逆运算优先于其它运算</li><li>所有的关系运算都优先于集合运算</li><li>优先权的运算以括号决定运算顺序</li></ul></li></ol><details class="folding-tag" cyan><summary> 举例 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d2a9af2ab3f51d91510343.png" alt="" /></p>              </div>            </details><blockquote><p>定理</p></blockquote><ol><li>设F是任意的关系，则<ul><li>(F<sup>-1</sup>)<sup>-1</sup>＝F</li><li>dom F<sub>-1</sub>＝ran F，ran F<sub>-1</sub>＝dom F</li></ul> <details class="folding-tag" cyan><summary> 证明 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d2b4272ab3f51d915dc15e.png" alt="" /></p>              </div>            </details></li><li>设F，G，H是任意的关系，则<ul><li>(F<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>G)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>H＝F<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>(G<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>H)</li><li>(F<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>G)<sup>-1</sup>＝G<sup>-1</sup> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span> F<sup>-1</sup></li></ul> <details class="folding-tag" cyan><summary> 证明 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d2b4662ab3f51d915e06d6.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d2b46f2ab3f51d915e0e72.png" alt="" /></p>              </div>            </details></li><li>设R为A上的关系，则R <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span> I<sub>A</sub>＝I<sub>A</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span> R＝R <details class="folding-tag" cyan><summary> 证明 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d2b47b2ab3f51d915e1b4e.png" alt="" /></p>              </div>            </details></li><li>设F，G，H是任意的关系，则<ul><li>F<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>(G∪H)＝F<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>G∪F<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>H</li><li>(G∪H)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>F＝G<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>F∪H<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>F</li><li>F<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>(G<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∩</span></span></span></span>H)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>F<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>G<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∩</span></span></span></span>F<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>H</li><li>(G<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∩</span></span></span></span>H)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>F <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>G<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>F<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∩</span></span></span></span>H<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>F</li></ul> <details class="folding-tag" cyan><summary> 定理四的推论 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d2b3112ab3f51d915cec08.png" alt="" /></p>              </div>            </details> <details class="folding-tag" cyan><summary> 证明 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d2b48a2ab3f51d915e26fb.png" alt="" /></p>              </div>            </details></li><li>设F为关系，A,B为集合，则<ul><li>F↑(A∪B)＝F↑A∪F↑B</li><li>F[A∪B]＝F[A]∪F[B]</li><li>F↑(A<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∩</span></span></span></span>B)＝F↑A<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∩</span></span></span></span>F↑B</li><li>F[A<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∩</span></span></span></span>B]<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>F[A]<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∩</span></span></span></span>F[B]</li></ul> <details class="folding-tag" cyan><summary> 证明 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d2b4982ab3f51d915e3348.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d2b4ae2ab3f51d915e44ac.png" alt="" /></p>              </div>            </details></li></ol><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>通过上述证明我们可以发现其本质是从定义入手</p></div><blockquote><p>关系的幂运算</p></blockquote><p>设R为A上的关系，n为自然数，则R的n次幂定义为：</p><ol><li>R<sup>0</sup>＝{&lt;x,x&gt;|x∈A}＝I<sub>A</sub></li><li>R<sup>n+1</sup>＝R<sup>n</sup> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span> R</li></ol><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><ol><li>对于A上的任何关系R<sub>1</sub>和R<sub>2</sub>都有R<sub>1</sub><sup>0</sup>＝R<sub>2</sub><sup>0</sup>＝I<sub>A</sub> 即：A上任何关系的0次幂都相等，都等于A上的恒等关系I<sub>A</sub>。</li><li>对于A上的任何关系R都有R<sup>1</sup>＝R，因为R<sup>1</sup>＝R<sup>0</sup> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span> R＝I<sup>A</sup> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span> R＝R</li></ol></div><blockquote><p>R<sup>n</sup>的计算</p></blockquote><ol><li>如果R是用集合表达式给出的，可以通过n-1次右复合计算得到R<sup>n</sup>。</li><li>如果R是用关系矩阵M给出的，则Rn的关系矩阵是Mn，即n个矩阵M之积。与普通矩阵乘法不同的是，其中的相加是逻辑加，即1+1＝1，1+0＝0+1＝1，0+0＝0</li><li>如果R是用关系图G给出的，可以直接由图G得到Rn的关系图G’。G’的顶点集与G相同。考察G的每个顶点x<sub>i</sub>，如果在G中从x<sub>i</sub>出发经过n步长的路径到达顶点x<sub>j</sub>，则在G’中加一条从x<sub>i</sub>到x<sub>j</sub> 的边。当把所有这样的便都找到以后，就得到图G’。</li></ol><details class="folding-tag" blue><summary> 例题 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d2e9242ab3f51d918c90f8.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d2ecde2ab3f51d918f6d5e.png" alt="" /></p>              </div>            </details><blockquote><p>幂运算的性质</p></blockquote><ul><li>设A为n元集，R是A上的关系，则存在自然数s和t,使得R<sup>s</sup>=R<sup>t</sup>。</li><li>设R是A上的关系，m,n∈N，则<ol><li>R<sup>m</sup> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span> R<sup>n</sup>＝R<sup>m+n</sup></li><li>(R<sup>m</sup>)<sup>n</sup>＝R<sup>mn</sup></li></ol>  <details class="folding-tag" cyan><summary> 证明 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d2ee952ab3f51d9190b88c.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d2eea82ab3f51d9190c681.png" alt="" /></p>              </div>            </details></li><li>设R是A上的关系，若存在自然数s,t(s&lt;t)使得R<sup>s</sup>=R<sup>t</sup>，则<ol><li>对任何k∈N有 R<sup>s+k</sup>=R<sup>t+k</sup></li><li>对任何k,i∈N有 R<sup>s+kp+i</sup>=R<sup>s+i</sup>，其中p=t-s</li><li>令S={R<sup>0</sup>，R<sup>1</sup>，…，R<sup>t-1</sup>}，则对于任意的q∈N有 R<sup>q</sup>∈S</li></ol>  <details class="folding-tag" cyan><summary> 证明 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d2f0042ab3f51d9191bd84.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d2f0102ab3f51d9191c733.png" alt="" /></p>              </div>            </details>  <div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>有穷集A上的关系R的幂序列R<sup>0</sup>，R<sup>1</sup>，…是一个周期性变化的序列。就象正弦函数一样，利用它的周期性可以将R的高次幂化简为R的低次幂。</p></div>  <details class="folding-tag" cyan><summary> 举例 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d3b7122ab3f51d91ff4ce5.png" alt="" /></p>              </div>            </details></li></ul><h3 id="二元关系的性质"><a class="markdownIt-Anchor" href="#二元关系的性质"></a> 二元关系的性质</h3><blockquote><p>自反性和反自反性</p></blockquote><p>设R为A上的关系，</p><ol><li>若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>x(x∈A→&lt;x,x&gt;∈R)，则称R在A上是<span class='p cyan'>自反</span>(reflexivity)的。</li><li>若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>x(x∈A→&lt;x,x&gt;∉R)，则称R在A上是<span class='p cyan'>反自反</span>(irreflexivity)的。</li></ol><details class="folding-tag" cyan><summary> 举例 </summary>              <div class='content'>              <ol><li>全域关系E<sub>A</sub>，恒等关系I<sub>A</sub>，小于等于关系L<sub>A</sub>，整除关系D<sub>A</sub>都是为A上的自反关系。</li><li>包含关系R是给定集合族A上的自反关系。</li><li>小于关系和真包含关系都是给定集合或集合族上的反自反关系。<br /><img src="https://pic.imgdb.cn/item/61d3bbf52ab3f51d9104e667.png" alt="" /></li></ol>              </div>            </details><blockquote><p>对称性和反对称性</p></blockquote><p>设R为A上的关系，</p><ol><li>若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>x<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>y(x,y∈A∧&lt;x,y&gt;∈R→&lt;y,x&gt;∈R)，则称R为A上<span class='p cyan'>对称</span>(symmetry)的关系。</li><li>若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>x<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>y(x,y∈A∧&lt;x,y&gt;∈R∧&lt;y,x&gt;∈R→x=y)，则称R为A上的<span class='p cyan'>反对称</span>(antisymmetry)关系。</li></ol><details class="folding-tag" cyan><summary> 举例 </summary>              <div class='content'>              <ol><li>A上的全域关系E<sub>A</sub>，恒等关系I<sub>A</sub>和空关系都是A上的对称关系。</li><li>恒等关系I<sub>A</sub>和空关系也是A上的反对称关系。</li><li>但全域关系E<sub>A</sub>一般不是A上的反对称关系，除非A为单元集或空集。<br /><img src="https://pic.imgdb.cn/item/61d3bc0a2ab3f51d9104f438.png" alt="" /></li></ol>              </div>            </details><blockquote><p>传递性</p></blockquote><p>设R为A上的关系，<br /><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>x<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>y<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>z(x,y,z∈A∧&lt;x,y&gt;∈R∧&lt;y,z&gt;∈R→&lt;x,z&gt;∈R)<br />则称R是A上的<span class='p cyan'>传递</span>(transitivity)关系。</p><details class="folding-tag" cyan><summary> 举例 </summary>              <div class='content'>              <ol><li>A上的全域关系E<sub>A</sub>，恒等关系I<sub>A</sub>和空关系都是A上的传递关系。</li><li>小于等于关系，整除关系和包含关系也是相应集合上的传递关系。</li><li>小于关系和真包含关系仍旧是相应集合上的传递关系。<br /><img src="https://pic.imgdb.cn/item/61d3c3cd2ab3f51d9110c337.png" alt="" /></li></ol>              </div>            </details><blockquote><p>二元关系性质的等价描述</p></blockquote><p>设R为A上的关系，则</p><ol><li>R在A上自反当且仅当 I<sub>A</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span> R</li><li>R在A上反自反当且仅当 R<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∩</span></span></span></span>I<sub>A</sub>＝<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span></li><li>R在A上对称当且仅当 R＝R<sup>-1</sup></li><li>R在A上反对称当且仅当 R<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∩</span></span></span></span>R<sup>-1</sup> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>I<sub>A</sub></li><li>R在A上传递当且仅当 R<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>R<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>R</li></ol><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>利用该定理可以从关系的集合表达式来判断或证明关系的性质。</p></div><details class="folding-tag" cyan><summary> 证明 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d3c4db2ab3f51d91126d81.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d3c4e52ab3f51d91127e03.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d3c4ef2ab3f51d91128cbc.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d3c4f72ab3f51d91129312.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d3c5082ab3f51d9112b788.png" alt="" /></p>              </div>            </details><details class="folding-tag" cyan><summary> 举例 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d3c5402ab3f51d91132a87.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d3c54e2ab3f51d91134cdf.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d3c5552ab3f51d91135c89.png" alt="" /></p>              </div>            </details><blockquote><p>二元关系性质的特点</p></blockquote><details class="folding-tag" cyan open><summary> 特点 </summary>              <div class='content'>              <table><thead><tr><th style="text-align:center"></th><th style="text-align:center">自反性</th><th style="text-align:center">反自反性</th><th style="text-align:center">对称性</th><th style="text-align:center">反对称性</th><th style="text-align:center">传递性</th></tr></thead><tbody><tr><td style="text-align:center">集合表达式</td><td style="text-align:center">I<sub>A</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span> R</td><td style="text-align:center">R <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∩</span></span></span></span> I<sub>A</sub> = <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span></td><td style="text-align:center">R = R<sup>-1</sup></td><td style="text-align:center">R <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∩</span></span></span></span> R <sup>-1</sup> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span> I<sub>A</sub></td><td style="text-align:center">R <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span> R <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span> R</td></tr><tr><td style="text-align:center">关系矩阵</td><td style="text-align:center">主对角线元素全是1</td><td style="text-align:center">主对角线元素全是0</td><td style="text-align:center">矩阵是对称矩阵</td><td style="text-align:center">若r<sub>ij</sub>＝1，且i≠j，则r<sub>ji</sub>＝0</td><td style="text-align:center">对M<sup>2</sup>中1所在位置，M中相应的位置都是1</td></tr><tr><td style="text-align:center">关系图</td><td style="text-align:center">每个顶点都有环</td><td style="text-align:center">每个顶点都没有环</td><td style="text-align:center">如果两个顶点之间有边，一定是一对方向相反的边(无单边)</td><td style="text-align:center">如果两点之间有边，一定是一条有向边(无双向边)</td><td style="text-align:center">如果顶点x<sub>i</sub>到x<sub>j</sub>有边，x<sub>j</sub>到x<sub>k</sub>有边，则从x<sub>i</sub>到x<sub>k</sub>也有边</td></tr></tbody></table>              </div>            </details><details class="folding-tag" cyan><summary> 举例 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d3c7ff2ab3f51d9117f39a.png" alt="" /></p>              </div>            </details><h3 id="二元关系的闭包"><a class="markdownIt-Anchor" href="#二元关系的闭包"></a> 二元关系的闭包</h3><blockquote><p>闭包的定义</p></blockquote><p>设R是非空集合A上的关系，R的自反（对称或传递）闭包是A上的关系R′，使得 R′满足以下条件：</p><ol><li>R′是自反的（对称的或传递的）</li><li>R<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>R′</li><li>对A上任何包含R的自反（对称或传递）关系R″有R′<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>R″。</li></ol><p>一般将R的自反闭包记作r(R)，对称闭包记作s(R)，传递闭包记作t(R)。</p><blockquote><p>闭包的构造方法</p></blockquote><p>设R为A上的关系，则有</p><ol><li>r(R)＝R∪R<sup>0</sup></li><li>s(R)＝R∪R<sup>-1</sup></li><li>t(R)＝R∪R<sup>2</sup>∪R<sup>3</sup>∪…</li></ol><details class="folding-tag" green><summary> 证明 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d3ca682ab3f51d911a253b.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d3caf92ab3f51d911a8a4c.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d3cb212ab3f51d911aa53e.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d3cb372ab3f51d911ab37b.png" alt="" /></p>              </div>            </details><blockquote><p>通过关系矩阵求闭包</p></blockquote><p>设关系R，r(R)，s(R)，t(R)的关系矩阵分别为M，M<sub>r</sub>，M<sub>s</sub>和M<sub>t</sub>，则<br />Mr ＝ M＋E对角线上的值都改为1<br />Ms ＝ M＋M′若aij＝1，则令aji＝1<br />Mt ＝ M＋M<sup>2</sup>＋M<sup>3</sup>＋…沃舍尔算法<br />其中E是和M同阶的单位矩阵，M′是M的转置矩阵。<br />注意在上述等式中矩阵的元素相加时使用逻辑加。</p><blockquote><p>通过关系图求闭包</p></blockquote><p>设关系R，r(R)，s(R)，t(R)的关系图分别记为G，G<sub>r</sub>，G<sub>s</sub>，G<sub>t</sub>，则G<sub>r</sub>，G<sub>s</sub>，G<sub>t</sub>的顶点集与G的顶点集相等。<br />除了G的边以外，以下述方法添加新的边。</p><ol><li>考察G的每个顶点，如果没有环就加上一个环。最终得到的是G<sub>r</sub>。</li><li>考察G的每一条边，如果有一条x<sub>i</sub>到x<sub>j</sub>的单向边，i≠j，则在G中加一条边x<sub>j</sub>到x<sub>i</sub>的反方向边。最终得到G<sub>s</sub>。</li><li>考察G的每个顶点x<sub>i</sub>，找出从x<sub>i</sub>出发的所有2步，3步，…，n步长的路径（n为G中的顶点数）。设路径的终点为x<sub>j1</sub>, x<sub>j2</sub>, x<sub>j3</sub>, … x<sub>jk</sub> 。如果没有从x<sub>i</sub>到 x<sub>jl</sub>(l=1,2,…,k)的边，就加上这条边。当检查完所有的顶点后就得到图G<sub>t</sub>。</li></ol><details class="folding-tag" green><summary> 举例 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d3e4722ab3f51d91300ab8.png" alt="" /></p>              </div>            </details><blockquote><p>闭包的主要性质</p></blockquote><ul><li>设R是非空集合A上的关系，则<ol><li>R是自反的当且仅当r(R)＝R。</li><li>R是对称的当且仅当s(R)＝R。</li><li>R是传递的当且仅当t(R)＝R。</li></ol></li><li>设R<sub>1</sub>和R<sub>2</sub>是非空集合A上的关系，且R<sub>1</sub> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span> R<sub>2</sub>，则<ol><li>r(R<sub>1</sub>) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span> r(R<sub>2</sub>)</li><li>s(R<sub>1</sub>) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span> s(R<sub>2</sub>)</li><li>t(R<sub>1</sub>) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span> t(R<sub>2</sub>)</li></ol></li><li>若R是对称的，则R<sup>n</sup>也是对称的，其中n是任何正整数。</li><li>设R是非空集合A上的关系，<ol><li>若R是自反的，则s(R)与t(R)也是自反的。</li><li>若R是对称的，则r(R)与t(R)也是对称的。</li><li>若R是传递的，则r(R)是传递的。</li></ol>  <div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>从这里可以看出，如果计算关系R的自反、对称、传递的闭包，为了不失去传递性，传递闭包运算应该放在对称闭包运算的后边，若令tsr(R)表示R的自反、对称、传递闭包，则tsr(R)=t(s(r(R)))</p></div></li></ul><h3 id="等价关系与划分"><a class="markdownIt-Anchor" href="#等价关系与划分"></a> 等价关系与划分</h3><blockquote><p>等价关系</p></blockquote><p>设R为非空集合上的关系。如果R是自反的、对称的和传递的，则称R为A上的<span class='p cyan'>等价关系</span>(equivalent relation)。设R是一个等价关系，若&lt;x，y&gt;∈R，称x等价于y，记做x～y。</p><details class="folding-tag" green><summary> 举例 </summary>              <div class='content'>              <ol><li>平面上三角形集合中，三角形的相似关系。</li><li>人群中的同性关系。<br /><img src="https://pic.imgdb.cn/item/61d3ead82ab3f51d9134eb4a.png" alt="" /></li></ol>              </div>            </details><blockquote><p>等价类</p></blockquote><p>设R为非空集合A上的等价关系，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>x∈A，令[x]<sub>R</sub>={y|y∈A∧xRy}，称[x]<sub>R</sub>为x关于R的等价类，简称为x的等价类，简记为[x]或 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover></mrow><annotation encoding="application/x-tex">\bar x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.56778em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;">ˉ</span></span></span></span></span></span></span></span></span> 。<br />x的等价类是A中所有与x等价的元素构成的集合。</p><p>例7.16中的等价类是：<br />[1]＝[4]＝[7]＝{1,4,7}<br />[2]＝[5]＝[8]＝{2,5,8}<br />[3]＝[6]＝{3,6}</p><blockquote><p>等价类的性质</p></blockquote><p>设R是非空集合A上的等价关系，则</p><ol><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>x∈A，[x]是A的非空子集。</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>x,y∈A，如果xRy，则[x]＝[y]。</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>x,y∈A，如果&lt;x,y&gt;∉R，则[x]与[y]不交。</li><li>∪{[x]|x∈A}＝A。</li></ol><details class="folding-tag" green><summary> 证明 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d3f1032ab3f51d9139ce4d.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d3f10c2ab3f51d9139d534.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d3f1152ab3f51d9139dbcf.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d3f1222ab3f51d9139e5d7.png" alt="" /></p>              </div>            </details><blockquote><p>商集</p></blockquote><p>设R为非空集合A上的等价关系，以R的所有等价类作为元素的集合称为A关于R的<span class='p cyan'>商集</span>(quotient set)，记做A/R，即A/R={[x]<sub>R</sub>|x∈A}</p><blockquote><p>划分</p></blockquote><p>设A为非空集合，若A的子集族π(π<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>P(A)，是A的子集构成的集合) 满足下面的条件：</p><ol><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span>∉π</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>x<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>y(x,y∈π∧x≠y→x<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∩</span></span></span></span>y＝<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span>)</li><li>∪π=A<br />则称π是A的一个<span class='p cyan'>划分</span>(partitions)，称π中的元素为A的划分块。</li></ol><details class="folding-tag" green><summary> 举例 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d3f36c2ab3f51d913bd579.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d3f4792ab3f51d913ca832.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d3f4842ab3f51d913cb281.png" alt="" /></p>              </div>            </details><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>商集就是A的一个划分，并且不同的商集将对应于不同的划分。</p></div><h3 id="偏序关系"><a class="markdownIt-Anchor" href="#偏序关系"></a> 偏序关系</h3><blockquote><p>偏序关系</p></blockquote><p>设R为非空集合A上的关系。如果R是自反的、反对称的和传递的，则称R为A上的<span class='p cyan'>偏序关系</span>，记作≤。设≤为偏序关系，如果&lt;x,y&gt;∈≤，则记作x≤y，读作“x小于或等于y”。</p><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>这里的“小于或等于”不是指数的大小，而是在偏序关系中的顺序性。x“小于或等于”y的含义是：依照这个序，x排在y的前边或者x就是y。根据不同偏序的定义，对序有着不同的解释。</p></div><details class="folding-tag" green><summary> 举例 </summary>              <div class='content'>              <ol><li>集合A上的恒等关系I<sub>A</sub></li><li>小于或等于关系</li><li>整除关系</li><li>包含关系</li></ol>              </div>            </details><blockquote><p>可比</p></blockquote><p>设R为非空集合A上的偏序关系，定义</p><ol><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>x,y∈A，x＜y <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> x≤y∧x≠y。</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>x,y∈A，x与y可比 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> x≤y∨y≤x。</li></ol><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>在具有偏序关系的集合A中任取两个元素x和y，可能有下述几种情况发生：x＜y(或y＜x)，x＝y，x与y不是可比的。例如A＝{1，2，3}，≤是A上的整除关系，则有1＜2，1＜3，1=1，2=2，3=3，2和3不可比。</p></div><blockquote><p>全序关系</p></blockquote><p>设R为非空集合A上的偏序关系，如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>x,y∈A，x与y都是可比的，则称R为A上的<span class='p cyan'>全序关系</span>(或线序关系)。</p><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>数集上的小于或等于关系是全序关系，因为任何两个数总是可比大小的。整除关系一般来说不是全序关系，如集合{1,2,3}上的整除关系就不是全序关系，因为2和3不可比。</p></div><blockquote><p>偏序集</p></blockquote><p>集合A和A上的偏序关系≤一起叫做偏序集，记作&lt;A,≤&gt;。</p><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>整数集合Z和数的小于或等于关系≤构成偏序集&lt;Z,≤&gt;<br />集合A的幂集P(A)和包含关系R<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>构成偏序集&lt;P(A),R<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>&gt;。</p></div><blockquote><p>覆盖</p></blockquote><p>设&lt;A,≤&gt;为偏序集。 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>x,y∈A，如果 x＜y 且不存在 z∈A使得x＜z＜y，则称y<span class='p cyan'>覆盖</span>x。</p><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>{1,2,4,6}集合上的整除关系，有2覆盖1，4和6都覆盖2。但4不覆盖1，因为有1＜2＜4。6也不覆盖4，因为4＜6不成立。</p></div><blockquote><p>哈斯图</p></blockquote><p>利用偏序关系的自反性、反对称性和传递性所得到的偏序集合图，称为<span class='p cyan'>哈斯图</span>。<br />画偏序集&lt;A，≤&gt;的哈斯图的方法:<br />1. 用小圆圈代表元素。<br />2. <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>x,y∈A，若x＜y，则将x画在y的下方。<br />3. 对于A中的两个不同元素x和y，如果y覆盖x，就用一条线段连接x和y。</p><details class="folding-tag" green><summary> 举例 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d3fa902ab3f51d9142cd70.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d3fc822ab3f51d9144466d.png" alt="" /></p>              </div>            </details><blockquote><p>偏序集中的特殊元素</p></blockquote><p>设&lt;A，≤&gt;为偏序集，B<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>A，y∈B。</p><ol><li>若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>x(x∈B→y≤x)成立，则称y为B的<span class='p cyan'>最小元</span>。</li><li>若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>x(x∈B→x≤y)成立，则称y为B的<span class='p cyan'>最大元</span>。</li><li>若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>x(x∈B∧x≤y→x＝y)成立，则称y为B的<span class='p cyan'>极小元</span>。</li><li>若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>x(x∈B∧y≤x→x＝y)成立，则称y为B的<span class='p cyan'>极大元</span>。</li></ol><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><ol><li>最小元是B中最小的元素，它与B中其它元素都可比。</li><li>极小元不一定与B中元素可比，只要没有比它小的元素，它就是极小元。</li><li>对于有穷集B，极小元一定存在，但最小元不一定存在。最小元如果存在，一定是唯一的。</li><li>极小元可能有多个，但不同的极小元之间是不可比的（无关系）。</li><li>如果B中只有一个极小元，则它一定是B的最小元。</li><li>哈斯图中，集合B的极小元是B中各元素中的最底层。</li><li>哈斯图中的孤立顶点既是极小元也是极大元。</li></ol></div><details class="folding-tag" green><summary> 举例 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d400312ab3f51d91477dfd.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d403082ab3f51d9149e302.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d403e82ab3f51d914ab68d.png" alt="" /></p>              </div>            </details><blockquote><p>上界、下界</p></blockquote><p>设&lt;A，≤&gt;为偏序集，B<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>A，y∈A。</p><ol><li>若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>x(x∈B→x≤y)成立，则称y为B的<span class='p cyan'>上界</span>。</li><li>若 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>x(x∈B→y≤x)成立，则称y为B的<span class='p cyan'>下界</span>。</li><li>令C＝{y|y为B的上界}，则称C的最小元为B的<span class='p cyan'>最小上界或上确界</span>。</li><li>令D＝{y|y为B的下界}，则称D的最大元为B的<span class='p cyan'>最大下界或下确界</span>。</li></ol><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><ol><li>B的最小元一定是B的下界，同时也是B的最大下界。</li><li>B的最大元一定是B的上界，同时也是B的最小上界</li><li>B的下界不一定是B的最小元，因为它可能不是B中的元素。</li><li>B的上界也不一定是B的最大元。</li><li>B的上界、下界、最小上界、最大下界都可能不存在。如果存在，最小上界与最大下界是唯一的。</li></ol></div><details class="folding-tag" green><summary> 举例 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d4057e2ab3f51d914bf8d4.png" alt="" /></p>              </div>            </details><blockquote><p>偏序关系实例-调度问题</p></blockquote><details class="folding-tag" cyan><summary> 举例 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d406a12ab3f51d914ce23f.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d406b22ab3f51d914cf0ea.png" alt="" /></p>              </div>            </details><h2 id="函数"><a class="markdownIt-Anchor" href="#函数"></a> 函数</h2><h3 id="函数的定义和性质"><a class="markdownIt-Anchor" href="#函数的定义和性质"></a> 函数的定义和性质</h3><p>设F为二元关系，若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>x∈dom F，都存在唯一的y∈ran F 使xFy成立，则称F为<span class='p cyan'>函数</span>(function)(或称作映射(mapping))。对于函数F，如果有 xFy，则记作y＝F(x)，并称y为F在x的值。</p><blockquote><p>函数相等</p></blockquote><p>设 F,G 为函数，则 F＝G <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span> F<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>G∧G<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>F<br />由定义可知，两个函数F和G相等, 一定满足下面两个条件：</p><ol><li>dom F＝dom G</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span> x∈dom F＝dom G，都有 F(x)＝G(x)</li></ol><blockquote><p>从A到B的函数</p></blockquote><ul><li>设A,B为集合，如果 f 为函数，dom f＝A，ran f<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>u</mi><mi>b</mi><mi>s</mi><mi>e</mi><mi>t</mi><mi>e</mi><mi>q</mi></mrow><annotation encoding="application/x-tex">subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault">b</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span></span></span></span>B，则称 f 为从A到B的函数，记作 f：A→B。</li></ul><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><ol><li>f：N→N，f(x)＝2x是从N到N的函数，</li><li>g：N→N，g(x)＝2也是从N到N的函数。</li></ol></div><ul><li>所有从A到B的函数的集合记作B<sup>A</sup>，读作“B上A”，符号化表示为 B<sup>A</sup>＝{f | f：A→B} 。</li></ul><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><ol><li>若|A|＝m，|B|＝n，且m,n&gt;0，则|B<sup>A</sup>|＝n<sup>m</sup>。</li><li>当A或B至少有一个集合是空集时：<ol><li>A＝<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span>且B＝<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span>，则B<sup>A</sup>＝<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span><sup><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span></sup>＝{<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span>}。</li><li>A＝<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span>且B≠<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span>，则B<sup>A</sup>＝B<sup><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span></sup>＝{<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span>}。</li><li>A≠<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span>且B＝<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span>，则B<sup>A</sup>＝<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span><sup>A</sup>＝<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span>。</li></ol></li></ol></div><blockquote><p>函数的像和完全原像</p></blockquote><p>设函数f：A→B，A<sub>1</sub><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>A，B<sub>1</sub><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>B。</p><ul><li>令f(A<sub>1</sub>)＝{f(x)|x∈A<sub>1</sub>}，称 f(A<sub>1</sub>)为A<sub>1</sub>在f 下的<span class='p cyan'>像</span>(image)。特别地，当A<sub>1</sub>＝A时，称 f(A)为函数的像。</li><li>令f<sup>-1</sup>(B<sub>1</sub>)＝{x|x∈A∧f(x)∈B<sub>1</sub>}，称f<sub>-1</sub>(B<sub>1</sub>)为B<sub>1</sub>在 f 下的<span class='p cyan'>完全原像</span>(preimage) 。</li></ul><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>注意区别函数的值和像两个不同的概念。函数值f(x)∈B，而函数的像f(A<sub>1</sub>)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>B。</p></div><details class="folding-tag" cyan><summary> 举例 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d4fa672ab3f51d91e56759.png" alt="" /></p>              </div>            </details><blockquote><p>满射、单射、双射</p></blockquote><p>设f:A→B,</p><ol><li>若ran f＝B，则称f:A→B是<span class='p cyan'>满射</span>(surjection)的。</li><li>若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>y∈ran f 都存在<span class='p cyan'>唯一</span>的x∈A使得f(x)＝y，则称 f:A→B是<span class='p cyan'>单射</span>(injection)的。</li><li>若f 既是满射又是单射的，则称f:A→B是<span class='p cyan'>双射</span>(bijection)的(一一映像(one-to-one mapping)) .</li></ol><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><ul><li>如果f:A→B是满射的，则对于任意的y∈B，都存在x∈A，使得f(x)＝y。</li><li>如果f:A→B是单射的，则对于x1、x2<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo></mrow><annotation encoding="application/x-tex">\in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∈</span></span></span></span>A且x1≠x2，一定有f(x1)≠f(x2)。换句话说，如果对于x1、x2A有f(x1)＝f(x2)，则一定有x1＝x2。</li></ul></div><details class="folding-tag" cyan><summary> 举例 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d4fc062ab3f51d91e6830a.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d4fcae2ab3f51d91e6e91d.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d4fd152ab3f51d91e72be3.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d4fd242ab3f51d91e735fd.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d4fdaf2ab3f51d91e79d41.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d4ff2d2ab3f51d91e8a9d3.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d4ff3a2ab3f51d91e8b3db.png" alt="" /></p>              </div>            </details><h3 id="常用函数"><a class="markdownIt-Anchor" href="#常用函数"></a> 常用函数</h3><blockquote><p>常函数</p></blockquote><p>设f：A→B，如果存在c∈B，使得对所有的x∈A都有f(x)＝c，则称f：A→B是<span class='p cyan'>常函数</span>。</p><blockquote><p>恒等函数</p></blockquote><p>设f：A→B，对所有的x∈A都有I<sub>A</sub> (x)＝x，称IA为A上的<span class='p cyan'>恒等函数</span>。</p><blockquote><p>单调递增函数</p></blockquote><p>设&lt;A,≤&gt;， &lt;B,≤&gt;为偏序集，f：A→B，如果对任意的x1, x2∈A， x1＜x2，就有f(x1)≤ f(x2)，则称f为<span class='p cyan'>单调递增</span>的；</p><p>如果对任意的x1, x2∈A, x1＜x2, 就有f(x1)＜ f(x2), 则称f为严格单调递增的。</p><p>类似的也可以定义单调递减和严格单调递减的函数。</p><blockquote><p>特征函数</p></blockquote><p>设A为集合，对于任意的A’<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>A，A’的<span class='p cyan'>特征函数</span>X<sub>A’</sub> : A→{0,1}定义为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><msup><mi>A</mi><mo mathvariant="normal">′</mo></msup></msub><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo>∈</mo><msup><mi>A</mi><mo mathvariant="normal">′</mo></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo>∈</mo><mi>A</mi><mo>−</mo><msup><mi>A</mi><mo mathvariant="normal">′</mo></msup></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">x _ { A&#x27; }  ( a ) = \{ \begin{array}  { l   }  { 1 , } &amp; { a\in A ^ { \prime } } \\ { 0 , } &amp; { a \in A - A ^ { \prime } } \end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4000000000000004em;vertical-align:-0.9500000000000004em;"></span><span class="mopen">{</span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">1</span><span class="mpunct">,</span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p><details class="folding-tag" cyan><summary> 举例 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d53b032ab3f51d911b77dc.png" alt="" /></p>              </div>            </details><blockquote><p>自然映射</p></blockquote><p>设R是A上的等价关系，令g：A→A/R , g(a)=[a]，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>a∈A,称g是从A到商集A/R的<span class='p cyan'>自然映射</span>。</p><details class="folding-tag" cyan><summary> 举例 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d53c112ab3f51d911c6ec0.png" alt="" /></p>              </div>            </details><h3 id="函数的复合与反函数"><a class="markdownIt-Anchor" href="#函数的复合与反函数"></a> 函数的复合与反函数</h3><blockquote><p>函数的复合</p></blockquote><p>函数的复合就是关系的右复合，一切和关系右复合有关的定理都适用于函数的复合。本节重点考虑在复合中特有的性质。</p><ol><li>设F, G是函数，则F<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>G 也是函数，且满足<ol><li>dom  (F<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>G)＝{x|x∈dom F∧F(x)∈dom G}</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>x∈dom (F<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>G)，有F<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>G(x)＝G(F(x))</li></ol> <details class="folding-tag" cyan><summary> 证明 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d53f0c2ab3f51d911f32a4.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d53f1a2ab3f51d911f427d.png" alt="" /></p>              </div>            </details> <div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>推论：</p><ul><li>设F, G, H为函数，则(F<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>G)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>H和F<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>(G<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>H)都是函数， 且(F<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>%G) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>H=F<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>(G<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>H)</li><li>设f：A→B，g：B→C，则f<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>g：A→C，且<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>x∈A都有f<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>g(x)=g(f(x))</li></ul></div></li><li>设  f：A→B，g：B→C。<ol><li>如果 f：A→B， g：B→C都是满射的， 则f<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>g：A→C也是满射的。</li><li>如果 f：A→B， g：B→C都是单射的， 则f<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>g：A→C也是单射的。</li><li>如果 f：A→B， g：B→C都是双射的， 则f<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>g：A→C也是双射的。</li></ol> <div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>该定理说明函数的复合能够保持函数单射、满射、双射的性质。<br />该定理反过来不为真</p></div> <details class="folding-tag" cyan><summary> 证明 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d540f02ab3f51d9120faea.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d540fa2ab3f51d9121040d.png" alt="" /></p>              </div>            </details></li><li>设 f：A<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span>B，则 f ＝ f <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span> I<sub>B</sub> ＝ I<sub>A</sub><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span>f<details class="folding-tag" cyan><summary> 证明 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d544aa2ab3f51d9124cc0d.png" alt="" /></p>              </div>            </details></li></ol><blockquote><p>反函数</p></blockquote><ul><li>反函数存在的条件：设f：A→B是双射的，则f<sup>-1</sup>：B→A也是双射的。</li></ul><details class="folding-tag" cyan><summary> 证明 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d545232ab3f51d912587ef.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d545362ab3f51d9125a87d.png" alt="" /></p>              </div>            </details><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>对于双射函数f：A→B，称f<sup>-1</sup>：B→A是它的<span class='p cyan'>反函数</span>。</p></div><ul><li>反函数性质：设f：A→B是双射的， 则f<sup>-1</sup> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span> f = I<sub>B</sub>， f <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span> f<sup>-1</sup> = I<sub>A</sub>  <details class="folding-tag" cyan><summary> 证明 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d545ef2ab3f51d9126a7c0.png" alt="" /></p>              </div>            </details></li></ul><div class="note icon-padding simple"><i class="note-icon fas fa-thumbs-up"></i><p>证明函数 f:A→B是满射的，基本方法是：任取y∈B，找到x∈A(x与y相关，可能是一个关于y的表达式)或者证明存在x∈A，使得f(x)＝y。<br />证明函数 f:A→B是单射的，基本方法是：假设A中存在x1和x2，使得 f(x1)＝f(x2)，利用已知条件或者相关的定理最终证明x1＝x2。<br />实数集合上函数性质的判断方法:</p><ol><li>对于实数集合上的函数，通常可以通过求导找到极值点。而有的极小值（或极大值）恰好是函数的最小值（或最大值），这样就可以求出函数的值域，从而判断函数是否为满射的。</li><li>如果函数存在极值，那么可以断定函数不是单射的，因为在极值点两侧可以找到不相等的x1和x2满足 f(x1)＝f(x2)。</li><li>证明函数不具有某种性质的一般方法就是给出反例。</li><li>为证明函数不是单射的，需要找到x1≠x2且f(x1)＝f(x2)。有时可能不容易找到具体的x1和x2，但是可以证明这样的x1和x2是存在的。</li><li>证明函数不是满射的一般方法就是找到 y∈B－ran f。</li></ol></div><details class="folding-tag" cyan><summary> 课后巩固 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d549f22ab3f51d912c7bfe.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d54a722ab3f51d912d4062.png" alt="" /></p>              </div>            </details><h2 id="图的基本概念"><a class="markdownIt-Anchor" href="#图的基本概念"></a> 图的基本概念</h2><h3 id="无向图及有向图"><a class="markdownIt-Anchor" href="#无向图及有向图"></a> 无向图及有向图</h3><blockquote><p>无序积与多重集合</p></blockquote><ol><li>设A，B为任意的两个集合，称<img no-lazy class="inline" src="https://pic.imgdb.cn/item/61d554462ab3f51d913d83c9.png" style="height:1.5em"/>为A与B的<span class='p cyan'>无序积</span>，记作A&amp;B。可将无序积中的无序对{a,b}记为(a,b)，并且允许a＝b。无论a,b是否相等，均有(a,b)＝(b,a)，因而A&amp;B＝B&amp;A。</li><li>元素可以重复出现的集合称为<span class='p cyan'>多重集合</span>或者多重集，某元素重复出现的次数称为该元素的<span class='p cyan'>重复度</span>。</li></ol><blockquote><p>无向图和有向图</p></blockquote><ul><li>一个<span class='p cyan'>无向图</span>是一个有序的二元组&lt;V，E&gt;,记作G，其中<ol><li>V≠<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span>称为<span class='p cyan'>顶点集</span>，其元素称为<span class='p cyan'>顶点</span>或结点。</li><li>E称为<span class='p cyan'>边集</span>，它是无序积V&amp;V的多重子集，其元素称为无向边，简称边。</li></ol></li><li>一个<span class='p cyan'>有向图</span>是一个有序的二元组&lt;V，E&gt;，记作D，其中<br />（1）V≠<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span>称为顶点集，其元素称为顶点或结点。<br />（2）E为边集，它是笛卡儿积V×V的多重子集，其元素称为有向边，简称边。</li></ul><blockquote><p>有向图</p></blockquote><ol><li>G表示无向图，但有时用G泛指图(无向的或有向的)。</li><li>D只能表示有向图。</li><li>V(G)，E(G)分别表示G的<span class='p cyan'>顶点集</span>和边集。</li><li>若|V(G)|＝n，则称G为<span class='p cyan'>n阶图</span>。</li><li>若|V(G)|与|E(G)|均为有限数，则称G为<span class='p cyan'>有限图</span>。</li><li>若边集E(G)＝<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span>，则称G为<span class='p cyan'>零图</span>，此时，又若G为n阶图，则称G为<span class='p cyan'>n阶零图</span>，记作N<sub>n</sub>，特别地，称N<sub>1</sub>为<span class='p cyan'>平凡图</span>。</li><li>在图的定义中规定顶点集V为非空集，但在图的运算中可能产生顶点集为空集的运算结果，为此规定顶点集为空集的图为<span class='p cyan'>空图</span>，并将空图记为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span>。</li></ol><blockquote><p>标定图与非标定图、基图</p></blockquote><ul><li>将图的集合定义转化成图形表示之后，常用e<sub>k</sub>表示无向边(v<sub>i</sub>,v<sub>j</sub>)（或有向边&lt;v<sub>i</sub>,v<sub>j</sub>&gt;），并称顶点或边用字母标定的图为<span class='p cyan'>标定图</span>，否则称为非标定图。</li><li>将有向图各有向边均改成无向边后的无向图称为原来图的<span class='p cyan'>基图</span>。</li></ul><blockquote><p>关联与关联次数、环、孤立点</p></blockquote><ul><li>设G＝&lt;V,E&gt;为无向图，e<sub>k</sub>＝(v<sub>i</sub>,v<sub>j</sub>)∈E，<ul><li>称v<sub>i</sub>,v<sub>j</sub>为e<sub>k</sub>的<span class='p cyan'>端点</span>，e<sub>k</sub>与v<sub>i</sub>或e<sub>k</sub>与v<sub>j</sub>是彼此相<span class='p cyan'>关联</span>的。</li><li>若v<sub>i</sub>≠v<sub>j</sub>，则称e<sub>k</sub>与v<sub>i</sub>或e<sub>k</sub>与v<sub>j</sub>的<span class='p cyan'>关联次数</span>为1。</li><li>若v<sub>i</sub>＝v<sub>j</sub>，则称e<sub>k</sub>与v<sub>i</sub>的关联次数为2，并称e<sub>k</sub>为<span class='p cyan'>环</span>。</li><li>任意的v<sub>l</sub>∈V，若v<sub>l</sub>≠v<sub>i</sub>且v<sub>l</sub>≠v<sub>j</sub>，则称e<sub>k</sub>与v<sub>l</sub>的关联次数为0。</li></ul></li><li>设D＝&lt;V,E&gt;为有向图，e<sub>k</sub>＝&lt;v<sub>i</sub>,v<sub>j</sub>&gt;∈E，称v<sub>i</sub>,v<sub>j</sub>为e<sub>k</sub>的端点。若v<sub>i</sub>＝v<sub>j</sub>，则称ek为D中的环。</li><li>无论在无向图中还是在有向图中，无边关联的顶点均称为<span class='p cyan'>孤立点</span>。</li></ul><blockquote><p>相邻与邻接</p></blockquote><ul><li>设无向图G＝&lt;V，E&gt;，v<sub>i</sub>，v<sub>j</sub>∈V，e<sub>k</sub>，e<sub>l</sub>∈E。<ul><li>若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span>e<sub>t</sub>∈E，使得e<sub>t</sub>＝(v<sub>i</sub>，v<sub>j</sub>)，则称v<sub>i</sub>与v<sub>j</sub>是相邻的。</li><li>若e<sub>k</sub>与e<sub>l</sub>至少有一个公共端点，则称e<sub>k</sub>与e<sub>l</sub>是相邻的。</li></ul></li><li>设有向图D＝&lt;V，E&gt;，v<sub>i</sub>，v<sub>j</sub>∈V，e<sub>k</sub>，e<sub>l</sub>∈E。<br />若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span>e<sub>t</sub>∈E，使得e<sub>t</sub>＝&lt;v<sub>i</sub>，v<sub>j</sub>&gt;，则称v<sub>i</sub>为e<sub>t</sub>的<span class='p cyan'>始点</span>，v<sub>j</sub>为e<sub>t</sub>的<span class='p cyan'>终点</span>，并称v<sub>i</sub>邻接到v<sub>j</sub>，v<sub>j</sub>邻接于v<sub>i</sub>。<br />若e<sub>k</sub>的终点为e<sub>l</sub>的始点，则称e<sub>k</sub>与e<sub>l</sub>相邻。</li></ul><blockquote><p>邻域</p></blockquote><ul><li><p>设无向图G＝&lt;V，E&gt;，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span> v∈V，<br />称{u|u∈V∧(u,v)∈E∧u≠v}为v的<span class='p cyan'>邻域</span>，记做N<sub>G</sub>(v)。<br />称N<sub>G</sub>(v)∪{v}为v的<span class='p cyan'>闭邻域</span>，记做<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>N</mi><mo>ˉ</mo></mover></mrow><annotation encoding="application/x-tex">\bar N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8201099999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201099999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;">ˉ</span></span></span></span></span></span></span></span></span><sub>G</sub>(v)。<br />称{e|e∈E∧e与v相关联}为v的<span class='p cyan'>关联集</span>，记做I<sub>G</sub>(v)。</p></li><li><p>设有向图D＝&lt;V，E&gt;，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>v∈V，<br />称{u|u∈V∧&lt;v,u&gt;∈E∧u≠v}为v的<span class='p cyan'>后继元集</span>，记做Г+<sub>D</sub>(v)。<br />称{u|u∈V∧&lt;u,v&gt;∈E∧u≠v}为v的<span class='p cyan'>先驱元集</span>，记做Г-<sub>D</sub>(v)。<br />称Г+<sub>D</sub>(v)∪Г-<sub>D</sub>(v)为v的<span class='p cyan'>邻域</span>，记做N<sub>D</sub>(v)。<br />称N<sub>D</sub>(v)∪{v}为v的<span class='p cyan'>闭邻域</span>，记做<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>N</mi><mo>ˉ</mo></mover></mrow><annotation encoding="application/x-tex">\bar N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8201099999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201099999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;">ˉ</span></span></span></span></span></span></span></span></span><sub>D</sub>(v)。</p></li></ul><details class="folding-tag" cyan><summary> 课后巩固 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d558d92ab3f51d9142a28f.png" alt="" /></p>              </div>            </details><blockquote><p>简单图与多重图</p></blockquote><p>在无向图中，关联一对顶点的无向边如果多于1条，则称这些边为<span class='p cyan'>平行边</span>，平行边的条数称为<span class='p cyan'>重数</span>。<br />在有向图中，关联一对顶点的有向边如果多于1条，并且这些边的始点和终点相同(也就是它们的方向相同)，则称这些边为平行边。<br />含平行边的图称为<span class='p cyan'>多重图</span>。<br />既不含平行边也不含环的图称为<span class='p cyan'>简单图</span>。</p><blockquote><p>顶点的度数</p></blockquote><p>设G＝&lt;V,E&gt;为一无向图，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>v∈V，称v作为边的端点次数之和为v的<span class='p cyan'>度数</span>，简称为度，记做 d<sub>G</sub>(v)。在不发生混淆时，简记为d(v)。<br />设D＝&lt;V，E&gt;为有向图，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>v∈V，<br />* 称v作为边的始点次数之和为v的<span class='p cyan'>出度</span>，记做d<sup>+</sup><sub>D</sub>(v)，简记作d<sup>+</sup>(v)。<br />* 称v作为边的终点次数之和为v的<span class='p cyan'>入度</span>，记做d<sup>-</sup><sub>D</sub>(v)，简记作d<sup>-</sup>(v)。<br />* 称d<sup>+</sup>(v)+d<sup>-</sup>(v)为v的度数，记做d(v)。</p><blockquote><p>图的度数</p></blockquote><p>在无向图G中，<br />最大度△(G)＝max{d(v)|v∈V(G)}<br />最小度δ(G)＝min{d(v)|v∈V(G)}<br />在有向图D中，<br />最大出度△<sup>+</sup>(D)＝max{d<sup>+</sup>(v)|v∈V(D)}<br />最小出度δ<sup>+</sup>(D)＝min{d<sup>+</sup>(v)|v∈V(D)}<br />最大入度△<sup>-</sup>(D)＝max{d<sup>-</sup>(v)|v∈V(D)}<br />最小入度δ<sup>-</sup>(D)＝min{d<sup>-</sup>(v)|v∈V(D)}<br />称度数为1的顶点为<span class='p cyan'>悬挂顶点</span>，与它关联的边称为<span class='p cyan'>悬挂边</span>。度为偶数(奇数)的顶点称为偶度(奇度)顶点。</p><div class="note icon-padding simple"><i class="note-icon fas fa-thumbs-up"></i><p>无向图：环提供2度<br />有向图：环提供出度1，提供入度1</p></div><details class="folding-tag" cyan><summary> 课后巩固 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d5c16c2ab3f51d919aae19.png" alt="" /></p>              </div>            </details><blockquote><p>握手定理</p></blockquote><ul><li>设G＝&lt;V,E&gt;为任意无向图，V＝{v<sub>1</sub>,v<sub>2</sub>,…,v<sub>n</sub>}，|E|＝m，则</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi>d</mi><mo stretchy="false">(</mo><msub><mi>v</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn><mi>m</mi></mrow><annotation encoding="application/x-tex">\sum _ { i = 1 } ^ { n } d ( v _ { i } ) = 2 m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord mathdefault">m</span></span></span></span></span></p><pre><code>说明：任何无向图中，各顶点度数之和等于边数的两倍。</code></pre><ul><li>设D＝&lt;V,E&gt;为任意有向图，V＝{v<sub>1</sub>,v<sub>2</sub>,…,v<sub>n</sub>}，|E|＝m，则</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi>d</mi><mo stretchy="false">(</mo><msub><mi>v</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn><mi>m</mi><mo separator="true">,</mo><mi mathvariant="normal">且</mi><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msup><mi>d</mi><mo>+</mo></msup><mo stretchy="false">(</mo><msub><mi>v</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msup><mi>d</mi><mo>−</mo></msup><mo stretchy="false">(</mo><msub><mi>v</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">\sum _ { i = 1 } ^ { n } d ( v _ { i } ) = 2 m , 且 \sum _ { i = 1 } ^ { n } d ^ { + } ( v _ { i } ) = \sum _ { i = 1 } ^ { n } d ^ { - } ( v _ { i } ) = m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord">2</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">且</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.821331em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.821331em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span></span></p><ul><li>推论：任何图(无向的或有向的)中，奇度顶点的个数是偶数。</li></ul><details class="folding-tag" cyan><summary> 问题研究 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d5c2fd2ab3f51d919bb677.png" alt="" /></p>              </div>            </details><blockquote><p>度数列</p></blockquote><ul><li>设G＝&lt;V,E&gt;为一个n阶无向图，V＝{v<sub>1</sub>,v<sub>2</sub>,…,v<sub>n</sub>}，称d(v<sub>1</sub>)，d(v<sub>2</sub>)，…，d(v<sub>n</sub>)为G的<span class='p cyan'>度数列</span>。</li><li>对于顶点标定的无向图，它的度数列是唯一的。</li><li>反之，对于给定的非负整数列d＝{d<sub>1</sub>,d<sub>2</sub>,…,d<sub>n</sub>}，若存在V＝{v<sub>1</sub>,v<sub>2</sub>,…,v<sub>n</sub>}为顶点集的n阶无向图G，使得d(v<sub>i</sub>)＝d<sub>i</sub>，则称d是<span class='p cyan'>可图化</span>的。</li><li>特别地，若所得图是简单图，则称d是可简单图化的。<br />类似地，设D＝&lt;V,E&gt;为一个n阶有向图，V＝{v<sub>1</sub>,v<sub>2</sub>,…,v<sub>n</sub>}，称d(v<sub>1</sub>)，d(v<sub>2</sub>)，…，d(v<sub>n</sub>)为D的度数列，另外称d<sup>+</sup>(v<sub>1</sub>)，d<sup>+</sup>(v<sub>2</sub>)，…，d<sup>+</sup>(v<sub>n</sub>)与d<sup>-</sup>(v<sub>1</sub>)，d<sup>-</sup>(v<sub>2</sub>)，…，d<sup>-</sup>(v<sub>n</sub>)分别为D的出度列和入度列。</li></ul><details class="folding-tag" cyan><summary> 课后巩固 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d5c4d82ab3f51d919ce59a.png" alt="" /></p>              </div>            </details><blockquote><p>可图化的充要条件</p></blockquote><p>设非负整数列d＝(d<sub>1</sub>，d<sub>2</sub>，…，d<sub>n</sub>)，则d是可图化的当且仅当</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>d</mi><mi>i</mi></msub><mo>=</mo><mn>0</mn><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sum _ { i = 1 } ^ { n } d _ { i } = 0 ( m o d 2 )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord">2</span><span class="mclose">)</span></span></span></span></span></p><details class="folding-tag" cyan><summary> 课后巩固 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d5c5cd2ab3f51d919d880e.png" alt="" /></p>              </div>            </details><blockquote><p>可简单图化判定</p></blockquote><p>设G为任意n阶无向简单图，则△(G)≤n-1。</p><div class="note icon-padding simple"><i class="note-icon fas fa-thumbs-up"></i><p>证明：因为G既无平行边也无环，所以G中任何顶点v至多与其余的n-1个顶点均相邻，于是d(v)≤n-1，由于v的任意性，所以△(G)≤n-1。</p></div><details class="folding-tag" cyan><summary> 课后巩固 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d5c7142ab3f51d919e6f56.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d5c76d2ab3f51d919eabc5.png" alt="" /></p>              </div>            </details><blockquote><p>图的同构</p></blockquote><p>设G1＝&lt;V<sub>1</sub>,E<sub>1</sub>&gt;，G<sub>2</sub>＝&lt;V<sub>2</sub>,E<sub>2</sub>&gt;为两个无向图，若存在双射函数f：V<sub>1</sub>→V<sub>2</sub>，对于v<sub>i</sub>,v<sub>j</sub>∈V<sub>1</sub>，(v<sub>i</sub>,v<sub>j</sub>)∈E<sub>1</sub>当且仅当(f(v<sub>i</sub>),f(v<sub>j</sub>))∈E<sub>2</sub>，并且(v<sub>i</sub>,v<sub>i</sub>)与(f(v<sub>i</sub>),f(v<sub>j</sub>))的重数相同，<br />则称G1与G2是<span class='p cyan'>同构</span>的，记做G1≌G2。</p><div class="note icon-padding simple"><i class="note-icon fas fa-thumbs-up"></i><p>说明：</p><ol><li>类似地，可以定义两个有向图的同构。</li><li>图的同构关系看成全体图集合上的二元关系。</li><li>图的同构关系是等价关系。</li><li>在图同构的意义下，图的数学定义与图形表示是一一对应的。</li></ol></div><blockquote><p>完全图</p></blockquote><ul><li>设G为n阶无向简单图，若G中每个顶点均与其余的n-1个顶点相邻，则称G为n阶无向<span class='p cyan'>完全图</span>，简称n阶完全图，记做K<sub>n</sub>(n≥1)。</li><li>设D为n阶有向简单图，若D中每个顶点都邻接到其余的n-1个顶点，又邻接于其余的n-1个顶点，则称D是n阶有向完全图。</li><li>设D为n阶有向简单图，若D的基图为n阶无向完全图Kn，则称D是n阶竞赛图。</li></ul><div class="note icon-padding simple"><i class="note-icon fas fa-thumbs-up"></i><p>n阶无向完全图的边数为：n(n-1)/2<br />n阶有向完全图的边数为：n(n-1)<br />n阶竞赛图的边数为：n(n-1)/2</p></div><details class="folding-tag" cyan><summary> 课后巩固 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d654852ab3f51d91dfd9b2.png" alt="" /></p>              </div>            </details><blockquote><p>正则图</p></blockquote><p>设G为n阶无向简单图，若v∈V(G)，均有d(v)＝k，则称G为<span class='p cyan'>k-正则图</span>。</p><details class="folding-tag" cyan><summary> 课后巩固 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d6552f2ab3f51d91e0530a.png" alt="" /></p>              </div>            </details><blockquote><p>子图</p></blockquote><ul><li>设G＝&lt;V,E&gt;，G’＝&lt;V’,E’&gt;为两个图(同为无向图或同为有向图)，若V’<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span>V且E’ <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span> E，则称G’是G的<span class='p cyan'>子图</span>，G为G’的<span class='p cyan'>母图</span>，记作G’ <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span> G。</li><li>若V’<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊂</mo></mrow><annotation encoding="application/x-tex">\subset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">⊂</span></span></span></span>V或E’<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊂</mo></mrow><annotation encoding="application/x-tex">\subset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">⊂</span></span></span></span>E，则称G’为G的<span class='p cyan'>真子图</span>。</li><li>若V’＝V，则称G’为G的<span class='p cyan'>生成子图</span>。</li><li>设G＝&lt;V,E&gt;为一图，V1<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊂</mo></mrow><annotation encoding="application/x-tex">\subset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">⊂</span></span></span></span>V且V1≠<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span>，称以V<sub>1</sub>为顶点集，以G中两个端点都在V<sub>1</sub>中的边组成边集E<sub>1</sub>的图为G的V<sub>1</sub>导出的子图，记作G[V<sub>1</sub>]。</li><li>设E<sub>1</sub><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊂</mo></mrow><annotation encoding="application/x-tex">\subset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">⊂</span></span></span></span>E且E1≠<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span>，称以E<sub>1</sub>为边集，以E<sub>1</sub>中边关联的顶点为顶点集V<sub>1</sub>的图为G的E<sub>1</sub>导出的子图，记作G[E<sub>1</sub>]。</li></ul><details class="folding-tag" cyan><summary> 举例 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d657282ab3f51d91e1bc87.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d65eab2ab3f51d91e79cb1.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61d65ecf2ab3f51d91e7bc4b.png" alt="" /></p>              </div>            </details><blockquote><p>补图</p></blockquote><p>设G＝&lt;V,E&gt;为n阶无向简单图，以V为顶点集，以所有使G成为完全图K<sub>n</sub>的添加边组成的集合为边集的图，称为G的<span class='p cyan'>补图</span>，记作G。若图G≌G，则称为G是<span class='p cyan'>自补图</span>。</p><details class="folding-tag" cyan><summary> 举例 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61d6614c2ab3f51d91e98fe5.png" alt="" /></p>              </div>            </details><blockquote><p>边的收缩与增加</p></blockquote><p>设G＝&lt;V,E&gt;为无向图。</p><ol><li>设e∈E，用G-e表示从G中去掉边e，称为删除e。设E’ <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊂</mo></mrow><annotation encoding="application/x-tex">\subset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">⊂</span></span></span></span> E，用G-E’表示从G中删除E’中所有的边，称为删除E’。</li><li>设v∈V，用G-v表示从G中去掉v及所关联的一切边，称为删除顶点v。设V’ <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⊂</mo></mrow><annotation encoding="application/x-tex">\subset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">⊂</span></span></span></span> V，用G-V’表示从G中删除V’中所有顶点，称为删除V’。</li><li>设边e＝(u,v)∈E，用G\e表示从G中删除e后，将e的两个端点u,v用一个新的顶点w(或用u或v充当w)代替，使w关联除e外u,v关联的所有边，称为边e的收缩。</li><li>设u,v∈V(u,v可能相邻，也可能不相邻)，用G∪(u,v)(或G<sup>+</sup>(u,v))表示在u,v之间加一条边(u,v)，称为加新边。</li></ol><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>在收缩边和加新边过程中可能产生环和平行边。</p></div>]]></content>
      
      
      <categories>
          
          <category> 复习整理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 期末复习 </tag>
            
            <tag> 离散数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>银行家算法</title>
      <link href="/posts/3bfd1783/"/>
      <url>/posts/3bfd1783/</url>
      
        <content type="html"><![CDATA[<h2 id="设计目的"><a class="markdownIt-Anchor" href="#设计目的"></a> 设计目的</h2><ol><li>银行家算法（Banker’s Algorithm）是一个避免死锁（Deadlock）的著名算法，是由艾兹格·迪杰斯特拉在1965年为T.H.E系统设计的一种避免死锁产生的算法。它以银行借贷系统的分配策略为基础，判断并保证系统的安全运行。</li><li>在银行中，客户申请贷款的数量是有限的，每个客户在第一次申请贷款时要声明完成该项目所需的最大资金量，在满足所有贷款要求时，客户应及时归还。银行家在客户申请的贷款数量不超过自己拥有的最大值时，都应尽量满足客户的需要。在这样的描述中，银行家就好比操作系统，资金就是资源，客户就相当于要申请资源的进程。</li><li>银行家算法是一种最有代表性的避免死锁的算法。在避免死锁方法中允许进程动态地申请资源，但系统在进行资源分配之前，应先计算此次分配资源的安全性，若分配不会导致系统进入不安全状态，则分配，否则等待。为实现银行家算法，系统必须设置若干数据结构。</li></ol><h2 id="数据结构"><a class="markdownIt-Anchor" href="#数据结构"></a> 数据结构</h2><p>为了实现银行家算法，在系统中必须设置这样四个数据结构，分别用来描述系统中可利用的资源、所有进程对资源的最大需求、系统中的资源分配，以及所有进程还需要多少资源的情况。</p><ol><li>可利用资源向量 Available[m]。这是一个含有 m 个元素的数组，其中的每一个元素代表一类可利用的资源数目，其初始值是系统中所配置的该类全部可用资源的数目，其数值随该类资源的分配和回收而动态地改变。如果 Available[j] = K，则表示系统中现Rj类资源K个。</li><li>最大需求矩阵Max[n][m]。这是一个n x m的矩阵，它定义了系统中n个进程中的每个进程对m类资源的最大需求。如果Max[i,j] = K，则表示进程i需要Rj 类资源的最大数目为K。</li><li>分配矩阵Allocation[n][m]。这也是一个n x m的矩阵，它定义了系统中每一类资源当前已分配给每一进程的资源数。如果Allocation[i,jl = K，则表示进程i当前己分得Rj类资源的数目为K。</li><li>需求矩阵Need[n][m].这也是一个n × m的矩阵，用以表示每一个进程尚需的各类资源数。如果Need[i,j] = K，则表示进程i还需要Rj类资源K个方能完成其任务。<br />通过各矩阵的描述，我们可以得到下述关系:<br />　　　　　　　　　　　　　　<code>Need[i,j] = Max[i,j] - allocation[i, j]</code></li></ol><h2 id="算法详述"><a class="markdownIt-Anchor" href="#算法详述"></a> 算法详述</h2><p>设Request[m]是进程Pi的请求向量，如果 Requesti[j] = K，表示进程Pi需要K个Rj类型的资源。当Pi发出资源请求后，系统按下述步骤进行检査:</p><ol><li>如果 Requesti[j] ≤ Need[i,j]便转向步骤(2)；否则认为出错，因为它所需要的资源数已超过它所宣布的最大值。</li><li>如果 Requesti[j] ≤ Available[j]，便转向步骤(3)；否则，表示尚无足够资源，Pi须等待。</li><li>系统<span class='p red'>试探</span>着把资源分配给进程Pi，并修改下面数据结构中的数值<br />　　　　Available[j] = Available[j] - Requesti[j];<br />　　　　Allocation[i,j] = Allocation[i,j] + Requesti[j];<br />　　　　Need[i,j] = Need[i,j] - Requesti[j];</li><li>系统执行安全性算法，检查此次资源分配后系统是否处于安全状态。若安全，才正式将资源分配给进程Pi，以完成本次分配；否则，将本次的试探分配作废，恢复原来的资源分配状态，让进程Pi等待。</li></ol><h2 id="安全性算法"><a class="markdownIt-Anchor" href="#安全性算法"></a> 安全性算法</h2><p>系统所执行的安全性算法可描述如下:</p><ol><li>设置两个向量:<ol><li>工作向量Work，它表示系统可提供给进程继续运行所需的各类资源数目，它含有m个元素，在执行安全算法开始时，Work[m] = Available[m]；</li><li>Finish:它表示系统是否有足够的资源分配给进程，使之运行完成。开始时先做 Finish[i] = -1；当有足够资源分配给进程时，再令Finish[i] = 分配的顺序。最后所得到的Finish[m]就是安全序列</li></ol></li><li>从进程集合中找到一个能满足下述条件的进程<ol><li>Finish[i] = -1;</li><li>Need[i,j] ≤ Work[j];</li><li>若找到，执行步骤(3)，否则，执行步骤(4)。</li></ol></li><li>当进程Pi获得资源后，可顺利执行，直至完成，并释放出分配给它的资源，故应执行:<ol><li>Work[j] = Work[j] + Allocation[i,j];</li><li>Finish[i] = true;</li><li>go to step 2;(goto语句不推荐使用，可以通过while循环)</li></ol></li><li>如果所有进程的 Finish[i] =true都满足，则表示系统处于安全状态；否则，系统处于不安全状态。</li></ol><h2 id="设计流程"><a class="markdownIt-Anchor" href="#设计流程"></a> 设计流程</h2><p><img src="https://pic.imgdb.cn/item/61cdcf482ab3f51d91ff56b2.png" alt="设计流程图" /></p><h2 id="设计说明"><a class="markdownIt-Anchor" href="#设计说明"></a> 设计说明</h2><details class="folding-tag" cyan><summary> 废弃方案 </summary>              <div class='content'>              <ol><li>网上诸多算法均是将Finsh数组当做Bool型进行信息记录，此处算法进行了修改（好像是负向优化，分配的空间增加了）。我们可以试着思考一下，在寻找安全序列的过程中，肯定需要遍历n次，如果是安全序列，每次遍历肯定能修改一个Finish值。如果在某次遍历中，未对Finish修改，可以直接得知该请求不安全，则返回结果，未能找到安全序列。</li><li>前提假设：进程一旦达到Max需求量，那么在下次请求之前将会释放占用的资源，换言之，Available[m]数组值会发生修改。</li><li><span class='p red'>设置一个Unfinished[n + 1]的vector，用来记录未完成的进程信息。Unfinished[0]记录未完成进程数。相当于进程的索引数组（或者理解为阻塞队列）。</span>个人感觉更正确的方法是直接从MAXSIZE等矩阵动手，这样才能真正意义上的释放空间，但这难度较高，可能算法复杂度也比较高，这里不做这种操作。</li></ol>              </div>            </details><details class="folding-tag" green open><summary> 方案实现 </summary>              <div class='content'>              <ol><li>新增flag[n]数组，用来记录某进程是否已经完成，一旦完成的进程会释放占有的资源并不会在之后的信息打印栏中出现。</li><li>新增safeSeries一维数组用来存放安全序列，数组长度虽程序运行而变化。</li><li>新增num，用来记录进程完成的数量。</li><li>在寻找安全序列的过程中，肯定需要遍历n次，如果是安全序列，每次遍历肯定能修改一个Finish值。如果在某次遍历中，未对Finish修改，可以直接得知该请求不安全，则返回结果，未能找到安全序列。</li></ol>              </div>            </details><h2 id="代码展示"><a class="markdownIt-Anchor" href="#代码展示"></a> 代码展示</h2><details class="folding-tag" cyan><summary> 源码 </summary>              <div class='content'>              <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span>  std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAX_PROCESS = <span class="number">100</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAX_RESOURCE = <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> n; <span class="comment">//记录进程数</span></span><br><span class="line"><span class="type">int</span> m; <span class="comment">//记录资源数</span></span><br><span class="line"><span class="type">int</span> Max[MAX_PROCESS][MAX_RESOURCE]; <span class="comment">//记录进程所需最大资源数</span></span><br><span class="line"><span class="type">int</span> Allocation[MAX_PROCESS][MAX_RESOURCE]; <span class="comment">//记录进程已分配的资源数</span></span><br><span class="line"><span class="type">int</span> Need[MAX_PROCESS][MAX_RESOURCE]; <span class="comment">//记录进程还需分配的资源数</span></span><br><span class="line"><span class="type">int</span> Available[MAX_RESOURCE]; <span class="comment">//记录可用资源数</span></span><br><span class="line"><span class="type">int</span> Request[MAX_RESOURCE]; <span class="comment">//记录请求的资源数</span></span><br><span class="line"><span class="type">bool</span> Finish[MAX_PROCESS]; <span class="comment">//安全判断辅助数组</span></span><br><span class="line"><span class="type">bool</span> flag[MAX_PROCESS]; <span class="comment">//记录进程是否完成</span></span><br><span class="line"><span class="type">int</span> safeSeries[MAX_PROCESS]; <span class="comment">// 记录进程</span></span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>; <span class="comment">//记录已完成的进程数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printfInfo</span><span class="params">()</span></span>&#123; <span class="comment">// 打印系统信息</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;系统当前可用的资源：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; ++i)</span><br><span class="line">        cout &lt;&lt; Available[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;系统当前未完成的进程资源分配情况如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;   PID    &quot;</span> &lt;&lt; <span class="string">&quot;  Max   &quot;</span> &lt;&lt; <span class="string">&quot;   Allocation   &quot;</span> &lt;&lt; <span class="string">&quot;  Need   &quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (flag[i])</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;   P&quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot;     &quot;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; ++j)</span><br><span class="line">                cout &lt;&lt; Max[i][j] &lt;&lt; <span class="string">&quot;  &quot;</span>;</span><br><span class="line">            cout &lt;&lt; <span class="string">&#x27;\t&#x27;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; ++j)</span><br><span class="line">                cout &lt;&lt; Allocation[i][j] &lt;&lt; <span class="string">&quot;  &quot;</span>;</span><br><span class="line">            cout &lt;&lt; <span class="string">&#x27;\t&#x27;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; ++j)</span><br><span class="line">                <span class="keyword">if</span> (flag[i])</span><br><span class="line">                    cout &lt;&lt; Need[i][j] &lt;&lt; <span class="string">&quot;  &quot;</span>;</span><br><span class="line">            cout &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span>  <span class="title">cmp</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> b[])</span></span>&#123; <span class="comment">// 比较函数，如果a &lt; b, 返回true</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; ++i)</span><br><span class="line">        <span class="keyword">if</span> (a[i] &gt; b[i])</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">safe</span><span class="params">()</span></span>&#123; <span class="comment">// 安全性算法</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">        Finish[i] = <span class="literal">false</span>;  <span class="comment">// 初始化Finish辅助数组</span></span><br><span class="line">    <span class="type">int</span> work[MAX_RESOURCE];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; ++i) <span class="comment">// 将Available数组复制到work</span></span><br><span class="line">        work[i] = Available[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; sum; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (flag[j])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> ( !Finish[j] &amp;&amp; <span class="built_in">cmp</span>(Need[j], work))</span><br><span class="line">                &#123;</span><br><span class="line">                    Finish[j] = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; m; ++k)</span><br><span class="line">                        work[k] += Allocation[j][k];</span><br><span class="line">                    safeSeries[i] = j;</span><br><span class="line">                    <span class="keyword">break</span>; <span class="comment">//这次遍历结束，直接break</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (j == n - <span class="number">1</span> &amp;&amp; (Finish[j] || !<span class="built_in">cmp</span>(Need[j], work))) <span class="comment">//如果某一次遍历并未对Finish进行修改，则说明目前进程不安全，直接返回结果</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">bank</span><span class="params">(<span class="type">int</span> index)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!flag[index])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printfInfo</span>();</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;该进程已经结束，无需分配资源，请求已被系统拒绝！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">cmp</span>(Request, Need[index]))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printfInfo</span>();</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;本次请求大于所需资源数，请求已被系统拒绝！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">cmp</span>(Request, Available))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printfInfo</span>();</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;本次请求大于系统所剩资源数，请求已被系统拒绝！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 尝试分配资源</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        Available[i] -= Request[i];</span><br><span class="line">        Allocation[index][i] += Request[i];</span><br><span class="line">        Need[index][i] -= Request[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">safe</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printfInfo</span>();</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;当前系统安全！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;安全序列为：&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; sum; i++)</span><br><span class="line">            cout &lt;&lt; safeSeries[i] &lt;&lt; <span class="string">&quot;  &quot;</span>;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 撤销之前的尝试</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            Available[i] += Request[i];</span><br><span class="line">            Allocation[index][i] -= Request[i];</span><br><span class="line">            Need[index][i] += Request[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printfInfo</span>();</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;当前请求不安全，无法进行操作！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span>&#123; <span class="comment">//读入系统进程的初始状态</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入进程的数量：&quot;</span>;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入系统资源种类数：&quot;</span>;</span><br><span class="line">        cin &gt;&gt; m;</span><br><span class="line">        sum = n; <span class="comment">//初始状态，所有进程均未完成</span></span><br><span class="line">        <span class="comment">// 初始化flag数组，表示这些进程均未完成</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">            flag[i] = <span class="literal">true</span>;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入各进程的最大需求矩阵：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; ++j)</span><br><span class="line">                cin &gt;&gt; Max[i][j];</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入各进程的已分配的资源数：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; ++j)</span><br><span class="line">                cin &gt;&gt; Allocation[i][j];</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入系统各资源的个数：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; ++i)</span><br><span class="line">            cin  &gt;&gt; Available[i];</span><br><span class="line">        <span class="comment">//计算获得Need矩阵</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; ++j)</span><br><span class="line">                Need[i][j] = Max[i][j] - Allocation[i][j];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) <span class="comment">//获取Available矩阵</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; ++j)</span><br><span class="line">                Available[j] = Available[j] - Allocation[i][j];</span><br><span class="line">        <span class="built_in">printfInfo</span>();</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">safe</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;当前系统安全！&quot;</span> &lt;&lt; endl;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;安全序列为：&quot;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">                cout &lt;&lt; safeSeries[i] &lt;&lt; <span class="string">&quot;  &quot;</span>;</span><br><span class="line">            cout &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;当前系统不安全，无法进行操作，请重试！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">isFinished</span><span class="params">()</span> <span class="comment">//判断是否有进程已经结束</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">bool</span> isFinished = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (Need[i][j] != <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                isFinished = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (isFinished &amp;&amp; flag[i])</span><br><span class="line">        &#123;</span><br><span class="line">            flag[i] = <span class="literal">false</span>;</span><br><span class="line">            sum --;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; ++j)</span><br><span class="line">                Available[j] += Max[i][j];</span><br><span class="line">            <span class="keyword">return</span>; <span class="comment">//从整个系统来看，我们得知一次请求最多只可能使一个进程结束</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">init</span>();</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;============数据录入完毕=============&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="type">int</span> choice;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> index;</span><br><span class="line">        <span class="comment">//判断是否有进程已经结束，并进行处理</span></span><br><span class="line">        <span class="built_in">isFinished</span>();</span><br><span class="line">        <span class="keyword">if</span> (sum == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;进程已全部结束！&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请输入发布请求的进程ID(0~&quot;</span> &lt;&lt; n - <span class="number">1</span> &lt;&lt; <span class="string">&quot;)：&quot;</span>;</span><br><span class="line">        cin &gt;&gt; index;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请依次输入请求的资源数：&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; ++i)</span><br><span class="line">            cin &gt;&gt; Request[i];</span><br><span class="line">        <span class="built_in">bank</span>(index);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><h2 id="测试数据"><a class="markdownIt-Anchor" href="#测试数据"></a> 测试数据</h2><details class="folding-tag" cyan><summary> 测试数据 </summary>              <div class='content'>              <ol><li>测试数据1</li></ol><p>5 3</p><p>8 5 3<br />3 2 2<br />9 5 2<br />2 2 2<br />4 3 6</p><p>0 1 0<br />2 0 0<br />3 0 2<br />2 1 1<br />0 0 2</p><p>10 5 7</p><ol start="2"><li>测试数据2</li></ol><p>5 3</p><p>7 5 3<br />3 2 2<br />9 0 2<br />2 2 2<br />4 3 3</p><p>0 1 0<br />2 0 0<br />3 0 2<br />2 1 1<br />0 0 2</p><p>10 5 7</p><p>1<br />1 0 2</p><p>4<br />3 3 0</p><p>1<br />0 1 0</p><p>3<br />0 1 2</p><p>1<br />0 1 0</p><p>1<br />0 1 1</p><p>4<br />4 3 1</p><p>3<br />0 1 1</p><p>2<br />6 0 0</p><p>0<br />7 4 3</p>              </div>            </details><h2 id="运行截图"><a class="markdownIt-Anchor" href="#运行截图"></a> 运行截图</h2><details class="folding-tag" cyan><summary> 运行截图 </summary>              <div class='content'>              <p><img src="https://pic.imgdb.cn/item/61cdcd742ab3f51d91fddcdc.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61cdc6772ab3f51d91f81749.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61cdc69f2ab3f51d91f8369d.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61cdc6c02ab3f51d91f84f9b.png" alt="" /><br /><img src="https://pic.imgdb.cn/item/61cdc6db2ab3f51d91f86413.png" alt="" /></p>              </div>            </details><h2 id="后序"><a class="markdownIt-Anchor" href="#后序"></a> 后序</h2><p>注意，这只是模拟，可以观察到当某个进程在第一次<span class='p red'>need == 0</span>时，在后续的安全序列中仍能见到该进程的Id，其实这并不是Bug。前提假设：在进程一旦达到Max时，在<span class='p red'>下次请求到达之前</span>便会释放资源并结束进程。如是看来，在安全序列中出现其Id不无道理，因为在那时它仍占用这资源。但是下个请求到来之际，他便会自动释放资源（该步是我们自己假设的，并不是本次重点，实际操作并没有这么简单），也可以观察到，下次请求发生后，未完成的进程信息栏中并没有该进程的信息。</p>]]></content>
      
      
      <categories>
          
          <category> 复习整理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课设 </tag>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
